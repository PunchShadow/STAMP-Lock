
bayes.stm:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    $0x8,%rsp
    2008:	48 8b 05 d9 df 01 00 	mov    0x1dfd9(%rip),%rax        # 1ffe8 <__gmon_start__>
    200f:	48 85 c0             	test   %rax,%rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	callq  *%rax
    2016:	48 83 c4 08          	add    $0x8,%rsp
    201a:	c3                   	retq   

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 4a de 01 00    	pushq  0x1de4a(%rip)        # 1fe70 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 4b de 01 00 	bnd jmpq *0x1de4b(%rip)        # 1fe78 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nopl   (%rax)
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	pushq  $0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmpq 2020 <.plt>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	pushq  $0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmpq 2020 <.plt>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	pushq  $0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmpq 2020 <.plt>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	pushq  $0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmpq 2020 <.plt>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	pushq  $0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmpq 2020 <.plt>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	pushq  $0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmpq 2020 <.plt>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	pushq  $0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmpq 2020 <.plt>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	pushq  $0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmpq 2020 <.plt>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	pushq  $0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmpq 2020 <.plt>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	pushq  $0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmpq 2020 <.plt>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	pushq  $0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmpq 2020 <.plt>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	pushq  $0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmpq 2020 <.plt>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	pushq  $0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmpq 2020 <.plt>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	pushq  $0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmpq 2020 <.plt>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	pushq  $0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmpq 2020 <.plt>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	pushq  $0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmpq 2020 <.plt>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	pushq  $0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmpq 2020 <.plt>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	pushq  $0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmpq 2020 <.plt>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	pushq  $0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmpq 2020 <.plt>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	pushq  $0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmpq 2020 <.plt>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	pushq  $0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmpq 2020 <.plt>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	pushq  $0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmpq 2020 <.plt>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	pushq  $0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmpq 2020 <.plt>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	pushq  $0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmpq 2020 <.plt>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	pushq  $0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmpq 2020 <.plt>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	pushq  $0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmpq 2020 <.plt>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	pushq  $0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmpq 2020 <.plt>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	pushq  $0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmpq 2020 <.plt>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	pushq  $0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmpq 2020 <.plt>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	pushq  $0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmpq 2020 <.plt>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	pushq  $0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmpq 2020 <.plt>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	pushq  $0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmpq 2020 <.plt>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	pushq  $0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmpq 2020 <.plt>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	pushq  $0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmpq 2020 <.plt>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	pushq  $0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmpq 2020 <.plt>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	pushq  $0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmpq 2020 <.plt>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	pushq  $0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmpq 2020 <.plt>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	pushq  $0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmpq 2020 <.plt>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	pushq  $0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmpq 2020 <.plt>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	pushq  $0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmpq 2020 <.plt>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	pushq  $0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmpq 2020 <.plt>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	pushq  $0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmpq 2020 <.plt>
    22cf:	90                   	nop

Disassembly of section .plt.got:

00000000000022d0 <free@plt>:
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	f2 ff 25 f5 dc 01 00 	bnd jmpq *0x1dcf5(%rip)        # 1ffd0 <free@GLIBC_2.2.5>
    22db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000022e0 <__cxa_finalize@plt>:
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	f2 ff 25 0d dd 01 00 	bnd jmpq *0x1dd0d(%rip)        # 1fff8 <__cxa_finalize@GLIBC_2.2.5>
    22eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000022f0 <getenv@plt>:
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	f2 ff 25 85 db 01 00 	bnd jmpq *0x1db85(%rip)        # 1fe80 <getenv@GLIBC_2.2.5>
    22fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002300 <pthread_create@plt>:
    2300:	f3 0f 1e fa          	endbr64 
    2304:	f2 ff 25 7d db 01 00 	bnd jmpq *0x1db7d(%rip)        # 1fe88 <pthread_create@GLIBC_2.2.5>
    230b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002310 <pthread_cond_broadcast@plt>:
    2310:	f3 0f 1e fa          	endbr64 
    2314:	f2 ff 25 75 db 01 00 	bnd jmpq *0x1db75(%rip)        # 1fe90 <pthread_cond_broadcast@GLIBC_2.3.2>
    231b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002320 <puts@plt>:
    2320:	f3 0f 1e fa          	endbr64 
    2324:	f2 ff 25 6d db 01 00 	bnd jmpq *0x1db6d(%rip)        # 1fe98 <puts@GLIBC_2.2.5>
    232b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002330 <qsort@plt>:
    2330:	f3 0f 1e fa          	endbr64 
    2334:	f2 ff 25 65 db 01 00 	bnd jmpq *0x1db65(%rip)        # 1fea0 <qsort@GLIBC_2.2.5>
    233b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002340 <strtod@plt>:
    2340:	f3 0f 1e fa          	endbr64 
    2344:	f2 ff 25 5d db 01 00 	bnd jmpq *0x1db5d(%rip)        # 1fea8 <strtod@GLIBC_2.2.5>
    234b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002350 <pthread_cond_wait@plt>:
    2350:	f3 0f 1e fa          	endbr64 
    2354:	f2 ff 25 55 db 01 00 	bnd jmpq *0x1db55(%rip)        # 1feb0 <pthread_cond_wait@GLIBC_2.3.2>
    235b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002360 <__stack_chk_fail@plt>:
    2360:	f3 0f 1e fa          	endbr64 
    2364:	f2 ff 25 4d db 01 00 	bnd jmpq *0x1db4d(%rip)        # 1feb8 <__stack_chk_fail@GLIBC_2.4>
    236b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002370 <pthread_setspecific@plt>:
    2370:	f3 0f 1e fa          	endbr64 
    2374:	f2 ff 25 45 db 01 00 	bnd jmpq *0x1db45(%rip)        # 1fec0 <pthread_setspecific@GLIBC_2.2.5>
    237b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002380 <pthread_mutex_destroy@plt>:
    2380:	f3 0f 1e fa          	endbr64 
    2384:	f2 ff 25 3d db 01 00 	bnd jmpq *0x1db3d(%rip)        # 1fec8 <pthread_mutex_destroy@GLIBC_2.2.5>
    238b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002390 <gettimeofday@plt>:
    2390:	f3 0f 1e fa          	endbr64 
    2394:	f2 ff 25 35 db 01 00 	bnd jmpq *0x1db35(%rip)        # 1fed0 <gettimeofday@GLIBC_2.2.5>
    239b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023a0 <__assert_fail@plt>:
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	f2 ff 25 2d db 01 00 	bnd jmpq *0x1db2d(%rip)        # 1fed8 <__assert_fail@GLIBC_2.2.5>
    23ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023b0 <memset@plt>:
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	f2 ff 25 25 db 01 00 	bnd jmpq *0x1db25(%rip)        # 1fee0 <memset@GLIBC_2.2.5>
    23bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023c0 <log@plt>:
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	f2 ff 25 1d db 01 00 	bnd jmpq *0x1db1d(%rip)        # 1fee8 <log@GLIBC_2.29>
    23cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023d0 <pthread_attr_init@plt>:
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	f2 ff 25 15 db 01 00 	bnd jmpq *0x1db15(%rip)        # 1fef0 <pthread_attr_init@GLIBC_2.2.5>
    23db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023e0 <pthread_cond_signal@plt>:
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	f2 ff 25 0d db 01 00 	bnd jmpq *0x1db0d(%rip)        # 1fef8 <pthread_cond_signal@GLIBC_2.3.2>
    23eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023f0 <calloc@plt>:
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	f2 ff 25 05 db 01 00 	bnd jmpq *0x1db05(%rip)        # 1ff00 <calloc@GLIBC_2.2.5>
    23fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002400 <strtol@plt>:
    2400:	f3 0f 1e fa          	endbr64 
    2404:	f2 ff 25 fd da 01 00 	bnd jmpq *0x1dafd(%rip)        # 1ff08 <strtol@GLIBC_2.2.5>
    240b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002410 <memcpy@plt>:
    2410:	f3 0f 1e fa          	endbr64 
    2414:	f2 ff 25 f5 da 01 00 	bnd jmpq *0x1daf5(%rip)        # 1ff10 <memcpy@GLIBC_2.14>
    241b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002420 <pthread_cond_init@plt>:
    2420:	f3 0f 1e fa          	endbr64 
    2424:	f2 ff 25 ed da 01 00 	bnd jmpq *0x1daed(%rip)        # 1ff18 <pthread_cond_init@GLIBC_2.3.2>
    242b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002430 <pthread_getspecific@plt>:
    2430:	f3 0f 1e fa          	endbr64 
    2434:	f2 ff 25 e5 da 01 00 	bnd jmpq *0x1dae5(%rip)        # 1ff20 <pthread_getspecific@GLIBC_2.2.5>
    243b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002440 <pthread_mutex_unlock@plt>:
    2440:	f3 0f 1e fa          	endbr64 
    2444:	f2 ff 25 dd da 01 00 	bnd jmpq *0x1dadd(%rip)        # 1ff28 <pthread_mutex_unlock@GLIBC_2.2.5>
    244b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002450 <malloc@plt>:
    2450:	f3 0f 1e fa          	endbr64 
    2454:	f2 ff 25 d5 da 01 00 	bnd jmpq *0x1dad5(%rip)        # 1ff30 <malloc@GLIBC_2.2.5>
    245b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002460 <fflush@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 cd da 01 00 	bnd jmpq *0x1dacd(%rip)        # 1ff38 <fflush@GLIBC_2.2.5>
    246b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002470 <pthread_attr_setstacksize@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 c5 da 01 00 	bnd jmpq *0x1dac5(%rip)        # 1ff40 <pthread_attr_setstacksize@GLIBC_2.2.5>
    247b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002480 <realloc@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 bd da 01 00 	bnd jmpq *0x1dabd(%rip)        # 1ff48 <realloc@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002490 <__printf_chk@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 b5 da 01 00 	bnd jmpq *0x1dab5(%rip)        # 1ff50 <__printf_chk@GLIBC_2.3.4>
    249b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024a0 <pthread_key_create@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 ad da 01 00 	bnd jmpq *0x1daad(%rip)        # 1ff58 <pthread_key_create@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024b0 <__longjmp_chk@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 a5 da 01 00 	bnd jmpq *0x1daa5(%rip)        # 1ff60 <__longjmp_chk@GLIBC_2.11>
    24bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024c0 <pthread_self@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 9d da 01 00 	bnd jmpq *0x1da9d(%rip)        # 1ff68 <pthread_self@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024d0 <pthread_cond_destroy@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 95 da 01 00 	bnd jmpq *0x1da95(%rip)        # 1ff70 <pthread_cond_destroy@GLIBC_2.3.2>
    24db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024e0 <perror@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 8d da 01 00 	bnd jmpq *0x1da8d(%rip)        # 1ff78 <perror@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024f0 <pthread_join@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 85 da 01 00 	bnd jmpq *0x1da85(%rip)        # 1ff80 <pthread_join@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002500 <getopt@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 7d da 01 00 	bnd jmpq *0x1da7d(%rip)        # 1ff88 <getopt@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002510 <exit@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 75 da 01 00 	bnd jmpq *0x1da75(%rip)        # 1ff90 <exit@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002520 <fwrite@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 6d da 01 00 	bnd jmpq *0x1da6d(%rip)        # 1ff98 <fwrite@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002530 <__fprintf_chk@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 65 da 01 00 	bnd jmpq *0x1da65(%rip)        # 1ffa0 <__fprintf_chk@GLIBC_2.3.4>
    253b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002540 <posix_memalign@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 5d da 01 00 	bnd jmpq *0x1da5d(%rip)        # 1ffa8 <posix_memalign@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002550 <__sigsetjmp@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 55 da 01 00 	bnd jmpq *0x1da55(%rip)        # 1ffb0 <__sigsetjmp@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002560 <pthread_mutex_init@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 4d da 01 00 	bnd jmpq *0x1da4d(%rip)        # 1ffb8 <pthread_mutex_init@GLIBC_2.2.5>
    256b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002570 <pthread_mutex_lock@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 45 da 01 00 	bnd jmpq *0x1da45(%rip)        # 1ffc0 <pthread_mutex_lock@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002580 <pthread_mutex_trylock@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 3d da 01 00 	bnd jmpq *0x1da3d(%rip)        # 1ffc8 <pthread_mutex_trylock@GLIBC_2.2.5>
    258b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000025c0 <main>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	41 57                	push   %r15
    25c6:	41 56                	push   %r14
    25c8:	4c 8d 35 f1 e1 81 00 	lea    0x81e1f1(%rip),%r14        # 8207c0 <global_params>
    25cf:	41 55                	push   %r13
    25d1:	4c 8d 2d 9c 6f 01 00 	lea    0x16f9c(%rip),%r13        # 19574 <__PRETTY_FUNCTION__.4726+0x504>
    25d8:	41 54                	push   %r12
    25da:	49 89 f4             	mov    %rsi,%r12
    25dd:	55                   	push   %rbp
    25de:	48 63 ef             	movslq %edi,%rbp
    25e1:	53                   	push   %rbx
    25e2:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    25e9:	66 0f 6f 05 df 6f 01 	movdqa 0x16fdf(%rip),%xmm0        # 195d0 <__PRETTY_FUNCTION__.4821+0x14>
    25f0:	00 
    25f1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    25f8:	00 00 
    25fa:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    25ff:	31 c0                	xor    %eax,%eax
    2601:	c7 05 d5 da 01 00 00 	movl   $0x0,0x1dad5(%rip)        # 200e0 <opterr@@GLIBC_2.2.5>
    2608:	00 00 00 
    260b:	48 c7 05 d2 e4 81 00 	movq   $0xffffffffffffffff,0x81e4d2(%rip)        # 820ae8 <global_params+0x328>
    2612:	ff ff ff ff 
    2616:	48 c7 05 e7 e4 81 00 	movq   $0x1,0x81e4e7(%rip)        # 820b08 <global_params+0x348>
    261d:	01 00 00 00 
    2621:	48 c7 05 04 e5 81 00 	movq   $0x4,0x81e504(%rip)        # 820b30 <global_params+0x370>
    2628:	04 00 00 00 
    262c:	48 c7 05 09 e5 81 00 	movq   $0xa,0x81e509(%rip)        # 820b40 <global_params+0x380>
    2633:	0a 00 00 00 
    2637:	48 c7 05 1e e5 81 00 	movq   $0x1,0x81e51e(%rip)        # 820b60 <global_params+0x3a0>
    263e:	01 00 00 00 
    2642:	48 c7 05 23 e5 81 00 	movq   $0x20,0x81e523(%rip)        # 820b70 <global_params+0x3b0>
    2649:	20 00 00 00 
    264d:	0f 29 05 fc e4 81 00 	movaps %xmm0,0x81e4fc(%rip)        # 820b50 <global_params+0x390>
    2654:	0f 1f 40 00          	nopl   0x0(%rax)
    2658:	48 8d 15 1a 6a 01 00 	lea    0x16a1a(%rip),%rdx        # 19079 <__PRETTY_FUNCTION__.4726+0x9>
    265f:	4c 89 e6             	mov    %r12,%rsi
    2662:	89 ef                	mov    %ebp,%edi
    2664:	e8 97 fe ff ff       	callq  2500 <getopt@plt>
    2669:	48 63 d8             	movslq %eax,%rbx
    266c:	83 fb ff             	cmp    $0xffffffff,%ebx
    266f:	74 57                	je     26c8 <main+0x108>
    2671:	8d 43 9b             	lea    -0x65(%rbx),%eax
    2674:	83 f8 11             	cmp    $0x11,%eax
    2677:	77 40                	ja     26b9 <main+0xf9>
    2679:	49 63 44 85 00       	movslq 0x0(%r13,%rax,4),%rax
    267e:	4c 01 e8             	add    %r13,%rax
    2681:	3e ff e0             	notrack jmpq *%rax
    2684:	48 8b 3d 45 da 01 00 	mov    0x1da45(%rip),%rdi        # 200d0 <optarg@@GLIBC_2.2.5>
    268b:	31 f6                	xor    %esi,%esi
    268d:	e8 ae fc ff ff       	callq  2340 <strtod@plt>
    2692:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    2696:	f3 0f 11 05 72 d9 01 	movss  %xmm0,0x1d972(%rip)        # 20010 <global_operationQualityFactor>
    269d:	00 
    269e:	eb b8                	jmp    2658 <main+0x98>
    26a0:	48 8b 3d 29 da 01 00 	mov    0x1da29(%rip),%rdi        # 200d0 <optarg@@GLIBC_2.2.5>
    26a7:	ba 0a 00 00 00       	mov    $0xa,%edx
    26ac:	31 f6                	xor    %esi,%esi
    26ae:	e8 4d fd ff ff       	callq  2400 <strtol@plt>
    26b3:	49 89 04 de          	mov    %rax,(%r14,%rbx,8)
    26b7:	eb 9f                	jmp    2658 <main+0x98>
    26b9:	83 05 20 da 01 00 01 	addl   $0x1,0x1da20(%rip)        # 200e0 <opterr@@GLIBC_2.2.5>
    26c0:	eb 96                	jmp    2658 <main+0x98>
    26c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    26c8:	48 63 05 f9 d9 01 00 	movslq 0x1d9f9(%rip),%rax        # 200c8 <optind@@GLIBC_2.2.5>
    26cf:	39 c5                	cmp    %eax,%ebp
    26d1:	0f 8e 82 05 00 00    	jle    2c59 <main+0x699>
    26d7:	4d 8d 2c ec          	lea    (%r12,%rbp,8),%r13
    26db:	49 8d 1c c4          	lea    (%r12,%rax,8),%rbx
    26df:	48 8d 2d a6 69 01 00 	lea    0x169a6(%rip),%rbp        # 1908c <__PRETTY_FUNCTION__.4726+0x1c>
    26e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    26ed:	00 00 00 
    26f0:	48 8b 0b             	mov    (%rbx),%rcx
    26f3:	48 8b 3d 06 da 01 00 	mov    0x1da06(%rip),%rdi        # 20100 <stderr@@GLIBC_2.2.5>
    26fa:	48 89 ea             	mov    %rbp,%rdx
    26fd:	31 c0                	xor    %eax,%eax
    26ff:	be 01 00 00 00       	mov    $0x1,%esi
    2704:	48 83 c3 08          	add    $0x8,%rbx
    2708:	e8 23 fe ff ff       	callq  2530 <__fprintf_chk@plt>
    270d:	8b 05 cd d9 01 00    	mov    0x1d9cd(%rip),%eax        # 200e0 <opterr@@GLIBC_2.2.5>
    2713:	83 c0 01             	add    $0x1,%eax
    2716:	89 05 c4 d9 01 00    	mov    %eax,0x1d9c4(%rip)        # 200e0 <opterr@@GLIBC_2.2.5>
    271c:	49 39 dd             	cmp    %rbx,%r13
    271f:	75 cf                	jne    26f0 <main+0x130>
    2721:	85 c0                	test   %eax,%eax
    2723:	0f 85 5f 05 00 00    	jne    2c88 <main+0x6c8>
    2729:	48 8b 05 30 e4 81 00 	mov    0x81e430(%rip),%rax        # 820b60 <global_params+0x3a0>
    2730:	4c 8b 35 39 e4 81 00 	mov    0x81e439(%rip),%r14        # 820b70 <global_params+0x3b0>
    2737:	4c 8b 3d 12 e4 81 00 	mov    0x81e412(%rip),%r15        # 820b50 <global_params+0x390>
    273e:	48 8b 1d 13 e4 81 00 	mov    0x81e413(%rip),%rbx        # 820b58 <global_params+0x398>
    2745:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    274a:	48 8b 05 b7 e3 81 00 	mov    0x81e3b7(%rip),%rax        # 820b08 <global_params+0x348>
    2751:	4c 8b 25 d8 e3 81 00 	mov    0x81e3d8(%rip),%r12        # 820b30 <global_params+0x370>
    2758:	4c 8b 2d e1 e3 81 00 	mov    0x81e3e1(%rip),%r13        # 820b40 <global_params+0x380>
    275f:	48 89 05 b2 d8 01 00 	mov    %rax,0x1d8b2(%rip)        # 20018 <global_insertPenalty>
    2766:	48 8b 05 7b e3 81 00 	mov    0x81e37b(%rip),%rax        # 820ae8 <global_params+0x328>
    276d:	48 89 05 ac d8 01 00 	mov    %rax,0x1d8ac(%rip)        # 20020 <global_maxNumEdgeLearned>
    2774:	e8 37 ab 00 00       	callq  d2b0 <stm_init>
    2779:	31 ff                	xor    %edi,%edi
    277b:	e8 60 60 01 00       	callq  187e0 <mod_mem_init>
    2780:	48 8d 3d 33 69 01 00 	lea    0x16933(%rip),%rdi        # 190ba <__PRETTY_FUNCTION__.4726+0x4a>
    2787:	e8 64 fb ff ff       	callq  22f0 <getenv@plt>
    278c:	48 85 c0             	test   %rax,%rax
    278f:	74 05                	je     2796 <main+0x1d6>
    2791:	e8 aa 64 01 00       	callq  18c40 <mod_stats_init>
    2796:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    279b:	e8 e0 9a 00 00       	callq  c280 <thread_startup>
    27a0:	48 89 da             	mov    %rbx,%rdx
    27a3:	bf 01 00 00 00       	mov    $0x1,%edi
    27a8:	31 c0                	xor    %eax,%eax
    27aa:	48 8d 35 87 6c 01 00 	lea    0x16c87(%rip),%rsi        # 19438 <__PRETTY_FUNCTION__.4726+0x3c8>
    27b1:	e8 da fc ff ff       	callq  2490 <__printf_chk@plt>
    27b6:	4c 89 f2             	mov    %r14,%rdx
    27b9:	bf 01 00 00 00       	mov    $0x1,%edi
    27be:	31 c0                	xor    %eax,%eax
    27c0:	48 8d 35 99 6c 01 00 	lea    0x16c99(%rip),%rsi        # 19460 <__PRETTY_FUNCTION__.4726+0x3f0>
    27c7:	e8 c4 fc ff ff       	callq  2490 <__printf_chk@plt>
    27cc:	4c 89 fa             	mov    %r15,%rdx
    27cf:	bf 01 00 00 00       	mov    $0x1,%edi
    27d4:	31 c0                	xor    %eax,%eax
    27d6:	48 8d 35 ab 6c 01 00 	lea    0x16cab(%rip),%rsi        # 19488 <__PRETTY_FUNCTION__.4726+0x418>
    27dd:	e8 ae fc ff ff       	callq  2490 <__printf_chk@plt>
    27e2:	4c 89 e2             	mov    %r12,%rdx
    27e5:	bf 01 00 00 00       	mov    $0x1,%edi
    27ea:	31 c0                	xor    %eax,%eax
    27ec:	48 8d 35 bd 6c 01 00 	lea    0x16cbd(%rip),%rsi        # 194b0 <__PRETTY_FUNCTION__.4726+0x440>
    27f3:	e8 98 fc ff ff       	callq  2490 <__printf_chk@plt>
    27f8:	4c 89 ea             	mov    %r13,%rdx
    27fb:	bf 01 00 00 00       	mov    $0x1,%edi
    2800:	31 c0                	xor    %eax,%eax
    2802:	48 8d 35 cf 6c 01 00 	lea    0x16ccf(%rip),%rsi        # 194d8 <__PRETTY_FUNCTION__.4726+0x468>
    2809:	e8 82 fc ff ff       	callq  2490 <__printf_chk@plt>
    280e:	48 8b 15 03 d8 01 00 	mov    0x1d803(%rip),%rdx        # 20018 <global_insertPenalty>
    2815:	48 8d 35 e4 6c 01 00 	lea    0x16ce4(%rip),%rsi        # 19500 <__PRETTY_FUNCTION__.4726+0x490>
    281c:	31 c0                	xor    %eax,%eax
    281e:	bf 01 00 00 00       	mov    $0x1,%edi
    2823:	e8 68 fc ff ff       	callq  2490 <__printf_chk@plt>
    2828:	48 8b 15 f1 d7 01 00 	mov    0x1d7f1(%rip),%rdx        # 20020 <global_maxNumEdgeLearned>
    282f:	48 8d 35 f2 6c 01 00 	lea    0x16cf2(%rip),%rsi        # 19528 <__PRETTY_FUNCTION__.4726+0x4b8>
    2836:	31 c0                	xor    %eax,%eax
    2838:	bf 01 00 00 00       	mov    $0x1,%edi
    283d:	e8 4e fc ff ff       	callq  2490 <__printf_chk@plt>
    2842:	48 8d 35 07 6d 01 00 	lea    0x16d07(%rip),%rsi        # 19550 <__PRETTY_FUNCTION__.4726+0x4e0>
    2849:	bf 01 00 00 00       	mov    $0x1,%edi
    284e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2852:	b8 01 00 00 00       	mov    $0x1,%eax
    2857:	f3 0f 5a 05 b1 d7 01 	cvtss2sd 0x1d7b1(%rip),%xmm0        # 20010 <global_operationQualityFactor>
    285e:	00 
    285f:	e8 2c fc ff ff       	callq  2490 <__printf_chk@plt>
    2864:	48 8b 3d 55 d8 01 00 	mov    0x1d855(%rip),%rdi        # 200c0 <stdout@@GLIBC_2.2.5>
    286b:	e8 f0 fb ff ff       	callq  2460 <fflush@plt>
    2870:	48 8d 35 4d 68 01 00 	lea    0x1684d(%rip),%rsi        # 190c4 <__PRETTY_FUNCTION__.4726+0x54>
    2877:	bf 01 00 00 00       	mov    $0x1,%edi
    287c:	31 c0                	xor    %eax,%eax
    287e:	e8 0d fc ff ff       	callq  2490 <__printf_chk@plt>
    2883:	48 8b 3d 36 d8 01 00 	mov    0x1d836(%rip),%rdi        # 200c0 <stdout@@GLIBC_2.2.5>
    288a:	e8 d1 fb ff ff       	callq  2460 <fflush@plt>
    288f:	31 c0                	xor    %eax,%eax
    2891:	e8 0a 99 00 00       	callq  c1a0 <random_alloc>
    2896:	48 89 c5             	mov    %rax,%rbp
    2899:	48 85 c0             	test   %rax,%rax
    289c:	0f 84 c7 03 00 00    	je     2c69 <main+0x6a9>
    28a2:	48 89 c7             	mov    %rax,%rdi
    28a5:	48 89 de             	mov    %rbx,%rsi
    28a8:	e8 93 99 00 00       	callq  c240 <random_seed>
    28ad:	4c 89 f7             	mov    %r14,%rdi
    28b0:	48 89 ea             	mov    %rbp,%rdx
    28b3:	4c 89 fe             	mov    %r15,%rsi
    28b6:	e8 65 0e 00 00       	callq  3720 <data_alloc>
    28bb:	49 89 c6             	mov    %rax,%r14
    28be:	48 85 c0             	test   %rax,%rax
    28c1:	0f 84 27 05 00 00    	je     2dee <main+0x82e>
    28c7:	4c 89 e2             	mov    %r12,%rdx
    28ca:	4c 89 e9             	mov    %r13,%rcx
    28cd:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    28d4:	48 89 c7             	mov    %rax,%rdi
    28d7:	e8 f4 0e 00 00       	callq  37d0 <data_generate>
    28dc:	48 8d 3d 0f 68 01 00 	lea    0x1680f(%rip),%rdi        # 190f2 <__PRETTY_FUNCTION__.4726+0x82>
    28e3:	49 89 c7             	mov    %rax,%r15
    28e6:	e8 35 fa ff ff       	callq  2320 <puts@plt>
    28eb:	48 8b 3d ce d7 01 00 	mov    0x1d7ce(%rip),%rdi        # 200c0 <stdout@@GLIBC_2.2.5>
    28f2:	e8 69 fb ff ff       	callq  2460 <fflush@plt>
    28f7:	31 c0                	xor    %eax,%eax
    28f9:	e8 52 0c 00 00       	callq  3550 <adtree_alloc>
    28fe:	49 89 c4             	mov    %rax,%r12
    2901:	48 85 c0             	test   %rax,%rax
    2904:	0f 84 c5 04 00 00    	je     2dcf <main+0x80f>
    290a:	48 8d 35 f1 67 01 00 	lea    0x167f1(%rip),%rsi        # 19102 <__PRETTY_FUNCTION__.4726+0x92>
    2911:	bf 01 00 00 00       	mov    $0x1,%edi
    2916:	31 c0                	xor    %eax,%eax
    2918:	e8 73 fb ff ff       	callq  2490 <__printf_chk@plt>
    291d:	48 8b 3d 9c d7 01 00 	mov    0x1d79c(%rip),%rdi        # 200c0 <stdout@@GLIBC_2.2.5>
    2924:	e8 37 fb ff ff       	callq  2460 <fflush@plt>
    2929:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    292e:	31 f6                	xor    %esi,%esi
    2930:	e8 5b fa ff ff       	callq  2390 <gettimeofday@plt>
    2935:	4c 89 f6             	mov    %r14,%rsi
    2938:	4c 89 e7             	mov    %r12,%rdi
    293b:	e8 d0 0c 00 00       	callq  3610 <adtree_make>
    2940:	31 f6                	xor    %esi,%esi
    2942:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    2947:	e8 44 fa ff ff       	callq  2390 <gettimeofday@plt>
    294c:	48 8d 3d 9f 67 01 00 	lea    0x1679f(%rip),%rdi        # 190f2 <__PRETTY_FUNCTION__.4726+0x82>
    2953:	e8 c8 f9 ff ff       	callq  2320 <puts@plt>
    2958:	48 8b 3d 61 d7 01 00 	mov    0x1d761(%rip),%rdi        # 200c0 <stdout@@GLIBC_2.2.5>
    295f:	e8 fc fa ff ff       	callq  2460 <fflush@plt>
    2964:	66 0f ef c9          	pxor   %xmm1,%xmm1
    2968:	66 0f ef d2          	pxor   %xmm2,%xmm2
    296c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2970:	f2 48 0f 2a 4c 24 40 	cvtsi2sdq 0x40(%rsp),%xmm1
    2977:	48 8d 35 9a 67 01 00 	lea    0x1679a(%rip),%rsi        # 19118 <__PRETTY_FUNCTION__.4726+0xa8>
    297e:	bf 01 00 00 00       	mov    $0x1,%edi
    2983:	b8 01 00 00 00       	mov    $0x1,%eax
    2988:	f2 48 0f 2a 54 24 30 	cvtsi2sdq 0x30(%rsp),%xmm2
    298f:	f2 48 0f 2a 44 24 48 	cvtsi2sdq 0x48(%rsp),%xmm0
    2996:	f2 0f 5e 05 4a 6c 01 	divsd  0x16c4a(%rip),%xmm0        # 195e8 <__PRETTY_FUNCTION__.4821+0x2c>
    299d:	00 
    299e:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    29a2:	66 0f ef c9          	pxor   %xmm1,%xmm1
    29a6:	f2 48 0f 2a 4c 24 38 	cvtsi2sdq 0x38(%rsp),%xmm1
    29ad:	f2 0f 5e 0d 33 6c 01 	divsd  0x16c33(%rip),%xmm1        # 195e8 <__PRETTY_FUNCTION__.4821+0x2c>
    29b4:	00 
    29b5:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    29b9:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    29bd:	e8 ce fa ff ff       	callq  2490 <__printf_chk@plt>
    29c2:	48 8b 3d f7 d6 01 00 	mov    0x1d6f7(%rip),%rdi        # 200c0 <stdout@@GLIBC_2.2.5>
    29c9:	e8 92 fa ff ff       	callq  2460 <fflush@plt>
    29ce:	31 d2                	xor    %edx,%edx
    29d0:	be 01 00 00 00       	mov    $0x1,%esi
    29d5:	bf 01 00 00 00       	mov    $0x1,%edi
    29da:	e8 41 0d 00 00       	callq  3720 <data_alloc>
    29df:	ba 01 00 00 00       	mov    $0x1,%edx
    29e4:	4c 89 e6             	mov    %r12,%rsi
    29e7:	48 89 c7             	mov    %rax,%rdi
    29ea:	48 89 c3             	mov    %rax,%rbx
    29ed:	e8 0e 4c 00 00       	callq  7600 <learner_alloc>
    29f2:	49 89 c5             	mov    %rax,%r13
    29f5:	48 8b 40 08          	mov    0x8(%rax),%rax
    29f9:	4d 89 7d 08          	mov    %r15,0x8(%r13)
    29fd:	4c 89 ef             	mov    %r13,%rdi
    2a00:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2a05:	e8 36 4e 00 00       	callq  7840 <learner_score>
    2a0a:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    2a0f:	4c 89 ef             	mov    %r13,%rdi
    2a12:	f3 0f 11 44 24 1c    	movss  %xmm0,0x1c(%rsp)
    2a18:	49 89 45 08          	mov    %rax,0x8(%r13)
    2a1c:	e8 ff 4c 00 00       	callq  7720 <learner_free>
    2a21:	48 89 df             	mov    %rbx,%rdi
    2a24:	e8 87 0d 00 00       	callq  37b0 <data_free>
    2a29:	4c 89 ff             	mov    %r15,%rdi
    2a2c:	e8 1f 54 00 00       	callq  7e50 <net_free>
    2a31:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    2a36:	4c 89 e6             	mov    %r12,%rsi
    2a39:	4c 89 f7             	mov    %r14,%rdi
    2a3c:	e8 bf 4b 00 00       	callq  7600 <learner_alloc>
    2a41:	49 89 c5             	mov    %rax,%r13
    2a44:	48 85 c0             	test   %rax,%rax
    2a47:	0f 84 63 03 00 00    	je     2db0 <main+0x7f0>
    2a4d:	4c 89 f7             	mov    %r14,%rdi
    2a50:	e8 5b 0d 00 00       	callq  37b0 <data_free>
    2a55:	48 8d 35 d9 66 01 00 	lea    0x166d9(%rip),%rsi        # 19135 <__PRETTY_FUNCTION__.4726+0xc5>
    2a5c:	bf 01 00 00 00       	mov    $0x1,%edi
    2a61:	31 c0                	xor    %eax,%eax
    2a63:	e8 28 fa ff ff       	callq  2490 <__printf_chk@plt>
    2a68:	48 8b 3d 51 d6 01 00 	mov    0x1d651(%rip),%rdi        # 200c0 <stdout@@GLIBC_2.2.5>
    2a6f:	e8 ec f9 ff ff       	callq  2460 <fflush@plt>
    2a74:	31 f6                	xor    %esi,%esi
    2a76:	48 8d 7c 24 50       	lea    0x50(%rsp),%rdi
    2a7b:	e8 10 f9 ff ff       	callq  2390 <gettimeofday@plt>
    2a80:	4c 89 ef             	mov    %r13,%rdi
    2a83:	e8 88 4d 00 00       	callq  7810 <learner_run>
    2a88:	31 f6                	xor    %esi,%esi
    2a8a:	48 8d 7c 24 60       	lea    0x60(%rsp),%rdi
    2a8f:	e8 fc f8 ff ff       	callq  2390 <gettimeofday@plt>
    2a94:	48 8d 3d 57 66 01 00 	lea    0x16657(%rip),%rdi        # 190f2 <__PRETTY_FUNCTION__.4726+0x82>
    2a9b:	e8 80 f8 ff ff       	callq  2320 <puts@plt>
    2aa0:	48 8b 3d 19 d6 01 00 	mov    0x1d619(%rip),%rdi        # 200c0 <stdout@@GLIBC_2.2.5>
    2aa7:	e8 b4 f9 ff ff       	callq  2460 <fflush@plt>
    2aac:	66 0f ef c9          	pxor   %xmm1,%xmm1
    2ab0:	66 0f ef d2          	pxor   %xmm2,%xmm2
    2ab4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2ab8:	f2 48 0f 2a 4c 24 60 	cvtsi2sdq 0x60(%rsp),%xmm1
    2abf:	48 8d 35 85 66 01 00 	lea    0x16685(%rip),%rsi        # 1914b <__PRETTY_FUNCTION__.4726+0xdb>
    2ac6:	bf 01 00 00 00       	mov    $0x1,%edi
    2acb:	b8 01 00 00 00       	mov    $0x1,%eax
    2ad0:	f2 48 0f 2a 54 24 50 	cvtsi2sdq 0x50(%rsp),%xmm2
    2ad7:	f2 48 0f 2a 44 24 68 	cvtsi2sdq 0x68(%rsp),%xmm0
    2ade:	f2 0f 5e 05 02 6b 01 	divsd  0x16b02(%rip),%xmm0        # 195e8 <__PRETTY_FUNCTION__.4821+0x2c>
    2ae5:	00 
    2ae6:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    2aea:	66 0f ef c9          	pxor   %xmm1,%xmm1
    2aee:	f2 48 0f 2a 4c 24 58 	cvtsi2sdq 0x58(%rsp),%xmm1
    2af5:	f2 0f 5e 0d eb 6a 01 	divsd  0x16aeb(%rip),%xmm1        # 195e8 <__PRETTY_FUNCTION__.4821+0x2c>
    2afc:	00 
    2afd:	f2 0f 58 ca          	addsd  %xmm2,%xmm1
    2b01:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    2b05:	e8 86 f9 ff ff       	callq  2490 <__printf_chk@plt>
    2b0a:	48 8b 3d af d5 01 00 	mov    0x1d5af(%rip),%rdi        # 200c0 <stdout@@GLIBC_2.2.5>
    2b11:	e8 4a f9 ff ff       	callq  2460 <fflush@plt>
    2b16:	49 8b 7d 08          	mov    0x8(%r13),%rdi
    2b1a:	e8 31 5c 00 00       	callq  8750 <net_isCycle>
    2b1f:	48 85 c0             	test   %rax,%rax
    2b22:	0f 85 69 02 00 00    	jne    2d91 <main+0x7d1>
    2b28:	4c 89 ef             	mov    %r13,%rdi
    2b2b:	e8 10 4d 00 00       	callq  7840 <learner_score>
    2b30:	bf 01 00 00 00       	mov    $0x1,%edi
    2b35:	b8 01 00 00 00       	mov    $0x1,%eax
    2b3a:	48 8d 35 23 66 01 00 	lea    0x16623(%rip),%rsi        # 19164 <__PRETTY_FUNCTION__.4726+0xf4>
    2b41:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    2b45:	e8 46 f9 ff ff       	callq  2490 <__printf_chk@plt>
    2b4a:	48 8d 35 26 66 01 00 	lea    0x16626(%rip),%rsi        # 19177 <__PRETTY_FUNCTION__.4726+0x107>
    2b51:	bf 01 00 00 00       	mov    $0x1,%edi
    2b56:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2b5a:	b8 01 00 00 00       	mov    $0x1,%eax
    2b5f:	f3 0f 5a 44 24 1c    	cvtss2sd 0x1c(%rsp),%xmm0
    2b65:	e8 26 f9 ff ff       	callq  2490 <__printf_chk@plt>
    2b6a:	48 8b 3d 4f d5 01 00 	mov    0x1d54f(%rip),%rdi        # 200c0 <stdout@@GLIBC_2.2.5>
    2b71:	e8 ea f8 ff ff       	callq  2460 <fflush@plt>
    2b76:	48 89 ef             	mov    %rbp,%rdi
    2b79:	e8 a2 96 00 00       	callq  c220 <random_free>
    2b7e:	4c 89 e7             	mov    %r12,%rdi
    2b81:	e8 fa 09 00 00       	callq  3580 <adtree_free>
    2b86:	48 8d 3d 2d 65 01 00 	lea    0x1652d(%rip),%rdi        # 190ba <__PRETTY_FUNCTION__.4726+0x4a>
    2b8d:	e8 5e f7 ff ff       	callq  22f0 <getenv@plt>
    2b92:	48 85 c0             	test   %rax,%rax
    2b95:	74 3e                	je     2bd5 <main+0x615>
    2b97:	48 8d 6c 24 28       	lea    0x28(%rsp),%rbp
    2b9c:	48 8d 3d e7 65 01 00 	lea    0x165e7(%rip),%rdi        # 1918a <__PRETTY_FUNCTION__.4726+0x11a>
    2ba3:	48 89 ee             	mov    %rbp,%rsi
    2ba6:	e8 55 5e 01 00       	callq  18a00 <stm_get_global_stats>
    2bab:	85 c0                	test   %eax,%eax
    2bad:	75 70                	jne    2c1f <main+0x65f>
    2baf:	48 89 ee             	mov    %rbp,%rsi
    2bb2:	48 8d 3d f6 65 01 00 	lea    0x165f6(%rip),%rdi        # 191af <__PRETTY_FUNCTION__.4726+0x13f>
    2bb9:	e8 42 5e 01 00       	callq  18a00 <stm_get_global_stats>
    2bbe:	85 c0                	test   %eax,%eax
    2bc0:	75 7a                	jne    2c3c <main+0x67c>
    2bc2:	48 89 ee             	mov    %rbp,%rsi
    2bc5:	48 8d 3d 07 66 01 00 	lea    0x16607(%rip),%rdi        # 191d3 <__PRETTY_FUNCTION__.4726+0x163>
    2bcc:	e8 2f 5e 01 00       	callq  18a00 <stm_get_global_stats>
    2bd1:	85 c0                	test   %eax,%eax
    2bd3:	75 30                	jne    2c05 <main+0x645>
    2bd5:	e8 46 a8 00 00       	callq  d420 <stm_exit>
    2bda:	31 c0                	xor    %eax,%eax
    2bdc:	e8 cf 9c 00 00       	callq  c8b0 <thread_shutdown>
    2be1:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    2be6:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    2bed:	00 00 
    2bef:	75 73                	jne    2c64 <main+0x6a4>
    2bf1:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    2bf8:	31 c0                	xor    %eax,%eax
    2bfa:	5b                   	pop    %rbx
    2bfb:	5d                   	pop    %rbp
    2bfc:	41 5c                	pop    %r12
    2bfe:	41 5d                	pop    %r13
    2c00:	41 5e                	pop    %r14
    2c02:	41 5f                	pop    %r15
    2c04:	c3                   	retq   
    2c05:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    2c0a:	48 8d 35 d5 65 01 00 	lea    0x165d5(%rip),%rsi        # 191e6 <__PRETTY_FUNCTION__.4726+0x176>
    2c11:	bf 01 00 00 00       	mov    $0x1,%edi
    2c16:	31 c0                	xor    %eax,%eax
    2c18:	e8 73 f8 ff ff       	callq  2490 <__printf_chk@plt>
    2c1d:	eb b6                	jmp    2bd5 <main+0x615>
    2c1f:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    2c24:	48 8d 35 71 65 01 00 	lea    0x16571(%rip),%rsi        # 1919c <__PRETTY_FUNCTION__.4726+0x12c>
    2c2b:	bf 01 00 00 00       	mov    $0x1,%edi
    2c30:	31 c0                	xor    %eax,%eax
    2c32:	e8 59 f8 ff ff       	callq  2490 <__printf_chk@plt>
    2c37:	e9 73 ff ff ff       	jmpq   2baf <main+0x5ef>
    2c3c:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    2c41:	48 8d 35 78 65 01 00 	lea    0x16578(%rip),%rsi        # 191c0 <__PRETTY_FUNCTION__.4726+0x150>
    2c48:	bf 01 00 00 00       	mov    $0x1,%edi
    2c4d:	31 c0                	xor    %eax,%eax
    2c4f:	e8 3c f8 ff ff       	callq  2490 <__printf_chk@plt>
    2c54:	e9 69 ff ff ff       	jmpq   2bc2 <main+0x602>
    2c59:	8b 05 81 d4 01 00    	mov    0x1d481(%rip),%eax        # 200e0 <opterr@@GLIBC_2.2.5>
    2c5f:	e9 bd fa ff ff       	jmpq   2721 <main+0x161>
    2c64:	e8 f7 f6 ff ff       	callq  2360 <__stack_chk_fail@plt>
    2c69:	48 8d 0d 4c 69 01 00 	lea    0x1694c(%rip),%rcx        # 195bc <__PRETTY_FUNCTION__.4821>
    2c70:	ba 0f 01 00 00       	mov    $0x10f,%edx
    2c75:	48 8d 35 5c 64 01 00 	lea    0x1645c(%rip),%rsi        # 190d8 <__PRETTY_FUNCTION__.4726+0x68>
    2c7c:	48 8d 3d 5d 64 01 00 	lea    0x1645d(%rip),%rdi        # 190e0 <__PRETTY_FUNCTION__.4726+0x70>
    2c83:	e8 18 f7 ff ff       	callq  23a0 <__assert_fail@plt>
    2c88:	49 8b 14 24          	mov    (%r12),%rdx
    2c8c:	48 8d 35 12 64 01 00 	lea    0x16412(%rip),%rsi        # 190a5 <__PRETTY_FUNCTION__.4726+0x35>
    2c93:	bf 01 00 00 00       	mov    $0x1,%edi
    2c98:	31 c0                	xor    %eax,%eax
    2c9a:	e8 f1 f7 ff ff       	callq  2490 <__printf_chk@plt>
    2c9f:	48 8d 3d 5a 65 01 00 	lea    0x1655a(%rip),%rdi        # 19200 <__PRETTY_FUNCTION__.4726+0x190>
    2ca6:	e8 75 f6 ff ff       	callq  2320 <puts@plt>
    2cab:	83 ca ff             	or     $0xffffffff,%edx
    2cae:	bf 01 00 00 00       	mov    $0x1,%edi
    2cb3:	31 c0                	xor    %eax,%eax
    2cb5:	48 8d 35 84 65 01 00 	lea    0x16584(%rip),%rsi        # 19240 <__PRETTY_FUNCTION__.4726+0x1d0>
    2cbc:	e8 cf f7 ff ff       	callq  2490 <__printf_chk@plt>
    2cc1:	ba 01 00 00 00       	mov    $0x1,%edx
    2cc6:	48 8d 35 ab 65 01 00 	lea    0x165ab(%rip),%rsi        # 19278 <__PRETTY_FUNCTION__.4726+0x208>
    2ccd:	31 c0                	xor    %eax,%eax
    2ccf:	bf 01 00 00 00       	mov    $0x1,%edi
    2cd4:	e8 b7 f7 ff ff       	callq  2490 <__printf_chk@plt>
    2cd9:	ba 04 00 00 00       	mov    $0x4,%edx
    2cde:	48 8d 35 cb 65 01 00 	lea    0x165cb(%rip),%rsi        # 192b0 <__PRETTY_FUNCTION__.4726+0x240>
    2ce5:	31 c0                	xor    %eax,%eax
    2ce7:	bf 01 00 00 00       	mov    $0x1,%edi
    2cec:	e8 9f f7 ff ff       	callq  2490 <__printf_chk@plt>
    2cf1:	ba 0a 00 00 00       	mov    $0xa,%edx
    2cf6:	48 8d 35 eb 65 01 00 	lea    0x165eb(%rip),%rsi        # 192e8 <__PRETTY_FUNCTION__.4726+0x278>
    2cfd:	31 c0                	xor    %eax,%eax
    2cff:	bf 01 00 00 00       	mov    $0x1,%edi
    2d04:	e8 87 f7 ff ff       	callq  2490 <__printf_chk@plt>
    2d09:	bf 01 00 00 00       	mov    $0x1,%edi
    2d0e:	b8 01 00 00 00       	mov    $0x1,%eax
    2d13:	f2 0f 10 05 c5 68 01 	movsd  0x168c5(%rip),%xmm0        # 195e0 <__PRETTY_FUNCTION__.4821+0x24>
    2d1a:	00 
    2d1b:	48 8d 35 fe 65 01 00 	lea    0x165fe(%rip),%rsi        # 19320 <__PRETTY_FUNCTION__.4726+0x2b0>
    2d22:	e8 69 f7 ff ff       	callq  2490 <__printf_chk@plt>
    2d27:	ba 00 10 00 00       	mov    $0x1000,%edx
    2d2c:	48 8d 35 25 66 01 00 	lea    0x16625(%rip),%rsi        # 19358 <__PRETTY_FUNCTION__.4726+0x2e8>
    2d33:	31 c0                	xor    %eax,%eax
    2d35:	bf 01 00 00 00       	mov    $0x1,%edi
    2d3a:	e8 51 f7 ff ff       	callq  2490 <__printf_chk@plt>
    2d3f:	ba 01 00 00 00       	mov    $0x1,%edx
    2d44:	48 8d 35 45 66 01 00 	lea    0x16645(%rip),%rsi        # 19390 <__PRETTY_FUNCTION__.4726+0x320>
    2d4b:	31 c0                	xor    %eax,%eax
    2d4d:	bf 01 00 00 00       	mov    $0x1,%edi
    2d52:	e8 39 f7 ff ff       	callq  2490 <__printf_chk@plt>
    2d57:	ba 01 00 00 00       	mov    $0x1,%edx
    2d5c:	48 8d 35 65 66 01 00 	lea    0x16665(%rip),%rsi        # 193c8 <__PRETTY_FUNCTION__.4726+0x358>
    2d63:	31 c0                	xor    %eax,%eax
    2d65:	bf 01 00 00 00       	mov    $0x1,%edi
    2d6a:	e8 21 f7 ff ff       	callq  2490 <__printf_chk@plt>
    2d6f:	bf 01 00 00 00       	mov    $0x1,%edi
    2d74:	ba 20 00 00 00       	mov    $0x20,%edx
    2d79:	31 c0                	xor    %eax,%eax
    2d7b:	48 8d 35 7e 66 01 00 	lea    0x1667e(%rip),%rsi        # 19400 <__PRETTY_FUNCTION__.4726+0x390>
    2d82:	e8 09 f7 ff ff       	callq  2490 <__printf_chk@plt>
    2d87:	bf 01 00 00 00       	mov    $0x1,%edi
    2d8c:	e8 7f f7 ff ff       	callq  2510 <exit@plt>
    2d91:	48 8d 0d 24 68 01 00 	lea    0x16824(%rip),%rcx        # 195bc <__PRETTY_FUNCTION__.4821>
    2d98:	ba 57 01 00 00       	mov    $0x157,%edx
    2d9d:	48 8d 35 34 63 01 00 	lea    0x16334(%rip),%rsi        # 190d8 <__PRETTY_FUNCTION__.4726+0x68>
    2da4:	48 8d 3d b1 63 01 00 	lea    0x163b1(%rip),%rdi        # 1915c <__PRETTY_FUNCTION__.4726+0xec>
    2dab:	e8 f0 f5 ff ff       	callq  23a0 <__assert_fail@plt>
    2db0:	48 8d 0d 05 68 01 00 	lea    0x16805(%rip),%rcx        # 195bc <__PRETTY_FUNCTION__.4821>
    2db7:	ba 3c 01 00 00       	mov    $0x13c,%edx
    2dbc:	48 8d 35 15 63 01 00 	lea    0x16315(%rip),%rsi        # 190d8 <__PRETTY_FUNCTION__.4726+0x68>
    2dc3:	48 8d 3d 60 63 01 00 	lea    0x16360(%rip),%rdi        # 1912a <__PRETTY_FUNCTION__.4726+0xba>
    2dca:	e8 d1 f5 ff ff       	callq  23a0 <__assert_fail@plt>
    2dcf:	48 8d 0d e6 67 01 00 	lea    0x167e6(%rip),%rcx        # 195bc <__PRETTY_FUNCTION__.4821>
    2dd6:	ba 1d 01 00 00       	mov    $0x11d,%edx
    2ddb:	48 8d 35 f6 62 01 00 	lea    0x162f6(%rip),%rsi        # 190d8 <__PRETTY_FUNCTION__.4726+0x68>
    2de2:	48 8d 3d 0f 63 01 00 	lea    0x1630f(%rip),%rdi        # 190f8 <__PRETTY_FUNCTION__.4726+0x88>
    2de9:	e8 b2 f5 ff ff       	callq  23a0 <__assert_fail@plt>
    2dee:	48 8d 0d c7 67 01 00 	lea    0x167c7(%rip),%rcx        # 195bc <__PRETTY_FUNCTION__.4821>
    2df5:	ba 13 01 00 00       	mov    $0x113,%edx
    2dfa:	48 8d 35 d7 62 01 00 	lea    0x162d7(%rip),%rsi        # 190d8 <__PRETTY_FUNCTION__.4726+0x68>
    2e01:	48 8d 3d e2 62 01 00 	lea    0x162e2(%rip),%rdi        # 190ea <__PRETTY_FUNCTION__.4726+0x7a>
    2e08:	e8 93 f5 ff ff       	callq  23a0 <__assert_fail@plt>
    2e0d:	0f 1f 00             	nopl   (%rax)

0000000000002e10 <_start>:
    2e10:	f3 0f 1e fa          	endbr64 
    2e14:	31 ed                	xor    %ebp,%ebp
    2e16:	49 89 d1             	mov    %rdx,%r9
    2e19:	5e                   	pop    %rsi
    2e1a:	48 89 e2             	mov    %rsp,%rdx
    2e1d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    2e21:	50                   	push   %rax
    2e22:	54                   	push   %rsp
    2e23:	4c 8d 05 36 5f 01 00 	lea    0x15f36(%rip),%r8        # 18d60 <__libc_csu_fini>
    2e2a:	48 8d 0d bf 5e 01 00 	lea    0x15ebf(%rip),%rcx        # 18cf0 <__libc_csu_init>
    2e31:	48 8d 3d 88 f7 ff ff 	lea    -0x878(%rip),%rdi        # 25c0 <main>
    2e38:	ff 15 a2 d1 01 00    	callq  *0x1d1a2(%rip)        # 1ffe0 <__libc_start_main@GLIBC_2.2.5>
    2e3e:	f4                   	hlt    
    2e3f:	90                   	nop

0000000000002e40 <deregister_tm_clones>:
    2e40:	48 8d 3d 69 d2 01 00 	lea    0x1d269(%rip),%rdi        # 200b0 <__TMC_END__>
    2e47:	48 8d 05 62 d2 01 00 	lea    0x1d262(%rip),%rax        # 200b0 <__TMC_END__>
    2e4e:	48 39 f8             	cmp    %rdi,%rax
    2e51:	74 15                	je     2e68 <deregister_tm_clones+0x28>
    2e53:	48 8b 05 7e d1 01 00 	mov    0x1d17e(%rip),%rax        # 1ffd8 <_ITM_deregisterTMCloneTable>
    2e5a:	48 85 c0             	test   %rax,%rax
    2e5d:	74 09                	je     2e68 <deregister_tm_clones+0x28>
    2e5f:	ff e0                	jmpq   *%rax
    2e61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2e68:	c3                   	retq   
    2e69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002e70 <register_tm_clones>:
    2e70:	48 8d 3d 39 d2 01 00 	lea    0x1d239(%rip),%rdi        # 200b0 <__TMC_END__>
    2e77:	48 8d 35 32 d2 01 00 	lea    0x1d232(%rip),%rsi        # 200b0 <__TMC_END__>
    2e7e:	48 29 fe             	sub    %rdi,%rsi
    2e81:	48 89 f0             	mov    %rsi,%rax
    2e84:	48 c1 ee 3f          	shr    $0x3f,%rsi
    2e88:	48 c1 f8 03          	sar    $0x3,%rax
    2e8c:	48 01 c6             	add    %rax,%rsi
    2e8f:	48 d1 fe             	sar    %rsi
    2e92:	74 14                	je     2ea8 <register_tm_clones+0x38>
    2e94:	48 8b 05 55 d1 01 00 	mov    0x1d155(%rip),%rax        # 1fff0 <_ITM_registerTMCloneTable>
    2e9b:	48 85 c0             	test   %rax,%rax
    2e9e:	74 08                	je     2ea8 <register_tm_clones+0x38>
    2ea0:	ff e0                	jmpq   *%rax
    2ea2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2ea8:	c3                   	retq   
    2ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002eb0 <__do_global_dtors_aux>:
    2eb0:	f3 0f 1e fa          	endbr64 
    2eb4:	80 3d 4d d2 01 00 00 	cmpb   $0x0,0x1d24d(%rip)        # 20108 <completed.8060>
    2ebb:	75 2b                	jne    2ee8 <__do_global_dtors_aux+0x38>
    2ebd:	55                   	push   %rbp
    2ebe:	48 83 3d 32 d1 01 00 	cmpq   $0x0,0x1d132(%rip)        # 1fff8 <__cxa_finalize@GLIBC_2.2.5>
    2ec5:	00 
    2ec6:	48 89 e5             	mov    %rsp,%rbp
    2ec9:	74 0c                	je     2ed7 <__do_global_dtors_aux+0x27>
    2ecb:	48 8b 3d 36 d1 01 00 	mov    0x1d136(%rip),%rdi        # 20008 <__dso_handle>
    2ed2:	e8 09 f4 ff ff       	callq  22e0 <__cxa_finalize@plt>
    2ed7:	e8 64 ff ff ff       	callq  2e40 <deregister_tm_clones>
    2edc:	c6 05 25 d2 01 00 01 	movb   $0x1,0x1d225(%rip)        # 20108 <completed.8060>
    2ee3:	5d                   	pop    %rbp
    2ee4:	c3                   	retq   
    2ee5:	0f 1f 00             	nopl   (%rax)
    2ee8:	c3                   	retq   
    2ee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002ef0 <frame_dummy>:
    2ef0:	f3 0f 1e fa          	endbr64 
    2ef4:	e9 77 ff ff ff       	jmpq   2e70 <register_tm_clones>
    2ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002f00 <freeNodes>:
    2f00:	48 85 ff             	test   %rdi,%rdi
    2f03:	74 73                	je     2f78 <freeNodes+0x78>
    2f05:	41 56                	push   %r14
    2f07:	41 55                	push   %r13
    2f09:	41 54                	push   %r12
    2f0b:	49 89 fc             	mov    %rdi,%r12
    2f0e:	55                   	push   %rbp
    2f0f:	53                   	push   %rbx
    2f10:	4c 8b 77 18          	mov    0x18(%rdi),%r14
    2f14:	4c 89 f7             	mov    %r14,%rdi
    2f17:	e8 54 9e 00 00       	callq  cd70 <vector_getSize>
    2f1c:	49 89 c5             	mov    %rax,%r13
    2f1f:	48 85 c0             	test   %rax,%rax
    2f22:	7e 33                	jle    2f57 <freeNodes+0x57>
    2f24:	31 db                	xor    %ebx,%ebx
    2f26:	48 89 de             	mov    %rbx,%rsi
    2f29:	4c 89 f7             	mov    %r14,%rdi
    2f2c:	48 83 c3 01          	add    $0x1,%rbx
    2f30:	e8 db 9b 00 00       	callq  cb10 <vector_at>
    2f35:	48 8b 78 10          	mov    0x10(%rax),%rdi
    2f39:	48 89 c5             	mov    %rax,%rbp
    2f3c:	e8 bf ff ff ff       	callq  2f00 <freeNodes>
    2f41:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
    2f45:	e8 b6 ff ff ff       	callq  2f00 <freeNodes>
    2f4a:	48 89 ef             	mov    %rbp,%rdi
    2f4d:	e8 7e f3 ff ff       	callq  22d0 <free@plt>
    2f52:	49 39 dd             	cmp    %rbx,%r13
    2f55:	75 cf                	jne    2f26 <freeNodes+0x26>
    2f57:	49 8b 7c 24 18       	mov    0x18(%r12),%rdi
    2f5c:	e8 6f 9b 00 00       	callq  cad0 <vector_free>
    2f61:	5b                   	pop    %rbx
    2f62:	4c 89 e7             	mov    %r12,%rdi
    2f65:	5d                   	pop    %rbp
    2f66:	41 5c                	pop    %r12
    2f68:	41 5d                	pop    %r13
    2f6a:	41 5e                	pop    %r14
    2f6c:	e9 5f f3 ff ff       	jmpq   22d0 <free@plt>
    2f71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2f78:	c3                   	retq   
    2f79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002f80 <makeNode>:
    2f80:	41 57                	push   %r15
    2f82:	49 89 f7             	mov    %rsi,%r15
    2f85:	41 56                	push   %r14
    2f87:	41 55                	push   %r13
    2f89:	41 54                	push   %r12
    2f8b:	49 89 d4             	mov    %rdx,%r12
    2f8e:	55                   	push   %rbp
    2f8f:	4c 89 c5             	mov    %r8,%rbp
    2f92:	53                   	push   %rbx
    2f93:	48 89 cb             	mov    %rcx,%rbx
    2f96:	48 83 ec 28          	sub    $0x28,%rsp
    2f9a:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    2f9f:	bf 20 00 00 00       	mov    $0x20,%edi
    2fa4:	e8 a7 f4 ff ff       	callq  2450 <malloc@plt>
    2fa9:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2fae:	48 85 c0             	test   %rax,%rax
    2fb1:	0f 84 7f 01 00 00    	je     3136 <makeNode+0x1b6>
    2fb7:	bf 01 00 00 00       	mov    $0x1,%edi
    2fbc:	49 89 c6             	mov    %rax,%r14
    2fbf:	e8 4c 9a 00 00       	callq  ca10 <vector_alloc>
    2fc4:	49 89 46 18          	mov    %rax,0x18(%r14)
    2fc8:	49 89 c5             	mov    %rax,%r13
    2fcb:	48 85 c0             	test   %rax,%rax
    2fce:	0f 84 58 01 00 00    	je     312c <makeNode+0x1ac>
    2fd4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    2fd9:	4c 89 38             	mov    %r15,(%rax)
    2fdc:	49 83 c7 01          	add    $0x1,%r15
    2fe0:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    2fe7:	ff 
    2fe8:	48 89 58 10          	mov    %rbx,0x10(%rax)
    2fec:	48 8b 45 00          	mov    0x0(%rbp),%rax
    2ff0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2ff5:	4c 39 f8             	cmp    %r15,%rax
    2ff8:	7f 57                	jg     3051 <makeNode+0xd1>
    2ffa:	e9 19 01 00 00       	jmpq   3118 <makeNode+0x198>
    2fff:	90                   	nop
    3000:	4c 39 d9             	cmp    %r11,%rcx
    3003:	0f 8d c9 00 00 00    	jge    30d2 <makeNode+0x152>
    3009:	49 89 e8             	mov    %rbp,%r8
    300c:	4c 89 e2             	mov    %r12,%rdx
    300f:	4c 89 fe             	mov    %r15,%rsi
    3012:	4c 89 ff             	mov    %r15,%rdi
    3015:	e8 66 ff ff ff       	callq  2f80 <makeNode>
    301a:	49 89 46 10          	mov    %rax,0x10(%r14)
    301e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3025:	00 
    3026:	49 c7 46 18 00 00 00 	movq   $0x0,0x18(%r14)
    302d:	00 
    302e:	4c 89 f6             	mov    %r14,%rsi
    3031:	4c 89 ef             	mov    %r13,%rdi
    3034:	e8 07 9b 00 00       	callq  cb40 <vector_pushBack>
    3039:	48 85 c0             	test   %rax,%rax
    303c:	0f 84 16 01 00 00    	je     3158 <makeNode+0x1d8>
    3042:	49 83 c7 01          	add    $0x1,%r15
    3046:	4c 39 7c 24 10       	cmp    %r15,0x10(%rsp)
    304b:	0f 84 c7 00 00 00    	je     3118 <makeNode+0x198>
    3051:	bf 20 00 00 00       	mov    $0x20,%edi
    3056:	e8 f5 f3 ff ff       	callq  2450 <malloc@plt>
    305b:	49 89 c6             	mov    %rax,%r14
    305e:	48 85 c0             	test   %rax,%rax
    3061:	0f 84 10 01 00 00    	je     3177 <makeNode+0x1f7>
    3067:	66 0f ef c0          	pxor   %xmm0,%xmm0
    306b:	4c 89 38             	mov    %r15,(%rax)
    306e:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    3075:	ff 
    3076:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    307a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    307f:	48 83 c0 01          	add    $0x1,%rax
    3083:	4c 39 f8             	cmp    %r15,%rax
    3086:	74 17                	je     309f <makeNode+0x11f>
    3088:	48 83 fb 01          	cmp    $0x1,%rbx
    308c:	7e 11                	jle    309f <makeNode+0x11f>
    308e:	4c 89 f9             	mov    %r15,%rcx
    3091:	48 89 da             	mov    %rbx,%rdx
    3094:	4c 89 e6             	mov    %r12,%rsi
    3097:	48 89 ef             	mov    %rbp,%rdi
    309a:	e8 51 0f 00 00       	callq  3ff0 <data_sort>
    309f:	4c 89 f9             	mov    %r15,%rcx
    30a2:	48 89 da             	mov    %rbx,%rdx
    30a5:	4c 89 e6             	mov    %r12,%rsi
    30a8:	48 89 ef             	mov    %rbp,%rdi
    30ab:	e8 f0 0f 00 00       	callq  40a0 <data_findSplit>
    30b0:	49 89 db             	mov    %rbx,%r11
    30b3:	49 29 c3             	sub    %rax,%r11
    30b6:	48 89 c1             	mov    %rax,%rcx
    30b9:	4c 39 d8             	cmp    %r11,%rax
    30bc:	0f 9c c0             	setl   %al
    30bf:	0f 9c c2             	setl   %dl
    30c2:	0f b6 c0             	movzbl %al,%eax
    30c5:	49 89 46 08          	mov    %rax,0x8(%r14)
    30c9:	48 85 c9             	test   %rcx,%rcx
    30cc:	0f 85 2e ff ff ff    	jne    3000 <makeNode+0x80>
    30d2:	49 c7 46 10 00 00 00 	movq   $0x0,0x10(%r14)
    30d9:	00 
    30da:	4d 85 db             	test   %r11,%r11
    30dd:	0f 84 43 ff ff ff    	je     3026 <makeNode+0xa6>
    30e3:	84 d2                	test   %dl,%dl
    30e5:	0f 85 3b ff ff ff    	jne    3026 <makeNode+0xa6>
    30eb:	49 8d 14 0c          	lea    (%r12,%rcx,1),%rdx
    30ef:	49 89 e8             	mov    %rbp,%r8
    30f2:	4c 89 d9             	mov    %r11,%rcx
    30f5:	4c 89 fe             	mov    %r15,%rsi
    30f8:	4c 89 ff             	mov    %r15,%rdi
    30fb:	e8 80 fe ff ff       	callq  2f80 <makeNode>
    3100:	49 89 46 18          	mov    %rax,0x18(%r14)
    3104:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    310b:	00 
    310c:	e9 1d ff ff ff       	jmpq   302e <makeNode+0xae>
    3111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3118:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    311d:	48 83 c4 28          	add    $0x28,%rsp
    3121:	5b                   	pop    %rbx
    3122:	5d                   	pop    %rbp
    3123:	41 5c                	pop    %r12
    3125:	41 5d                	pop    %r13
    3127:	41 5e                	pop    %r14
    3129:	41 5f                	pop    %r15
    312b:	c3                   	retq   
    312c:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    3131:	e8 9a f1 ff ff       	callq  22d0 <free@plt>
    3136:	48 8d 0d 33 5f 01 00 	lea    0x15f33(%rip),%rcx        # 19070 <__PRETTY_FUNCTION__.4726>
    313d:	ba 1b 01 00 00       	mov    $0x11b,%edx
    3142:	48 8d 35 bb 5e 01 00 	lea    0x15ebb(%rip),%rsi        # 19004 <_IO_stdin_used+0x4>
    3149:	48 8d 3d bd 5e 01 00 	lea    0x15ebd(%rip),%rdi        # 1900d <_IO_stdin_used+0xd>
    3150:	e8 4b f2 ff ff       	callq  23a0 <__assert_fail@plt>
    3155:	0f 1f 00             	nopl   (%rax)
    3158:	48 8d 0d 11 5f 01 00 	lea    0x15f11(%rip),%rcx        # 19070 <__PRETTY_FUNCTION__.4726>
    315f:	ba 28 01 00 00       	mov    $0x128,%edx
    3164:	48 8d 35 99 5e 01 00 	lea    0x15e99(%rip),%rsi        # 19004 <_IO_stdin_used+0x4>
    316b:	48 8d 3d eb 5f 01 00 	lea    0x15feb(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    3172:	e8 29 f2 ff ff       	callq  23a0 <__assert_fail@plt>
    3177:	48 8d 0d e2 5e 01 00 	lea    0x15ee2(%rip),%rcx        # 19060 <__PRETTY_FUNCTION__.4714>
    317e:	ba ef 00 00 00       	mov    $0xef,%edx
    3183:	48 8d 35 7a 5e 01 00 	lea    0x15e7a(%rip),%rsi        # 19004 <_IO_stdin_used+0x4>
    318a:	48 8d 3d 84 5e 01 00 	lea    0x15e84(%rip),%rdi        # 19015 <_IO_stdin_used+0x15>
    3191:	e8 0a f2 ff ff       	callq  23a0 <__assert_fail@plt>
    3196:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    319d:	00 00 00 

00000000000031a0 <getCount>:
    31a0:	41 57                	push   %r15
    31a2:	41 56                	push   %r14
    31a4:	41 55                	push   %r13
    31a6:	41 54                	push   %r12
    31a8:	55                   	push   %rbp
    31a9:	53                   	push   %rbx
    31aa:	48 83 ec 38          	sub    $0x38,%rsp
    31ae:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    31b3:	48 85 ff             	test   %rdi,%rdi
    31b6:	0f 84 94 00 00 00    	je     3250 <getCount+0xb0>
    31bc:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    31c1:	48 89 fd             	mov    %rdi,%rbp
    31c4:	49 89 ce             	mov    %rcx,%r14
    31c7:	4d 89 c5             	mov    %r8,%r13
    31ca:	49 89 d4             	mov    %rdx,%r12
    31cd:	eb 14                	jmp    31e3 <getCount+0x43>
    31cf:	90                   	nop
    31d0:	48 8b 68 10          	mov    0x10(%rax),%rbp
    31d4:	48 83 44 24 08 01    	addq   $0x1,0x8(%rsp)
    31da:	49 83 c4 01          	add    $0x1,%r12
    31de:	48 85 ed             	test   %rbp,%rbp
    31e1:	74 6d                	je     3250 <getCount+0xb0>
    31e3:	4c 8b 7d 00          	mov    0x0(%rbp),%r15
    31e7:	4d 39 ef             	cmp    %r13,%r15
    31ea:	7d 7c                	jge    3268 <getCount+0xc8>
    31ec:	4c 89 e6             	mov    %r12,%rsi
    31ef:	4c 89 f7             	mov    %r14,%rdi
    31f2:	e8 19 99 00 00       	callq  cb10 <vector_at>
    31f7:	48 89 c3             	mov    %rax,%rbx
    31fa:	48 85 c0             	test   %rax,%rax
    31fd:	74 69                	je     3268 <getCount+0xc8>
    31ff:	48 8b 30             	mov    (%rax),%rsi
    3202:	4c 39 ee             	cmp    %r13,%rsi
    3205:	0f 8f d3 01 00 00    	jg     33de <getCount+0x23e>
    320b:	4c 29 fe             	sub    %r15,%rsi
    320e:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
    3212:	48 83 ee 01          	sub    $0x1,%rsi
    3216:	e8 f5 98 00 00       	callq  cb10 <vector_at>
    321b:	48 85 c0             	test   %rax,%rax
    321e:	0f 84 d9 01 00 00    	je     33fd <getCount+0x25d>
    3224:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
    3228:	4c 39 78 08          	cmp    %r15,0x8(%rax)
    322c:	74 52                	je     3280 <getCount+0xe0>
    322e:	4d 85 ff             	test   %r15,%r15
    3231:	74 9d                	je     31d0 <getCount+0x30>
    3233:	49 83 ff 01          	cmp    $0x1,%r15
    3237:	0f 85 df 01 00 00    	jne    341c <getCount+0x27c>
    323d:	48 8b 68 18          	mov    0x18(%rax),%rbp
    3241:	48 83 44 24 08 01    	addq   $0x1,0x8(%rsp)
    3247:	49 83 c4 01          	add    $0x1,%r12
    324b:	48 85 ed             	test   %rbp,%rbp
    324e:	75 93                	jne    31e3 <getCount+0x43>
    3250:	48 83 c4 38          	add    $0x38,%rsp
    3254:	31 c0                	xor    %eax,%eax
    3256:	5b                   	pop    %rbx
    3257:	5d                   	pop    %rbp
    3258:	41 5c                	pop    %r12
    325a:	41 5d                	pop    %r13
    325c:	41 5e                	pop    %r14
    325e:	41 5f                	pop    %r15
    3260:	c3                   	retq   
    3261:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3268:	48 8b 45 10          	mov    0x10(%rbp),%rax
    326c:	48 83 c4 38          	add    $0x38,%rsp
    3270:	5b                   	pop    %rbx
    3271:	5d                   	pop    %rbp
    3272:	41 5c                	pop    %r12
    3274:	41 5d                	pop    %r13
    3276:	41 5e                	pop    %r14
    3278:	41 5f                	pop    %r15
    327a:	c3                   	retq   
    327b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3280:	4c 89 f7             	mov    %r14,%rdi
    3283:	e8 e8 9a 00 00       	callq  cd70 <vector_getSize>
    3288:	48 8d 78 ff          	lea    -0x1(%rax),%rdi
    328c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3291:	e8 da 97 00 00       	callq  ca70 <Pvector_alloc>
    3296:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    329b:	48 85 c0             	test   %rax,%rax
    329e:	0f 84 b6 01 00 00    	je     345a <getCount+0x2ba>
    32a4:	31 d2                	xor    %edx,%edx
    32a6:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    32ac:	7e 3d                	jle    32eb <getCount+0x14b>
    32ae:	66 90                	xchg   %ax,%ax
    32b0:	4c 39 e2             	cmp    %r12,%rdx
    32b3:	74 2b                	je     32e0 <getCount+0x140>
    32b5:	48 89 d6             	mov    %rdx,%rsi
    32b8:	4c 89 f7             	mov    %r14,%rdi
    32bb:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    32c0:	e8 4b 98 00 00       	callq  cb10 <vector_at>
    32c5:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    32ca:	48 89 c6             	mov    %rax,%rsi
    32cd:	e8 6e 98 00 00       	callq  cb40 <vector_pushBack>
    32d2:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    32d7:	48 85 c0             	test   %rax,%rax
    32da:	0f 84 5b 01 00 00    	je     343b <getCount+0x29b>
    32e0:	48 83 c2 01          	add    $0x1,%rdx
    32e4:	48 39 54 24 18       	cmp    %rdx,0x18(%rsp)
    32e9:	75 c5                	jne    32b0 <getCount+0x110>
    32eb:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    32f2:	00 00 
    32f4:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    32f9:	4c 8b 50 10          	mov    0x10(%rax),%r10
    32fd:	4d 85 d2             	test   %r10,%r10
    3300:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    3305:	74 56                	je     335d <getCount+0x1bd>
    3307:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    330c:	e8 5f 9a 00 00       	callq  cd70 <vector_getSize>
    3311:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    3316:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
    331d:	48 85 c0             	test   %rax,%rax
    3320:	7e 1b                	jle    333d <getCount+0x19d>
    3322:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    3327:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
    332b:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    3330:	e8 db 97 00 00       	callq  cb10 <vector_at>
    3335:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    333a:	4c 8b 00             	mov    (%rax),%r8
    333d:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    3342:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    3347:	31 d2                	xor    %edx,%edx
    3349:	4c 89 d7             	mov    %r10,%rdi
    334c:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    3353:	e8 48 fe ff ff       	callq  31a0 <getCount>
    3358:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    335d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    3362:	e8 89 97 00 00       	callq  caf0 <Pvector_free>
    3367:	4d 85 ff             	test   %r15,%r15
    336a:	74 45                	je     33b1 <getCount+0x211>
    336c:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    3371:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    3376:	4d 89 e8             	mov    %r13,%r8
    3379:	4c 89 f1             	mov    %r14,%rcx
    337c:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    3383:	00 
    3384:	4c 89 e2             	mov    %r12,%rdx
    3387:	48 89 ef             	mov    %rbp,%rdi
    338a:	e8 11 fe ff ff       	callq  31a0 <getCount>
    338f:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
    3396:	00 
    3397:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    339c:	48 83 c4 38          	add    $0x38,%rsp
    33a0:	5b                   	pop    %rbx
    33a1:	5d                   	pop    %rbp
    33a2:	48 29 c1             	sub    %rax,%rcx
    33a5:	41 5c                	pop    %r12
    33a7:	41 5d                	pop    %r13
    33a9:	48 89 c8             	mov    %rcx,%rax
    33ac:	41 5e                	pop    %r14
    33ae:	41 5f                	pop    %r15
    33b0:	c3                   	retq   
    33b1:	4c 8b 4c 24 28       	mov    0x28(%rsp),%r9
    33b6:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    33bb:	4d 89 e8             	mov    %r13,%r8
    33be:	4c 89 f1             	mov    %r14,%rcx
    33c1:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
    33c8:	00 
    33c9:	4c 89 e2             	mov    %r12,%rdx
    33cc:	48 89 ef             	mov    %rbp,%rdi
    33cf:	e8 cc fd ff ff       	callq  31a0 <getCount>
    33d4:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    33db:	00 
    33dc:	eb b9                	jmp    3397 <getCount+0x1f7>
    33de:	48 8d 0d 6b 5c 01 00 	lea    0x15c6b(%rip),%rcx        # 19050 <__PRETTY_FUNCTION__.4752>
    33e5:	ba 5b 01 00 00       	mov    $0x15b,%edx
    33ea:	48 8d 35 13 5c 01 00 	lea    0x15c13(%rip),%rsi        # 19004 <_IO_stdin_used+0x4>
    33f1:	48 8d 3d 25 5c 01 00 	lea    0x15c25(%rip),%rdi        # 1901d <_IO_stdin_used+0x1d>
    33f8:	e8 a3 ef ff ff       	callq  23a0 <__assert_fail@plt>
    33fd:	48 8d 0d 4c 5c 01 00 	lea    0x15c4c(%rip),%rcx        # 19050 <__PRETTY_FUNCTION__.4752>
    3404:	ba 60 01 00 00       	mov    $0x160,%edx
    3409:	48 8d 35 f4 5b 01 00 	lea    0x15bf4(%rip),%rsi        # 19004 <_IO_stdin_used+0x4>
    3410:	48 8d 3d fe 5b 01 00 	lea    0x15bfe(%rip),%rdi        # 19015 <_IO_stdin_used+0x15>
    3417:	e8 84 ef ff ff       	callq  23a0 <__assert_fail@plt>
    341c:	48 8d 0d 2d 5c 01 00 	lea    0x15c2d(%rip),%rcx        # 19050 <__PRETTY_FUNCTION__.4752>
    3423:	ba b1 01 00 00       	mov    $0x1b1,%edx
    3428:	48 8d 35 d5 5b 01 00 	lea    0x15bd5(%rip),%rsi        # 19004 <_IO_stdin_used+0x4>
    342f:	48 8d 3d 95 68 01 00 	lea    0x16895(%rip),%rdi        # 19ccb <__PRETTY_FUNCTION__.4407+0x2b>
    3436:	e8 65 ef ff ff       	callq  23a0 <__assert_fail@plt>
    343b:	48 8d 0d 0e 5c 01 00 	lea    0x15c0e(%rip),%rcx        # 19050 <__PRETTY_FUNCTION__.4752>
    3442:	ba 75 01 00 00       	mov    $0x175,%edx
    3447:	48 8d 35 b6 5b 01 00 	lea    0x15bb6(%rip),%rsi        # 19004 <_IO_stdin_used+0x4>
    344e:	48 8d 3d 08 5d 01 00 	lea    0x15d08(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    3455:	e8 46 ef ff ff       	callq  23a0 <__assert_fail@plt>
    345a:	48 8d 0d ef 5b 01 00 	lea    0x15bef(%rip),%rcx        # 19050 <__PRETTY_FUNCTION__.4752>
    3461:	ba 6e 01 00 00       	mov    $0x16e,%edx
    3466:	48 8d 35 97 5b 01 00 	lea    0x15b97(%rip),%rsi        # 19004 <_IO_stdin_used+0x4>
    346d:	48 8d 3d c6 5b 01 00 	lea    0x15bc6(%rip),%rdi        # 1903a <_IO_stdin_used+0x3a>
    3474:	e8 27 ef ff ff       	callq  23a0 <__assert_fail@plt>
    3479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003480 <allocNode>:
    3480:	f3 0f 1e fa          	endbr64 
    3484:	41 54                	push   %r12
    3486:	53                   	push   %rbx
    3487:	48 89 fb             	mov    %rdi,%rbx
    348a:	bf 20 00 00 00       	mov    $0x20,%edi
    348f:	48 83 ec 08          	sub    $0x8,%rsp
    3493:	e8 b8 ef ff ff       	callq  2450 <malloc@plt>
    3498:	49 89 c4             	mov    %rax,%r12
    349b:	48 85 c0             	test   %rax,%rax
    349e:	74 2a                	je     34ca <allocNode+0x4a>
    34a0:	bf 01 00 00 00       	mov    $0x1,%edi
    34a5:	e8 66 95 00 00       	callq  ca10 <vector_alloc>
    34aa:	49 89 44 24 18       	mov    %rax,0x18(%r12)
    34af:	48 85 c0             	test   %rax,%rax
    34b2:	74 24                	je     34d8 <allocNode+0x58>
    34b4:	49 89 1c 24          	mov    %rbx,(%r12)
    34b8:	49 c7 44 24 08 ff ff 	movq   $0xffffffffffffffff,0x8(%r12)
    34bf:	ff ff 
    34c1:	49 c7 44 24 10 ff ff 	movq   $0xffffffffffffffff,0x10(%r12)
    34c8:	ff ff 
    34ca:	48 83 c4 08          	add    $0x8,%rsp
    34ce:	4c 89 e0             	mov    %r12,%rax
    34d1:	5b                   	pop    %rbx
    34d2:	41 5c                	pop    %r12
    34d4:	c3                   	retq   
    34d5:	0f 1f 00             	nopl   (%rax)
    34d8:	4c 89 e7             	mov    %r12,%rdi
    34db:	45 31 e4             	xor    %r12d,%r12d
    34de:	e8 ed ed ff ff       	callq  22d0 <free@plt>
    34e3:	eb e5                	jmp    34ca <allocNode+0x4a>
    34e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    34ec:	00 00 00 00 

00000000000034f0 <freeNode>:
    34f0:	f3 0f 1e fa          	endbr64 
    34f4:	55                   	push   %rbp
    34f5:	48 89 fd             	mov    %rdi,%rbp
    34f8:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    34fc:	e8 cf 95 00 00       	callq  cad0 <vector_free>
    3501:	48 89 ef             	mov    %rbp,%rdi
    3504:	5d                   	pop    %rbp
    3505:	e9 c6 ed ff ff       	jmpq   22d0 <free@plt>
    350a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003510 <allocVary>:
    3510:	f3 0f 1e fa          	endbr64 
    3514:	53                   	push   %rbx
    3515:	48 89 fb             	mov    %rdi,%rbx
    3518:	bf 20 00 00 00       	mov    $0x20,%edi
    351d:	e8 2e ef ff ff       	callq  2450 <malloc@plt>
    3522:	48 85 c0             	test   %rax,%rax
    3525:	74 13                	je     353a <allocVary+0x2a>
    3527:	48 89 18             	mov    %rbx,(%rax)
    352a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    352e:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    3535:	ff 
    3536:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    353a:	5b                   	pop    %rbx
    353b:	c3                   	retq   
    353c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003540 <freeVary>:
    3540:	f3 0f 1e fa          	endbr64 
    3544:	e9 87 ed ff ff       	jmpq   22d0 <free@plt>
    3549:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003550 <adtree_alloc>:
    3550:	f3 0f 1e fa          	endbr64 
    3554:	48 83 ec 08          	sub    $0x8,%rsp
    3558:	bf 18 00 00 00       	mov    $0x18,%edi
    355d:	e8 ee ee ff ff       	callq  2450 <malloc@plt>
    3562:	48 85 c0             	test   %rax,%rax
    3565:	74 0f                	je     3576 <adtree_alloc+0x26>
    3567:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    356e:	00 
    356f:	66 0f 76 c0          	pcmpeqd %xmm0,%xmm0
    3573:	0f 11 00             	movups %xmm0,(%rax)
    3576:	48 83 c4 08          	add    $0x8,%rsp
    357a:	c3                   	retq   
    357b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003580 <adtree_free>:
    3580:	f3 0f 1e fa          	endbr64 
    3584:	41 57                	push   %r15
    3586:	41 56                	push   %r14
    3588:	41 55                	push   %r13
    358a:	41 54                	push   %r12
    358c:	49 89 fc             	mov    %rdi,%r12
    358f:	55                   	push   %rbp
    3590:	53                   	push   %rbx
    3591:	48 83 ec 08          	sub    $0x8,%rsp
    3595:	4c 8b 6f 10          	mov    0x10(%rdi),%r13
    3599:	4d 85 ed             	test   %r13,%r13
    359c:	74 58                	je     35f6 <adtree_free+0x76>
    359e:	4d 8b 7d 18          	mov    0x18(%r13),%r15
    35a2:	4c 89 ff             	mov    %r15,%rdi
    35a5:	e8 c6 97 00 00       	callq  cd70 <vector_getSize>
    35aa:	49 89 c6             	mov    %rax,%r14
    35ad:	48 85 c0             	test   %rax,%rax
    35b0:	7e 33                	jle    35e5 <adtree_free+0x65>
    35b2:	31 db                	xor    %ebx,%ebx
    35b4:	48 89 de             	mov    %rbx,%rsi
    35b7:	4c 89 ff             	mov    %r15,%rdi
    35ba:	48 83 c3 01          	add    $0x1,%rbx
    35be:	e8 4d 95 00 00       	callq  cb10 <vector_at>
    35c3:	48 8b 78 10          	mov    0x10(%rax),%rdi
    35c7:	48 89 c5             	mov    %rax,%rbp
    35ca:	e8 31 f9 ff ff       	callq  2f00 <freeNodes>
    35cf:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
    35d3:	e8 28 f9 ff ff       	callq  2f00 <freeNodes>
    35d8:	48 89 ef             	mov    %rbp,%rdi
    35db:	e8 f0 ec ff ff       	callq  22d0 <free@plt>
    35e0:	49 39 de             	cmp    %rbx,%r14
    35e3:	75 cf                	jne    35b4 <adtree_free+0x34>
    35e5:	49 8b 7d 18          	mov    0x18(%r13),%rdi
    35e9:	e8 e2 94 00 00       	callq  cad0 <vector_free>
    35ee:	4c 89 ef             	mov    %r13,%rdi
    35f1:	e8 da ec ff ff       	callq  22d0 <free@plt>
    35f6:	48 83 c4 08          	add    $0x8,%rsp
    35fa:	4c 89 e7             	mov    %r12,%rdi
    35fd:	5b                   	pop    %rbx
    35fe:	5d                   	pop    %rbp
    35ff:	41 5c                	pop    %r12
    3601:	41 5d                	pop    %r13
    3603:	41 5e                	pop    %r14
    3605:	41 5f                	pop    %r15
    3607:	e9 c4 ec ff ff       	jmpq   22d0 <free@plt>
    360c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003610 <adtree_make>:
    3610:	f3 0f 1e fa          	endbr64 
    3614:	41 54                	push   %r12
    3616:	31 c9                	xor    %ecx,%ecx
    3618:	55                   	push   %rbp
    3619:	48 89 fd             	mov    %rdi,%rbp
    361c:	53                   	push   %rbx
    361d:	4c 8b 66 08          	mov    0x8(%rsi),%r12
    3621:	48 89 f3             	mov    %rsi,%rbx
    3624:	f3 0f 6f 06          	movdqu (%rsi),%xmm0
    3628:	31 f6                	xor    %esi,%esi
    362a:	4c 89 e2             	mov    %r12,%rdx
    362d:	0f 11 07             	movups %xmm0,(%rdi)
    3630:	48 89 df             	mov    %rbx,%rdi
    3633:	e8 b8 09 00 00       	callq  3ff0 <data_sort>
    3638:	49 89 d8             	mov    %rbx,%r8
    363b:	4c 89 e1             	mov    %r12,%rcx
    363e:	31 d2                	xor    %edx,%edx
    3640:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    3647:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
    364e:	e8 2d f9 ff ff       	callq  2f80 <makeNode>
    3653:	5b                   	pop    %rbx
    3654:	48 89 45 10          	mov    %rax,0x10(%rbp)
    3658:	5d                   	pop    %rbp
    3659:	41 5c                	pop    %r12
    365b:	c3                   	retq   
    365c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003660 <adtree_getCount>:
    3660:	f3 0f 1e fa          	endbr64 
    3664:	41 54                	push   %r12
    3666:	55                   	push   %rbp
    3667:	53                   	push   %rbx
    3668:	48 8b 6f 10          	mov    0x10(%rdi),%rbp
    366c:	48 85 ed             	test   %rbp,%rbp
    366f:	74 57                	je     36c8 <adtree_getCount+0x68>
    3671:	48 89 fb             	mov    %rdi,%rbx
    3674:	48 89 f7             	mov    %rsi,%rdi
    3677:	49 89 f4             	mov    %rsi,%r12
    367a:	e8 f1 96 00 00       	callq  cd70 <vector_getSize>
    367f:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
    3686:	48 85 c0             	test   %rax,%rax
    3689:	7f 25                	jg     36b0 <adtree_getCount+0x50>
    368b:	49 89 d9             	mov    %rbx,%r9
    368e:	4c 89 e1             	mov    %r12,%rcx
    3691:	5b                   	pop    %rbx
    3692:	48 89 ef             	mov    %rbp,%rdi
    3695:	31 d2                	xor    %edx,%edx
    3697:	5d                   	pop    %rbp
    3698:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    369f:	41 5c                	pop    %r12
    36a1:	e9 fa fa ff ff       	jmpq   31a0 <getCount>
    36a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    36ad:	00 00 00 
    36b0:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
    36b4:	4c 89 e7             	mov    %r12,%rdi
    36b7:	e8 54 94 00 00       	callq  cb10 <vector_at>
    36bc:	4c 8b 00             	mov    (%rax),%r8
    36bf:	eb ca                	jmp    368b <adtree_getCount+0x2b>
    36c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    36c8:	5b                   	pop    %rbx
    36c9:	31 c0                	xor    %eax,%eax
    36cb:	5d                   	pop    %rbp
    36cc:	41 5c                	pop    %r12
    36ce:	c3                   	retq   
    36cf:	90                   	nop

00000000000036d0 <compareRecord>:
    36d0:	f3 0f 1e fa          	endbr64 
    36d4:	48 29 ca             	sub    %rcx,%rdx
    36d7:	48 01 cf             	add    %rcx,%rdi
    36da:	48 01 ce             	add    %rcx,%rsi
    36dd:	31 c0                	xor    %eax,%eax
    36df:	eb 19                	jmp    36fa <compareRecord+0x2a>
    36e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    36e8:	0f b6 0c 07          	movzbl (%rdi,%rax,1),%ecx
    36ec:	44 0f b6 04 06       	movzbl (%rsi,%rax,1),%r8d
    36f1:	48 83 c0 01          	add    $0x1,%rax
    36f5:	44 38 c1             	cmp    %r8b,%cl
    36f8:	75 16                	jne    3710 <compareRecord+0x40>
    36fa:	48 89 d1             	mov    %rdx,%rcx
    36fd:	48 29 c1             	sub    %rax,%rcx
    3700:	48 85 c9             	test   %rcx,%rcx
    3703:	7f e3                	jg     36e8 <compareRecord+0x18>
    3705:	31 c0                	xor    %eax,%eax
    3707:	c3                   	retq   
    3708:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    370f:	00 
    3710:	0f b6 c1             	movzbl %cl,%eax
    3713:	44 29 c0             	sub    %r8d,%eax
    3716:	c3                   	retq   
    3717:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    371e:	00 00 

0000000000003720 <data_alloc>:
    3720:	f3 0f 1e fa          	endbr64 
    3724:	41 56                	push   %r14
    3726:	41 55                	push   %r13
    3728:	49 89 d5             	mov    %rdx,%r13
    372b:	41 54                	push   %r12
    372d:	55                   	push   %rbp
    372e:	48 89 f5             	mov    %rsi,%rbp
    3731:	53                   	push   %rbx
    3732:	48 89 fb             	mov    %rdi,%rbx
    3735:	bf 20 00 00 00       	mov    $0x20,%edi
    373a:	e8 11 ed ff ff       	callq  2450 <malloc@plt>
    373f:	49 89 c4             	mov    %rax,%r12
    3742:	48 85 c0             	test   %rax,%rax
    3745:	74 41                	je     3788 <data_alloc+0x68>
    3747:	49 89 de             	mov    %rbx,%r14
    374a:	4c 0f af f5          	imul   %rbp,%r14
    374e:	4c 89 f7             	mov    %r14,%rdi
    3751:	e8 fa ec ff ff       	callq  2450 <malloc@plt>
    3756:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    375b:	48 89 c7             	mov    %rax,%rdi
    375e:	48 85 c0             	test   %rax,%rax
    3761:	74 31                	je     3794 <data_alloc+0x74>
    3763:	4c 89 f2             	mov    %r14,%rdx
    3766:	be 02 00 00 00       	mov    $0x2,%esi
    376b:	e8 40 ec ff ff       	callq  23b0 <memset@plt>
    3770:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    3775:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    377a:	4d 89 6c 24 18       	mov    %r13,0x18(%r12)
    377f:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    3783:	41 0f 11 04 24       	movups %xmm0,(%r12)
    3788:	5b                   	pop    %rbx
    3789:	4c 89 e0             	mov    %r12,%rax
    378c:	5d                   	pop    %rbp
    378d:	41 5c                	pop    %r12
    378f:	41 5d                	pop    %r13
    3791:	41 5e                	pop    %r14
    3793:	c3                   	retq   
    3794:	4c 89 e7             	mov    %r12,%rdi
    3797:	45 31 e4             	xor    %r12d,%r12d
    379a:	e8 31 eb ff ff       	callq  22d0 <free@plt>
    379f:	eb e7                	jmp    3788 <data_alloc+0x68>
    37a1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    37a8:	00 00 00 00 
    37ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000037b0 <data_free>:
    37b0:	f3 0f 1e fa          	endbr64 
    37b4:	55                   	push   %rbp
    37b5:	48 89 fd             	mov    %rdi,%rbp
    37b8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    37bc:	e8 0f eb ff ff       	callq  22d0 <free@plt>
    37c1:	48 89 ef             	mov    %rbp,%rdi
    37c4:	5d                   	pop    %rbp
    37c5:	e9 06 eb ff ff       	jmpq   22d0 <free@plt>
    37ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000037d0 <data_generate>:
    37d0:	f3 0f 1e fa          	endbr64 
    37d4:	41 57                	push   %r15
    37d6:	41 56                	push   %r14
    37d8:	41 55                	push   %r13
    37da:	41 54                	push   %r12
    37dc:	49 89 cc             	mov    %rcx,%r12
    37df:	55                   	push   %rbp
    37e0:	48 89 d5             	mov    %rdx,%rbp
    37e3:	53                   	push   %rbx
    37e4:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    37eb:	48 89 7c 24 50       	mov    %rdi,0x50(%rsp)
    37f0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    37f7:	00 00 
    37f9:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    3800:	00 
    3801:	31 c0                	xor    %eax,%eax
    3803:	48 8b 47 18          	mov    0x18(%rdi),%rax
    3807:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    380c:	48 85 f6             	test   %rsi,%rsi
    380f:	78 08                	js     3819 <data_generate+0x49>
    3811:	48 89 c7             	mov    %rax,%rdi
    3814:	e8 27 8a 00 00       	callq  c240 <random_seed>
    3819:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    381e:	48 8b 00             	mov    (%rax),%rax
    3821:	48 89 c7             	mov    %rax,%rdi
    3824:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    3829:	e8 c2 44 00 00       	callq  7cf0 <net_alloc>
    382e:	48 89 04 24          	mov    %rax,(%rsp)
    3832:	48 85 c0             	test   %rax,%rax
    3835:	0f 84 43 06 00 00    	je     3e7e <data_generate+0x6ae>
    383b:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    3840:	48 89 c7             	mov    %rax,%rdi
    3843:	4c 89 e2             	mov    %r12,%rdx
    3846:	48 89 ee             	mov    %rbp,%rsi
    3849:	e8 72 59 00 00       	callq  91c0 <net_generateRandomEdges>
    384e:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
    3853:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    385a:	00 
    385b:	48 89 c7             	mov    %rax,%rdi
    385e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    3863:	e8 e8 eb ff ff       	callq  2450 <malloc@plt>
    3868:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    386d:	48 85 c0             	test   %rax,%rax
    3870:	0f 84 e9 05 00 00    	je     3e5f <data_generate+0x68f>
    3876:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    387b:	45 31 ed             	xor    %r13d,%r13d
    387e:	48 bd e5 ae 9f 2d 56 	movabs $0x446f86562d9faee5,%rbp
    3885:	86 6f 44 
    3888:	48 85 db             	test   %rbx,%rbx
    388b:	0f 8e a9 00 00 00    	jle    393a <data_generate+0x16a>
    3891:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3898:	48 8b 3c 24          	mov    (%rsp),%rdi
    389c:	4c 89 ee             	mov    %r13,%rsi
    389f:	e8 9c 4f 00 00       	callq  8840 <net_getParentIdListPtr>
    38a4:	48 89 c7             	mov    %rax,%rdi
    38a7:	e8 64 70 00 00       	callq  a910 <list_getSize>
    38ac:	ba 01 00 00 00       	mov    $0x1,%edx
    38b1:	89 c1                	mov    %eax,%ecx
    38b3:	d3 e2                	shl    %cl,%edx
    38b5:	48 63 da             	movslq %edx,%rbx
    38b8:	89 54 24 10          	mov    %edx,0x10(%rsp)
    38bc:	48 c1 e3 03          	shl    $0x3,%rbx
    38c0:	48 89 df             	mov    %rbx,%rdi
    38c3:	e8 88 eb ff ff       	callq  2450 <malloc@plt>
    38c8:	49 89 c6             	mov    %rax,%r14
    38cb:	48 85 c0             	test   %rax,%rax
    38ce:	0f 84 6c 05 00 00    	je     3e40 <data_generate+0x670>
    38d4:	8b 54 24 10          	mov    0x10(%rsp),%edx
    38d8:	49 89 c7             	mov    %rax,%r15
    38db:	48 01 c3             	add    %rax,%rbx
    38de:	85 d2                	test   %edx,%edx
    38e0:	7e 40                	jle    3922 <data_generate+0x152>
    38e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    38e8:	4c 89 e7             	mov    %r12,%rdi
    38eb:	49 83 c7 08          	add    $0x8,%r15
    38ef:	e8 6c 89 00 00       	callq  c260 <random_generate>
    38f4:	48 89 c1             	mov    %rax,%rcx
    38f7:	48 f7 e5             	mul    %rbp
    38fa:	48 89 c8             	mov    %rcx,%rax
    38fd:	48 29 d0             	sub    %rdx,%rax
    3900:	48 d1 e8             	shr    %rax
    3903:	48 01 c2             	add    %rax,%rdx
    3906:	48 c1 ea 06          	shr    $0x6,%rdx
    390a:	48 8d 04 92          	lea    (%rdx,%rdx,4),%rax
    390e:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    3912:	48 8d 04 82          	lea    (%rdx,%rax,4),%rax
    3916:	48 29 c1             	sub    %rax,%rcx
    3919:	49 89 4f f8          	mov    %rcx,-0x8(%r15)
    391d:	4c 39 fb             	cmp    %r15,%rbx
    3920:	75 c6                	jne    38e8 <data_generate+0x118>
    3922:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3927:	4e 89 34 e8          	mov    %r14,(%rax,%r13,8)
    392b:	49 83 c5 01          	add    $0x1,%r13
    392f:	4c 39 6c 24 30       	cmp    %r13,0x30(%rsp)
    3934:	0f 85 5e ff ff ff    	jne    3898 <data_generate+0xc8>
    393a:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    393f:	e8 0c eb ff ff       	callq  2450 <malloc@plt>
    3944:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    3949:	48 85 c0             	test   %rax,%rax
    394c:	0f 84 cf 04 00 00    	je     3e21 <data_generate+0x651>
    3952:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
    3959:	e8 c2 7a 00 00       	callq  b420 <queue_alloc>
    395e:	49 89 c5             	mov    %rax,%r13
    3961:	48 85 c0             	test   %rax,%rax
    3964:	0f 84 98 04 00 00    	je     3e02 <data_generate+0x632>
    396a:	bf 01 00 00 00       	mov    $0x1,%edi
    396f:	e8 9c 90 00 00       	callq  ca10 <vector_alloc>
    3974:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    3979:	48 85 c0             	test   %rax,%rax
    397c:	0f 84 61 04 00 00    	je     3de3 <data_generate+0x613>
    3982:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    3987:	e8 d4 66 00 00       	callq  a060 <bitmap_alloc>
    398c:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    3991:	48 85 c0             	test   %rax,%rax
    3994:	0f 84 2a 04 00 00    	je     3dc4 <data_generate+0x5f4>
    399a:	48 89 c7             	mov    %rax,%rdi
    399d:	e8 3e 68 00 00       	callq  a1e0 <bitmap_clearAll>
    39a2:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    39a7:	e8 b4 66 00 00       	callq  a060 <bitmap_alloc>
    39ac:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    39b1:	48 85 c0             	test   %rax,%rax
    39b4:	0f 84 eb 03 00 00    	je     3da5 <data_generate+0x5d5>
    39ba:	48 89 c7             	mov    %rax,%rdi
    39bd:	49 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%r14
    39c4:	49 89 c7             	mov    %rax,%r15
    39c7:	e8 14 68 00 00       	callq  a1e0 <bitmap_clearAll>
    39cc:	4c 89 74 24 10       	mov    %r14,0x10(%rsp)
    39d1:	4c 8b 34 24          	mov    (%rsp),%r14
    39d5:	48 8d ac 24 80 00 00 	lea    0x80(%rsp),%rbp
    39dc:	00 
    39dd:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    39e4:	00 00 
    39e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    39ed:	00 00 00 
    39f0:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    39f5:	4c 89 ff             	mov    %r15,%rdi
    39f8:	48 83 c6 01          	add    $0x1,%rsi
    39fc:	e8 5f 68 00 00       	callq  a260 <bitmap_findClear>
    3a01:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    3a06:	48 85 c0             	test   %rax,%rax
    3a09:	0f 88 8c 01 00 00    	js     3b9b <data_generate+0x3cb>
    3a0f:	48 89 c6             	mov    %rax,%rsi
    3a12:	4c 89 f7             	mov    %r14,%rdi
    3a15:	e8 66 4e 00 00       	callq  8880 <net_getChildIdListPtr>
    3a1a:	48 89 c7             	mov    %rax,%rdi
    3a1d:	e8 ee 6e 00 00       	callq  a910 <list_getSize>
    3a22:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    3a27:	48 85 c0             	test   %rax,%rax
    3a2a:	75 c4                	jne    39f0 <data_generate+0x220>
    3a2c:	4c 89 ef             	mov    %r13,%rdi
    3a2f:	e8 fc 7b 00 00       	callq  b630 <queue_clear>
    3a34:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    3a39:	4c 89 ef             	mov    %r13,%rdi
    3a3c:	e8 2f 7d 00 00       	callq  b770 <queue_push>
    3a41:	48 85 c0             	test   %rax,%rax
    3a44:	0f 84 94 04 00 00    	je     3ede <data_generate+0x70e>
    3a4a:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    3a4f:	90                   	nop
    3a50:	4c 89 ef             	mov    %r13,%rdi
    3a53:	e8 b8 7b 00 00       	callq  b610 <queue_isEmpty>
    3a58:	48 85 c0             	test   %rax,%rax
    3a5b:	0f 85 99 00 00 00    	jne    3afa <data_generate+0x32a>
    3a61:	4c 89 ef             	mov    %r13,%rdi
    3a64:	e8 77 86 00 00       	callq  c0e0 <queue_pop>
    3a69:	4c 89 ff             	mov    %r15,%rdi
    3a6c:	48 89 c6             	mov    %rax,%rsi
    3a6f:	48 89 c3             	mov    %rax,%rbx
    3a72:	e8 09 67 00 00       	callq  a180 <bitmap_set>
    3a77:	48 85 c0             	test   %rax,%rax
    3a7a:	0f 84 3f 04 00 00    	je     3ebf <data_generate+0x6ef>
    3a80:	48 89 de             	mov    %rbx,%rsi
    3a83:	4c 89 e7             	mov    %r12,%rdi
    3a86:	e8 b5 90 00 00       	callq  cb40 <vector_pushBack>
    3a8b:	48 85 c0             	test   %rax,%rax
    3a8e:	0f 84 0c 04 00 00    	je     3ea0 <data_generate+0x6d0>
    3a94:	48 89 de             	mov    %rbx,%rsi
    3a97:	4c 89 f7             	mov    %r14,%rdi
    3a9a:	e8 a1 4d 00 00       	callq  8840 <net_getParentIdListPtr>
    3a9f:	48 89 ef             	mov    %rbp,%rdi
    3aa2:	48 89 c6             	mov    %rax,%rsi
    3aa5:	48 89 c3             	mov    %rax,%rbx
    3aa8:	e8 53 6a 00 00       	callq  a500 <list_iter_reset>
    3aad:	0f 1f 00             	nopl   (%rax)
    3ab0:	48 89 de             	mov    %rbx,%rsi
    3ab3:	48 89 ef             	mov    %rbp,%rdi
    3ab6:	e8 65 6a 00 00       	callq  a520 <list_iter_hasNext>
    3abb:	48 85 c0             	test   %rax,%rax
    3abe:	74 90                	je     3a50 <data_generate+0x280>
    3ac0:	48 89 de             	mov    %rbx,%rsi
    3ac3:	48 89 ef             	mov    %rbp,%rdi
    3ac6:	e8 a5 6a 00 00       	callq  a570 <list_iter_next>
    3acb:	4c 89 ef             	mov    %r13,%rdi
    3ace:	48 89 c6             	mov    %rax,%rsi
    3ad1:	e8 9a 7c 00 00       	callq  b770 <queue_push>
    3ad6:	48 85 c0             	test   %rax,%rax
    3ad9:	75 d5                	jne    3ab0 <data_generate+0x2e0>
    3adb:	48 8d 0d 76 5c 01 00 	lea    0x15c76(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3ae2:	ba dd 00 00 00       	mov    $0xdd,%edx
    3ae7:	48 8d 35 02 5b 01 00 	lea    0x15b02(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3aee:	48 8d 3d 68 56 01 00 	lea    0x15668(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    3af5:	e8 a6 e8 ff ff       	callq  23a0 <__assert_fail@plt>
    3afa:	4c 8b 64 24 40       	mov    0x40(%rsp),%r12
    3aff:	4c 89 e7             	mov    %r12,%rdi
    3b02:	e8 69 92 00 00       	callq  cd70 <vector_getSize>
    3b07:	48 85 c0             	test   %rax,%rax
    3b0a:	0f 8e e0 fe ff ff    	jle    39f0 <data_generate+0x220>
    3b10:	4c 89 6c 24 68       	mov    %r13,0x68(%rsp)
    3b15:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    3b1a:	4c 89 7c 24 70       	mov    %r15,0x70(%rsp)
    3b1f:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
    3b24:	49 89 c7             	mov    %rax,%r15
    3b27:	4c 89 74 24 38       	mov    %r14,0x38(%rsp)
    3b2c:	4c 8b 74 24 18       	mov    0x18(%rsp),%r14
    3b31:	48 89 6c 24 78       	mov    %rbp,0x78(%rsp)
    3b36:	eb 09                	jmp    3b41 <data_generate+0x371>
    3b38:	48 83 c3 01          	add    $0x1,%rbx
    3b3c:	49 39 df             	cmp    %rbx,%r15
    3b3f:	74 3c                	je     3b7d <data_generate+0x3ad>
    3b41:	4c 89 e7             	mov    %r12,%rdi
    3b44:	e8 f7 91 00 00       	callq  cd40 <vector_popBack>
    3b49:	4c 89 ef             	mov    %r13,%rdi
    3b4c:	48 89 c6             	mov    %rax,%rsi
    3b4f:	48 89 c5             	mov    %rax,%rbp
    3b52:	e8 d9 66 00 00       	callq  a230 <bitmap_isSet>
    3b57:	48 85 c0             	test   %rax,%rax
    3b5a:	75 dc                	jne    3b38 <data_generate+0x368>
    3b5c:	48 89 ee             	mov    %rbp,%rsi
    3b5f:	4c 89 ef             	mov    %r13,%rdi
    3b62:	48 83 c3 01          	add    $0x1,%rbx
    3b66:	e8 15 66 00 00       	callq  a180 <bitmap_set>
    3b6b:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    3b70:	4a 89 2c f0          	mov    %rbp,(%rax,%r14,8)
    3b74:	49 83 c6 01          	add    $0x1,%r14
    3b78:	49 39 df             	cmp    %rbx,%r15
    3b7b:	75 c4                	jne    3b41 <data_generate+0x371>
    3b7d:	4c 8b 6c 24 68       	mov    0x68(%rsp),%r13
    3b82:	4c 8b 7c 24 70       	mov    0x70(%rsp),%r15
    3b87:	4c 89 74 24 18       	mov    %r14,0x18(%rsp)
    3b8c:	48 8b 6c 24 78       	mov    0x78(%rsp),%rbp
    3b91:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
    3b96:	e9 55 fe ff ff       	jmpq   39f0 <data_generate+0x220>
    3b9b:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    3ba0:	48 39 4c 24 18       	cmp    %rcx,0x18(%rsp)
    3ba5:	0f 85 52 03 00 00    	jne    3efd <data_generate+0x72d>
    3bab:	48 8b 4c 24 50       	mov    0x50(%rsp),%rcx
    3bb0:	48 8b 41 10          	mov    0x10(%rcx),%rax
    3bb4:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    3bb8:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    3bbd:	48 85 c9             	test   %rcx,%rcx
    3bc0:	0f 8e 2e 01 00 00    	jle    3cf4 <data_generate+0x524>
    3bc6:	48 0f af 4c 24 18    	imul   0x18(%rsp),%rcx
    3bcc:	4c 89 6c 24 70       	mov    %r13,0x70(%rsp)
    3bd1:	49 89 c6             	mov    %rax,%r14
    3bd4:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    3bdb:	00 00 
    3bdd:	48 89 4c 24 68       	mov    %rcx,0x68(%rsp)
    3be2:	45 31 ed             	xor    %r13d,%r13d
    3be5:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    3beb:	48 8d ac 24 80 00 00 	lea    0x80(%rsp),%rbp
    3bf2:	00 
    3bf3:	0f 84 c9 00 00 00    	je     3cc2 <data_generate+0x4f2>
    3bf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3c00:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    3c05:	48 8b 3c 24          	mov    (%rsp),%rdi
    3c09:	45 31 e4             	xor    %r12d,%r12d
    3c0c:	4e 8b 3c e8          	mov    (%rax,%r13,8),%r15
    3c10:	4c 89 fe             	mov    %r15,%rsi
    3c13:	e8 28 4c 00 00       	callq  8840 <net_getParentIdListPtr>
    3c18:	48 89 ef             	mov    %rbp,%rdi
    3c1b:	48 89 c6             	mov    %rax,%rsi
    3c1e:	48 89 c3             	mov    %rax,%rbx
    3c21:	e8 da 68 00 00       	callq  a500 <list_iter_reset>
    3c26:	eb 26                	jmp    3c4e <data_generate+0x47e>
    3c28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3c2f:	00 
    3c30:	48 89 de             	mov    %rbx,%rsi
    3c33:	48 89 ef             	mov    %rbp,%rdi
    3c36:	e8 35 69 00 00       	callq  a570 <list_iter_next>
    3c3b:	49 0f be 04 06       	movsbq (%r14,%rax,1),%rax
    3c40:	48 83 f8 02          	cmp    $0x2,%rax
    3c44:	0f 84 37 01 00 00    	je     3d81 <data_generate+0x5b1>
    3c4a:	4e 8d 24 60          	lea    (%rax,%r12,2),%r12
    3c4e:	48 89 de             	mov    %rbx,%rsi
    3c51:	48 89 ef             	mov    %rbp,%rdi
    3c54:	e8 c7 68 00 00       	callq  a520 <list_iter_hasNext>
    3c59:	48 85 c0             	test   %rax,%rax
    3c5c:	75 d2                	jne    3c30 <data_generate+0x460>
    3c5e:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    3c63:	e8 f8 85 00 00       	callq  c260 <random_generate>
    3c68:	48 89 c2             	mov    %rax,%rdx
    3c6b:	48 89 c1             	mov    %rax,%rcx
    3c6e:	48 b8 c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rax
    3c75:	c2 f5 28 
    3c78:	48 c1 ea 02          	shr    $0x2,%rdx
    3c7c:	48 f7 e2             	mul    %rdx
    3c7f:	48 89 d0             	mov    %rdx,%rax
    3c82:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    3c86:	48 c1 e8 02          	shr    $0x2,%rax
    3c8a:	48 01 c2             	add    %rax,%rdx
    3c8d:	48 8d 04 92          	lea    (%rdx,%rdx,4),%rax
    3c91:	48 c1 e0 02          	shl    $0x2,%rax
    3c95:	48 29 c1             	sub    %rax,%rcx
    3c98:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3c9d:	4a 8b 04 f8          	mov    (%rax,%r15,8),%rax
    3ca1:	4a 3b 0c e0          	cmp    (%rax,%r12,8),%rcx
    3ca5:	43 0f 9c 04 3e       	setl   (%r14,%r15,1)
    3caa:	49 83 c5 01          	add    $0x1,%r13
    3cae:	4c 39 6c 24 18       	cmp    %r13,0x18(%rsp)
    3cb3:	0f 85 47 ff ff ff    	jne    3c00 <data_generate+0x430>
    3cb9:	48 8b 44 24 50       	mov    0x50(%rsp),%rax
    3cbe:	48 8b 40 10          	mov    0x10(%rax),%rax
    3cc2:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    3cc7:	4c 03 74 24 30       	add    0x30(%rsp),%r14
    3ccc:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
    3cd0:	49 39 d6             	cmp    %rdx,%r14
    3cd3:	0f 87 43 02 00 00    	ja     3f1c <data_generate+0x74c>
    3cd9:	48 83 44 24 10 01    	addq   $0x1,0x10(%rsp)
    3cdf:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    3ce4:	48 39 4c 24 38       	cmp    %rcx,0x38(%rsp)
    3ce9:	0f 85 f3 fe ff ff    	jne    3be2 <data_generate+0x412>
    3cef:	4c 8b 6c 24 70       	mov    0x70(%rsp),%r13
    3cf4:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    3cf9:	e8 42 64 00 00       	callq  a140 <bitmap_free>
    3cfe:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    3d03:	e8 38 64 00 00       	callq  a140 <bitmap_free>
    3d08:	48 8b 7c 24 40       	mov    0x40(%rsp),%rdi
    3d0d:	e8 be 8d 00 00       	callq  cad0 <vector_free>
    3d12:	4c 89 ef             	mov    %r13,%rdi
    3d15:	e8 86 78 00 00       	callq  b5a0 <queue_free>
    3d1a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    3d1f:	e8 ac e5 ff ff       	callq  22d0 <free@plt>
    3d24:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    3d29:	48 8b 5c 24 58       	mov    0x58(%rsp),%rbx
    3d2e:	48 01 c3             	add    %rax,%rbx
    3d31:	48 83 7c 24 30 00    	cmpq   $0x0,0x30(%rsp)
    3d37:	48 89 c5             	mov    %rax,%rbp
    3d3a:	74 12                	je     3d4e <data_generate+0x57e>
    3d3c:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    3d40:	48 83 c5 08          	add    $0x8,%rbp
    3d44:	e8 87 e5 ff ff       	callq  22d0 <free@plt>
    3d49:	48 39 dd             	cmp    %rbx,%rbp
    3d4c:	75 ee                	jne    3d3c <data_generate+0x56c>
    3d4e:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    3d53:	e8 78 e5 ff ff       	callq  22d0 <free@plt>
    3d58:	48 8b 84 24 88 00 00 	mov    0x88(%rsp),%rax
    3d5f:	00 
    3d60:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    3d67:	00 00 
    3d69:	75 35                	jne    3da0 <data_generate+0x5d0>
    3d6b:	48 8b 04 24          	mov    (%rsp),%rax
    3d6f:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    3d76:	5b                   	pop    %rbx
    3d77:	5d                   	pop    %rbp
    3d78:	41 5c                	pop    %r12
    3d7a:	41 5d                	pop    %r13
    3d7c:	41 5e                	pop    %r14
    3d7e:	41 5f                	pop    %r15
    3d80:	c3                   	retq   
    3d81:	48 8d 0d d0 59 01 00 	lea    0x159d0(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3d88:	ba 05 01 00 00       	mov    $0x105,%edx
    3d8d:	48 8d 35 5c 58 01 00 	lea    0x1585c(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3d94:	48 8d 3d d0 58 01 00 	lea    0x158d0(%rip),%rdi        # 1966b <__PRETTY_FUNCTION__.4821+0xaf>
    3d9b:	e8 00 e6 ff ff       	callq  23a0 <__assert_fail@plt>
    3da0:	e8 bb e5 ff ff       	callq  2360 <__stack_chk_fail@plt>
    3da5:	48 8d 0d ac 59 01 00 	lea    0x159ac(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3dac:	ba c0 00 00 00       	mov    $0xc0,%edx
    3db1:	48 8d 35 38 58 01 00 	lea    0x15838(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3db8:	48 8d 3d 8b 58 01 00 	lea    0x1588b(%rip),%rdi        # 1964a <__PRETTY_FUNCTION__.4821+0x8e>
    3dbf:	e8 dc e5 ff ff       	callq  23a0 <__assert_fail@plt>
    3dc4:	48 8d 0d 8d 59 01 00 	lea    0x1598d(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3dcb:	ba bc 00 00 00       	mov    $0xbc,%edx
    3dd0:	48 8d 35 19 58 01 00 	lea    0x15819(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3dd7:	48 8d 3d 5b 58 01 00 	lea    0x1585b(%rip),%rdi        # 19639 <__PRETTY_FUNCTION__.4821+0x7d>
    3dde:	e8 bd e5 ff ff       	callq  23a0 <__assert_fail@plt>
    3de3:	48 8d 0d 6e 59 01 00 	lea    0x1596e(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3dea:	ba b9 00 00 00       	mov    $0xb9,%edx
    3def:	48 8d 35 fa 57 01 00 	lea    0x157fa(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3df6:	48 8d 3d 28 58 01 00 	lea    0x15828(%rip),%rdi        # 19625 <__PRETTY_FUNCTION__.4821+0x69>
    3dfd:	e8 9e e5 ff ff       	callq  23a0 <__assert_fail@plt>
    3e02:	48 8d 0d 4f 59 01 00 	lea    0x1594f(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3e09:	ba b6 00 00 00       	mov    $0xb6,%edx
    3e0e:	48 8d 35 db 57 01 00 	lea    0x157db(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3e15:	48 8d 3d fc 57 01 00 	lea    0x157fc(%rip),%rdi        # 19618 <__PRETTY_FUNCTION__.4821+0x5c>
    3e1c:	e8 7f e5 ff ff       	callq  23a0 <__assert_fail@plt>
    3e21:	48 8d 0d 30 59 01 00 	lea    0x15930(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3e28:	ba b2 00 00 00       	mov    $0xb2,%edx
    3e2d:	48 8d 35 bc 57 01 00 	lea    0x157bc(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3e34:	48 8d 3d d7 57 01 00 	lea    0x157d7(%rip),%rdi        # 19612 <__PRETTY_FUNCTION__.4821+0x56>
    3e3b:	e8 60 e5 ff ff       	callq  23a0 <__assert_fail@plt>
    3e40:	48 8d 0d 11 59 01 00 	lea    0x15911(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3e47:	ba a4 00 00 00       	mov    $0xa4,%edx
    3e4c:	48 8d 35 9d 57 01 00 	lea    0x1579d(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3e53:	48 8d 3d ad 57 01 00 	lea    0x157ad(%rip),%rdi        # 19607 <__PRETTY_FUNCTION__.4821+0x4b>
    3e5a:	e8 41 e5 ff ff       	callq  23a0 <__assert_fail@plt>
    3e5f:	48 8d 0d f2 58 01 00 	lea    0x158f2(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3e66:	ba 9e 00 00 00       	mov    $0x9e,%edx
    3e6b:	48 8d 35 7e 57 01 00 	lea    0x1577e(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3e72:	48 8d 3d 7e 57 01 00 	lea    0x1577e(%rip),%rdi        # 195f7 <__PRETTY_FUNCTION__.4821+0x3b>
    3e79:	e8 22 e5 ff ff       	callq  23a0 <__assert_fail@plt>
    3e7e:	48 8d 0d d3 58 01 00 	lea    0x158d3(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3e85:	ba 95 00 00 00       	mov    $0x95,%edx
    3e8a:	48 8d 35 5f 57 01 00 	lea    0x1575f(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3e91:	48 8d 3d 66 59 01 00 	lea    0x15966(%rip),%rdi        # 197fe <__PRETTY_FUNCTION__.4667+0xa6>
    3e98:	e8 03 e5 ff ff       	callq  23a0 <__assert_fail@plt>
    3e9d:	0f 1f 00             	nopl   (%rax)
    3ea0:	48 8d 0d b1 58 01 00 	lea    0x158b1(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3ea7:	ba d6 00 00 00       	mov    $0xd6,%edx
    3eac:	48 8d 35 3d 57 01 00 	lea    0x1573d(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3eb3:	48 8d 3d a3 52 01 00 	lea    0x152a3(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    3eba:	e8 e1 e4 ff ff       	callq  23a0 <__assert_fail@plt>
    3ebf:	48 8d 0d 92 58 01 00 	lea    0x15892(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3ec6:	ba d4 00 00 00       	mov    $0xd4,%edx
    3ecb:	48 8d 35 1e 57 01 00 	lea    0x1571e(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3ed2:	48 8d 3d 84 52 01 00 	lea    0x15284(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    3ed9:	e8 c2 e4 ff ff       	callq  23a0 <__assert_fail@plt>
    3ede:	48 8d 0d 73 58 01 00 	lea    0x15873(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3ee5:	ba d0 00 00 00       	mov    $0xd0,%edx
    3eea:	48 8d 35 ff 56 01 00 	lea    0x156ff(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3ef1:	48 8d 3d 65 52 01 00 	lea    0x15265(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    3ef8:	e8 a3 e4 ff ff       	callq  23a0 <__assert_fail@plt>
    3efd:	48 8d 0d 54 58 01 00 	lea    0x15854(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3f04:	ba f1 00 00 00       	mov    $0xf1,%edx
    3f09:	48 8d 35 e0 56 01 00 	lea    0x156e0(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3f10:	48 8d 3d 41 57 01 00 	lea    0x15741(%rip),%rdi        # 19658 <__PRETTY_FUNCTION__.4821+0x9c>
    3f17:	e8 84 e4 ff ff       	callq  23a0 <__assert_fail@plt>
    3f1c:	48 8d 0d 35 58 01 00 	lea    0x15835(%rip),%rcx        # 19758 <__PRETTY_FUNCTION__.4667>
    3f23:	ba 0d 01 00 00       	mov    $0x10d,%edx
    3f28:	48 8d 35 c1 56 01 00 	lea    0x156c1(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    3f2f:	48 8d 3d 4a 57 01 00 	lea    0x1574a(%rip),%rdi        # 19680 <__PRETTY_FUNCTION__.4821+0xc4>
    3f36:	e8 65 e4 ff ff       	callq  23a0 <__assert_fail@plt>
    3f3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003f40 <data_getRecord>:
    3f40:	f3 0f 1e fa          	endbr64 
    3f44:	48 85 f6             	test   %rsi,%rsi
    3f47:	78 17                	js     3f60 <data_getRecord+0x20>
    3f49:	48 39 77 08          	cmp    %rsi,0x8(%rdi)
    3f4d:	7e 11                	jle    3f60 <data_getRecord+0x20>
    3f4f:	48 0f af 37          	imul   (%rdi),%rsi
    3f53:	48 8b 47 10          	mov    0x10(%rdi),%rax
    3f57:	48 01 f0             	add    %rsi,%rax
    3f5a:	c3                   	retq   
    3f5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3f60:	31 c0                	xor    %eax,%eax
    3f62:	c3                   	retq   
    3f63:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    3f6a:	00 00 00 00 
    3f6e:	66 90                	xchg   %ax,%ax

0000000000003f70 <data_copy>:
    3f70:	f3 0f 1e fa          	endbr64 
    3f74:	41 54                	push   %r12
    3f76:	55                   	push   %rbp
    3f77:	48 89 f5             	mov    %rsi,%rbp
    3f7a:	53                   	push   %rbx
    3f7b:	48 8b 06             	mov    (%rsi),%rax
    3f7e:	48 89 fb             	mov    %rdi,%rbx
    3f81:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    3f85:	48 8b 13             	mov    (%rbx),%rdx
    3f88:	49 89 c4             	mov    %rax,%r12
    3f8b:	48 0f af 53 08       	imul   0x8(%rbx),%rdx
    3f90:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    3f94:	4c 0f af e1          	imul   %rcx,%r12
    3f98:	4c 39 e2             	cmp    %r12,%rdx
    3f9b:	74 26                	je     3fc3 <data_copy+0x53>
    3f9d:	e8 2e e3 ff ff       	callq  22d0 <free@plt>
    3fa2:	4c 89 e7             	mov    %r12,%rdi
    3fa5:	be 01 00 00 00       	mov    $0x1,%esi
    3faa:	e8 41 e4 ff ff       	callq  23f0 <calloc@plt>
    3faf:	48 89 43 10          	mov    %rax,0x10(%rbx)
    3fb3:	48 89 c7             	mov    %rax,%rdi
    3fb6:	48 85 c0             	test   %rax,%rax
    3fb9:	74 2f                	je     3fea <data_copy+0x7a>
    3fbb:	48 8b 45 00          	mov    0x0(%rbp),%rax
    3fbf:	48 8b 4d 08          	mov    0x8(%rbp),%rcx
    3fc3:	66 48 0f 6e c0       	movq   %rax,%xmm0
    3fc8:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    3fcd:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    3fd1:	4c 89 e2             	mov    %r12,%rdx
    3fd4:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    3fd8:	0f 11 03             	movups %xmm0,(%rbx)
    3fdb:	e8 30 e4 ff ff       	callq  2410 <memcpy@plt>
    3fe0:	b8 01 00 00 00       	mov    $0x1,%eax
    3fe5:	5b                   	pop    %rbx
    3fe6:	5d                   	pop    %rbp
    3fe7:	41 5c                	pop    %r12
    3fe9:	c3                   	retq   
    3fea:	31 c0                	xor    %eax,%eax
    3fec:	eb f7                	jmp    3fe5 <data_copy+0x75>
    3fee:	66 90                	xchg   %ax,%ax

0000000000003ff0 <data_sort>:
    3ff0:	f3 0f 1e fa          	endbr64 
    3ff4:	48 83 ec 08          	sub    $0x8,%rsp
    3ff8:	48 89 f0             	mov    %rsi,%rax
    3ffb:	48 85 f6             	test   %rsi,%rsi
    3ffe:	78 43                	js     4043 <data_sort+0x53>
    4000:	48 89 d6             	mov    %rdx,%rsi
    4003:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    4007:	48 39 c2             	cmp    %rax,%rdx
    400a:	7c 37                	jl     4043 <data_sort+0x53>
    400c:	48 85 f6             	test   %rsi,%rsi
    400f:	78 51                	js     4062 <data_sort+0x72>
    4011:	48 39 f2             	cmp    %rsi,%rdx
    4014:	7c 4c                	jl     4062 <data_sort+0x72>
    4016:	49 89 c9             	mov    %rcx,%r9
    4019:	48 8d 0c 30          	lea    (%rax,%rsi,1),%rcx
    401d:	48 39 ca             	cmp    %rcx,%rdx
    4020:	7c 5f                	jl     4081 <data_sort+0x91>
    4022:	48 8b 17             	mov    (%rdi),%rdx
    4025:	48 8d 0d a4 f6 ff ff 	lea    -0x95c(%rip),%rcx        # 36d0 <compareRecord>
    402c:	48 0f af c2          	imul   %rdx,%rax
    4030:	48 03 47 10          	add    0x10(%rdi),%rax
    4034:	49 89 d0             	mov    %rdx,%r8
    4037:	48 83 c4 08          	add    $0x8,%rsp
    403b:	48 89 c7             	mov    %rax,%rdi
    403e:	e9 0d 54 00 00       	jmpq   9450 <sort>
    4043:	48 8d 0d fe 56 01 00 	lea    0x156fe(%rip),%rcx        # 19748 <__PRETTY_FUNCTION__.4763>
    404a:	ba 6e 01 00 00       	mov    $0x16e,%edx
    404f:	48 8d 35 9a 55 01 00 	lea    0x1559a(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    4056:	48 8d 3d 5b 56 01 00 	lea    0x1565b(%rip),%rdi        # 196b8 <__PRETTY_FUNCTION__.4821+0xfc>
    405d:	e8 3e e3 ff ff       	callq  23a0 <__assert_fail@plt>
    4062:	48 8d 0d df 56 01 00 	lea    0x156df(%rip),%rcx        # 19748 <__PRETTY_FUNCTION__.4763>
    4069:	ba 6f 01 00 00       	mov    $0x16f,%edx
    406e:	48 8d 35 7b 55 01 00 	lea    0x1557b(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    4075:	48 8d 3d 6c 56 01 00 	lea    0x1566c(%rip),%rdi        # 196e8 <__PRETTY_FUNCTION__.4821+0x12c>
    407c:	e8 1f e3 ff ff       	callq  23a0 <__assert_fail@plt>
    4081:	48 8d 0d c0 56 01 00 	lea    0x156c0(%rip),%rcx        # 19748 <__PRETTY_FUNCTION__.4763>
    4088:	ba 70 01 00 00       	mov    $0x170,%edx
    408d:	48 8d 35 5c 55 01 00 	lea    0x1555c(%rip),%rsi        # 195f0 <__PRETTY_FUNCTION__.4821+0x34>
    4094:	48 8d 3d 75 56 01 00 	lea    0x15675(%rip),%rdi        # 19710 <__PRETTY_FUNCTION__.4821+0x154>
    409b:	e8 00 e3 ff ff       	callq  23a0 <__assert_fail@plt>

00000000000040a0 <data_findSplit>:
    40a0:	f3 0f 1e fa          	endbr64 
    40a4:	4c 8d 44 16 ff       	lea    -0x1(%rsi,%rdx,1),%r8
    40a9:	4c 8b 17             	mov    (%rdi),%r10
    40ac:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    40b0:	4c 39 c6             	cmp    %r8,%rsi
    40b3:	0f 8f 8f 00 00 00    	jg     4148 <data_findSplit+0xa8>
    40b9:	48 89 f0             	mov    %rsi,%rax
    40bc:	49 83 fa 01          	cmp    $0x1,%r10
    40c0:	75 3e                	jne    4100 <data_findSplit+0x60>
    40c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    40c8:	49 8d 3c 00          	lea    (%r8,%rax,1),%rdi
    40cc:	48 89 fa             	mov    %rdi,%rdx
    40cf:	48 c1 ea 3f          	shr    $0x3f,%rdx
    40d3:	48 01 fa             	add    %rdi,%rdx
    40d6:	48 d1 fa             	sar    %rdx
    40d9:	49 8d 3c 11          	lea    (%r9,%rdx,1),%rdi
    40dd:	80 3c 0f 00          	cmpb   $0x0,(%rdi,%rcx,1)
    40e1:	74 0d                	je     40f0 <data_findSplit+0x50>
    40e3:	4c 8d 42 ff          	lea    -0x1(%rdx),%r8
    40e7:	4c 39 c0             	cmp    %r8,%rax
    40ea:	7e dc                	jle    40c8 <data_findSplit+0x28>
    40ec:	48 29 f0             	sub    %rsi,%rax
    40ef:	c3                   	retq   
    40f0:	48 8d 42 01          	lea    0x1(%rdx),%rax
    40f4:	49 39 c0             	cmp    %rax,%r8
    40f7:	7d cf                	jge    40c8 <data_findSplit+0x28>
    40f9:	48 29 f0             	sub    %rsi,%rax
    40fc:	c3                   	retq   
    40fd:	0f 1f 00             	nopl   (%rax)
    4100:	49 8d 3c 09          	lea    (%r9,%rcx,1),%rdi
    4104:	0f 1f 40 00          	nopl   0x0(%rax)
    4108:	4a 8d 0c 00          	lea    (%rax,%r8,1),%rcx
    410c:	48 89 ca             	mov    %rcx,%rdx
    410f:	48 c1 ea 3f          	shr    $0x3f,%rdx
    4113:	48 01 ca             	add    %rcx,%rdx
    4116:	4c 89 d1             	mov    %r10,%rcx
    4119:	48 d1 fa             	sar    %rdx
    411c:	48 0f af ca          	imul   %rdx,%rcx
    4120:	80 3c 0f 00          	cmpb   $0x0,(%rdi,%rcx,1)
    4124:	75 12                	jne    4138 <data_findSplit+0x98>
    4126:	48 8d 42 01          	lea    0x1(%rdx),%rax
    412a:	49 39 c0             	cmp    %rax,%r8
    412d:	7d d9                	jge    4108 <data_findSplit+0x68>
    412f:	eb bb                	jmp    40ec <data_findSplit+0x4c>
    4131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4138:	4c 8d 42 ff          	lea    -0x1(%rdx),%r8
    413c:	4c 39 c0             	cmp    %r8,%rax
    413f:	7e c7                	jle    4108 <data_findSplit+0x68>
    4141:	eb a9                	jmp    40ec <data_findSplit+0x4c>
    4143:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4148:	31 c0                	xor    %eax,%eax
    414a:	c3                   	retq   
    414b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004150 <compareTask>:
    4150:	f3 0f 1e fa          	endbr64 
    4154:	f3 0f 10 4f 18       	movss  0x18(%rdi),%xmm1
    4159:	f3 0f 10 46 18       	movss  0x18(%rsi),%xmm0
    415e:	b8 01 00 00 00       	mov    $0x1,%eax
    4163:	0f 2f c1             	comiss %xmm1,%xmm0
    4166:	77 1f                	ja     4187 <compareTask+0x37>
    4168:	0f 2f c8             	comiss %xmm0,%xmm1
    416b:	77 13                	ja     4180 <compareTask+0x30>
    416d:	48 8b 47 10          	mov    0x10(%rdi),%rax
    4171:	48 2b 46 10          	sub    0x10(%rsi),%rax
    4175:	c3                   	retq   
    4176:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    417d:	00 00 00 
    4180:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    4187:	c3                   	retq   
    4188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    418f:	00 

0000000000004190 <compareQuery>:
    4190:	f3 0f 1e fa          	endbr64 
    4194:	48 8b 07             	mov    (%rdi),%rax
    4197:	48 8b 16             	mov    (%rsi),%rdx
    419a:	48 8b 00             	mov    (%rax),%rax
    419d:	2b 02                	sub    (%rdx),%eax
    419f:	c3                   	retq   

00000000000041a0 <createTaskList>:
    41a0:	f3 0f 1e fa          	endbr64 
    41a4:	41 57                	push   %r15
    41a6:	49 89 ff             	mov    %rdi,%r15
    41a9:	41 56                	push   %r14
    41ab:	41 55                	push   %r13
    41ad:	41 54                	push   %r12
    41af:	55                   	push   %rbp
    41b0:	53                   	push   %rbx
    41b1:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
    41b8:	48 89 bc 24 d0 00 00 	mov    %rdi,0xd0(%rsp)
    41bf:	00 
    41c0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    41c7:	00 00 
    41c9:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
    41d0:	00 
    41d1:	31 c0                	xor    %eax,%eax
    41d3:	e8 c8 92 00 00       	callq  d4a0 <stm_init_thread>
    41d8:	31 c0                	xor    %eax,%eax
    41da:	e8 e1 87 00 00       	callq  c9c0 <thread_getId>
    41df:	48 89 c5             	mov    %rax,%rbp
    41e2:	31 c0                	xor    %eax,%eax
    41e4:	e8 e7 87 00 00       	callq  c9d0 <thread_getNumThread>
    41e9:	bf 02 00 00 00       	mov    $0x2,%edi
    41ee:	48 89 c3             	mov    %rax,%rbx
    41f1:	49 8b 87 d0 00 00 00 	mov    0xd0(%r15),%rax
    41f8:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    41ff:	00 
    4200:	49 8b 07             	mov    (%r15),%rax
    4203:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
    420a:	00 
    420b:	49 8b 47 10          	mov    0x10(%r15),%rax
    420f:	48 89 84 24 00 01 00 	mov    %rax,0x100(%rsp)
    4216:	00 
    4217:	49 8b 87 90 00 00 00 	mov    0x90(%r15),%rax
    421e:	48 89 84 24 08 01 00 	mov    %rax,0x108(%rsp)
    4225:	00 
    4226:	e8 45 88 00 00       	callq  ca70 <Pvector_alloc>
    422b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    4230:	48 85 c0             	test   %rax,%rax
    4233:	0f 84 e6 08 00 00    	je     4b1f <createTaskList+0x97f>
    4239:	48 89 c7             	mov    %rax,%rdi
    423c:	48 8d b4 24 30 01 00 	lea    0x130(%rsp),%rsi
    4243:	00 
    4244:	e8 f7 88 00 00       	callq  cb40 <vector_pushBack>
    4249:	48 85 c0             	test   %rax,%rax
    424c:	0f 84 ae 08 00 00    	je     4b00 <createTaskList+0x960>
    4252:	bf 01 00 00 00       	mov    $0x1,%edi
    4257:	e8 14 88 00 00       	callq  ca70 <Pvector_alloc>
    425c:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    4261:	48 85 c0             	test   %rax,%rax
    4264:	0f 84 77 08 00 00    	je     4ae1 <createTaskList+0x941>
    426a:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
    4271:	00 
    4272:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4276:	4c 8b 38             	mov    (%rax),%r15
    4279:	48 8b 40 08          	mov    0x8(%rax),%rax
    427d:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    4282:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    4289:	00 
    428a:	4c 89 bc 24 a0 00 00 	mov    %r15,0xa0(%rsp)
    4291:	00 
    4292:	e8 29 e1 ff ff       	callq  23c0 <log@plt>
    4297:	48 89 d8             	mov    %rbx,%rax
    429a:	48 89 e9             	mov    %rbp,%rcx
    429d:	66 0f ef ff          	pxor   %xmm7,%xmm7
    42a1:	48 c1 e8 3f          	shr    $0x3f,%rax
    42a5:	4c 89 7c 24 30       	mov    %r15,0x30(%rsp)
    42aa:	f2 0f 59 05 0e 57 01 	mulsd  0x1570e(%rip),%xmm0        # 199c0 <__PRETTY_FUNCTION__.5826+0x18>
    42b1:	00 
    42b2:	48 01 d8             	add    %rbx,%rax
    42b5:	48 d1 f8             	sar    %rax
    42b8:	4c 01 f8             	add    %r15,%rax
    42bb:	48 99                	cqto   
    42bd:	48 f7 fb             	idiv   %rbx
    42c0:	f2 0f 5a f8          	cvtsd2ss %xmm0,%xmm7
    42c4:	f3 0f 11 bc 24 1c 01 	movss  %xmm7,0x11c(%rsp)
    42cb:	00 00 
    42cd:	ba 01 00 00 00       	mov    $0x1,%edx
    42d2:	48 85 c0             	test   %rax,%rax
    42d5:	48 0f 4e c2          	cmovle %rdx,%rax
    42d9:	48 83 eb 01          	sub    $0x1,%rbx
    42dd:	48 0f af c8          	imul   %rax,%rcx
    42e1:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    42e6:	48 39 dd             	cmp    %rbx,%rbp
    42e9:	74 0f                	je     42fa <createTaskList+0x15a>
    42eb:	48 01 c8             	add    %rcx,%rax
    42ee:	4c 39 f8             	cmp    %r15,%rax
    42f1:	49 0f 4f c7          	cmovg  %r15,%rax
    42f5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    42fa:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    42ff:	66 0f ef ff          	pxor   %xmm7,%xmm7
    4303:	48 3b 5c 24 30       	cmp    0x30(%rsp),%rbx
    4308:	f3 0f 11 7c 24 14    	movss  %xmm7,0x14(%rsp)
    430e:	48 89 9c 24 c8 00 00 	mov    %rbx,0xc8(%rsp)
    4315:	00 
    4316:	0f 8d 9c 01 00 00    	jge    44b8 <createTaskList+0x318>
    431c:	48 8b ac 24 f8 00 00 	mov    0xf8(%rsp),%rbp
    4323:	00 
    4324:	4c 8b ac 24 00 01 00 	mov    0x100(%rsp),%r13
    432b:	00 
    432c:	4c 8b 64 24 20       	mov    0x20(%rsp),%r12
    4331:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    4336:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    433d:	00 00 00 
    4340:	4c 89 e6             	mov    %r12,%rsi
    4343:	48 89 ef             	mov    %rbp,%rdi
    4346:	48 89 9c 24 30 01 00 	mov    %rbx,0x130(%rsp)
    434d:	00 
    434e:	48 c7 84 24 38 01 00 	movq   $0x0,0x138(%rsp)
    4355:	00 00 00 00 00 
    435a:	e8 01 f3 ff ff       	callq  3660 <adtree_getCount>
    435f:	c7 44 24 38 00 00 00 	movl   $0x0,0x38(%rsp)
    4366:	00 
    4367:	49 89 c6             	mov    %rax,%r14
    436a:	48 85 c0             	test   %rax,%rax
    436d:	0f 84 84 00 00 00    	je     43f7 <createTaskList+0x257>
    4373:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4377:	66 0f ef c0          	pxor   %xmm0,%xmm0
    437b:	4c 89 fe             	mov    %r15,%rsi
    437e:	48 89 ef             	mov    %rbp,%rdi
    4381:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    4386:	f2 48 0f 2a 45 08    	cvtsi2sdq 0x8(%rbp),%xmm0
    438c:	f2 0f 11 8c 24 d8 00 	movsd  %xmm1,0xd8(%rsp)
    4393:	00 00 
    4395:	66 0f 28 f9          	movapd %xmm1,%xmm7
    4399:	f2 0f 5e f8          	divsd  %xmm0,%xmm7
    439d:	f2 0f 11 bc 24 e0 00 	movsd  %xmm7,0xe0(%rsp)
    43a4:	00 00 
    43a6:	e8 b5 f2 ff ff       	callq  3660 <adtree_getCount>
    43ab:	f2 0f 10 8c 24 d8 00 	movsd  0xd8(%rsp),%xmm1
    43b2:	00 00 
    43b4:	49 39 c6             	cmp    %rax,%r14
    43b7:	0f 8f a3 06 00 00    	jg     4a60 <createTaskList+0x8c0>
    43bd:	48 85 c0             	test   %rax,%rax
    43c0:	0f 8e 72 06 00 00    	jle    4a38 <createTaskList+0x898>
    43c6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    43ca:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    43cf:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    43d3:	66 0f 28 c1          	movapd %xmm1,%xmm0
    43d7:	e8 e4 df ff ff       	callq  23c0 <log@plt>
    43dc:	66 0f ef e4          	pxor   %xmm4,%xmm4
    43e0:	f2 0f 59 84 24 e0 00 	mulsd  0xe0(%rsp),%xmm0
    43e7:	00 00 
    43e9:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    43ed:	f3 0f 58 c4          	addss  %xmm4,%xmm0
    43f1:	f3 0f 11 44 24 38    	movss  %xmm0,0x38(%rsp)
    43f7:	4c 89 e6             	mov    %r12,%rsi
    43fa:	48 89 ef             	mov    %rbp,%rdi
    43fd:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
    4404:	00 01 00 00 00 
    4409:	e8 52 f2 ff ff       	callq  3660 <adtree_getCount>
    440e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4412:	49 89 c6             	mov    %rax,%r14
    4415:	48 85 c0             	test   %rax,%rax
    4418:	74 76                	je     4490 <createTaskList+0x2f0>
    441a:	66 0f ef c9          	pxor   %xmm1,%xmm1
    441e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4422:	4c 89 fe             	mov    %r15,%rsi
    4425:	48 89 ef             	mov    %rbp,%rdi
    4428:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    442d:	f2 48 0f 2a 45 08    	cvtsi2sdq 0x8(%rbp),%xmm0
    4433:	f2 0f 11 8c 24 f0 00 	movsd  %xmm1,0xf0(%rsp)
    443a:	00 00 
    443c:	66 0f 28 e9          	movapd %xmm1,%xmm5
    4440:	f2 0f 5e e8          	divsd  %xmm0,%xmm5
    4444:	f2 0f 11 ac 24 e8 00 	movsd  %xmm5,0xe8(%rsp)
    444b:	00 00 
    444d:	e8 0e f2 ff ff       	callq  3660 <adtree_getCount>
    4452:	49 39 c6             	cmp    %rax,%r14
    4455:	0f 8f 05 06 00 00    	jg     4a60 <createTaskList+0x8c0>
    445b:	48 85 c0             	test   %rax,%rax
    445e:	0f 8e d4 05 00 00    	jle    4a38 <createTaskList+0x898>
    4464:	f2 0f 10 8c 24 f0 00 	movsd  0xf0(%rsp),%xmm1
    446b:	00 00 
    446d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4471:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    4476:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    447a:	66 0f 28 c1          	movapd %xmm1,%xmm0
    447e:	e8 3d df ff ff       	callq  23c0 <log@plt>
    4483:	f2 0f 59 84 24 e8 00 	mulsd  0xe8(%rsp),%xmm0
    448a:	00 00 
    448c:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    4490:	f3 0f 58 44 24 38    	addss  0x38(%rsp),%xmm0
    4496:	f3 41 0f 11 44 9d 00 	movss  %xmm0,0x0(%r13,%rbx,4)
    449d:	f3 0f 58 44 24 14    	addss  0x14(%rsp),%xmm0
    44a3:	48 83 c3 01          	add    $0x1,%rbx
    44a7:	f3 0f 11 44 24 14    	movss  %xmm0,0x14(%rsp)
    44ad:	48 3b 5c 24 30       	cmp    0x30(%rsp),%rbx
    44b2:	0f 8c 88 fe ff ff    	jl     4340 <createTaskList+0x1a0>
    44b8:	31 ff                	xor    %edi,%edi
    44ba:	e8 d1 bc 00 00       	callq  10190 <stm_start>
    44bf:	48 89 c7             	mov    %rax,%rdi
    44c2:	48 85 c0             	test   %rax,%rax
    44c5:	74 0b                	je     44d2 <createTaskList+0x332>
    44c7:	31 f6                	xor    %esi,%esi
    44c9:	e8 82 e0 ff ff       	callq  2550 <__sigsetjmp@plt>
    44ce:	f3 0f 1e fa          	endbr64 
    44d2:	48 8b ac 24 d0 00 00 	mov    0xd0(%rsp),%rbp
    44d9:	00 
    44da:	48 83 c5 50          	add    $0x50,%rbp
    44de:	48 89 ef             	mov    %rbp,%rdi
    44e1:	e8 fa ef 00 00       	callq  134e0 <stm_load_float>
    44e6:	f3 0f 58 44 24 14    	addss  0x14(%rsp),%xmm0
    44ec:	48 89 ef             	mov    %rbp,%rdi
    44ef:	e8 3c 1e 01 00       	callq  16330 <stm_store_float>
    44f4:	e8 47 a2 00 00       	callq  e740 <stm_commit>
    44f9:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    44fe:	48 8d b4 24 20 01 00 	lea    0x120(%rsp),%rsi
    4505:	00 
    4506:	e8 35 87 00 00       	callq  cc40 <Pvector_pushBack>
    450b:	48 85 c0             	test   %rax,%rax
    450e:	0f 84 8a 05 00 00    	je     4a9e <createTaskList+0x8fe>
    4514:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
    451b:	00 
    451c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4521:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    4526:	48 39 4c 24 30       	cmp    %rcx,0x30(%rsp)
    452b:	7f 43                	jg     4570 <createTaskList+0x3d0>
    452d:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    4532:	e8 b9 85 00 00       	callq  caf0 <Pvector_free>
    4537:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    453c:	e8 af 85 00 00       	callq  caf0 <Pvector_free>
    4541:	e8 3a 91 00 00       	callq  d680 <stm_exit_thread>
    4546:	48 8b 84 24 58 01 00 	mov    0x158(%rsp),%rax
    454d:	00 
    454e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4555:	00 00 
    4557:	0f 85 7f 05 00 00    	jne    4adc <createTaskList+0x93c>
    455d:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
    4564:	5b                   	pop    %rbx
    4565:	5d                   	pop    %rbp
    4566:	41 5c                	pop    %r12
    4568:	41 5d                	pop    %r13
    456a:	41 5e                	pop    %r14
    456c:	41 5f                	pop    %r15
    456e:	c3                   	retq   
    456f:	90                   	nop
    4570:	48 89 c8             	mov    %rcx,%rax
    4573:	48 89 cd             	mov    %rcx,%rbp
    4576:	49 89 cd             	mov    %rcx,%r13
    4579:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    457e:	48 89 8c 24 30 01 00 	mov    %rcx,0x130(%rsp)
    4585:	00 
    4586:	48 8b 8c 24 00 01 00 	mov    0x100(%rsp),%rcx
    458d:	00 
    458e:	48 8d b4 24 40 01 00 	lea    0x140(%rsp),%rsi
    4595:	00 
    4596:	4c 8d 24 81          	lea    (%rcx,%rax,4),%r12
    459a:	f3 41 0f 10 2c 24    	movss  (%r12),%xmm5
    45a0:	f3 0f 11 6c 24 18    	movss  %xmm5,0x18(%rsp)
    45a6:	e8 95 86 00 00       	callq  cc40 <Pvector_pushBack>
    45ab:	48 85 c0             	test   %rax,%rax
    45ae:	0f 84 09 05 00 00    	je     4abd <createTaskList+0x91d>
    45b4:	31 db                	xor    %ebx,%ebx
    45b6:	48 83 bc 24 a0 00 00 	cmpq   $0x0,0xa0(%rsp)
    45bd:	00 00 
    45bf:	0f 8e b3 03 00 00    	jle    4978 <createTaskList+0x7d8>
    45c5:	4c 89 a4 24 b0 00 00 	mov    %r12,0xb0(%rsp)
    45cc:	00 
    45cd:	4c 8b ac 24 f8 00 00 	mov    0xf8(%rsp),%r13
    45d4:	00 
    45d5:	48 89 ac 24 a8 00 00 	mov    %rbp,0xa8(%rsp)
    45dc:	00 
    45dd:	4c 8b 74 24 20       	mov    0x20(%rsp),%r14
    45e2:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    45e7:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    45ec:	e9 54 03 00 00       	jmpq   4945 <createTaskList+0x7a5>
    45f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    45f8:	48 89 da             	mov    %rbx,%rdx
    45fb:	4c 89 e0             	mov    %r12,%rax
    45fe:	4c 89 f6             	mov    %r14,%rsi
    4601:	4c 89 ef             	mov    %r13,%rdi
    4604:	48 89 94 24 40 01 00 	mov    %rdx,0x140(%rsp)
    460b:	00 
    460c:	48 89 84 24 30 01 00 	mov    %rax,0x130(%rsp)
    4613:	00 
    4614:	48 c7 84 24 38 01 00 	movq   $0x0,0x138(%rsp)
    461b:	00 00 00 00 00 
    4620:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
    4627:	00 00 00 00 00 
    462c:	48 c7 84 24 28 01 00 	movq   $0x0,0x128(%rsp)
    4633:	00 00 00 00 00 
    4638:	e8 23 f0 ff ff       	callq  3660 <adtree_getCount>
    463d:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%rsp)
    4644:	00 
    4645:	48 85 c0             	test   %rax,%rax
    4648:	0f 84 82 00 00 00    	je     46d0 <createTaskList+0x530>
    464e:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4652:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4656:	4c 89 fe             	mov    %r15,%rsi
    4659:	4c 89 ef             	mov    %r13,%rdi
    465c:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    4661:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    4666:	f2 49 0f 2a 45 08    	cvtsi2sdq 0x8(%r13),%xmm0
    466c:	66 0f 28 d1          	movapd %xmm1,%xmm2
    4670:	f2 0f 11 4c 24 60    	movsd  %xmm1,0x60(%rsp)
    4676:	f2 0f 5e d0          	divsd  %xmm0,%xmm2
    467a:	f2 0f 11 54 24 40    	movsd  %xmm2,0x40(%rsp)
    4680:	e8 db ef ff ff       	callq  3660 <adtree_getCount>
    4685:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    468a:	48 39 c2             	cmp    %rax,%rdx
    468d:	0f 8f cd 03 00 00    	jg     4a60 <createTaskList+0x8c0>
    4693:	48 85 c0             	test   %rax,%rax
    4696:	0f 8e 9c 03 00 00    	jle    4a38 <createTaskList+0x898>
    469c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    46a0:	f2 0f 10 4c 24 60    	movsd  0x60(%rsp),%xmm1
    46a6:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    46ab:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    46af:	66 0f 28 c1          	movapd %xmm1,%xmm0
    46b3:	e8 08 dd ff ff       	callq  23c0 <log@plt>
    46b8:	f2 0f 59 44 24 40    	mulsd  0x40(%rsp),%xmm0
    46be:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    46c2:	f3 0f 58 05 ee 52 01 	addss  0x152ee(%rip),%xmm0        # 199b8 <__PRETTY_FUNCTION__.5826+0x10>
    46c9:	00 
    46ca:	f3 0f 11 44 24 1c    	movss  %xmm0,0x1c(%rsp)
    46d0:	31 c0                	xor    %eax,%eax
    46d2:	49 39 dc             	cmp    %rbx,%r12
    46d5:	4c 89 f6             	mov    %r14,%rsi
    46d8:	4c 89 ef             	mov    %r13,%rdi
    46db:	48 c7 84 24 38 01 00 	movq   $0x0,0x138(%rsp)
    46e2:	00 00 00 00 00 
    46e7:	0f 9e c0             	setle  %al
    46ea:	48 c7 84 24 48 01 00 	movq   $0x1,0x148(%rsp)
    46f1:	00 01 00 00 00 
    46f6:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
    46fd:	00 
    46fe:	e8 5d ef ff ff       	callq  3660 <adtree_getCount>
    4703:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4707:	48 85 c0             	test   %rax,%rax
    470a:	74 74                	je     4780 <createTaskList+0x5e0>
    470c:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4710:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4714:	4c 89 fe             	mov    %r15,%rsi
    4717:	4c 89 ef             	mov    %r13,%rdi
    471a:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    471f:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    4724:	f2 49 0f 2a 45 08    	cvtsi2sdq 0x8(%r13),%xmm0
    472a:	66 0f 28 d9          	movapd %xmm1,%xmm3
    472e:	f2 0f 11 4c 24 70    	movsd  %xmm1,0x70(%rsp)
    4734:	f2 0f 5e d8          	divsd  %xmm0,%xmm3
    4738:	f2 0f 11 5c 24 48    	movsd  %xmm3,0x48(%rsp)
    473e:	e8 1d ef ff ff       	callq  3660 <adtree_getCount>
    4743:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    4748:	48 39 c2             	cmp    %rax,%rdx
    474b:	0f 8f 0f 03 00 00    	jg     4a60 <createTaskList+0x8c0>
    4751:	48 85 c0             	test   %rax,%rax
    4754:	0f 8e de 02 00 00    	jle    4a38 <createTaskList+0x898>
    475a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    475e:	f2 0f 10 4c 24 70    	movsd  0x70(%rsp),%xmm1
    4764:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    4769:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    476d:	66 0f 28 c1          	movapd %xmm1,%xmm0
    4771:	e8 4a dc ff ff       	callq  23c0 <log@plt>
    4776:	f2 0f 59 44 24 48    	mulsd  0x48(%rsp),%xmm0
    477c:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    4780:	f3 0f 58 44 24 1c    	addss  0x1c(%rsp),%xmm0
    4786:	31 c0                	xor    %eax,%eax
    4788:	49 39 dc             	cmp    %rbx,%r12
    478b:	4c 89 f6             	mov    %r14,%rsi
    478e:	0f 9f c0             	setg   %al
    4791:	4c 89 ef             	mov    %r13,%rdi
    4794:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
    479b:	00 01 00 00 00 
    47a0:	48 c7 84 24 48 01 00 	movq   $0x0,0x148(%rsp)
    47a7:	00 00 00 00 00 
    47ac:	f3 0f 11 44 24 3c    	movss  %xmm0,0x3c(%rsp)
    47b2:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
    47b9:	00 
    47ba:	e8 a1 ee ff ff       	callq  3660 <adtree_getCount>
    47bf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    47c3:	48 85 c0             	test   %rax,%rax
    47c6:	0f 84 80 00 00 00    	je     484c <createTaskList+0x6ac>
    47cc:	66 0f ef c9          	pxor   %xmm1,%xmm1
    47d0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    47d4:	4c 89 fe             	mov    %r15,%rsi
    47d7:	4c 89 ef             	mov    %r13,%rdi
    47da:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    47df:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    47e6:	00 
    47e7:	f2 49 0f 2a 45 08    	cvtsi2sdq 0x8(%r13),%xmm0
    47ed:	f2 0f 11 8c 24 80 00 	movsd  %xmm1,0x80(%rsp)
    47f4:	00 00 
    47f6:	66 0f 28 e1          	movapd %xmm1,%xmm4
    47fa:	f2 0f 5e e0          	divsd  %xmm0,%xmm4
    47fe:	f2 0f 11 64 24 50    	movsd  %xmm4,0x50(%rsp)
    4804:	e8 57 ee ff ff       	callq  3660 <adtree_getCount>
    4809:	48 8b 94 24 88 00 00 	mov    0x88(%rsp),%rdx
    4810:	00 
    4811:	48 39 c2             	cmp    %rax,%rdx
    4814:	0f 8f 46 02 00 00    	jg     4a60 <createTaskList+0x8c0>
    481a:	48 85 c0             	test   %rax,%rax
    481d:	0f 8e 15 02 00 00    	jle    4a38 <createTaskList+0x898>
    4823:	f2 0f 10 8c 24 80 00 	movsd  0x80(%rsp),%xmm1
    482a:	00 00 
    482c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4830:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    4835:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    4839:	66 0f 28 c1          	movapd %xmm1,%xmm0
    483d:	e8 7e db ff ff       	callq  23c0 <log@plt>
    4842:	f2 0f 59 44 24 50    	mulsd  0x50(%rsp),%xmm0
    4848:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    484c:	f3 0f 58 44 24 3c    	addss  0x3c(%rsp),%xmm0
    4852:	4c 89 f6             	mov    %r14,%rsi
    4855:	4c 89 ef             	mov    %r13,%rdi
    4858:	48 c7 84 24 38 01 00 	movq   $0x1,0x138(%rsp)
    485f:	00 01 00 00 00 
    4864:	48 c7 84 24 48 01 00 	movq   $0x1,0x148(%rsp)
    486b:	00 01 00 00 00 
    4870:	48 c7 84 24 28 01 00 	movq   $0x1,0x128(%rsp)
    4877:	00 01 00 00 00 
    487c:	f3 0f 11 84 24 18 01 	movss  %xmm0,0x118(%rsp)
    4883:	00 00 
    4885:	e8 d6 ed ff ff       	callq  3660 <adtree_getCount>
    488a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    488e:	48 85 c0             	test   %rax,%rax
    4891:	0f 84 80 00 00 00    	je     4917 <createTaskList+0x777>
    4897:	66 0f ef c9          	pxor   %xmm1,%xmm1
    489b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    489f:	4c 89 fe             	mov    %r15,%rsi
    48a2:	4c 89 ef             	mov    %r13,%rdi
    48a5:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    48aa:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    48b1:	00 
    48b2:	f2 49 0f 2a 45 08    	cvtsi2sdq 0x8(%r13),%xmm0
    48b8:	f2 0f 11 8c 24 90 00 	movsd  %xmm1,0x90(%rsp)
    48bf:	00 00 
    48c1:	66 0f 28 e9          	movapd %xmm1,%xmm5
    48c5:	f2 0f 5e e8          	divsd  %xmm0,%xmm5
    48c9:	f2 0f 11 6c 24 58    	movsd  %xmm5,0x58(%rsp)
    48cf:	e8 8c ed ff ff       	callq  3660 <adtree_getCount>
    48d4:	48 8b 94 24 98 00 00 	mov    0x98(%rsp),%rdx
    48db:	00 
    48dc:	48 39 c2             	cmp    %rax,%rdx
    48df:	0f 8f 7b 01 00 00    	jg     4a60 <createTaskList+0x8c0>
    48e5:	48 85 c0             	test   %rax,%rax
    48e8:	0f 8e 4a 01 00 00    	jle    4a38 <createTaskList+0x898>
    48ee:	f2 0f 10 8c 24 90 00 	movsd  0x90(%rsp),%xmm1
    48f5:	00 00 
    48f7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    48fb:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    4900:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    4904:	66 0f 28 c1          	movapd %xmm1,%xmm0
    4908:	e8 b3 da ff ff       	callq  23c0 <log@plt>
    490d:	f2 0f 59 44 24 58    	mulsd  0x58(%rsp),%xmm0
    4913:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    4917:	f3 0f 58 84 24 18 01 	addss  0x118(%rsp),%xmm0
    491e:	00 00 
    4920:	f3 0f 10 74 24 18    	movss  0x18(%rsp),%xmm6
    4926:	0f 2f c6             	comiss %xmm6,%xmm0
    4929:	f3 0f 5f c6          	maxss  %xmm6,%xmm0
    492d:	48 0f 47 eb          	cmova  %rbx,%rbp
    4931:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
    4937:	48 83 c3 01          	add    $0x1,%rbx
    493b:	48 39 9c 24 a0 00 00 	cmp    %rbx,0xa0(%rsp)
    4942:	00 
    4943:	7e 23                	jle    4968 <createTaskList+0x7c8>
    4945:	49 39 dc             	cmp    %rbx,%r12
    4948:	74 ed                	je     4937 <createTaskList+0x797>
    494a:	48 89 9c 24 20 01 00 	mov    %rbx,0x120(%rsp)
    4951:	00 
    4952:	0f 8c a0 fc ff ff    	jl     45f8 <createTaskList+0x458>
    4958:	4c 89 e2             	mov    %r12,%rdx
    495b:	48 89 d8             	mov    %rbx,%rax
    495e:	e9 9b fc ff ff       	jmpq   45fe <createTaskList+0x45e>
    4963:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4968:	4c 8b ac 24 a8 00 00 	mov    0xa8(%rsp),%r13
    496f:	00 
    4970:	4c 8b a4 24 b0 00 00 	mov    0xb0(%rsp),%r12
    4977:	00 
    4978:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    497d:	e8 be 83 00 00       	callq  cd40 <vector_popBack>
    4982:	48 39 6c 24 08       	cmp    %rbp,0x8(%rsp)
    4987:	0f 84 9a 00 00 00    	je     4a27 <createTaskList+0x887>
    498d:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4991:	f3 0f 10 44 24 18    	movss  0x18(%rsp),%xmm0
    4997:	49 c1 e5 05          	shl    $0x5,%r13
    499b:	31 ff                	xor    %edi,%edi
    499d:	f3 48 0f 2a 8c 24 10 	cvtsi2ssq 0x110(%rsp),%xmm1
    49a4:	01 00 00 
    49a7:	f3 0f 58 44 24 14    	addss  0x14(%rsp),%xmm0
    49ad:	4c 03 ac 24 08 01 00 	add    0x108(%rsp),%r13
    49b4:	00 
    49b5:	f3 41 0f 5c 04 24    	subss  (%r12),%xmm0
    49bb:	41 c7 45 00 00 00 00 	movl   $0x0,0x0(%r13)
    49c2:	00 
    49c3:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
    49ca:	00 
    49cb:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
    49cf:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    49d4:	f3 0f 58 84 24 1c 01 	addss  0x11c(%rsp),%xmm0
    49db:	00 00 
    49dd:	0f 16 4c 24 08       	movhps 0x8(%rsp),%xmm1
    49e2:	41 0f 11 4d 08       	movups %xmm1,0x8(%r13)
    49e7:	f3 41 0f 11 45 18    	movss  %xmm0,0x18(%r13)
    49ed:	e8 9e b7 00 00       	callq  10190 <stm_start>
    49f2:	48 89 c7             	mov    %rax,%rdi
    49f5:	48 85 c0             	test   %rax,%rax
    49f8:	74 0b                	je     4a05 <createTaskList+0x865>
    49fa:	31 f6                	xor    %esi,%esi
    49fc:	e8 4f db ff ff       	callq  2550 <__sigsetjmp@plt>
    4a01:	f3 0f 1e fa          	endbr64 
    4a05:	48 8b b4 24 b8 00 00 	mov    0xb8(%rsp),%rsi
    4a0c:	00 
    4a0d:	48 8b bc 24 c0 00 00 	mov    0xc0(%rsp),%rdi
    4a14:	00 
    4a15:	e8 e6 60 00 00       	callq  ab00 <TMlist_insert>
    4a1a:	48 89 c3             	mov    %rax,%rbx
    4a1d:	e8 1e 9d 00 00       	callq  e740 <stm_commit>
    4a22:	48 85 db             	test   %rbx,%rbx
    4a25:	74 58                	je     4a7f <createTaskList+0x8df>
    4a27:	48 83 44 24 08 01    	addq   $0x1,0x8(%rsp)
    4a2d:	e9 ef fa ff ff       	jmpq   4521 <createTaskList+0x381>
    4a32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4a38:	48 8d 0d e1 4e 01 00 	lea    0x14ee1(%rip),%rcx        # 19920 <__PRETTY_FUNCTION__.5838>
    4a3f:	ba 20 01 00 00       	mov    $0x120,%edx
    4a44:	48 8d 35 1b 4d 01 00 	lea    0x14d1b(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4a4b:	48 8d 3d 57 4d 01 00 	lea    0x14d57(%rip),%rdi        # 197a9 <__PRETTY_FUNCTION__.4667+0x51>
    4a52:	e8 49 d9 ff ff       	callq  23a0 <__assert_fail@plt>
    4a57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    4a5e:	00 00 
    4a60:	48 8d 0d b9 4e 01 00 	lea    0x14eb9(%rip),%rcx        # 19920 <__PRETTY_FUNCTION__.5838>
    4a67:	ba 1f 01 00 00       	mov    $0x11f,%edx
    4a6c:	48 8d 35 f3 4c 01 00 	lea    0x14cf3(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4a73:	48 8d 3d 1a 4d 01 00 	lea    0x14d1a(%rip),%rdi        # 19794 <__PRETTY_FUNCTION__.4667+0x3c>
    4a7a:	e8 21 d9 ff ff       	callq  23a0 <__assert_fail@plt>
    4a7f:	48 8d 0d 22 4e 01 00 	lea    0x14e22(%rip),%rcx        # 198a8 <__PRETTY_FUNCTION__.5870>
    4a86:	ba e4 01 00 00       	mov    $0x1e4,%edx
    4a8b:	48 8d 35 d4 4c 01 00 	lea    0x14cd4(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4a92:	48 8d 3d c4 46 01 00 	lea    0x146c4(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    4a99:	e8 02 d9 ff ff       	callq  23a0 <__assert_fail@plt>
    4a9e:	48 8d 0d 03 4e 01 00 	lea    0x14e03(%rip),%rcx        # 198a8 <__PRETTY_FUNCTION__.5870>
    4aa5:	ba 8e 01 00 00       	mov    $0x18e,%edx
    4aaa:	48 8d 35 b5 4c 01 00 	lea    0x14cb5(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4ab1:	48 8d 3d a5 46 01 00 	lea    0x146a5(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    4ab8:	e8 e3 d8 ff ff       	callq  23a0 <__assert_fail@plt>
    4abd:	48 8d 0d e4 4d 01 00 	lea    0x14de4(%rip),%rcx        # 198a8 <__PRETTY_FUNCTION__.5870>
    4ac4:	ba 9b 01 00 00       	mov    $0x19b,%edx
    4ac9:	48 8d 35 96 4c 01 00 	lea    0x14c96(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4ad0:	48 8d 3d 86 46 01 00 	lea    0x14686(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    4ad7:	e8 c4 d8 ff ff       	callq  23a0 <__assert_fail@plt>
    4adc:	e8 7f d8 ff ff       	callq  2360 <__stack_chk_fail@plt>
    4ae1:	48 8d 0d c0 4d 01 00 	lea    0x14dc0(%rip),%rcx        # 198a8 <__PRETTY_FUNCTION__.5870>
    4ae8:	ba 5b 01 00 00       	mov    $0x15b,%edx
    4aed:	48 8d 35 72 4c 01 00 	lea    0x14c72(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4af4:	48 8d 3d 84 4c 01 00 	lea    0x14c84(%rip),%rdi        # 1977f <__PRETTY_FUNCTION__.4667+0x27>
    4afb:	e8 a0 d8 ff ff       	callq  23a0 <__assert_fail@plt>
    4b00:	48 8d 0d a1 4d 01 00 	lea    0x14da1(%rip),%rcx        # 198a8 <__PRETTY_FUNCTION__.5870>
    4b07:	ba 57 01 00 00       	mov    $0x157,%edx
    4b0c:	48 8d 35 53 4c 01 00 	lea    0x14c53(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4b13:	48 8d 3d 43 46 01 00 	lea    0x14643(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    4b1a:	e8 81 d8 ff ff       	callq  23a0 <__assert_fail@plt>
    4b1f:	48 8d 0d 82 4d 01 00 	lea    0x14d82(%rip),%rcx        # 198a8 <__PRETTY_FUNCTION__.5870>
    4b26:	ba 55 01 00 00       	mov    $0x155,%edx
    4b2b:	48 8d 35 34 4c 01 00 	lea    0x14c34(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4b32:	48 8d 3d 37 4c 01 00 	lea    0x14c37(%rip),%rdi        # 19770 <__PRETTY_FUNCTION__.4667+0x18>
    4b39:	e8 62 d8 ff ff       	callq  23a0 <__assert_fail@plt>
    4b3e:	66 90                	xchg   %ax,%ax

0000000000004b40 <TMpopulateQueryVectors>:
    4b40:	41 57                	push   %r15
    4b42:	41 56                	push   %r14
    4b44:	49 89 ce             	mov    %rcx,%r14
    4b47:	41 55                	push   %r13
    4b49:	4d 89 c5             	mov    %r8,%r13
    4b4c:	41 54                	push   %r12
    4b4e:	49 89 fc             	mov    %rdi,%r12
    4b51:	4c 89 c7             	mov    %r8,%rdi
    4b54:	55                   	push   %rbp
    4b55:	48 89 f5             	mov    %rsi,%rbp
    4b58:	53                   	push   %rbx
    4b59:	48 89 d3             	mov    %rdx,%rbx
    4b5c:	48 83 ec 18          	sub    $0x18,%rsp
    4b60:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4b67:	00 00 
    4b69:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4b6e:	31 c0                	xor    %eax,%eax
    4b70:	49 89 e7             	mov    %rsp,%r15
    4b73:	e8 08 82 00 00       	callq  cd80 <vector_clear>
    4b78:	48 89 ee             	mov    %rbp,%rsi
    4b7b:	4c 89 e7             	mov    %r12,%rdi
    4b7e:	e8 bd 3c 00 00       	callq  8840 <net_getParentIdListPtr>
    4b83:	4c 89 ff             	mov    %r15,%rdi
    4b86:	48 89 c6             	mov    %rax,%rsi
    4b89:	49 89 c4             	mov    %rax,%r12
    4b8c:	e8 7f 59 00 00       	callq  a510 <TMlist_iter_reset>
    4b91:	eb 25                	jmp    4bb8 <TMpopulateQueryVectors+0x78>
    4b93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4b98:	4c 89 e6             	mov    %r12,%rsi
    4b9b:	4c 89 ff             	mov    %r15,%rdi
    4b9e:	e8 ed 59 00 00       	callq  a590 <TMlist_iter_next>
    4ba3:	4c 89 ef             	mov    %r13,%rdi
    4ba6:	48 c1 e0 04          	shl    $0x4,%rax
    4baa:	48 8d 34 03          	lea    (%rbx,%rax,1),%rsi
    4bae:	e8 8d 80 00 00       	callq  cc40 <Pvector_pushBack>
    4bb3:	48 85 c0             	test   %rax,%rax
    4bb6:	74 67                	je     4c1f <TMpopulateQueryVectors+0xdf>
    4bb8:	4c 89 e6             	mov    %r12,%rsi
    4bbb:	4c 89 ff             	mov    %r15,%rdi
    4bbe:	e8 7d 59 00 00       	callq  a540 <TMlist_iter_hasNext>
    4bc3:	48 85 c0             	test   %rax,%rax
    4bc6:	75 d0                	jne    4b98 <TMpopulateQueryVectors+0x58>
    4bc8:	4c 89 ee             	mov    %r13,%rsi
    4bcb:	4c 89 f7             	mov    %r14,%rdi
    4bce:	e8 5d 82 00 00       	callq  ce30 <Pvector_copy>
    4bd3:	48 85 c0             	test   %rax,%rax
    4bd6:	0f 84 86 00 00 00    	je     4c62 <TMpopulateQueryVectors+0x122>
    4bdc:	48 c1 e5 04          	shl    $0x4,%rbp
    4be0:	4c 89 f7             	mov    %r14,%rdi
    4be3:	48 8d 34 2b          	lea    (%rbx,%rbp,1),%rsi
    4be7:	e8 54 80 00 00       	callq  cc40 <Pvector_pushBack>
    4bec:	48 85 c0             	test   %rax,%rax
    4bef:	74 52                	je     4c43 <TMpopulateQueryVectors+0x103>
    4bf1:	48 8d 35 98 f5 ff ff 	lea    -0xa68(%rip),%rsi        # 4190 <compareQuery>
    4bf8:	4c 89 f7             	mov    %r14,%rdi
    4bfb:	e8 90 81 00 00       	callq  cd90 <vector_sort>
    4c00:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4c05:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4c0c:	00 00 
    4c0e:	75 2e                	jne    4c3e <TMpopulateQueryVectors+0xfe>
    4c10:	48 83 c4 18          	add    $0x18,%rsp
    4c14:	5b                   	pop    %rbx
    4c15:	5d                   	pop    %rbp
    4c16:	41 5c                	pop    %r12
    4c18:	41 5d                	pop    %r13
    4c1a:	41 5e                	pop    %r14
    4c1c:	41 5f                	pop    %r15
    4c1e:	c3                   	retq   
    4c1f:	48 8d 0d 2a 4d 01 00 	lea    0x14d2a(%rip),%rcx        # 19950 <__PRETTY_FUNCTION__.5934>
    4c26:	ba 3e 02 00 00       	mov    $0x23e,%edx
    4c2b:	48 8d 35 34 4b 01 00 	lea    0x14b34(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4c32:	48 8d 3d 24 45 01 00 	lea    0x14524(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    4c39:	e8 62 d7 ff ff       	callq  23a0 <__assert_fail@plt>
    4c3e:	e8 1d d7 ff ff       	callq  2360 <__stack_chk_fail@plt>
    4c43:	48 8d 0d 26 4d 01 00 	lea    0x14d26(%rip),%rcx        # 19970 <__PRETTY_FUNCTION__.5955>
    4c4a:	ba 6d 02 00 00       	mov    $0x26d,%edx
    4c4f:	48 8d 35 10 4b 01 00 	lea    0x14b10(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4c56:	48 8d 3d 00 45 01 00 	lea    0x14500(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    4c5d:	e8 3e d7 ff ff       	callq  23a0 <__assert_fail@plt>
    4c62:	48 8d 0d 07 4d 01 00 	lea    0x14d07(%rip),%rcx        # 19970 <__PRETTY_FUNCTION__.5955>
    4c69:	ba 6b 02 00 00       	mov    $0x26b,%edx
    4c6e:	48 8d 35 f1 4a 01 00 	lea    0x14af1(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4c75:	48 8d 3d e1 44 01 00 	lea    0x144e1(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    4c7c:	e8 1f d7 ff ff       	callq  23a0 <__assert_fail@plt>
    4c81:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4c88:	00 00 00 00 
    4c8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004c90 <computeLocalLogLikelihoodHelper.part.0>:
    4c90:	41 57                	push   %r15
    4c92:	4d 89 c7             	mov    %r8,%r15
    4c95:	41 56                	push   %r14
    4c97:	49 89 f6             	mov    %rsi,%r14
    4c9a:	48 89 fe             	mov    %rdi,%rsi
    4c9d:	41 55                	push   %r13
    4c9f:	4d 89 cd             	mov    %r9,%r13
    4ca2:	41 54                	push   %r12
    4ca4:	49 89 d4             	mov    %rdx,%r12
    4ca7:	55                   	push   %rbp
    4ca8:	48 89 fd             	mov    %rdi,%rbp
    4cab:	4c 89 cf             	mov    %r9,%rdi
    4cae:	53                   	push   %rbx
    4caf:	48 83 c5 01          	add    $0x1,%rbp
    4cb3:	48 83 ec 28          	sub    $0x28,%rsp
    4cb7:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    4cbc:	e8 4f 7e 00 00       	callq  cb10 <vector_at>
    4cc1:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    4cc6:	48 8b 18             	mov    (%rax),%rbx
    4cc9:	48 c1 e3 04          	shl    $0x4,%rbx
    4ccd:	48 01 cb             	add    %rcx,%rbx
    4cd0:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    4cd7:	00 
    4cd8:	4c 39 f5             	cmp    %r14,%rbp
    4cdb:	7d 6b                	jge    4d48 <computeLocalLogLikelihoodHelper.part.0+0xb8>
    4cdd:	4d 89 e9             	mov    %r13,%r9
    4ce0:	4d 89 f8             	mov    %r15,%r8
    4ce3:	4c 89 e2             	mov    %r12,%rdx
    4ce6:	4c 89 f6             	mov    %r14,%rsi
    4ce9:	48 89 ef             	mov    %rbp,%rdi
    4cec:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    4cf1:	e8 9a ff ff ff       	callq  4c90 <computeLocalLogLikelihoodHelper.part.0>
    4cf6:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    4cfb:	4d 89 e9             	mov    %r13,%r9
    4cfe:	4d 89 f8             	mov    %r15,%r8
    4d01:	f3 0f 58 05 af 4c 01 	addss  0x14caf(%rip),%xmm0        # 199b8 <__PRETTY_FUNCTION__.5826+0x10>
    4d08:	00 
    4d09:	4c 89 e2             	mov    %r12,%rdx
    4d0c:	4c 89 f6             	mov    %r14,%rsi
    4d0f:	48 89 ef             	mov    %rbp,%rdi
    4d12:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
    4d19:	00 
    4d1a:	f3 0f 11 44 24 08    	movss  %xmm0,0x8(%rsp)
    4d20:	e8 6b ff ff ff       	callq  4c90 <computeLocalLogLikelihoodHelper.part.0>
    4d25:	48 c7 43 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rbx)
    4d2c:	ff 
    4d2d:	f3 0f 58 44 24 08    	addss  0x8(%rsp),%xmm0
    4d33:	48 83 c4 28          	add    $0x28,%rsp
    4d37:	5b                   	pop    %rbx
    4d38:	5d                   	pop    %rbp
    4d39:	41 5c                	pop    %r12
    4d3b:	41 5d                	pop    %r13
    4d3d:	41 5e                	pop    %r14
    4d3f:	41 5f                	pop    %r15
    4d41:	c3                   	retq   
    4d42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4d48:	4c 89 fe             	mov    %r15,%rsi
    4d4b:	4c 89 e7             	mov    %r12,%rdi
    4d4e:	e8 0d e9 ff ff       	callq  3660 <adtree_getCount>
    4d53:	48 89 c5             	mov    %rax,%rbp
    4d56:	48 85 c0             	test   %rax,%rax
    4d59:	0f 85 a1 00 00 00    	jne    4e00 <computeLocalLogLikelihoodHelper.part.0+0x170>
    4d5f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4d63:	f3 0f 11 44 24 08    	movss  %xmm0,0x8(%rsp)
    4d69:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
    4d70:	00 
    4d71:	4c 89 fe             	mov    %r15,%rsi
    4d74:	4c 89 e7             	mov    %r12,%rdi
    4d77:	f3 0f 11 44 24 10    	movss  %xmm0,0x10(%rsp)
    4d7d:	e8 de e8 ff ff       	callq  3660 <adtree_getCount>
    4d82:	f3 0f 10 44 24 10    	movss  0x10(%rsp),%xmm0
    4d88:	48 89 c5             	mov    %rax,%rbp
    4d8b:	48 85 c0             	test   %rax,%rax
    4d8e:	74 95                	je     4d25 <computeLocalLogLikelihoodHelper.part.0+0x95>
    4d90:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4d94:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4d98:	4c 89 ee             	mov    %r13,%rsi
    4d9b:	4c 89 e7             	mov    %r12,%rdi
    4d9e:	f2 48 0f 2a c5       	cvtsi2sd %rbp,%xmm0
    4da3:	f2 49 0f 2a 4c 24 08 	cvtsi2sdq 0x8(%r12),%xmm1
    4daa:	66 0f 28 e0          	movapd %xmm0,%xmm4
    4dae:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    4db4:	f2 0f 5e e1          	divsd  %xmm1,%xmm4
    4db8:	f2 0f 11 64 24 10    	movsd  %xmm4,0x10(%rsp)
    4dbe:	e8 9d e8 ff ff       	callq  3660 <adtree_getCount>
    4dc3:	48 39 c5             	cmp    %rax,%rbp
    4dc6:	0f 8f aa 00 00 00    	jg     4e76 <computeLocalLogLikelihoodHelper.part.0+0x1e6>
    4dcc:	48 85 c0             	test   %rax,%rax
    4dcf:	0f 8e c0 00 00 00    	jle    4e95 <computeLocalLogLikelihoodHelper.part.0+0x205>
    4dd5:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4dd9:	f2 0f 10 44 24 18    	movsd  0x18(%rsp),%xmm0
    4ddf:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    4de4:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    4de8:	e8 d3 d5 ff ff       	callq  23c0 <log@plt>
    4ded:	f2 0f 59 44 24 10    	mulsd  0x10(%rsp),%xmm0
    4df3:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    4df7:	e9 29 ff ff ff       	jmpq   4d25 <computeLocalLogLikelihoodHelper.part.0+0x95>
    4dfc:	0f 1f 40 00          	nopl   0x0(%rax)
    4e00:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4e04:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4e08:	4c 89 ee             	mov    %r13,%rsi
    4e0b:	4c 89 e7             	mov    %r12,%rdi
    4e0e:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    4e13:	f2 49 0f 2a 4c 24 08 	cvtsi2sdq 0x8(%r12),%xmm1
    4e1a:	66 0f 28 d8          	movapd %xmm0,%xmm3
    4e1e:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    4e24:	f2 0f 5e d9          	divsd  %xmm1,%xmm3
    4e28:	f2 0f 11 5c 24 08    	movsd  %xmm3,0x8(%rsp)
    4e2e:	e8 2d e8 ff ff       	callq  3660 <adtree_getCount>
    4e33:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    4e39:	48 39 c5             	cmp    %rax,%rbp
    4e3c:	7f 38                	jg     4e76 <computeLocalLogLikelihoodHelper.part.0+0x1e6>
    4e3e:	48 85 c0             	test   %rax,%rax
    4e41:	7e 52                	jle    4e95 <computeLocalLogLikelihoodHelper.part.0+0x205>
    4e43:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4e47:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    4e4c:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    4e50:	e8 6b d5 ff ff       	callq  23c0 <log@plt>
    4e55:	f2 0f 59 44 24 08    	mulsd  0x8(%rsp),%xmm0
    4e5b:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4e5f:	f2 0f 5a c8          	cvtsd2ss %xmm0,%xmm1
    4e63:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4e67:	f3 0f 58 c8          	addss  %xmm0,%xmm1
    4e6b:	f3 0f 11 4c 24 08    	movss  %xmm1,0x8(%rsp)
    4e71:	e9 f3 fe ff ff       	jmpq   4d69 <computeLocalLogLikelihoodHelper.part.0+0xd9>
    4e76:	48 8d 0d a3 4a 01 00 	lea    0x14aa3(%rip),%rcx        # 19920 <__PRETTY_FUNCTION__.5838>
    4e7d:	ba 1f 01 00 00       	mov    $0x11f,%edx
    4e82:	48 8d 35 dd 48 01 00 	lea    0x148dd(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4e89:	48 8d 3d 04 49 01 00 	lea    0x14904(%rip),%rdi        # 19794 <__PRETTY_FUNCTION__.4667+0x3c>
    4e90:	e8 0b d5 ff ff       	callq  23a0 <__assert_fail@plt>
    4e95:	48 8d 0d 84 4a 01 00 	lea    0x14a84(%rip),%rcx        # 19920 <__PRETTY_FUNCTION__.5838>
    4e9c:	ba 20 01 00 00       	mov    $0x120,%edx
    4ea1:	48 8d 35 be 48 01 00 	lea    0x148be(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    4ea8:	48 8d 3d fa 48 01 00 	lea    0x148fa(%rip),%rdi        # 197a9 <__PRETTY_FUNCTION__.4667+0x51>
    4eaf:	e8 ec d4 ff ff       	callq  23a0 <__assert_fail@plt>
    4eb4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    4ebb:	00 00 00 00 
    4ebf:	90                   	nop

0000000000004ec0 <computeLocalLogLikelihood.isra.0>:
    4ec0:	41 57                	push   %r15
    4ec2:	41 56                	push   %r14
    4ec4:	49 89 ce             	mov    %rcx,%r14
    4ec7:	41 55                	push   %r13
    4ec9:	49 89 d5             	mov    %rdx,%r13
    4ecc:	41 54                	push   %r12
    4ece:	4d 89 c4             	mov    %r8,%r12
    4ed1:	55                   	push   %rbp
    4ed2:	48 89 f5             	mov    %rsi,%rbp
    4ed5:	53                   	push   %rbx
    4ed6:	48 89 fb             	mov    %rdi,%rbx
    4ed9:	4c 89 c7             	mov    %r8,%rdi
    4edc:	48 c1 e3 04          	shl    $0x4,%rbx
    4ee0:	4c 01 eb             	add    %r13,%rbx
    4ee3:	48 83 ec 48          	sub    $0x48,%rsp
    4ee7:	e8 84 7e 00 00       	callq  cd70 <vector_getSize>
    4eec:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    4ef3:	00 
    4ef4:	48 85 c0             	test   %rax,%rax
    4ef7:	0f 8e 13 05 00 00    	jle    5410 <computeLocalLogLikelihood.isra.0+0x550>
    4efd:	31 f6                	xor    %esi,%esi
    4eff:	4c 89 e7             	mov    %r12,%rdi
    4f02:	49 89 c7             	mov    %rax,%r15
    4f05:	e8 06 7c 00 00       	callq  cb10 <vector_at>
    4f0a:	48 8b 00             	mov    (%rax),%rax
    4f0d:	48 c1 e0 04          	shl    $0x4,%rax
    4f11:	4c 01 e8             	add    %r13,%rax
    4f14:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4f19:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4f20:	00 
    4f21:	49 83 ff 01          	cmp    $0x1,%r15
    4f25:	0f 84 cd 02 00 00    	je     51f8 <computeLocalLogLikelihood.isra.0+0x338>
    4f2b:	be 01 00 00 00       	mov    $0x1,%esi
    4f30:	4c 89 e7             	mov    %r12,%rdi
    4f33:	e8 d8 7b 00 00       	callq  cb10 <vector_at>
    4f38:	48 8b 00             	mov    (%rax),%rax
    4f3b:	48 c1 e0 04          	shl    $0x4,%rax
    4f3f:	4c 01 e8             	add    %r13,%rax
    4f42:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4f47:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4f4e:	00 
    4f4f:	49 83 ff 02          	cmp    $0x2,%r15
    4f53:	0f 84 6f 06 00 00    	je     55c8 <computeLocalLogLikelihood.isra.0+0x708>
    4f59:	4d 89 e1             	mov    %r12,%r9
    4f5c:	4d 89 f0             	mov    %r14,%r8
    4f5f:	4c 89 e9             	mov    %r13,%rcx
    4f62:	48 89 ea             	mov    %rbp,%rdx
    4f65:	4c 89 fe             	mov    %r15,%rsi
    4f68:	bf 02 00 00 00       	mov    $0x2,%edi
    4f6d:	e8 1e fd ff ff       	callq  4c90 <computeLocalLogLikelihoodHelper.part.0>
    4f72:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4f77:	4d 89 e1             	mov    %r12,%r9
    4f7a:	4d 89 f0             	mov    %r14,%r8
    4f7d:	66 0f ef db          	pxor   %xmm3,%xmm3
    4f81:	4c 89 e9             	mov    %r13,%rcx
    4f84:	48 89 ea             	mov    %rbp,%rdx
    4f87:	4c 89 fe             	mov    %r15,%rsi
    4f8a:	f3 0f 58 c3          	addss  %xmm3,%xmm0
    4f8e:	bf 02 00 00 00       	mov    $0x2,%edi
    4f93:	f3 0f 11 1c 24       	movss  %xmm3,(%rsp)
    4f98:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    4f9f:	00 
    4fa0:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
    4fa6:	e8 e5 fc ff ff       	callq  4c90 <computeLocalLogLikelihoodHelper.part.0>
    4fab:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    4fb0:	be 01 00 00 00       	mov    $0x1,%esi
    4fb5:	4c 89 e7             	mov    %r12,%rdi
    4fb8:	f3 0f 58 44 24 18    	addss  0x18(%rsp),%xmm0
    4fbe:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    4fc3:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    4fca:	ff 
    4fcb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4fd0:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    4fd7:	00 
    4fd8:	f3 0f 11 44 24 20    	movss  %xmm0,0x20(%rsp)
    4fde:	e8 2d 7b 00 00       	callq  cb10 <vector_at>
    4fe3:	4d 89 e1             	mov    %r12,%r9
    4fe6:	4d 89 f0             	mov    %r14,%r8
    4fe9:	4c 89 e9             	mov    %r13,%rcx
    4fec:	48 8b 00             	mov    (%rax),%rax
    4fef:	48 89 ea             	mov    %rbp,%rdx
    4ff2:	4c 89 fe             	mov    %r15,%rsi
    4ff5:	bf 02 00 00 00       	mov    $0x2,%edi
    4ffa:	48 c1 e0 04          	shl    $0x4,%rax
    4ffe:	4c 01 e8             	add    %r13,%rax
    5001:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5008:	00 
    5009:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    500e:	e8 7d fc ff ff       	callq  4c90 <computeLocalLogLikelihoodHelper.part.0>
    5013:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    5018:	4d 89 e1             	mov    %r12,%r9
    501b:	4d 89 f0             	mov    %r14,%r8
    501e:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    5023:	4c 89 e9             	mov    %r13,%rcx
    5026:	48 89 ea             	mov    %rbp,%rdx
    5029:	4c 89 fe             	mov    %r15,%rsi
    502c:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    5033:	00 
    5034:	bf 02 00 00 00       	mov    $0x2,%edi
    5039:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
    503f:	e8 4c fc ff ff       	callq  4c90 <computeLocalLogLikelihoodHelper.part.0>
    5044:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    5049:	f3 0f 58 44 24 18    	addss  0x18(%rsp),%xmm0
    504f:	31 f6                	xor    %esi,%esi
    5051:	4c 89 e7             	mov    %r12,%rdi
    5054:	f3 0f 58 44 24 20    	addss  0x20(%rsp),%xmm0
    505a:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    505f:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    5066:	ff 
    5067:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    506c:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    5073:	ff 
    5074:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
    507b:	00 
    507c:	f3 0f 11 44 24 08    	movss  %xmm0,0x8(%rsp)
    5082:	e8 89 7a 00 00       	callq  cb10 <vector_at>
    5087:	be 01 00 00 00       	mov    $0x1,%esi
    508c:	4c 89 e7             	mov    %r12,%rdi
    508f:	48 8b 00             	mov    (%rax),%rax
    5092:	48 c1 e0 04          	shl    $0x4,%rax
    5096:	4c 01 e8             	add    %r13,%rax
    5099:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    50a0:	00 
    50a1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    50a6:	e8 65 7a 00 00       	callq  cb10 <vector_at>
    50ab:	48 8b 00             	mov    (%rax),%rax
    50ae:	48 c1 e0 04          	shl    $0x4,%rax
    50b2:	4c 01 e8             	add    %r13,%rax
    50b5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    50ba:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    50c1:	00 
    50c2:	49 83 ff 02          	cmp    $0x2,%r15
    50c6:	0f 84 b4 07 00 00    	je     5880 <computeLocalLogLikelihood.isra.0+0x9c0>
    50cc:	4d 89 e1             	mov    %r12,%r9
    50cf:	4d 89 f0             	mov    %r14,%r8
    50d2:	4c 89 e9             	mov    %r13,%rcx
    50d5:	48 89 ea             	mov    %rbp,%rdx
    50d8:	4c 89 fe             	mov    %r15,%rsi
    50db:	bf 02 00 00 00       	mov    $0x2,%edi
    50e0:	e8 ab fb ff ff       	callq  4c90 <computeLocalLogLikelihoodHelper.part.0>
    50e5:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    50ea:	4d 89 e1             	mov    %r12,%r9
    50ed:	4d 89 f0             	mov    %r14,%r8
    50f0:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    50f5:	4c 89 e9             	mov    %r13,%rcx
    50f8:	48 89 ea             	mov    %rbp,%rdx
    50fb:	4c 89 fe             	mov    %r15,%rsi
    50fe:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    5105:	00 
    5106:	bf 02 00 00 00       	mov    $0x2,%edi
    510b:	f3 0f 11 44 24 20    	movss  %xmm0,0x20(%rsp)
    5111:	e8 7a fb ff ff       	callq  4c90 <computeLocalLogLikelihoodHelper.part.0>
    5116:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    511b:	be 01 00 00 00       	mov    $0x1,%esi
    5120:	4c 89 e7             	mov    %r12,%rdi
    5123:	f3 0f 58 44 24 20    	addss  0x20(%rsp),%xmm0
    5129:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    512e:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    5135:	ff 
    5136:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    513b:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    5142:	00 
    5143:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
    5149:	e8 c2 79 00 00       	callq  cb10 <vector_at>
    514e:	4d 89 e1             	mov    %r12,%r9
    5151:	4d 89 f0             	mov    %r14,%r8
    5154:	4c 89 e9             	mov    %r13,%rcx
    5157:	48 8b 00             	mov    (%rax),%rax
    515a:	48 89 ea             	mov    %rbp,%rdx
    515d:	4c 89 fe             	mov    %r15,%rsi
    5160:	bf 02 00 00 00       	mov    $0x2,%edi
    5165:	48 c1 e0 04          	shl    $0x4,%rax
    5169:	4c 01 e8             	add    %r13,%rax
    516c:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5173:	00 
    5174:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    5179:	e8 12 fb ff ff       	callq  4c90 <computeLocalLogLikelihoodHelper.part.0>
    517e:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    5183:	4d 89 e1             	mov    %r12,%r9
    5186:	4d 89 f0             	mov    %r14,%r8
    5189:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    518e:	4c 89 e9             	mov    %r13,%rcx
    5191:	48 89 ea             	mov    %rbp,%rdx
    5194:	4c 89 fe             	mov    %r15,%rsi
    5197:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    519e:	00 
    519f:	bf 02 00 00 00       	mov    $0x2,%edi
    51a4:	f3 0f 11 44 24 28    	movss  %xmm0,0x28(%rsp)
    51aa:	e8 e1 fa ff ff       	callq  4c90 <computeLocalLogLikelihoodHelper.part.0>
    51af:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    51b4:	f3 0f 58 44 24 28    	addss  0x28(%rsp),%xmm0
    51ba:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    51c1:	ff 
    51c2:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    51c7:	f3 0f 58 44 24 18    	addss  0x18(%rsp),%xmm0
    51cd:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    51d4:	ff 
    51d5:	48 c7 43 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rbx)
    51dc:	ff 
    51dd:	f3 0f 58 44 24 08    	addss  0x8(%rsp),%xmm0
    51e3:	48 83 c4 48          	add    $0x48,%rsp
    51e7:	5b                   	pop    %rbx
    51e8:	5d                   	pop    %rbp
    51e9:	41 5c                	pop    %r12
    51eb:	41 5d                	pop    %r13
    51ed:	41 5e                	pop    %r14
    51ef:	41 5f                	pop    %r15
    51f1:	c3                   	retq   
    51f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    51f8:	4c 89 f6             	mov    %r14,%rsi
    51fb:	48 89 ef             	mov    %rbp,%rdi
    51fe:	e8 5d e4 ff ff       	callq  3660 <adtree_getCount>
    5203:	49 89 c7             	mov    %rax,%r15
    5206:	48 85 c0             	test   %rax,%rax
    5209:	0f 85 39 03 00 00    	jne    5548 <computeLocalLogLikelihood.isra.0+0x688>
    520f:	66 0f ef f6          	pxor   %xmm6,%xmm6
    5213:	f3 0f 11 34 24       	movss  %xmm6,(%rsp)
    5218:	f3 0f 11 74 24 10    	movss  %xmm6,0x10(%rsp)
    521e:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5223:	4c 89 f6             	mov    %r14,%rsi
    5226:	48 89 ef             	mov    %rbp,%rdi
    5229:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    5230:	00 
    5231:	e8 2a e4 ff ff       	callq  3660 <adtree_getCount>
    5236:	66 0f ef c0          	pxor   %xmm0,%xmm0
    523a:	49 89 c7             	mov    %rax,%r15
    523d:	48 85 c0             	test   %rax,%rax
    5240:	74 66                	je     52a8 <computeLocalLogLikelihood.isra.0+0x3e8>
    5242:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5246:	66 0f ef c9          	pxor   %xmm1,%xmm1
    524a:	4c 89 e6             	mov    %r12,%rsi
    524d:	48 89 ef             	mov    %rbp,%rdi
    5250:	f2 49 0f 2a c7       	cvtsi2sd %r15,%xmm0
    5255:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    525b:	66 0f 28 f8          	movapd %xmm0,%xmm7
    525f:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
    5265:	f2 0f 5e f9          	divsd  %xmm1,%xmm7
    5269:	f2 0f 11 7c 24 18    	movsd  %xmm7,0x18(%rsp)
    526f:	e8 ec e3 ff ff       	callq  3660 <adtree_getCount>
    5274:	49 39 c7             	cmp    %rax,%r15
    5277:	0f 8f 97 08 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    527d:	48 85 c0             	test   %rax,%rax
    5280:	0f 8e ad 08 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    5286:	66 0f ef c9          	pxor   %xmm1,%xmm1
    528a:	f2 0f 10 44 24 20    	movsd  0x20(%rsp),%xmm0
    5290:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    5295:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    5299:	e8 22 d1 ff ff       	callq  23c0 <log@plt>
    529e:	f2 0f 59 44 24 18    	mulsd  0x18(%rsp),%xmm0
    52a4:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    52a8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    52ad:	f3 0f 58 44 24 10    	addss  0x10(%rsp),%xmm0
    52b3:	31 f6                	xor    %esi,%esi
    52b5:	4c 89 e7             	mov    %r12,%rdi
    52b8:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    52bd:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    52c4:	ff 
    52c5:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
    52cc:	00 
    52cd:	f3 0f 11 44 24 08    	movss  %xmm0,0x8(%rsp)
    52d3:	e8 38 78 00 00       	callq  cb10 <vector_at>
    52d8:	4c 89 f6             	mov    %r14,%rsi
    52db:	48 89 ef             	mov    %rbp,%rdi
    52de:	48 8b 00             	mov    (%rax),%rax
    52e1:	48 c1 e0 04          	shl    $0x4,%rax
    52e5:	4c 01 e8             	add    %r13,%rax
    52e8:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    52ef:	00 
    52f0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    52f5:	e8 66 e3 ff ff       	callq  3660 <adtree_getCount>
    52fa:	f3 0f 10 2c 24       	movss  (%rsp),%xmm5
    52ff:	49 89 c5             	mov    %rax,%r13
    5302:	f3 0f 11 6c 24 18    	movss  %xmm5,0x18(%rsp)
    5308:	48 85 c0             	test   %rax,%rax
    530b:	74 71                	je     537e <computeLocalLogLikelihood.isra.0+0x4be>
    530d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5311:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5315:	4c 89 e6             	mov    %r12,%rsi
    5318:	48 89 ef             	mov    %rbp,%rdi
    531b:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
    5320:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    5326:	66 0f 28 e0          	movapd %xmm0,%xmm4
    532a:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
    5330:	f2 0f 5e e1          	divsd  %xmm1,%xmm4
    5334:	f2 0f 11 64 24 18    	movsd  %xmm4,0x18(%rsp)
    533a:	e8 21 e3 ff ff       	callq  3660 <adtree_getCount>
    533f:	49 39 c5             	cmp    %rax,%r13
    5342:	0f 8f cc 07 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    5348:	48 85 c0             	test   %rax,%rax
    534b:	0f 8e e2 07 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    5351:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5355:	f2 0f 10 44 24 20    	movsd  0x20(%rsp),%xmm0
    535b:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    5360:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    5364:	e8 57 d0 ff ff       	callq  23c0 <log@plt>
    5369:	f2 0f 59 44 24 18    	mulsd  0x18(%rsp),%xmm0
    536f:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    5373:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    5378:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
    537e:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    5383:	4c 89 f6             	mov    %r14,%rsi
    5386:	48 89 ef             	mov    %rbp,%rdi
    5389:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    5390:	00 
    5391:	e8 ca e2 ff ff       	callq  3660 <adtree_getCount>
    5396:	66 0f ef c0          	pxor   %xmm0,%xmm0
    539a:	49 89 c5             	mov    %rax,%r13
    539d:	48 85 c0             	test   %rax,%rax
    53a0:	0f 84 1c fe ff ff    	je     51c2 <computeLocalLogLikelihood.isra.0+0x302>
    53a6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    53aa:	66 0f ef c9          	pxor   %xmm1,%xmm1
    53ae:	4c 89 e6             	mov    %r12,%rsi
    53b1:	48 89 ef             	mov    %rbp,%rdi
    53b4:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
    53b9:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    53bf:	66 0f 28 d8          	movapd %xmm0,%xmm3
    53c3:	f2 0f 11 44 24 20    	movsd  %xmm0,0x20(%rsp)
    53c9:	f2 0f 5e d9          	divsd  %xmm1,%xmm3
    53cd:	f2 0f 11 1c 24       	movsd  %xmm3,(%rsp)
    53d2:	e8 89 e2 ff ff       	callq  3660 <adtree_getCount>
    53d7:	49 39 c5             	cmp    %rax,%r13
    53da:	0f 8f 34 07 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    53e0:	48 85 c0             	test   %rax,%rax
    53e3:	0f 8e 4a 07 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    53e9:	66 0f ef c9          	pxor   %xmm1,%xmm1
    53ed:	f2 0f 10 44 24 20    	movsd  0x20(%rsp),%xmm0
    53f3:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    53f8:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    53fc:	e8 bf cf ff ff       	callq  23c0 <log@plt>
    5401:	f2 0f 59 04 24       	mulsd  (%rsp),%xmm0
    5406:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    540a:	e9 b3 fd ff ff       	jmpq   51c2 <computeLocalLogLikelihood.isra.0+0x302>
    540f:	90                   	nop
    5410:	4c 89 f6             	mov    %r14,%rsi
    5413:	48 89 ef             	mov    %rbp,%rdi
    5416:	e8 45 e2 ff ff       	callq  3660 <adtree_getCount>
    541b:	49 89 c5             	mov    %rax,%r13
    541e:	48 85 c0             	test   %rax,%rax
    5421:	0f 85 a1 00 00 00    	jne    54c8 <computeLocalLogLikelihood.isra.0+0x608>
    5427:	66 0f ef ff          	pxor   %xmm7,%xmm7
    542b:	f3 0f 11 3c 24       	movss  %xmm7,(%rsp)
    5430:	f3 0f 11 7c 24 08    	movss  %xmm7,0x8(%rsp)
    5436:	48 c7 43 08 01 00 00 	movq   $0x1,0x8(%rbx)
    543d:	00 
    543e:	4c 89 f6             	mov    %r14,%rsi
    5441:	48 89 ef             	mov    %rbp,%rdi
    5444:	e8 17 e2 ff ff       	callq  3660 <adtree_getCount>
    5449:	66 0f ef c0          	pxor   %xmm0,%xmm0
    544d:	49 89 c5             	mov    %rax,%r13
    5450:	48 85 c0             	test   %rax,%rax
    5453:	0f 84 7c fd ff ff    	je     51d5 <computeLocalLogLikelihood.isra.0+0x315>
    5459:	66 0f ef c0          	pxor   %xmm0,%xmm0
    545d:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5461:	4c 89 e6             	mov    %r12,%rsi
    5464:	48 89 ef             	mov    %rbp,%rdi
    5467:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
    546c:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    5472:	66 0f 28 f0          	movapd %xmm0,%xmm6
    5476:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    547c:	f2 0f 5e f1          	divsd  %xmm1,%xmm6
    5480:	f2 0f 11 34 24       	movsd  %xmm6,(%rsp)
    5485:	e8 d6 e1 ff ff       	callq  3660 <adtree_getCount>
    548a:	49 39 c5             	cmp    %rax,%r13
    548d:	0f 8f 81 06 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    5493:	48 85 c0             	test   %rax,%rax
    5496:	0f 8e 97 06 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    549c:	66 0f ef c9          	pxor   %xmm1,%xmm1
    54a0:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    54a6:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    54ab:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    54af:	e8 0c cf ff ff       	callq  23c0 <log@plt>
    54b4:	f2 0f 59 04 24       	mulsd  (%rsp),%xmm0
    54b9:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    54bd:	e9 13 fd ff ff       	jmpq   51d5 <computeLocalLogLikelihood.isra.0+0x315>
    54c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    54c8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    54cc:	66 0f ef c9          	pxor   %xmm1,%xmm1
    54d0:	4c 89 e6             	mov    %r12,%rsi
    54d3:	48 89 ef             	mov    %rbp,%rdi
    54d6:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    54db:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    54e1:	66 0f 28 e0          	movapd %xmm0,%xmm4
    54e5:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    54eb:	f2 0f 5e e1          	divsd  %xmm1,%xmm4
    54ef:	f2 0f 11 24 24       	movsd  %xmm4,(%rsp)
    54f4:	e8 67 e1 ff ff       	callq  3660 <adtree_getCount>
    54f9:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    54ff:	49 39 c5             	cmp    %rax,%r13
    5502:	0f 8f 0c 06 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    5508:	48 85 c0             	test   %rax,%rax
    550b:	0f 8e 22 06 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    5511:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5515:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    551a:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    551e:	e8 9d ce ff ff       	callq  23c0 <log@plt>
    5523:	f2 0f 59 04 24       	mulsd  (%rsp),%xmm0
    5528:	66 0f ef d2          	pxor   %xmm2,%xmm2
    552c:	f3 0f 11 14 24       	movss  %xmm2,(%rsp)
    5531:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    5535:	f3 0f 58 c2          	addss  %xmm2,%xmm0
    5539:	f3 0f 11 44 24 08    	movss  %xmm0,0x8(%rsp)
    553f:	e9 f2 fe ff ff       	jmpq   5436 <computeLocalLogLikelihood.isra.0+0x576>
    5544:	0f 1f 40 00          	nopl   0x0(%rax)
    5548:	66 0f ef c0          	pxor   %xmm0,%xmm0
    554c:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5550:	4c 89 e6             	mov    %r12,%rsi
    5553:	48 89 ef             	mov    %rbp,%rdi
    5556:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    555b:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    5561:	66 0f 28 d0          	movapd %xmm0,%xmm2
    5565:	f2 0f 11 44 24 10    	movsd  %xmm0,0x10(%rsp)
    556b:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
    556f:	f2 0f 11 14 24       	movsd  %xmm2,(%rsp)
    5574:	e8 e7 e0 ff ff       	callq  3660 <adtree_getCount>
    5579:	49 39 c7             	cmp    %rax,%r15
    557c:	0f 8f 92 05 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    5582:	48 85 c0             	test   %rax,%rax
    5585:	0f 8e a8 05 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    558b:	66 0f ef c9          	pxor   %xmm1,%xmm1
    558f:	f2 0f 10 44 24 10    	movsd  0x10(%rsp),%xmm0
    5595:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    559a:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    559e:	e8 1d ce ff ff       	callq  23c0 <log@plt>
    55a3:	f2 0f 59 04 24       	mulsd  (%rsp),%xmm0
    55a8:	66 0f ef ed          	pxor   %xmm5,%xmm5
    55ac:	f3 0f 11 2c 24       	movss  %xmm5,(%rsp)
    55b1:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    55b5:	f3 0f 58 c5          	addss  %xmm5,%xmm0
    55b9:	f3 0f 11 44 24 10    	movss  %xmm0,0x10(%rsp)
    55bf:	e9 5a fc ff ff       	jmpq   521e <computeLocalLogLikelihood.isra.0+0x35e>
    55c4:	0f 1f 40 00          	nopl   0x0(%rax)
    55c8:	4c 89 f6             	mov    %r14,%rsi
    55cb:	48 89 ef             	mov    %rbp,%rdi
    55ce:	e8 8d e0 ff ff       	callq  3660 <adtree_getCount>
    55d3:	48 85 c0             	test   %rax,%rax
    55d6:	0f 84 24 05 00 00    	je     5b00 <computeLocalLogLikelihood.isra.0+0xc40>
    55dc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    55e0:	66 0f ef c9          	pxor   %xmm1,%xmm1
    55e4:	4c 89 e6             	mov    %r12,%rsi
    55e7:	48 89 ef             	mov    %rbp,%rdi
    55ea:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    55ef:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    55f4:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    55fa:	66 0f 28 e0          	movapd %xmm0,%xmm4
    55fe:	f2 0f 11 44 24 18    	movsd  %xmm0,0x18(%rsp)
    5604:	f2 0f 5e e1          	divsd  %xmm1,%xmm4
    5608:	f2 0f 11 24 24       	movsd  %xmm4,(%rsp)
    560d:	e8 4e e0 ff ff       	callq  3660 <adtree_getCount>
    5612:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    5617:	48 39 c2             	cmp    %rax,%rdx
    561a:	0f 8f f4 04 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    5620:	48 85 c0             	test   %rax,%rax
    5623:	0f 8e 0a 05 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    5629:	66 0f ef c9          	pxor   %xmm1,%xmm1
    562d:	f2 0f 10 44 24 18    	movsd  0x18(%rsp),%xmm0
    5633:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    5638:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    563c:	e8 7f cd ff ff       	callq  23c0 <log@plt>
    5641:	f2 0f 59 04 24       	mulsd  (%rsp),%xmm0
    5646:	66 0f ef d2          	pxor   %xmm2,%xmm2
    564a:	f3 0f 11 14 24       	movss  %xmm2,(%rsp)
    564f:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    5653:	f3 0f 58 c2          	addss  %xmm2,%xmm0
    5657:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
    565d:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    5662:	4c 89 f6             	mov    %r14,%rsi
    5665:	48 89 ef             	mov    %rbp,%rdi
    5668:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    566f:	00 
    5670:	e8 eb df ff ff       	callq  3660 <adtree_getCount>
    5675:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5679:	48 89 c2             	mov    %rax,%rdx
    567c:	48 85 c0             	test   %rax,%rax
    567f:	74 70                	je     56f1 <computeLocalLogLikelihood.isra.0+0x831>
    5681:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5685:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5689:	4c 89 e6             	mov    %r12,%rsi
    568c:	48 89 ef             	mov    %rbp,%rdi
    568f:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    5694:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    5699:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    569f:	66 0f 28 d8          	movapd %xmm0,%xmm3
    56a3:	f2 0f 11 44 24 28    	movsd  %xmm0,0x28(%rsp)
    56a9:	f2 0f 5e d9          	divsd  %xmm1,%xmm3
    56ad:	f2 0f 11 5c 24 20    	movsd  %xmm3,0x20(%rsp)
    56b3:	e8 a8 df ff ff       	callq  3660 <adtree_getCount>
    56b8:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    56bd:	48 39 c2             	cmp    %rax,%rdx
    56c0:	0f 8f 4e 04 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    56c6:	48 85 c0             	test   %rax,%rax
    56c9:	0f 8e 64 04 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    56cf:	66 0f ef c9          	pxor   %xmm1,%xmm1
    56d3:	f2 0f 10 44 24 28    	movsd  0x28(%rsp),%xmm0
    56d9:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    56de:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    56e2:	e8 d9 cc ff ff       	callq  23c0 <log@plt>
    56e7:	f2 0f 59 44 24 20    	mulsd  0x20(%rsp),%xmm0
    56ed:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    56f1:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    56f6:	f3 0f 58 44 24 18    	addss  0x18(%rsp),%xmm0
    56fc:	be 01 00 00 00       	mov    $0x1,%esi
    5701:	4c 89 e7             	mov    %r12,%rdi
    5704:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    5709:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    5710:	ff 
    5711:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5716:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    571d:	00 
    571e:	f3 0f 11 44 24 20    	movss  %xmm0,0x20(%rsp)
    5724:	e8 e7 73 00 00       	callq  cb10 <vector_at>
    5729:	4c 89 f6             	mov    %r14,%rsi
    572c:	48 89 ef             	mov    %rbp,%rdi
    572f:	48 8b 00             	mov    (%rax),%rax
    5732:	48 c1 e0 04          	shl    $0x4,%rax
    5736:	4c 01 e8             	add    %r13,%rax
    5739:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5740:	00 
    5741:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5746:	e8 15 df ff ff       	callq  3660 <adtree_getCount>
    574b:	f3 0f 10 24 24       	movss  (%rsp),%xmm4
    5750:	48 89 c2             	mov    %rax,%rdx
    5753:	f3 0f 11 64 24 18    	movss  %xmm4,0x18(%rsp)
    5759:	48 85 c0             	test   %rax,%rax
    575c:	74 7b                	je     57d9 <computeLocalLogLikelihood.isra.0+0x919>
    575e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5762:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5766:	4c 89 e6             	mov    %r12,%rsi
    5769:	48 89 ef             	mov    %rbp,%rdi
    576c:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    5771:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    5776:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    577c:	66 0f 28 e8          	movapd %xmm0,%xmm5
    5780:	f2 0f 11 44 24 28    	movsd  %xmm0,0x28(%rsp)
    5786:	f2 0f 5e e9          	divsd  %xmm1,%xmm5
    578a:	f2 0f 11 6c 24 18    	movsd  %xmm5,0x18(%rsp)
    5790:	e8 cb de ff ff       	callq  3660 <adtree_getCount>
    5795:	48 8b 54 24 30       	mov    0x30(%rsp),%rdx
    579a:	48 39 c2             	cmp    %rax,%rdx
    579d:	0f 8f 71 03 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    57a3:	48 85 c0             	test   %rax,%rax
    57a6:	0f 8e 87 03 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    57ac:	66 0f ef c9          	pxor   %xmm1,%xmm1
    57b0:	f2 0f 10 44 24 28    	movsd  0x28(%rsp),%xmm0
    57b6:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    57bb:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    57bf:	e8 fc cb ff ff       	callq  23c0 <log@plt>
    57c4:	f2 0f 59 44 24 18    	mulsd  0x18(%rsp),%xmm0
    57ca:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    57ce:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    57d3:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
    57d9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    57de:	4c 89 f6             	mov    %r14,%rsi
    57e1:	48 89 ef             	mov    %rbp,%rdi
    57e4:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    57eb:	00 
    57ec:	e8 6f de ff ff       	callq  3660 <adtree_getCount>
    57f1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    57f5:	48 89 c2             	mov    %rax,%rdx
    57f8:	48 85 c0             	test   %rax,%rax
    57fb:	0f 84 43 f8 ff ff    	je     5044 <computeLocalLogLikelihood.isra.0+0x184>
    5801:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5805:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5809:	4c 89 e6             	mov    %r12,%rsi
    580c:	48 89 ef             	mov    %rbp,%rdi
    580f:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    5814:	48 89 54 24 38       	mov    %rdx,0x38(%rsp)
    5819:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    581f:	66 0f 28 f8          	movapd %xmm0,%xmm7
    5823:	f2 0f 11 44 24 30    	movsd  %xmm0,0x30(%rsp)
    5829:	f2 0f 5e f9          	divsd  %xmm1,%xmm7
    582d:	f2 0f 11 7c 24 28    	movsd  %xmm7,0x28(%rsp)
    5833:	e8 28 de ff ff       	callq  3660 <adtree_getCount>
    5838:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    583d:	48 39 c2             	cmp    %rax,%rdx
    5840:	0f 8f ce 02 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    5846:	48 85 c0             	test   %rax,%rax
    5849:	0f 8e e4 02 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    584f:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5853:	f2 0f 10 44 24 30    	movsd  0x30(%rsp),%xmm0
    5859:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    585e:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    5862:	e8 59 cb ff ff       	callq  23c0 <log@plt>
    5867:	f2 0f 59 44 24 28    	mulsd  0x28(%rsp),%xmm0
    586d:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    5871:	e9 ce f7 ff ff       	jmpq   5044 <computeLocalLogLikelihood.isra.0+0x184>
    5876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    587d:	00 00 00 
    5880:	4c 89 f6             	mov    %r14,%rsi
    5883:	48 89 ef             	mov    %rbp,%rdi
    5886:	e8 d5 dd ff ff       	callq  3660 <adtree_getCount>
    588b:	f3 0f 10 3c 24       	movss  (%rsp),%xmm7
    5890:	49 89 c7             	mov    %rax,%r15
    5893:	f3 0f 11 7c 24 20    	movss  %xmm7,0x20(%rsp)
    5899:	48 85 c0             	test   %rax,%rax
    589c:	74 71                	je     590f <computeLocalLogLikelihood.isra.0+0xa4f>
    589e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    58a2:	66 0f ef c9          	pxor   %xmm1,%xmm1
    58a6:	4c 89 e6             	mov    %r12,%rsi
    58a9:	48 89 ef             	mov    %rbp,%rdi
    58ac:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    58b1:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    58b7:	66 0f 28 e0          	movapd %xmm0,%xmm4
    58bb:	f2 0f 11 44 24 28    	movsd  %xmm0,0x28(%rsp)
    58c1:	f2 0f 5e e1          	divsd  %xmm1,%xmm4
    58c5:	f2 0f 11 64 24 20    	movsd  %xmm4,0x20(%rsp)
    58cb:	e8 90 dd ff ff       	callq  3660 <adtree_getCount>
    58d0:	49 39 c7             	cmp    %rax,%r15
    58d3:	0f 8f 3b 02 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    58d9:	48 85 c0             	test   %rax,%rax
    58dc:	0f 8e 51 02 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    58e2:	66 0f ef c9          	pxor   %xmm1,%xmm1
    58e6:	f2 0f 10 44 24 28    	movsd  0x28(%rsp),%xmm0
    58ec:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    58f1:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    58f5:	e8 c6 ca ff ff       	callq  23c0 <log@plt>
    58fa:	f2 0f 59 44 24 20    	mulsd  0x20(%rsp),%xmm0
    5900:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    5904:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    5909:	f3 0f 11 44 24 20    	movss  %xmm0,0x20(%rsp)
    590f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    5914:	4c 89 f6             	mov    %r14,%rsi
    5917:	48 89 ef             	mov    %rbp,%rdi
    591a:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    5921:	00 
    5922:	e8 39 dd ff ff       	callq  3660 <adtree_getCount>
    5927:	66 0f ef c0          	pxor   %xmm0,%xmm0
    592b:	49 89 c7             	mov    %rax,%r15
    592e:	48 85 c0             	test   %rax,%rax
    5931:	74 66                	je     5999 <computeLocalLogLikelihood.isra.0+0xad9>
    5933:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5937:	66 0f ef c9          	pxor   %xmm1,%xmm1
    593b:	4c 89 e6             	mov    %r12,%rsi
    593e:	48 89 ef             	mov    %rbp,%rdi
    5941:	f2 49 0f 2a c7       	cvtsi2sd %r15,%xmm0
    5946:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    594c:	66 0f 28 d8          	movapd %xmm0,%xmm3
    5950:	f2 0f 11 44 24 30    	movsd  %xmm0,0x30(%rsp)
    5956:	f2 0f 5e d9          	divsd  %xmm1,%xmm3
    595a:	f2 0f 11 5c 24 28    	movsd  %xmm3,0x28(%rsp)
    5960:	e8 fb dc ff ff       	callq  3660 <adtree_getCount>
    5965:	49 39 c7             	cmp    %rax,%r15
    5968:	0f 8f a6 01 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    596e:	48 85 c0             	test   %rax,%rax
    5971:	0f 8e bc 01 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    5977:	66 0f ef c9          	pxor   %xmm1,%xmm1
    597b:	f2 0f 10 44 24 30    	movsd  0x30(%rsp),%xmm0
    5981:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    5986:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    598a:	e8 31 ca ff ff       	callq  23c0 <log@plt>
    598f:	f2 0f 59 44 24 28    	mulsd  0x28(%rsp),%xmm0
    5995:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    5999:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    599e:	f3 0f 58 44 24 20    	addss  0x20(%rsp),%xmm0
    59a4:	be 01 00 00 00       	mov    $0x1,%esi
    59a9:	4c 89 e7             	mov    %r12,%rdi
    59ac:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    59b1:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    59b8:	ff 
    59b9:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    59be:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    59c5:	00 
    59c6:	f3 0f 11 44 24 18    	movss  %xmm0,0x18(%rsp)
    59cc:	e8 3f 71 00 00       	callq  cb10 <vector_at>
    59d1:	4c 89 f6             	mov    %r14,%rsi
    59d4:	48 89 ef             	mov    %rbp,%rdi
    59d7:	48 8b 00             	mov    (%rax),%rax
    59da:	48 c1 e0 04          	shl    $0x4,%rax
    59de:	4c 01 e8             	add    %r13,%rax
    59e1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    59e8:	00 
    59e9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    59ee:	e8 6d dc ff ff       	callq  3660 <adtree_getCount>
    59f3:	f3 0f 10 2c 24       	movss  (%rsp),%xmm5
    59f8:	49 89 c5             	mov    %rax,%r13
    59fb:	f3 0f 11 6c 24 28    	movss  %xmm5,0x28(%rsp)
    5a01:	48 85 c0             	test   %rax,%rax
    5a04:	74 71                	je     5a77 <computeLocalLogLikelihood.isra.0+0xbb7>
    5a06:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5a0a:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5a0e:	4c 89 e6             	mov    %r12,%rsi
    5a11:	48 89 ef             	mov    %rbp,%rdi
    5a14:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
    5a19:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    5a1f:	66 0f 28 f0          	movapd %xmm0,%xmm6
    5a23:	f2 0f 11 44 24 30    	movsd  %xmm0,0x30(%rsp)
    5a29:	f2 0f 5e f1          	divsd  %xmm1,%xmm6
    5a2d:	f2 0f 11 74 24 28    	movsd  %xmm6,0x28(%rsp)
    5a33:	e8 28 dc ff ff       	callq  3660 <adtree_getCount>
    5a38:	49 39 c5             	cmp    %rax,%r13
    5a3b:	0f 8f d3 00 00 00    	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    5a41:	48 85 c0             	test   %rax,%rax
    5a44:	0f 8e e9 00 00 00    	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    5a4a:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5a4e:	f2 0f 10 44 24 30    	movsd  0x30(%rsp),%xmm0
    5a54:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    5a59:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    5a5d:	e8 5e c9 ff ff       	callq  23c0 <log@plt>
    5a62:	f2 0f 59 44 24 28    	mulsd  0x28(%rsp),%xmm0
    5a68:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    5a6c:	f3 0f 58 04 24       	addss  (%rsp),%xmm0
    5a71:	f3 0f 11 44 24 28    	movss  %xmm0,0x28(%rsp)
    5a77:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    5a7c:	4c 89 f6             	mov    %r14,%rsi
    5a7f:	48 89 ef             	mov    %rbp,%rdi
    5a82:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
    5a89:	00 
    5a8a:	e8 d1 db ff ff       	callq  3660 <adtree_getCount>
    5a8f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5a93:	49 89 c5             	mov    %rax,%r13
    5a96:	48 85 c0             	test   %rax,%rax
    5a99:	0f 84 10 f7 ff ff    	je     51af <computeLocalLogLikelihood.isra.0+0x2ef>
    5a9f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5aa3:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5aa7:	4c 89 e6             	mov    %r12,%rsi
    5aaa:	48 89 ef             	mov    %rbp,%rdi
    5aad:	f2 49 0f 2a c5       	cvtsi2sd %r13,%xmm0
    5ab2:	f2 48 0f 2a 4d 08    	cvtsi2sdq 0x8(%rbp),%xmm1
    5ab8:	66 0f 28 d0          	movapd %xmm0,%xmm2
    5abc:	f2 0f 11 44 24 30    	movsd  %xmm0,0x30(%rsp)
    5ac2:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
    5ac6:	f2 0f 11 14 24       	movsd  %xmm2,(%rsp)
    5acb:	e8 90 db ff ff       	callq  3660 <adtree_getCount>
    5ad0:	49 39 c5             	cmp    %rax,%r13
    5ad3:	7f 3f                	jg     5b14 <computeLocalLogLikelihood.isra.0+0xc54>
    5ad5:	48 85 c0             	test   %rax,%rax
    5ad8:	7e 59                	jle    5b33 <computeLocalLogLikelihood.isra.0+0xc73>
    5ada:	66 0f ef c9          	pxor   %xmm1,%xmm1
    5ade:	f2 0f 10 44 24 30    	movsd  0x30(%rsp),%xmm0
    5ae4:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    5ae9:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    5aed:	e8 ce c8 ff ff       	callq  23c0 <log@plt>
    5af2:	f2 0f 59 04 24       	mulsd  (%rsp),%xmm0
    5af7:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    5afb:	e9 af f6 ff ff       	jmpq   51af <computeLocalLogLikelihood.isra.0+0x2ef>
    5b00:	66 0f ef f6          	pxor   %xmm6,%xmm6
    5b04:	f3 0f 11 34 24       	movss  %xmm6,(%rsp)
    5b09:	f3 0f 11 74 24 18    	movss  %xmm6,0x18(%rsp)
    5b0f:	e9 49 fb ff ff       	jmpq   565d <computeLocalLogLikelihood.isra.0+0x79d>
    5b14:	48 8d 0d 05 3e 01 00 	lea    0x13e05(%rip),%rcx        # 19920 <__PRETTY_FUNCTION__.5838>
    5b1b:	ba 1f 01 00 00       	mov    $0x11f,%edx
    5b20:	48 8d 35 3f 3c 01 00 	lea    0x13c3f(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    5b27:	48 8d 3d 66 3c 01 00 	lea    0x13c66(%rip),%rdi        # 19794 <__PRETTY_FUNCTION__.4667+0x3c>
    5b2e:	e8 6d c8 ff ff       	callq  23a0 <__assert_fail@plt>
    5b33:	48 8d 0d e6 3d 01 00 	lea    0x13de6(%rip),%rcx        # 19920 <__PRETTY_FUNCTION__.5838>
    5b3a:	ba 20 01 00 00       	mov    $0x120,%edx
    5b3f:	48 8d 35 20 3c 01 00 	lea    0x13c20(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    5b46:	48 8d 3d 5c 3c 01 00 	lea    0x13c5c(%rip),%rdi        # 197a9 <__PRETTY_FUNCTION__.4667+0x51>
    5b4d:	e8 4e c8 ff ff       	callq  23a0 <__assert_fail@plt>
    5b52:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    5b59:	00 00 00 00 
    5b5d:	0f 1f 00             	nopl   (%rax)

0000000000005b60 <learnStructure>:
    5b60:	f3 0f 1e fa          	endbr64 
    5b64:	41 57                	push   %r15
    5b66:	41 56                	push   %r14
    5b68:	41 55                	push   %r13
    5b6a:	41 54                	push   %r12
    5b6c:	55                   	push   %rbp
    5b6d:	53                   	push   %rbx
    5b6e:	48 89 fb             	mov    %rdi,%rbx
    5b71:	48 81 ec e8 01 00 00 	sub    $0x1e8,%rsp
    5b78:	48 89 bc 24 e8 00 00 	mov    %rdi,0xe8(%rsp)
    5b7f:	00 
    5b80:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5b87:	00 00 
    5b89:	48 89 84 24 d8 01 00 	mov    %rax,0x1d8(%rsp)
    5b90:	00 
    5b91:	31 c0                	xor    %eax,%eax
    5b93:	e8 08 79 00 00       	callq  d4a0 <stm_init_thread>
    5b98:	48 8b 0b             	mov    (%rbx),%rcx
    5b9b:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    5b9f:	48 8b 83 d0 00 00 00 	mov    0xd0(%rbx),%rax
    5ba6:	f3 0f 10 3d 62 a4 01 	movss  0x1a462(%rip),%xmm7        # 20010 <global_operationQualityFactor>
    5bad:	00 
    5bae:	48 89 94 24 38 01 00 	mov    %rdx,0x138(%rsp)
    5bb5:	00 
    5bb6:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    5bba:	48 8b 39             	mov    (%rcx),%rdi
    5bbd:	48 89 8c 24 40 01 00 	mov    %rcx,0x140(%rsp)
    5bc4:	00 
    5bc5:	48 89 94 24 08 01 00 	mov    %rdx,0x108(%rsp)
    5bcc:	00 
    5bcd:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    5bd1:	48 89 84 24 48 01 00 	mov    %rax,0x148(%rsp)
    5bd8:	00 
    5bd9:	48 89 94 24 60 01 00 	mov    %rdx,0x160(%rsp)
    5be0:	00 
    5be1:	f3 0f 11 bc 24 18 01 	movss  %xmm7,0x118(%rsp)
    5be8:	00 00 
    5bea:	e8 e1 44 00 00       	callq  a0d0 <Pbitmap_alloc>
    5bef:	48 89 84 24 50 01 00 	mov    %rax,0x150(%rsp)
    5bf6:	00 
    5bf7:	48 85 c0             	test   %rax,%rax
    5bfa:	0f 84 3b 19 00 00    	je     753b <learnStructure+0x19db>
    5c00:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
    5c07:	e8 94 58 00 00       	callq  b4a0 <Pqueue_alloc>
    5c0c:	48 89 84 24 58 01 00 	mov    %rax,0x158(%rsp)
    5c13:	00 
    5c14:	48 85 c0             	test   %rax,%rax
    5c17:	0f 84 ff 18 00 00    	je     751c <learnStructure+0x19bc>
    5c1d:	48 8b 84 24 40 01 00 	mov    0x140(%rsp),%rax
    5c24:	00 
    5c25:	48 8b 18             	mov    (%rax),%rbx
    5c28:	48 89 df             	mov    %rbx,%rdi
    5c2b:	48 c1 e7 04          	shl    $0x4,%rdi
    5c2f:	e8 1c c8 ff ff       	callq  2450 <malloc@plt>
    5c34:	48 89 84 24 f8 00 00 	mov    %rax,0xf8(%rsp)
    5c3b:	00 
    5c3c:	48 85 c0             	test   %rax,%rax
    5c3f:	0f 84 af 18 00 00    	je     74f4 <learnStructure+0x1994>
    5c45:	48 85 db             	test   %rbx,%rbx
    5c48:	0f 8e b7 00 00 00    	jle    5d05 <learnStructure+0x1a5>
    5c4e:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    5c52:	48 83 f8 02          	cmp    $0x2,%rax
    5c56:	0f 86 36 16 00 00    	jbe    7292 <learnStructure+0x1732>
    5c5c:	48 89 d9             	mov    %rbx,%rcx
    5c5f:	31 d2                	xor    %edx,%edx
    5c61:	66 0f 76 d2          	pcmpeqd %xmm2,%xmm2
    5c65:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
    5c6c:	00 
    5c6d:	66 0f 6f 0d 5b 3d 01 	movdqa 0x13d5b(%rip),%xmm1        # 199d0 <__PRETTY_FUNCTION__.5826+0x28>
    5c74:	00 
    5c75:	66 0f 6f 25 63 3d 01 	movdqa 0x13d63(%rip),%xmm4        # 199e0 <__PRETTY_FUNCTION__.5826+0x38>
    5c7c:	00 
    5c7d:	48 d1 e9             	shr    %rcx
    5c80:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    5c84:	48 83 c2 01          	add    $0x1,%rdx
    5c88:	66 0f d4 cc          	paddq  %xmm4,%xmm1
    5c8c:	48 83 c0 20          	add    $0x20,%rax
    5c90:	66 0f 6f d8          	movdqa %xmm0,%xmm3
    5c94:	66 0f 6d c2          	punpckhqdq %xmm2,%xmm0
    5c98:	66 0f 6c da          	punpcklqdq %xmm2,%xmm3
    5c9c:	0f 11 40 f0          	movups %xmm0,-0x10(%rax)
    5ca0:	0f 11 58 e0          	movups %xmm3,-0x20(%rax)
    5ca4:	48 39 ca             	cmp    %rcx,%rdx
    5ca7:	75 d7                	jne    5c80 <learnStructure+0x120>
    5ca9:	48 89 d8             	mov    %rbx,%rax
    5cac:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    5cb0:	f6 c3 01             	test   $0x1,%bl
    5cb3:	74 50                	je     5d05 <learnStructure+0x1a5>
    5cb5:	48 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%rdi
    5cbc:	00 
    5cbd:	48 89 c2             	mov    %rax,%rdx
    5cc0:	48 c1 e2 04          	shl    $0x4,%rdx
    5cc4:	48 8d 0c 17          	lea    (%rdi,%rdx,1),%rcx
    5cc8:	48 89 01             	mov    %rax,(%rcx)
    5ccb:	48 c7 41 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rcx)
    5cd2:	ff 
    5cd3:	48 8d 48 01          	lea    0x1(%rax),%rcx
    5cd7:	48 39 cb             	cmp    %rcx,%rbx
    5cda:	7e 29                	jle    5d05 <learnStructure+0x1a5>
    5cdc:	48 8d 74 17 10       	lea    0x10(%rdi,%rdx,1),%rsi
    5ce1:	48 83 c0 02          	add    $0x2,%rax
    5ce5:	48 89 0e             	mov    %rcx,(%rsi)
    5ce8:	48 c7 46 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rsi)
    5cef:	ff 
    5cf0:	48 39 c3             	cmp    %rax,%rbx
    5cf3:	7e 10                	jle    5d05 <learnStructure+0x1a5>
    5cf5:	48 8d 54 17 20       	lea    0x20(%rdi,%rdx,1),%rdx
    5cfa:	48 89 02             	mov    %rax,(%rdx)
    5cfd:	48 c7 42 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rdx)
    5d04:	ff 
    5d05:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5d09:	f2 48 0f 2a 84 24 08 	cvtsi2sdq 0x108(%rsp),%xmm0
    5d10:	01 00 00 
    5d13:	e8 a8 c6 ff ff       	callq  23c0 <log@plt>
    5d18:	66 0f ef e4          	pxor   %xmm4,%xmm4
    5d1c:	bf 01 00 00 00       	mov    $0x1,%edi
    5d21:	f2 0f 59 05 97 3c 01 	mulsd  0x13c97(%rip),%xmm0        # 199c0 <__PRETTY_FUNCTION__.5826+0x18>
    5d28:	00 
    5d29:	f2 0f 5a e0          	cvtsd2ss %xmm0,%xmm4
    5d2d:	f3 0f 11 a4 24 f0 00 	movss  %xmm4,0xf0(%rsp)
    5d34:	00 00 
    5d36:	e8 35 6d 00 00       	callq  ca70 <Pvector_alloc>
    5d3b:	48 89 84 24 20 01 00 	mov    %rax,0x120(%rsp)
    5d42:	00 
    5d43:	48 85 c0             	test   %rax,%rax
    5d46:	0f 84 6b 18 00 00    	je     75b7 <learnStructure+0x1a57>
    5d4c:	bf 01 00 00 00       	mov    $0x1,%edi
    5d51:	e8 1a 6d 00 00       	callq  ca70 <Pvector_alloc>
    5d56:	48 89 84 24 28 01 00 	mov    %rax,0x128(%rsp)
    5d5d:	00 
    5d5e:	48 85 c0             	test   %rax,%rax
    5d61:	0f 84 31 18 00 00    	je     7598 <learnStructure+0x1a38>
    5d67:	bf 01 00 00 00       	mov    $0x1,%edi
    5d6c:	e8 ff 6c 00 00       	callq  ca70 <Pvector_alloc>
    5d71:	48 89 84 24 70 01 00 	mov    %rax,0x170(%rsp)
    5d78:	00 
    5d79:	48 85 c0             	test   %rax,%rax
    5d7c:	0f 84 f7 17 00 00    	je     7579 <learnStructure+0x1a19>
    5d82:	bf 01 00 00 00       	mov    $0x1,%edi
    5d87:	e8 e4 6c 00 00       	callq  ca70 <Pvector_alloc>
    5d8c:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
    5d93:	00 
    5d94:	48 85 c0             	test   %rax,%rax
    5d97:	0f 84 bd 17 00 00    	je     755a <learnStructure+0x19fa>
    5d9d:	48 8b 84 24 f8 00 00 	mov    0xf8(%rsp),%rax
    5da4:	00 
    5da5:	48 89 04 24          	mov    %rax,(%rsp)
    5da9:	48 8b 84 24 78 01 00 	mov    0x178(%rsp),%rax
    5db0:	00 
    5db1:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5db6:	48 8b 84 24 70 01 00 	mov    0x170(%rsp),%rax
    5dbd:	00 
    5dbe:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5dc3:	48 8b 84 24 58 01 00 	mov    0x158(%rsp),%rax
    5dca:	00 
    5dcb:	48 89 84 24 10 01 00 	mov    %rax,0x110(%rsp)
    5dd2:	00 
    5dd3:	48 8b 84 24 50 01 00 	mov    0x150(%rsp),%rax
    5dda:	00 
    5ddb:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    5de0:	48 8b 84 24 28 01 00 	mov    0x128(%rsp),%rax
    5de7:	00 
    5de8:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    5def:	00 
    5df0:	48 8b 84 24 20 01 00 	mov    0x120(%rsp),%rax
    5df7:	00 
    5df8:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5dfd:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
    5e04:	00 
    5e05:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    5e0c:	00 
    5e0d:	31 ff                	xor    %edi,%edi
    5e0f:	e8 7c a3 00 00       	callq  10190 <stm_start>
    5e14:	48 89 c7             	mov    %rax,%rdi
    5e17:	48 85 c0             	test   %rax,%rax
    5e1a:	74 0b                	je     5e27 <learnStructure+0x2c7>
    5e1c:	31 f6                	xor    %esi,%esi
    5e1e:	e8 2d c7 ff ff       	callq  2550 <__sigsetjmp@plt>
    5e23:	f3 0f 1e fa          	endbr64 
    5e27:	4c 8b bc 24 48 01 00 	mov    0x148(%rsp),%r15
    5e2e:	00 
    5e2f:	48 8d ac 24 a8 01 00 	lea    0x1a8(%rsp),%rbp
    5e36:	00 
    5e37:	48 89 ef             	mov    %rbp,%rdi
    5e3a:	4c 89 fe             	mov    %r15,%rsi
    5e3d:	e8 ce 46 00 00       	callq  a510 <TMlist_iter_reset>
    5e42:	4c 89 fe             	mov    %r15,%rsi
    5e45:	48 89 ef             	mov    %rbp,%rdi
    5e48:	e8 f3 46 00 00       	callq  a540 <TMlist_iter_hasNext>
    5e4d:	48 85 c0             	test   %rax,%rax
    5e50:	0f 84 aa 00 00 00    	je     5f00 <learnStructure+0x3a0>
    5e56:	4c 89 fe             	mov    %r15,%rsi
    5e59:	48 89 ef             	mov    %rbp,%rdi
    5e5c:	e8 2f 47 00 00       	callq  a590 <TMlist_iter_next>
    5e61:	4c 89 ff             	mov    %r15,%rdi
    5e64:	48 89 c6             	mov    %rax,%rsi
    5e67:	48 89 c3             	mov    %rax,%rbx
    5e6a:	e8 d1 4e 00 00       	callq  ad40 <TMlist_remove>
    5e6f:	48 85 c0             	test   %rax,%rax
    5e72:	0f 84 58 16 00 00    	je     74d0 <learnStructure+0x1970>
    5e78:	e8 c3 88 00 00       	callq  e740 <stm_commit>
    5e7d:	48 85 db             	test   %rbx,%rbx
    5e80:	0f 84 7f 00 00 00    	je     5f05 <learnStructure+0x3a5>
    5e86:	8b 03                	mov    (%rbx),%eax
    5e88:	31 ff                	xor    %edi,%edi
    5e8a:	89 84 24 84 01 00 00 	mov    %eax,0x184(%rsp)
    5e91:	48 8b 43 08          	mov    0x8(%rbx),%rax
    5e95:	48 89 84 24 68 01 00 	mov    %rax,0x168(%rsp)
    5e9c:	00 
    5e9d:	48 8b 43 10          	mov    0x10(%rbx),%rax
    5ea1:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    5ea6:	e8 e5 a2 00 00       	callq  10190 <stm_start>
    5eab:	48 89 c7             	mov    %rax,%rdi
    5eae:	48 85 c0             	test   %rax,%rax
    5eb1:	74 0b                	je     5ebe <learnStructure+0x35e>
    5eb3:	31 f6                	xor    %esi,%esi
    5eb5:	e8 96 c6 ff ff       	callq  2550 <__sigsetjmp@plt>
    5eba:	f3 0f 1e fa          	endbr64 
    5ebe:	8b 84 24 84 01 00 00 	mov    0x184(%rsp),%eax
    5ec5:	83 f8 01             	cmp    $0x1,%eax
    5ec8:	0f 84 f2 10 00 00    	je     6fc0 <learnStructure+0x1460>
    5ece:	83 f8 02             	cmp    $0x2,%eax
    5ed1:	0f 84 29 06 00 00    	je     6500 <learnStructure+0x9a0>
    5ed7:	85 c0                	test   %eax,%eax
    5ed9:	0f 84 b1 00 00 00    	je     5f90 <learnStructure+0x430>
    5edf:	48 8d 0d a2 3a 01 00 	lea    0x13aa2(%rip),%rcx        # 19988 <__PRETTY_FUNCTION__.6110>
    5ee6:	ba d8 04 00 00       	mov    $0x4d8,%edx
    5eeb:	48 8d 35 74 38 01 00 	lea    0x13874(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    5ef2:	48 8d 3d d2 3d 01 00 	lea    0x13dd2(%rip),%rdi        # 19ccb <__PRETTY_FUNCTION__.4407+0x2b>
    5ef9:	e8 a2 c4 ff ff       	callq  23a0 <__assert_fail@plt>
    5efe:	66 90                	xchg   %ax,%ax
    5f00:	e8 3b 88 00 00       	callq  e740 <stm_commit>
    5f05:	48 8b bc 24 50 01 00 	mov    0x150(%rsp),%rdi
    5f0c:	00 
    5f0d:	e8 4e 42 00 00       	callq  a160 <Pbitmap_free>
    5f12:	48 8b bc 24 58 01 00 	mov    0x158(%rsp),%rdi
    5f19:	00 
    5f1a:	e8 a1 56 00 00       	callq  b5c0 <Pqueue_free>
    5f1f:	48 8b bc 24 78 01 00 	mov    0x178(%rsp),%rdi
    5f26:	00 
    5f27:	e8 c4 6b 00 00       	callq  caf0 <Pvector_free>
    5f2c:	48 8b bc 24 70 01 00 	mov    0x170(%rsp),%rdi
    5f33:	00 
    5f34:	e8 b7 6b 00 00       	callq  caf0 <Pvector_free>
    5f39:	48 8b bc 24 20 01 00 	mov    0x120(%rsp),%rdi
    5f40:	00 
    5f41:	e8 aa 6b 00 00       	callq  caf0 <Pvector_free>
    5f46:	48 8b bc 24 28 01 00 	mov    0x128(%rsp),%rdi
    5f4d:	00 
    5f4e:	e8 9d 6b 00 00       	callq  caf0 <Pvector_free>
    5f53:	48 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%rdi
    5f5a:	00 
    5f5b:	e8 70 c3 ff ff       	callq  22d0 <free@plt>
    5f60:	e8 1b 77 00 00       	callq  d680 <stm_exit_thread>
    5f65:	48 8b 84 24 d8 01 00 	mov    0x1d8(%rsp),%rax
    5f6c:	00 
    5f6d:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5f74:	00 00 
    5f76:	0f 85 73 15 00 00    	jne    74ef <learnStructure+0x198f>
    5f7c:	48 81 c4 e8 01 00 00 	add    $0x1e8,%rsp
    5f83:	5b                   	pop    %rbx
    5f84:	5d                   	pop    %rbp
    5f85:	41 5c                	pop    %r12
    5f87:	41 5d                	pop    %r13
    5f89:	41 5e                	pop    %r14
    5f8b:	41 5f                	pop    %r15
    5f8d:	c3                   	retq   
    5f8e:	66 90                	xchg   %ax,%ax
    5f90:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    5f95:	48 8b b4 24 68 01 00 	mov    0x168(%rsp),%rsi
    5f9c:	00 
    5f9d:	48 8b bc 24 38 01 00 	mov    0x138(%rsp),%rdi
    5fa4:	00 
    5fa5:	e8 96 23 00 00       	callq  8340 <TMnet_hasEdge>
    5faa:	48 85 c0             	test   %rax,%rax
    5fad:	0f 84 8d 12 00 00    	je     7240 <learnStructure+0x16e0>
    5fb3:	e8 88 87 00 00       	callq  e740 <stm_commit>
    5fb8:	66 0f ef db          	pxor   %xmm3,%xmm3
    5fbc:	f3 0f 11 9c 24 e4 00 	movss  %xmm3,0xe4(%rsp)
    5fc3:	00 00 
    5fc5:	0f 1f 00             	nopl   (%rax)
    5fc8:	31 ff                	xor    %edi,%edi
    5fca:	e8 c1 a1 00 00       	callq  10190 <stm_start>
    5fcf:	48 89 c7             	mov    %rax,%rdi
    5fd2:	48 85 c0             	test   %rax,%rax
    5fd5:	74 0b                	je     5fe2 <learnStructure+0x482>
    5fd7:	31 f6                	xor    %esi,%esi
    5fd9:	e8 72 c5 ff ff       	callq  2550 <__sigsetjmp@plt>
    5fde:	f3 0f 1e fa          	endbr64 
    5fe2:	48 8b 9c 24 e8 00 00 	mov    0xe8(%rsp),%rbx
    5fe9:	00 
    5fea:	48 8d 6b 50          	lea    0x50(%rbx),%rbp
    5fee:	48 89 ef             	mov    %rbp,%rdi
    5ff1:	e8 ea d4 00 00       	callq  134e0 <stm_load_float>
    5ff6:	48 89 ef             	mov    %rbp,%rdi
    5ff9:	f3 0f 58 84 24 e4 00 	addss  0xe4(%rsp),%xmm0
    6000:	00 00 
    6002:	f3 0f 11 84 24 e0 00 	movss  %xmm0,0xe0(%rsp)
    6009:	00 00 
    600b:	e8 20 03 01 00       	callq  16330 <stm_store_float>
    6010:	48 8d bb 10 01 00 00 	lea    0x110(%rbx),%rdi
    6017:	e8 64 8d 00 00       	callq  ed80 <stm_load>
    601c:	48 89 c3             	mov    %rax,%rbx
    601f:	48 89 84 24 00 01 00 	mov    %rax,0x100(%rsp)
    6026:	00 
    6027:	e8 14 87 00 00       	callq  e740 <stm_commit>
    602c:	66 0f ef c9          	pxor   %xmm1,%xmm1
    6030:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6034:	31 ff                	xor    %edi,%edi
    6036:	f3 48 0f 2a 84 24 08 	cvtsi2ssq 0x108(%rsp),%xmm0
    603d:	01 00 00 
    6040:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    6045:	f3 0f 59 84 24 e0 00 	mulss  0xe0(%rsp),%xmm0
    604c:	00 00 
    604e:	c7 84 24 b0 00 00 00 	movl   $0x3,0xb0(%rsp)
    6055:	03 00 00 00 
    6059:	f3 48 0f 2a cb       	cvtsi2ss %rbx,%xmm1
    605e:	f3 0f 59 8c 24 f0 00 	mulss  0xf0(%rsp),%xmm1
    6065:	00 00 
    6067:	48 c7 84 24 90 00 00 	movq   $0xffffffffffffffff,0x90(%rsp)
    606e:	00 ff ff ff ff 
    6073:	48 c7 84 24 a8 00 00 	movq   $0xffffffffffffffff,0xa8(%rsp)
    607a:	00 ff ff ff ff 
    607f:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    6084:	f3 0f 58 c8          	addss  %xmm0,%xmm1
    6088:	f3 0f 11 8c 24 b4 00 	movss  %xmm1,0xb4(%rsp)
    608f:	00 00 
    6091:	e8 fa a0 00 00       	callq  10190 <stm_start>
    6096:	48 89 c7             	mov    %rax,%rdi
    6099:	48 85 c0             	test   %rax,%rax
    609c:	74 0b                	je     60a9 <learnStructure+0x549>
    609e:	31 f6                	xor    %esi,%esi
    60a0:	e8 ab c4 ff ff       	callq  2550 <__sigsetjmp@plt>
    60a5:	f3 0f 1e fa          	endbr64 
    60a9:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
    60b0:	00 
    60b1:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
    60b8:	00 
    60b9:	48 8d 9c 24 b8 01 00 	lea    0x1b8(%rsp),%rbx
    60c0:	00 
    60c1:	4c 8b 68 08          	mov    0x8(%rax),%r13
    60c5:	4c 89 ff             	mov    %r15,%rdi
    60c8:	4c 8b 20             	mov    (%rax),%r12
    60cb:	4c 8b 70 10          	mov    0x10(%rax),%r14
    60cf:	e8 ac 6c 00 00       	callq  cd80 <vector_clear>
    60d4:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    60d9:	4c 89 ef             	mov    %r13,%rdi
    60dc:	e8 5f 27 00 00       	callq  8840 <net_getParentIdListPtr>
    60e1:	48 89 df             	mov    %rbx,%rdi
    60e4:	48 89 c6             	mov    %rax,%rsi
    60e7:	48 89 c5             	mov    %rax,%rbp
    60ea:	e8 21 44 00 00       	callq  a510 <TMlist_iter_reset>
    60ef:	eb 2f                	jmp    6120 <learnStructure+0x5c0>
    60f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    60f8:	48 89 ee             	mov    %rbp,%rsi
    60fb:	48 89 df             	mov    %rbx,%rdi
    60fe:	e8 8d 44 00 00       	callq  a590 <TMlist_iter_next>
    6103:	48 8b 14 24          	mov    (%rsp),%rdx
    6107:	4c 89 ff             	mov    %r15,%rdi
    610a:	48 c1 e0 04          	shl    $0x4,%rax
    610e:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    6112:	e8 29 6b 00 00       	callq  cc40 <Pvector_pushBack>
    6117:	48 85 c0             	test   %rax,%rax
    611a:	0f 84 20 0e 00 00    	je     6f40 <learnStructure+0x13e0>
    6120:	48 89 ee             	mov    %rbp,%rsi
    6123:	48 89 df             	mov    %rbx,%rdi
    6126:	e8 15 44 00 00       	callq  a540 <TMlist_iter_hasNext>
    612b:	48 85 c0             	test   %rax,%rax
    612e:	75 c8                	jne    60f8 <learnStructure+0x598>
    6130:	48 8b b4 24 88 00 00 	mov    0x88(%rsp),%rsi
    6137:	00 
    6138:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    613d:	e8 ee 6c 00 00       	callq  ce30 <Pvector_copy>
    6142:	48 85 c0             	test   %rax,%rax
    6145:	0f 84 09 13 00 00    	je     7454 <learnStructure+0x18f4>
    614b:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6150:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    6155:	e8 d6 6c 00 00       	callq  ce30 <Pvector_copy>
    615a:	48 85 c0             	test   %rax,%rax
    615d:	0f 84 10 13 00 00    	je     7473 <learnStructure+0x1913>
    6163:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    6168:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    616d:	48 c1 e6 04          	shl    $0x4,%rsi
    6171:	48 03 34 24          	add    (%rsp),%rsi
    6175:	e8 c6 6a 00 00       	callq  cc40 <Pvector_pushBack>
    617a:	48 85 c0             	test   %rax,%rax
    617d:	0f 84 0f 13 00 00    	je     7492 <learnStructure+0x1932>
    6183:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    6188:	48 8d 35 01 e0 ff ff 	lea    -0x1fff(%rip),%rsi        # 4190 <compareQuery>
    618f:	e8 fc 6b 00 00       	callq  cd90 <vector_sort>
    6194:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    6199:	66 0f ef d2          	pxor   %xmm2,%xmm2
    619d:	f3 48 0f 2a d3       	cvtsi2ss %rbx,%xmm2
    61a2:	49 8d 3c 9e          	lea    (%r14,%rbx,4),%rdi
    61a6:	f3 0f 11 94 24 dc 00 	movss  %xmm2,0xdc(%rsp)
    61ad:	00 00 
    61af:	e8 2c d3 00 00       	callq  134e0 <stm_load_float>
    61b4:	48 8b 54 24 68       	mov    0x68(%rsp),%rdx
    61b9:	48 89 de             	mov    %rbx,%rsi
    61bc:	4c 89 ef             	mov    %r13,%rdi
    61bf:	48 8b 8c 24 10 01 00 	mov    0x110(%rsp),%rcx
    61c6:	00 
    61c7:	f3 0f 11 84 24 f4 00 	movss  %xmm0,0xf4(%rsp)
    61ce:	00 00 
    61d0:	e8 ab 2d 00 00       	callq  8f80 <TMnet_findDescendants>
    61d5:	48 85 c0             	test   %rax,%rax
    61d8:	0f 84 d3 12 00 00    	je     74b1 <learnStructure+0x1951>
    61de:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    61e3:	4c 89 ef             	mov    %r13,%rdi
    61e6:	e8 55 26 00 00       	callq  8840 <net_getParentIdListPtr>
    61eb:	48 8b 1d 2e 9e 01 00 	mov    0x19e2e(%rip),%rbx        # 20020 <global_maxNumEdgeLearned>
    61f2:	49 89 c5             	mov    %rax,%r13
    61f5:	48 85 db             	test   %rbx,%rbx
    61f8:	0f 88 62 09 00 00    	js     6b60 <learnStructure+0x1000>
    61fe:	48 89 c7             	mov    %rax,%rdi
    6201:	e8 1a 47 00 00       	callq  a920 <TMlist_getSize>
    6206:	48 39 c3             	cmp    %rax,%rbx
    6209:	0f 8d 51 09 00 00    	jge    6b60 <learnStructure+0x1000>
    620f:	f3 0f 10 9c 24 f4 00 	movss  0xf4(%rsp),%xmm3
    6216:	00 00 
    6218:	f3 0f 10 a4 24 dc 00 	movss  0xdc(%rsp),%xmm4
    621f:	00 00 
    6221:	f3 0f 11 5c 24 5c    	movss  %xmm3,0x5c(%rsp)
    6227:	f3 0f 11 64 24 7c    	movss  %xmm4,0x7c(%rsp)
    622d:	f3 0f 10 b4 24 dc 00 	movss  0xdc(%rsp),%xmm6
    6234:	00 00 
    6236:	f3 0f 10 7c 24 7c    	movss  0x7c(%rsp),%xmm7
    623c:	0f 2e f7             	ucomiss %xmm7,%xmm6
    623f:	f3 48 0f 2c df       	cvttss2si %xmm7,%rbx
    6244:	0f 8a 8e 0c 00 00    	jp     6ed8 <learnStructure+0x1378>
    624a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    624e:	0f 85 84 0c 00 00    	jne    6ed8 <learnStructure+0x1378>
    6254:	f3 0f 11 84 24 1c 01 	movss  %xmm0,0x11c(%rsp)
    625b:	00 00 
    625d:	e8 de 84 00 00       	callq  e740 <stm_commit>
    6262:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    6267:	48 39 d8             	cmp    %rbx,%rax
    626a:	74 74                	je     62e0 <learnStructure+0x780>
    626c:	f3 0f 10 a4 24 b4 00 	movss  0xb4(%rsp),%xmm4
    6273:	00 00 
    6275:	48 8b 94 24 90 00 00 	mov    0x90(%rsp),%rdx
    627c:	00 
    627d:	f3 0f 10 84 24 1c 01 	movss  0x11c(%rsp),%xmm0
    6284:	00 00 
    6286:	0f 28 cc             	movaps %xmm4,%xmm1
    6289:	f3 0f 5e 8c 24 18 01 	divss  0x118(%rsp),%xmm1
    6290:	00 00 
    6292:	0f 28 d1             	movaps %xmm1,%xmm2
    6295:	0f 2e c1             	ucomiss %xmm1,%xmm0
    6298:	f3 0f c2 d0 05       	cmpnltss %xmm0,%xmm2
    629d:	48 0f 46 9c 24 a8 00 	cmovbe 0xa8(%rsp),%rbx
    62a4:	00 00 
    62a6:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
    62ad:	00 
    62ae:	48 0f 47 d0          	cmova  %rax,%rdx
    62b2:	b8 00 00 00 00       	mov    $0x0,%eax
    62b7:	0f 54 e2             	andps  %xmm2,%xmm4
    62ba:	0f 46 84 24 b0 00 00 	cmovbe 0xb0(%rsp),%eax
    62c1:	00 
    62c2:	0f 55 d0             	andnps %xmm0,%xmm2
    62c5:	48 89 94 24 90 00 00 	mov    %rdx,0x90(%rsp)
    62cc:	00 
    62cd:	0f 56 d4             	orps   %xmm4,%xmm2
    62d0:	89 84 24 b0 00 00 00 	mov    %eax,0xb0(%rsp)
    62d7:	f3 0f 11 94 24 b4 00 	movss  %xmm2,0xb4(%rsp)
    62de:	00 00 
    62e0:	31 ff                	xor    %edi,%edi
    62e2:	e8 a9 9e 00 00       	callq  10190 <stm_start>
    62e7:	48 89 c7             	mov    %rax,%rdi
    62ea:	48 85 c0             	test   %rax,%rax
    62ed:	74 0b                	je     62fa <learnStructure+0x79a>
    62ef:	31 f6                	xor    %esi,%esi
    62f1:	e8 5a c2 ff ff       	callq  2550 <__sigsetjmp@plt>
    62f6:	f3 0f 1e fa          	endbr64 
    62fa:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
    6301:	00 
    6302:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
    6307:	48 8d 9c 24 c0 01 00 	lea    0x1c0(%rsp),%rbx
    630e:	00 
    630f:	4c 8b 60 08          	mov    0x8(%rax),%r12
    6313:	4c 89 f7             	mov    %r14,%rdi
    6316:	4c 8b 38             	mov    (%rax),%r15
    6319:	48 8b 68 10          	mov    0x10(%rax),%rbp
    631d:	e8 5e 6a 00 00       	callq  cd80 <vector_clear>
    6322:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    6327:	4c 89 e7             	mov    %r12,%rdi
    632a:	e8 11 25 00 00       	callq  8840 <net_getParentIdListPtr>
    632f:	48 89 df             	mov    %rbx,%rdi
    6332:	48 89 c6             	mov    %rax,%rsi
    6335:	49 89 c4             	mov    %rax,%r12
    6338:	e8 d3 41 00 00       	callq  a510 <TMlist_iter_reset>
    633d:	4c 8b 2c 24          	mov    (%rsp),%r13
    6341:	eb 2a                	jmp    636d <learnStructure+0x80d>
    6343:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6348:	4c 89 e6             	mov    %r12,%rsi
    634b:	48 89 df             	mov    %rbx,%rdi
    634e:	e8 3d 42 00 00       	callq  a590 <TMlist_iter_next>
    6353:	4c 89 f7             	mov    %r14,%rdi
    6356:	48 c1 e0 04          	shl    $0x4,%rax
    635a:	49 8d 74 05 00       	lea    0x0(%r13,%rax,1),%rsi
    635f:	e8 dc 68 00 00       	callq  cc40 <Pvector_pushBack>
    6364:	48 85 c0             	test   %rax,%rax
    6367:	0f 84 d3 0b 00 00    	je     6f40 <learnStructure+0x13e0>
    636d:	4c 89 e6             	mov    %r12,%rsi
    6370:	48 89 df             	mov    %rbx,%rdi
    6373:	e8 c8 41 00 00       	callq  a540 <TMlist_iter_hasNext>
    6378:	48 85 c0             	test   %rax,%rax
    637b:	75 cb                	jne    6348 <learnStructure+0x7e8>
    637d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    6382:	e8 e9 69 00 00       	callq  cd70 <vector_getSize>
    6387:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    638c:	66 0f ef d2          	pxor   %xmm2,%xmm2
    6390:	49 89 c5             	mov    %rax,%r13
    6393:	f3 48 0f 2a d3       	cvtsi2ss %rbx,%xmm2
    6398:	48 8d 7c 9d 00       	lea    0x0(%rbp,%rbx,4),%rdi
    639d:	f3 0f 11 94 24 d8 00 	movss  %xmm2,0xd8(%rsp)
    63a4:	00 00 
    63a6:	e8 35 d1 00 00       	callq  134e0 <stm_load_float>
    63ab:	f3 0f 11 84 24 30 01 	movss  %xmm0,0x130(%rsp)
    63b2:	00 00 
    63b4:	4d 85 ed             	test   %r13,%r13
    63b7:	0f 8e dc 0e 00 00    	jle    7299 <learnStructure+0x1739>
    63bd:	4c 8b 34 24          	mov    (%rsp),%r14
    63c1:	48 c1 e3 04          	shl    $0x4,%rbx
    63c5:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    63ca:	45 31 e4             	xor    %r12d,%r12d
    63cd:	f3 0f 10 94 24 d8 00 	movss  0xd8(%rsp),%xmm2
    63d4:	00 00 
    63d6:	4c 89 bc 24 80 00 00 	mov    %r15,0x80(%rsp)
    63dd:	00 
    63de:	49 01 de             	add    %rbx,%r14
    63e1:	4c 8b 7c 24 08       	mov    0x8(%rsp),%r15
    63e6:	4c 89 ac 24 b8 00 00 	mov    %r13,0xb8(%rsp)
    63ed:	00 
    63ee:	4c 89 b4 24 c0 00 00 	mov    %r14,0xc0(%rsp)
    63f5:	00 
    63f6:	4c 8b ac 24 88 00 00 	mov    0x88(%rsp),%r13
    63fd:	00 
    63fe:	f3 0f 11 94 24 a0 00 	movss  %xmm2,0xa0(%rsp)
    6405:	00 00 
    6407:	f3 0f 11 44 24 58    	movss  %xmm0,0x58(%rsp)
    640d:	e9 8e 00 00 00       	jmpq   64a0 <learnStructure+0x940>
    6412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6418:	4c 89 ee             	mov    %r13,%rsi
    641b:	48 89 ef             	mov    %rbp,%rdi
    641e:	e8 0d 6a 00 00       	callq  ce30 <Pvector_copy>
    6423:	48 85 c0             	test   %rax,%rax
    6426:	0f 84 b4 0e 00 00    	je     72e0 <learnStructure+0x1780>
    642c:	48 8b b4 24 c0 00 00 	mov    0xc0(%rsp),%rsi
    6433:	00 
    6434:	48 89 ef             	mov    %rbp,%rdi
    6437:	e8 04 68 00 00       	callq  cc40 <Pvector_pushBack>
    643c:	48 85 c0             	test   %rax,%rax
    643f:	0f 84 ba 0e 00 00    	je     72ff <learnStructure+0x179f>
    6445:	48 8d 35 44 dd ff ff 	lea    -0x22bc(%rip),%rsi        # 4190 <compareQuery>
    644c:	48 89 ef             	mov    %rbp,%rdi
    644f:	e8 3c 69 00 00       	callq  cd90 <vector_sort>
    6454:	48 8b 14 24          	mov    (%rsp),%rdx
    6458:	4d 89 e8             	mov    %r13,%r8
    645b:	48 89 e9             	mov    %rbp,%rcx
    645e:	48 8b b4 24 80 00 00 	mov    0x80(%rsp),%rsi
    6465:	00 
    6466:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    646b:	e8 50 ea ff ff       	callq  4ec0 <computeLocalLogLikelihood.isra.0>
    6470:	0f 2f 44 24 58       	comiss 0x58(%rsp),%xmm0
    6475:	76 18                	jbe    648f <learnStructure+0x92f>
    6477:	66 0f ef f6          	pxor   %xmm6,%xmm6
    647b:	f3 0f 11 44 24 58    	movss  %xmm0,0x58(%rsp)
    6481:	f3 49 0f 2a f6       	cvtsi2ss %r14,%xmm6
    6486:	f3 0f 11 b4 24 a0 00 	movss  %xmm6,0xa0(%rsp)
    648d:	00 00 
    648f:	49 8d 44 24 01       	lea    0x1(%r12),%rax
    6494:	49 39 dc             	cmp    %rbx,%r12
    6497:	0f 84 73 02 00 00    	je     6710 <learnStructure+0xbb0>
    649d:	49 89 c4             	mov    %rax,%r12
    64a0:	4c 89 e6             	mov    %r12,%rsi
    64a3:	4c 89 ff             	mov    %r15,%rdi
    64a6:	31 db                	xor    %ebx,%ebx
    64a8:	e8 63 66 00 00       	callq  cb10 <vector_at>
    64ad:	4c 89 ef             	mov    %r13,%rdi
    64b0:	4c 8b 30             	mov    (%rax),%r14
    64b3:	e8 c8 68 00 00       	callq  cd80 <vector_clear>
    64b8:	49 39 de             	cmp    %rbx,%r14
    64bb:	74 27                	je     64e4 <learnStructure+0x984>
    64bd:	48 89 de             	mov    %rbx,%rsi
    64c0:	4c 89 ff             	mov    %r15,%rdi
    64c3:	e8 48 66 00 00       	callq  cb10 <vector_at>
    64c8:	4c 89 ef             	mov    %r13,%rdi
    64cb:	48 8b 30             	mov    (%rax),%rsi
    64ce:	48 c1 e6 04          	shl    $0x4,%rsi
    64d2:	48 03 34 24          	add    (%rsp),%rsi
    64d6:	e8 65 67 00 00       	callq  cc40 <Pvector_pushBack>
    64db:	48 85 c0             	test   %rax,%rax
    64de:	0f 84 9c 0a 00 00    	je     6f80 <learnStructure+0x1420>
    64e4:	48 8d 43 01          	lea    0x1(%rbx),%rax
    64e8:	48 39 84 24 b8 00 00 	cmp    %rax,0xb8(%rsp)
    64ef:	00 
    64f0:	0f 84 22 ff ff ff    	je     6418 <learnStructure+0x8b8>
    64f6:	48 89 c3             	mov    %rax,%rbx
    64f9:	eb bd                	jmp    64b8 <learnStructure+0x958>
    64fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6500:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
    6505:	4c 8b bc 24 68 01 00 	mov    0x168(%rsp),%r15
    650c:	00 
    650d:	be 01 00 00 00       	mov    $0x1,%esi
    6512:	48 8b 9c 24 38 01 00 	mov    0x138(%rsp),%rbx
    6519:	00 
    651a:	4c 89 f1             	mov    %r14,%rcx
    651d:	4c 89 fa             	mov    %r15,%rdx
    6520:	48 89 df             	mov    %rbx,%rdi
    6523:	e8 98 1b 00 00       	callq  80c0 <TMnet_applyOperation>
    6528:	4c 89 f2             	mov    %r14,%rdx
    652b:	4c 89 fe             	mov    %r15,%rsi
    652e:	48 89 df             	mov    %rbx,%rdi
    6531:	4c 8b 84 24 58 01 00 	mov    0x158(%rsp),%r8
    6538:	00 
    6539:	48 8b 8c 24 50 01 00 	mov    0x150(%rsp),%rcx
    6540:	00 
    6541:	e8 4a 20 00 00       	callq  8590 <TMnet_isPath>
    6546:	48 85 c0             	test   %rax,%rax
    6549:	0f 85 c1 0c 00 00    	jne    7210 <learnStructure+0x16b0>
    654f:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
    6554:	4c 8b bc 24 68 01 00 	mov    0x168(%rsp),%r15
    655b:	00 
    655c:	31 f6                	xor    %esi,%esi
    655e:	48 8b 9c 24 38 01 00 	mov    0x138(%rsp),%rbx
    6565:	00 
    6566:	4c 89 f1             	mov    %r14,%rcx
    6569:	4c 89 fa             	mov    %r15,%rdx
    656c:	48 89 df             	mov    %rbx,%rdi
    656f:	e8 4c 1b 00 00       	callq  80c0 <TMnet_applyOperation>
    6574:	4c 89 f1             	mov    %r14,%rcx
    6577:	4c 89 fa             	mov    %r15,%rdx
    657a:	be 02 00 00 00       	mov    $0x2,%esi
    657f:	48 89 df             	mov    %rbx,%rdi
    6582:	e8 39 1b 00 00       	callq  80c0 <TMnet_applyOperation>
    6587:	e8 b4 81 00 00       	callq  e740 <stm_commit>
    658c:	66 0f ef db          	pxor   %xmm3,%xmm3
    6590:	f3 0f 11 9c 24 e4 00 	movss  %xmm3,0xe4(%rsp)
    6597:	00 00 
    6599:	31 ff                	xor    %edi,%edi
    659b:	e8 f0 9b 00 00       	callq  10190 <stm_start>
    65a0:	48 89 c7             	mov    %rax,%rdi
    65a3:	48 85 c0             	test   %rax,%rax
    65a6:	74 0b                	je     65b3 <learnStructure+0xa53>
    65a8:	31 f6                	xor    %esi,%esi
    65aa:	e8 a1 bf ff ff       	callq  2550 <__sigsetjmp@plt>
    65af:	f3 0f 1e fa          	endbr64 
    65b3:	48 8b ac 24 28 01 00 	mov    0x128(%rsp),%rbp
    65ba:	00 
    65bb:	48 8b 9c 24 68 01 00 	mov    0x168(%rsp),%rbx
    65c2:	00 
    65c3:	4c 8b b4 24 20 01 00 	mov    0x120(%rsp),%r14
    65ca:	00 
    65cb:	4c 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%r15
    65d2:	00 
    65d3:	48 8b bc 24 38 01 00 	mov    0x138(%rsp),%rdi
    65da:	00 
    65db:	49 89 e8             	mov    %rbp,%r8
    65de:	48 89 de             	mov    %rbx,%rsi
    65e1:	4c 89 f1             	mov    %r14,%rcx
    65e4:	4c 89 fa             	mov    %r15,%rdx
    65e7:	e8 54 e5 ff ff       	callq  4b40 <TMpopulateQueryVectors>
    65ec:	49 89 e8             	mov    %rbp,%r8
    65ef:	4c 89 f1             	mov    %r14,%rcx
    65f2:	4c 89 fa             	mov    %r15,%rdx
    65f5:	48 8b b4 24 40 01 00 	mov    0x140(%rsp),%rsi
    65fc:	00 
    65fd:	48 89 df             	mov    %rbx,%rdi
    6600:	e8 bb e8 ff ff       	callq  4ec0 <computeLocalLogLikelihood.isra.0>
    6605:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
    660c:	00 
    660d:	f3 0f 11 84 24 9c 01 	movss  %xmm0,0x19c(%rsp)
    6614:	00 00 
    6616:	48 8d 2c 98          	lea    (%rax,%rbx,4),%rbp
    661a:	48 89 ef             	mov    %rbp,%rdi
    661d:	e8 be ce 00 00       	callq  134e0 <stm_load_float>
    6622:	48 89 ef             	mov    %rbp,%rdi
    6625:	f3 0f 10 8c 24 9c 01 	movss  0x19c(%rsp),%xmm1
    662c:	00 00 
    662e:	f3 0f 5c c1          	subss  %xmm1,%xmm0
    6632:	f3 0f 58 84 24 e4 00 	addss  0xe4(%rsp),%xmm0
    6639:	00 00 
    663b:	f3 0f 11 84 24 e4 00 	movss  %xmm0,0xe4(%rsp)
    6642:	00 00 
    6644:	0f 28 c1             	movaps %xmm1,%xmm0
    6647:	e8 e4 fc 00 00       	callq  16330 <stm_store_float>
    664c:	e8 ef 80 00 00       	callq  e740 <stm_commit>
    6651:	31 ff                	xor    %edi,%edi
    6653:	e8 38 9b 00 00       	callq  10190 <stm_start>
    6658:	48 89 c7             	mov    %rax,%rdi
    665b:	48 85 c0             	test   %rax,%rax
    665e:	74 0b                	je     666b <learnStructure+0xb0b>
    6660:	31 f6                	xor    %esi,%esi
    6662:	e8 e9 be ff ff       	callq  2550 <__sigsetjmp@plt>
    6667:	f3 0f 1e fa          	endbr64 
    666b:	48 8b ac 24 28 01 00 	mov    0x128(%rsp),%rbp
    6672:	00 
    6673:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    6678:	4c 8b b4 24 20 01 00 	mov    0x120(%rsp),%r14
    667f:	00 
    6680:	4c 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%r15
    6687:	00 
    6688:	48 8b bc 24 38 01 00 	mov    0x138(%rsp),%rdi
    668f:	00 
    6690:	49 89 e8             	mov    %rbp,%r8
    6693:	48 89 de             	mov    %rbx,%rsi
    6696:	4c 89 f1             	mov    %r14,%rcx
    6699:	4c 89 fa             	mov    %r15,%rdx
    669c:	e8 9f e4 ff ff       	callq  4b40 <TMpopulateQueryVectors>
    66a1:	49 89 e8             	mov    %rbp,%r8
    66a4:	4c 89 f1             	mov    %r14,%rcx
    66a7:	4c 89 fa             	mov    %r15,%rdx
    66aa:	48 8b b4 24 40 01 00 	mov    0x140(%rsp),%rsi
    66b1:	00 
    66b2:	48 89 df             	mov    %rbx,%rdi
    66b5:	e8 06 e8 ff ff       	callq  4ec0 <computeLocalLogLikelihood.isra.0>
    66ba:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
    66c1:	00 
    66c2:	f3 0f 11 84 24 90 01 	movss  %xmm0,0x190(%rsp)
    66c9:	00 00 
    66cb:	48 8d 2c 98          	lea    (%rax,%rbx,4),%rbp
    66cf:	48 89 ef             	mov    %rbp,%rdi
    66d2:	e8 09 ce 00 00       	callq  134e0 <stm_load_float>
    66d7:	48 89 ef             	mov    %rbp,%rdi
    66da:	f3 0f 10 8c 24 90 01 	movss  0x190(%rsp),%xmm1
    66e1:	00 00 
    66e3:	f3 0f 5c c1          	subss  %xmm1,%xmm0
    66e7:	f3 0f 58 84 24 e4 00 	addss  0xe4(%rsp),%xmm0
    66ee:	00 00 
    66f0:	f3 0f 11 84 24 e4 00 	movss  %xmm0,0xe4(%rsp)
    66f7:	00 00 
    66f9:	0f 28 c1             	movaps %xmm1,%xmm0
    66fc:	e8 2f fc 00 00       	callq  16330 <stm_store_float>
    6701:	e8 3a 80 00 00       	callq  e740 <stm_commit>
    6706:	e9 bd f8 ff ff       	jmpq   5fc8 <learnStructure+0x468>
    670b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6710:	4c 8b bc 24 80 00 00 	mov    0x80(%rsp),%r15
    6717:	00 
    6718:	f3 0f 10 a4 24 a0 00 	movss  0xa0(%rsp),%xmm4
    671f:	00 00 
    6721:	0f 2e a4 24 d8 00 00 	ucomiss 0xd8(%rsp),%xmm4
    6728:	00 
    6729:	f3 48 0f 2c dc       	cvttss2si %xmm4,%rbx
    672e:	7a 06                	jp     6736 <learnStructure+0xbd6>
    6730:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6734:	74 48                	je     677e <learnStructure+0xc1e>
    6736:	66 0f ef c9          	pxor   %xmm1,%xmm1
    673a:	f3 0f 10 44 24 58    	movss  0x58(%rsp),%xmm0
    6740:	f3 0f 58 84 24 e0 00 	addss  0xe0(%rsp),%xmm0
    6747:	00 00 
    6749:	f3 49 0f 2a 4f 08    	cvtsi2ssq 0x8(%r15),%xmm1
    674f:	48 8b 84 24 00 01 00 	mov    0x100(%rsp),%rax
    6756:	00 
    6757:	f3 0f 5c 84 24 30 01 	subss  0x130(%rsp),%xmm0
    675e:	00 00 
    6760:	48 83 e8 01          	sub    $0x1,%rax
    6764:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
    6768:	66 0f ef c9          	pxor   %xmm1,%xmm1
    676c:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    6771:	f3 0f 59 8c 24 f0 00 	mulss  0xf0(%rsp),%xmm1
    6778:	00 00 
    677a:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    677e:	f3 0f 11 84 24 34 01 	movss  %xmm0,0x134(%rsp)
    6785:	00 00 
    6787:	e8 b4 7f 00 00       	callq  e740 <stm_commit>
    678c:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    6791:	48 39 d8             	cmp    %rbx,%rax
    6794:	74 74                	je     680a <learnStructure+0xcaa>
    6796:	f3 0f 10 b4 24 b4 00 	movss  0xb4(%rsp),%xmm6
    679d:	00 00 
    679f:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    67a6:	00 
    67a7:	f3 0f 10 84 24 34 01 	movss  0x134(%rsp),%xmm0
    67ae:	00 00 
    67b0:	0f 28 ce             	movaps %xmm6,%xmm1
    67b3:	f3 0f 5e 8c 24 18 01 	divss  0x118(%rsp),%xmm1
    67ba:	00 00 
    67bc:	0f 28 d1             	movaps %xmm1,%xmm2
    67bf:	0f 2e c1             	ucomiss %xmm1,%xmm0
    67c2:	f3 0f c2 d0 05       	cmpnltss %xmm0,%xmm2
    67c7:	48 0f 46 9c 24 a8 00 	cmovbe 0xa8(%rsp),%rbx
    67ce:	00 00 
    67d0:	48 89 9c 24 a8 00 00 	mov    %rbx,0xa8(%rsp)
    67d7:	00 
    67d8:	48 0f 47 c8          	cmova  %rax,%rcx
    67dc:	b8 01 00 00 00       	mov    $0x1,%eax
    67e1:	0f 54 f2             	andps  %xmm2,%xmm6
    67e4:	0f 46 84 24 b0 00 00 	cmovbe 0xb0(%rsp),%eax
    67eb:	00 
    67ec:	0f 55 d0             	andnps %xmm0,%xmm2
    67ef:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
    67f6:	00 
    67f7:	0f 56 d6             	orps   %xmm6,%xmm2
    67fa:	89 84 24 b0 00 00 00 	mov    %eax,0xb0(%rsp)
    6801:	f3 0f 11 94 24 b4 00 	movss  %xmm2,0xb4(%rsp)
    6808:	00 00 
    680a:	31 ff                	xor    %edi,%edi
    680c:	e8 7f 99 00 00       	callq  10190 <stm_start>
    6811:	48 89 c7             	mov    %rax,%rdi
    6814:	48 85 c0             	test   %rax,%rax
    6817:	74 0b                	je     6824 <learnStructure+0xcc4>
    6819:	31 f6                	xor    %esi,%esi
    681b:	e8 30 bd ff ff       	callq  2550 <__sigsetjmp@plt>
    6820:	f3 0f 1e fa          	endbr64 
    6824:	48 8b 84 24 d0 00 00 	mov    0xd0(%rsp),%rax
    682b:	00 
    682c:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
    6831:	48 8b 58 08          	mov    0x8(%rax),%rbx
    6835:	4c 8b 38             	mov    (%rax),%r15
    6838:	4c 89 f7             	mov    %r14,%rdi
    683b:	48 8b 40 10          	mov    0x10(%rax),%rax
    683f:	48 89 9c 24 98 00 00 	mov    %rbx,0x98(%rsp)
    6846:	00 
    6847:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    684c:	e8 2f 65 00 00       	callq  cd80 <vector_clear>
    6851:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    6856:	48 89 df             	mov    %rbx,%rdi
    6859:	48 8d 9c 24 c8 01 00 	lea    0x1c8(%rsp),%rbx
    6860:	00 
    6861:	e8 da 1f 00 00       	callq  8840 <net_getParentIdListPtr>
    6866:	48 89 df             	mov    %rbx,%rdi
    6869:	48 89 c6             	mov    %rax,%rsi
    686c:	49 89 c4             	mov    %rax,%r12
    686f:	e8 9c 3c 00 00       	callq  a510 <TMlist_iter_reset>
    6874:	4c 8b 2c 24          	mov    (%rsp),%r13
    6878:	eb 2b                	jmp    68a5 <learnStructure+0xd45>
    687a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6880:	4c 89 e6             	mov    %r12,%rsi
    6883:	48 89 df             	mov    %rbx,%rdi
    6886:	e8 05 3d 00 00       	callq  a590 <TMlist_iter_next>
    688b:	4c 89 f7             	mov    %r14,%rdi
    688e:	48 c1 e0 04          	shl    $0x4,%rax
    6892:	49 8d 74 05 00       	lea    0x0(%r13,%rax,1),%rsi
    6897:	e8 a4 63 00 00       	callq  cc40 <Pvector_pushBack>
    689c:	48 85 c0             	test   %rax,%rax
    689f:	0f 84 9b 06 00 00    	je     6f40 <learnStructure+0x13e0>
    68a5:	4c 89 e6             	mov    %r12,%rsi
    68a8:	48 89 df             	mov    %rbx,%rdi
    68ab:	e8 90 3c 00 00       	callq  a540 <TMlist_iter_hasNext>
    68b0:	48 89 c5             	mov    %rax,%rbp
    68b3:	48 85 c0             	test   %rax,%rax
    68b6:	75 c8                	jne    6880 <learnStructure+0xd20>
    68b8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    68bd:	e8 ae 64 00 00       	callq  cd70 <vector_getSize>
    68c2:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    68c7:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    68ce:	00 
    68cf:	49 89 c6             	mov    %rax,%r14
    68d2:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    68d7:	48 8d 3c 98          	lea    (%rax,%rbx,4),%rdi
    68db:	e8 00 cc 00 00       	callq  134e0 <stm_load_float>
    68e0:	f3 0f 11 84 24 a4 00 	movss  %xmm0,0xa4(%rsp)
    68e7:	00 00 
    68e9:	4d 85 f6             	test   %r14,%r14
    68ec:	0f 8e c4 09 00 00    	jle    72b6 <learnStructure+0x1756>
    68f2:	48 8b 04 24          	mov    (%rsp),%rax
    68f6:	49 89 de             	mov    %rbx,%r14
    68f9:	4c 89 7c 24 50       	mov    %r15,0x50(%rsp)
    68fe:	4c 8d ac 24 d0 01 00 	lea    0x1d0(%rsp),%r13
    6905:	00 
    6906:	49 c1 e6 04          	shl    $0x4,%r14
    690a:	4c 89 6c 24 38       	mov    %r13,0x38(%rsp)
    690f:	49 01 c6             	add    %rax,%r14
    6912:	48 89 6c 24 30       	mov    %rbp,0x30(%rsp)
    6917:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    691c:	48 89 c5             	mov    %rax,%rbp
    691f:	4c 89 74 24 60       	mov    %r14,0x60(%rsp)
    6924:	4c 8b 74 24 10       	mov    0x10(%rsp),%r14
    6929:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
    692e:	48 8b 9c 24 88 00 00 	mov    0x88(%rsp),%rbx
    6935:	00 
    6936:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    693d:	00 00 00 
    6940:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    6945:	e8 c6 61 00 00       	callq  cb10 <vector_at>
    694a:	4c 8b 38             	mov    (%rax),%r15
    694d:	48 8b 44 24 70       	mov    0x70(%rsp),%rax
    6952:	4a 8d 3c b8          	lea    (%rax,%r15,4),%rdi
    6956:	e8 85 cb 00 00       	callq  134e0 <stm_load_float>
    695b:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    6960:	f3 0f 58 84 24 a4 00 	addss  0xa4(%rsp),%xmm0
    6967:	00 00 
    6969:	f3 0f 11 44 24 44    	movss  %xmm0,0x44(%rsp)
    696f:	e8 0c 64 00 00       	callq  cd80 <vector_clear>
    6974:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
    697b:	00 
    697c:	4c 89 fe             	mov    %r15,%rsi
    697f:	e8 bc 1e 00 00       	callq  8840 <net_getParentIdListPtr>
    6984:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    6989:	48 89 c6             	mov    %rax,%rsi
    698c:	49 89 c5             	mov    %rax,%r13
    698f:	e8 7c 3b 00 00       	callq  a510 <TMlist_iter_reset>
    6994:	eb 33                	jmp    69c9 <learnStructure+0xe69>
    6996:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    699d:	00 00 00 
    69a0:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    69a5:	4c 89 ee             	mov    %r13,%rsi
    69a8:	e8 e3 3b 00 00       	callq  a590 <TMlist_iter_next>
    69ad:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    69b2:	48 c1 e0 04          	shl    $0x4,%rax
    69b6:	48 8d 74 05 00       	lea    0x0(%rbp,%rax,1),%rsi
    69bb:	e8 80 62 00 00       	callq  cc40 <Pvector_pushBack>
    69c0:	48 85 c0             	test   %rax,%rax
    69c3:	0f 84 77 05 00 00    	je     6f40 <learnStructure+0x13e0>
    69c9:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    69ce:	4c 89 ee             	mov    %r13,%rsi
    69d1:	e8 6a 3b 00 00       	callq  a540 <TMlist_iter_hasNext>
    69d6:	49 89 c4             	mov    %rax,%r12
    69d9:	48 85 c0             	test   %rax,%rax
    69dc:	75 c2                	jne    69a0 <learnStructure+0xe40>
    69de:	48 89 df             	mov    %rbx,%rdi
    69e1:	e8 9a 63 00 00       	callq  cd80 <vector_clear>
    69e6:	4d 39 e7             	cmp    %r12,%r15
    69e9:	74 28                	je     6a13 <learnStructure+0xeb3>
    69eb:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    69f0:	4c 89 e6             	mov    %r12,%rsi
    69f3:	e8 18 61 00 00       	callq  cb10 <vector_at>
    69f8:	48 89 df             	mov    %rbx,%rdi
    69fb:	48 8b 30             	mov    (%rax),%rsi
    69fe:	48 c1 e6 04          	shl    $0x4,%rsi
    6a02:	48 01 ee             	add    %rbp,%rsi
    6a05:	e8 36 62 00 00       	callq  cc40 <Pvector_pushBack>
    6a0a:	48 85 c0             	test   %rax,%rax
    6a0d:	0f 84 8d 05 00 00    	je     6fa0 <learnStructure+0x1440>
    6a13:	49 8d 44 24 01       	lea    0x1(%r12),%rax
    6a18:	48 39 84 24 c8 00 00 	cmp    %rax,0xc8(%rsp)
    6a1f:	00 
    6a20:	0f 85 2a 01 00 00    	jne    6b50 <learnStructure+0xff0>
    6a26:	48 89 de             	mov    %rbx,%rsi
    6a29:	4c 89 f7             	mov    %r14,%rdi
    6a2c:	e8 ff 63 00 00       	callq  ce30 <Pvector_copy>
    6a31:	48 85 c0             	test   %rax,%rax
    6a34:	0f 84 03 09 00 00    	je     733d <learnStructure+0x17dd>
    6a3a:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    6a3f:	4c 89 f7             	mov    %r14,%rdi
    6a42:	e8 f9 61 00 00       	callq  cc40 <Pvector_pushBack>
    6a47:	48 85 c0             	test   %rax,%rax
    6a4a:	0f 84 ce 08 00 00    	je     731e <learnStructure+0x17be>
    6a50:	48 8d 35 39 d7 ff ff 	lea    -0x28c7(%rip),%rsi        # 4190 <compareQuery>
    6a57:	4c 89 f7             	mov    %r14,%rdi
    6a5a:	e8 31 63 00 00       	callq  cd90 <vector_sort>
    6a5f:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    6a64:	49 89 d8             	mov    %rbx,%r8
    6a67:	4c 89 f1             	mov    %r14,%rcx
    6a6a:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    6a6f:	48 89 ea             	mov    %rbp,%rdx
    6a72:	e8 49 e4 ff ff       	callq  4ec0 <computeLocalLogLikelihood.isra.0>
    6a77:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    6a7c:	48 89 df             	mov    %rbx,%rdi
    6a7f:	f3 0f 11 44 24 78    	movss  %xmm0,0x78(%rsp)
    6a85:	e8 a6 63 00 00       	callq  ce30 <Pvector_copy>
    6a8a:	48 85 c0             	test   %rax,%rax
    6a8d:	0f 84 26 09 00 00    	je     73b9 <learnStructure+0x1859>
    6a93:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    6a98:	48 89 df             	mov    %rbx,%rdi
    6a9b:	e8 a0 61 00 00       	callq  cc40 <Pvector_pushBack>
    6aa0:	48 85 c0             	test   %rax,%rax
    6aa3:	0f 84 b3 08 00 00    	je     735c <learnStructure+0x17fc>
    6aa9:	48 8d 35 e0 d6 ff ff 	lea    -0x2920(%rip),%rsi        # 4190 <compareQuery>
    6ab0:	48 89 df             	mov    %rbx,%rdi
    6ab3:	e8 d8 62 00 00       	callq  cd90 <vector_sort>
    6ab8:	48 89 de             	mov    %rbx,%rsi
    6abb:	4c 89 f7             	mov    %r14,%rdi
    6abe:	e8 6d 63 00 00       	callq  ce30 <Pvector_copy>
    6ac3:	48 85 c0             	test   %rax,%rax
    6ac6:	0f 84 af 08 00 00    	je     737b <learnStructure+0x181b>
    6acc:	4c 89 fe             	mov    %r15,%rsi
    6acf:	4c 89 f7             	mov    %r14,%rdi
    6ad2:	48 c1 e6 04          	shl    $0x4,%rsi
    6ad6:	48 01 ee             	add    %rbp,%rsi
    6ad9:	e8 62 61 00 00       	callq  cc40 <Pvector_pushBack>
    6ade:	48 85 c0             	test   %rax,%rax
    6ae1:	0f 84 b3 08 00 00    	je     739a <learnStructure+0x183a>
    6ae7:	48 8d 35 a2 d6 ff ff 	lea    -0x295e(%rip),%rsi        # 4190 <compareQuery>
    6aee:	4c 89 f7             	mov    %r14,%rdi
    6af1:	e8 9a 62 00 00       	callq  cd90 <vector_sort>
    6af6:	48 8b 74 24 50       	mov    0x50(%rsp),%rsi
    6afb:	4c 89 f1             	mov    %r14,%rcx
    6afe:	4c 89 ff             	mov    %r15,%rdi
    6b01:	49 89 d8             	mov    %rbx,%r8
    6b04:	48 89 ea             	mov    %rbp,%rdx
    6b07:	e8 b4 e3 ff ff       	callq  4ec0 <computeLocalLogLikelihood.isra.0>
    6b0c:	f3 0f 58 44 24 78    	addss  0x78(%rsp),%xmm0
    6b12:	f3 0f 10 6c 24 44    	movss  0x44(%rsp),%xmm5
    6b18:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    6b1d:	0f 2f c5             	comiss %xmm5,%xmm0
    6b20:	f3 0f 5f c5          	maxss  %xmm5,%xmm0
    6b24:	4c 0f 46 7c 24 48    	cmovbe 0x48(%rsp),%r15
    6b2a:	48 8d 41 01          	lea    0x1(%rcx),%rax
    6b2e:	4c 89 7c 24 48       	mov    %r15,0x48(%rsp)
    6b33:	f3 0f 11 44 24 44    	movss  %xmm0,0x44(%rsp)
    6b39:	4c 39 e1             	cmp    %r12,%rcx
    6b3c:	0f 84 7e 01 00 00    	je     6cc0 <learnStructure+0x1160>
    6b42:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    6b47:	48 89 c6             	mov    %rax,%rsi
    6b4a:	e9 f1 fd ff ff       	jmpq   6940 <learnStructure+0xde0>
    6b4f:	90                   	nop
    6b50:	49 89 c4             	mov    %rax,%r12
    6b53:	e9 8e fe ff ff       	jmpq   69e6 <learnStructure+0xe86>
    6b58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    6b5f:	00 
    6b60:	48 8d 9c 24 b0 01 00 	lea    0x1b0(%rsp),%rbx
    6b67:	00 
    6b68:	4c 89 ee             	mov    %r13,%rsi
    6b6b:	48 89 df             	mov    %rbx,%rdi
    6b6e:	e8 9d 39 00 00       	callq  a510 <TMlist_iter_reset>
    6b73:	48 8b 6c 24 68       	mov    0x68(%rsp),%rbp
    6b78:	eb 1c                	jmp    6b96 <learnStructure+0x1036>
    6b7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6b80:	4c 89 ee             	mov    %r13,%rsi
    6b83:	48 89 df             	mov    %rbx,%rdi
    6b86:	e8 05 3a 00 00       	callq  a590 <TMlist_iter_next>
    6b8b:	48 89 ef             	mov    %rbp,%rdi
    6b8e:	48 89 c6             	mov    %rax,%rsi
    6b91:	e8 ea 35 00 00       	callq  a180 <bitmap_set>
    6b96:	4c 89 ee             	mov    %r13,%rsi
    6b99:	48 89 df             	mov    %rbx,%rdi
    6b9c:	e8 9f 39 00 00       	callq  a540 <TMlist_iter_hasNext>
    6ba1:	48 85 c0             	test   %rax,%rax
    6ba4:	75 da                	jne    6b80 <learnStructure+0x1020>
    6ba6:	f3 0f 10 a4 24 f4 00 	movss  0xf4(%rsp),%xmm4
    6bad:	00 00 
    6baf:	4c 8b bc 24 88 00 00 	mov    0x88(%rsp),%r15
    6bb6:	00 
    6bb7:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    6bbe:	4c 8d 35 cb d5 ff ff 	lea    -0x2a35(%rip),%r14        # 4190 <compareQuery>
    6bc5:	f3 0f 11 64 24 5c    	movss  %xmm4,0x5c(%rsp)
    6bcb:	f3 0f 10 a4 24 dc 00 	movss  0xdc(%rsp),%xmm4
    6bd2:	00 00 
    6bd4:	f3 0f 11 64 24 7c    	movss  %xmm4,0x7c(%rsp)
    6bda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6be0:	48 8b 7c 24 68       	mov    0x68(%rsp),%rdi
    6be5:	48 8d 73 01          	lea    0x1(%rbx),%rsi
    6be9:	e8 72 36 00 00       	callq  a260 <bitmap_findClear>
    6bee:	48 89 c3             	mov    %rax,%rbx
    6bf1:	48 85 c0             	test   %rax,%rax
    6bf4:	0f 88 33 f6 ff ff    	js     622d <learnStructure+0x6cd>
    6bfa:	48 39 5c 24 20       	cmp    %rbx,0x20(%rsp)
    6bff:	74 df                	je     6be0 <learnStructure+0x1080>
    6c01:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    6c06:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    6c0b:	e8 20 62 00 00       	callq  ce30 <Pvector_copy>
    6c10:	48 85 c0             	test   %rax,%rax
    6c13:	0f 84 1c 08 00 00    	je     7435 <learnStructure+0x18d5>
    6c19:	48 8b 04 24          	mov    (%rsp),%rax
    6c1d:	49 89 d8             	mov    %rbx,%r8
    6c20:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    6c25:	49 c1 e0 04          	shl    $0x4,%r8
    6c29:	4a 8d 2c 00          	lea    (%rax,%r8,1),%rbp
    6c2d:	48 89 ee             	mov    %rbp,%rsi
    6c30:	e8 0b 60 00 00       	callq  cc40 <Pvector_pushBack>
    6c35:	48 85 c0             	test   %rax,%rax
    6c38:	0f 84 9a 07 00 00    	je     73d8 <learnStructure+0x1878>
    6c3e:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    6c43:	4c 89 f6             	mov    %r14,%rsi
    6c46:	e8 45 61 00 00       	callq  cd90 <vector_sort>
    6c4b:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6c50:	4c 89 ff             	mov    %r15,%rdi
    6c53:	e8 d8 61 00 00       	callq  ce30 <Pvector_copy>
    6c58:	48 85 c0             	test   %rax,%rax
    6c5b:	0f 84 96 07 00 00    	je     73f7 <learnStructure+0x1897>
    6c61:	48 89 ee             	mov    %rbp,%rsi
    6c64:	4c 89 ff             	mov    %r15,%rdi
    6c67:	e8 d4 5f 00 00       	callq  cc40 <Pvector_pushBack>
    6c6c:	48 85 c0             	test   %rax,%rax
    6c6f:	0f 84 a1 07 00 00    	je     7416 <learnStructure+0x18b6>
    6c75:	4c 89 f6             	mov    %r14,%rsi
    6c78:	4c 89 ff             	mov    %r15,%rdi
    6c7b:	e8 10 61 00 00       	callq  cd90 <vector_sort>
    6c80:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    6c85:	4d 89 f8             	mov    %r15,%r8
    6c88:	4c 89 e6             	mov    %r12,%rsi
    6c8b:	48 8b 14 24          	mov    (%rsp),%rdx
    6c8f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    6c94:	e8 27 e2 ff ff       	callq  4ec0 <computeLocalLogLikelihood.isra.0>
    6c99:	0f 2f 44 24 5c       	comiss 0x5c(%rsp),%xmm0
    6c9e:	0f 86 3c ff ff ff    	jbe    6be0 <learnStructure+0x1080>
    6ca4:	66 0f ef ff          	pxor   %xmm7,%xmm7
    6ca8:	f3 0f 11 44 24 5c    	movss  %xmm0,0x5c(%rsp)
    6cae:	f3 48 0f 2a fb       	cvtsi2ss %rbx,%xmm7
    6cb3:	f3 0f 11 7c 24 7c    	movss  %xmm7,0x7c(%rsp)
    6cb9:	e9 22 ff ff ff       	jmpq   6be0 <learnStructure+0x1080>
    6cbe:	66 90                	xchg   %ax,%ax
    6cc0:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    6cc5:	4d 89 fe             	mov    %r15,%r14
    6cc8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6ccc:	4c 8b 7c 24 50       	mov    0x50(%rsp),%r15
    6cd1:	4c 39 f3             	cmp    %r14,%rbx
    6cd4:	0f 84 ba 00 00 00    	je     6d94 <learnStructure+0x1234>
    6cda:	48 8b ac 24 98 00 00 	mov    0x98(%rsp),%rbp
    6ce1:	00 
    6ce2:	48 89 d9             	mov    %rbx,%rcx
    6ce5:	4c 89 f2             	mov    %r14,%rdx
    6ce8:	be 01 00 00 00       	mov    $0x1,%esi
    6ced:	48 89 ef             	mov    %rbp,%rdi
    6cf0:	e8 cb 13 00 00       	callq  80c0 <TMnet_applyOperation>
    6cf5:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    6cfa:	48 89 da             	mov    %rbx,%rdx
    6cfd:	4c 89 f6             	mov    %r14,%rsi
    6d00:	4c 8b 84 24 10 01 00 	mov    0x110(%rsp),%r8
    6d07:	00 
    6d08:	48 89 ef             	mov    %rbp,%rdi
    6d0b:	e8 80 18 00 00       	callq  8590 <TMnet_isPath>
    6d10:	48 85 c0             	test   %rax,%rax
    6d13:	0f 84 47 02 00 00    	je     6f60 <learnStructure+0x1400>
    6d19:	48 89 d9             	mov    %rbx,%rcx
    6d1c:	4c 89 f2             	mov    %r14,%rdx
    6d1f:	31 f6                	xor    %esi,%esi
    6d21:	48 89 ef             	mov    %rbp,%rdi
    6d24:	e8 97 13 00 00       	callq  80c0 <TMnet_applyOperation>
    6d29:	48 89 5c 24 48       	mov    %rbx,0x48(%rsp)
    6d2e:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    6d33:	48 39 44 24 28       	cmp    %rax,0x28(%rsp)
    6d38:	0f 84 d5 07 00 00    	je     7513 <learnStructure+0x19b3>
    6d3e:	48 8b 4c 24 70       	mov    0x70(%rsp),%rcx
    6d43:	48 8d 3c 81          	lea    (%rcx,%rax,4),%rdi
    6d47:	e8 94 c7 00 00       	callq  134e0 <stm_load_float>
    6d4c:	0f 28 c8             	movaps %xmm0,%xmm1
    6d4f:	f3 0f 10 84 24 e0 00 	movss  0xe0(%rsp),%xmm0
    6d56:	00 00 
    6d58:	f3 0f 58 44 24 44    	addss  0x44(%rsp),%xmm0
    6d5e:	f3 0f 5c 84 24 a4 00 	subss  0xa4(%rsp),%xmm0
    6d65:	00 00 
    6d67:	f3 0f 5c c1          	subss  %xmm1,%xmm0
    6d6b:	66 0f ef c9          	pxor   %xmm1,%xmm1
    6d6f:	f3 49 0f 2a 4f 08    	cvtsi2ssq 0x8(%r15),%xmm1
    6d75:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
    6d79:	66 0f ef c9          	pxor   %xmm1,%xmm1
    6d7d:	f3 48 0f 2a 8c 24 00 	cvtsi2ssq 0x100(%rsp),%xmm1
    6d84:	01 00 00 
    6d87:	f3 0f 59 8c 24 f0 00 	mulss  0xf0(%rsp),%xmm1
    6d8e:	00 00 
    6d90:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    6d94:	f3 0f 11 84 24 80 01 	movss  %xmm0,0x180(%rsp)
    6d9b:	00 00 
    6d9d:	e8 9e 79 00 00       	callq  e740 <stm_commit>
    6da2:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    6da7:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    6dac:	48 39 c2             	cmp    %rax,%rdx
    6daf:	74 77                	je     6e28 <learnStructure+0x12c8>
    6db1:	f3 0f 10 bc 24 b4 00 	movss  0xb4(%rsp),%xmm7
    6db8:	00 00 
    6dba:	48 8b 8c 24 90 00 00 	mov    0x90(%rsp),%rcx
    6dc1:	00 
    6dc2:	f3 0f 10 84 24 80 01 	movss  0x180(%rsp),%xmm0
    6dc9:	00 00 
    6dcb:	0f 28 cf             	movaps %xmm7,%xmm1
    6dce:	0f 28 df             	movaps %xmm7,%xmm3
    6dd1:	f3 0f 5e 8c 24 18 01 	divss  0x118(%rsp),%xmm1
    6dd8:	00 00 
    6dda:	0f 28 d1             	movaps %xmm1,%xmm2
    6ddd:	0f 2e c1             	ucomiss %xmm1,%xmm0
    6de0:	f3 0f c2 d0 05       	cmpnltss %xmm0,%xmm2
    6de5:	48 0f 46 84 24 a8 00 	cmovbe 0xa8(%rsp),%rax
    6dec:	00 00 
    6dee:	48 89 84 24 a8 00 00 	mov    %rax,0xa8(%rsp)
    6df5:	00 
    6df6:	b8 02 00 00 00       	mov    $0x2,%eax
    6dfb:	0f 46 84 24 b0 00 00 	cmovbe 0xb0(%rsp),%eax
    6e02:	00 
    6e03:	48 0f 47 ca          	cmova  %rdx,%rcx
    6e07:	0f 54 da             	andps  %xmm2,%xmm3
    6e0a:	89 84 24 b0 00 00 00 	mov    %eax,0xb0(%rsp)
    6e11:	0f 55 d0             	andnps %xmm0,%xmm2
    6e14:	48 89 8c 24 90 00 00 	mov    %rcx,0x90(%rsp)
    6e1b:	00 
    6e1c:	0f 56 d3             	orps   %xmm3,%xmm2
    6e1f:	f3 0f 11 94 24 b4 00 	movss  %xmm2,0xb4(%rsp)
    6e26:	00 00 
    6e28:	48 83 bc 24 90 00 00 	cmpq   $0xffffffffffffffff,0x90(%rsp)
    6e2f:	00 ff 
    6e31:	0f 84 d6 ef ff ff    	je     5e0d <learnStructure+0x2ad>
    6e37:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
    6e3e:	00 
    6e3f:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    6e44:	31 ff                	xor    %edi,%edi
    6e46:	f3 0f 10 9c 24 b4 00 	movss  0xb4(%rsp),%xmm3
    6e4d:	00 00 
    6e4f:	8b 8c 24 b0 00 00 00 	mov    0xb0(%rsp),%ecx
    6e56:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    6e5d:	48 c1 e6 05          	shl    $0x5,%rsi
    6e61:	f3 0f 7e 84 24 a8 00 	movq   0xa8(%rsp),%xmm0
    6e68:	00 00 
    6e6a:	48 8d 2c 30          	lea    (%rax,%rsi,1),%rbp
    6e6e:	0f 16 84 24 90 00 00 	movhps 0x90(%rsp),%xmm0
    6e75:	00 
    6e76:	48 89 84 24 88 01 00 	mov    %rax,0x188(%rsp)
    6e7d:	00 
    6e7e:	89 4d 00             	mov    %ecx,0x0(%rbp)
    6e81:	0f 11 45 08          	movups %xmm0,0x8(%rbp)
    6e85:	f3 0f 11 5d 18       	movss  %xmm3,0x18(%rbp)
    6e8a:	e8 01 93 00 00       	callq  10190 <stm_start>
    6e8f:	48 89 c7             	mov    %rax,%rdi
    6e92:	48 85 c0             	test   %rax,%rax
    6e95:	74 22                	je     6eb9 <learnStructure+0x1359>
    6e97:	31 f6                	xor    %esi,%esi
    6e99:	e8 b2 b6 ff ff       	callq  2550 <__sigsetjmp@plt>
    6e9e:	f3 0f 1e fa          	endbr64 
    6ea2:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    6ea7:	48 8b 84 24 88 01 00 	mov    0x188(%rsp),%rax
    6eae:	00 
    6eaf:	48 c1 e6 05          	shl    $0x5,%rsi
    6eb3:	48 01 f0             	add    %rsi,%rax
    6eb6:	48 89 c5             	mov    %rax,%rbp
    6eb9:	48 8b bc 24 48 01 00 	mov    0x148(%rsp),%rdi
    6ec0:	00 
    6ec1:	48 89 ee             	mov    %rbp,%rsi
    6ec4:	e8 37 3c 00 00       	callq  ab00 <TMlist_insert>
    6ec9:	e8 72 78 00 00       	callq  e740 <stm_commit>
    6ece:	e9 3a ef ff ff       	jmpq   5e0d <learnStructure+0x2ad>
    6ed3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6ed8:	4c 89 ef             	mov    %r13,%rdi
    6edb:	49 8b 6c 24 08       	mov    0x8(%r12),%rbp
    6ee0:	e8 3b 3a 00 00       	callq  a920 <TMlist_getSize>
    6ee5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6ee9:	66 0f ef d2          	pxor   %xmm2,%xmm2
    6eed:	f3 0f 10 8c 24 f0 00 	movss  0xf0(%rsp),%xmm1
    6ef4:	00 00 
    6ef6:	48 83 c0 01          	add    $0x1,%rax
    6efa:	48 0f af 05 16 91 01 	imul   0x19116(%rip),%rax        # 20018 <global_insertPenalty>
    6f01:	00 
    6f02:	48 03 84 24 00 01 00 	add    0x100(%rsp),%rax
    6f09:	00 
    6f0a:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    6f0f:	f3 48 0f 2a d5       	cvtsi2ss %rbp,%xmm2
    6f14:	f3 0f 59 c8          	mulss  %xmm0,%xmm1
    6f18:	f3 0f 10 44 24 5c    	movss  0x5c(%rsp),%xmm0
    6f1e:	f3 0f 58 84 24 e0 00 	addss  0xe0(%rsp),%xmm0
    6f25:	00 00 
    6f27:	f3 0f 5c 84 24 f4 00 	subss  0xf4(%rsp),%xmm0
    6f2e:	00 00 
    6f30:	f3 0f 59 c2          	mulss  %xmm2,%xmm0
    6f34:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    6f38:	e9 17 f3 ff ff       	jmpq   6254 <learnStructure+0x6f4>
    6f3d:	0f 1f 00             	nopl   (%rax)
    6f40:	48 8d 0d 09 2a 01 00 	lea    0x12a09(%rip),%rcx        # 19950 <__PRETTY_FUNCTION__.5934>
    6f47:	ba 3e 02 00 00       	mov    $0x23e,%edx
    6f4c:	48 8d 35 13 28 01 00 	lea    0x12813(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    6f53:	48 8d 3d 03 22 01 00 	lea    0x12203(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    6f5a:	e8 41 b4 ff ff       	callq  23a0 <__assert_fail@plt>
    6f5f:	90                   	nop
    6f60:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    6f65:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    6f6a:	31 f6                	xor    %esi,%esi
    6f6c:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
    6f73:	00 
    6f74:	e8 47 11 00 00       	callq  80c0 <TMnet_applyOperation>
    6f79:	e9 b0 fd ff ff       	jmpq   6d2e <learnStructure+0x11ce>
    6f7e:	66 90                	xchg   %ax,%ax
    6f80:	48 8d 0d 59 29 01 00 	lea    0x12959(%rip),%rcx        # 198e0 <__PRETTY_FUNCTION__.6043>
    6f87:	ba 7d 03 00 00       	mov    $0x37d,%edx
    6f8c:	48 8d 35 d3 27 01 00 	lea    0x127d3(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    6f93:	48 8d 3d c3 21 01 00 	lea    0x121c3(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    6f9a:	e8 01 b4 ff ff       	callq  23a0 <__assert_fail@plt>
    6f9f:	90                   	nop
    6fa0:	48 8d 0d 19 29 01 00 	lea    0x12919(%rip),%rcx        # 198c0 <__PRETTY_FUNCTION__.6084>
    6fa7:	ba fb 03 00 00       	mov    $0x3fb,%edx
    6fac:	48 8d 35 b3 27 01 00 	lea    0x127b3(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    6fb3:	48 8d 3d a3 21 01 00 	lea    0x121a3(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    6fba:	e8 e1 b3 ff ff       	callq  23a0 <__assert_fail@plt>
    6fbf:	90                   	nop
    6fc0:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    6fc5:	48 8b 94 24 68 01 00 	mov    0x168(%rsp),%rdx
    6fcc:	00 
    6fcd:	be 01 00 00 00       	mov    $0x1,%esi
    6fd2:	48 8b bc 24 38 01 00 	mov    0x138(%rsp),%rdi
    6fd9:	00 
    6fda:	e8 e1 10 00 00       	callq  80c0 <TMnet_applyOperation>
    6fdf:	e8 5c 77 00 00       	callq  e740 <stm_commit>
    6fe4:	8b 84 24 84 01 00 00 	mov    0x184(%rsp),%eax
    6feb:	66 0f ef ed          	pxor   %xmm5,%xmm5
    6fef:	f3 0f 11 ac 24 e4 00 	movss  %xmm5,0xe4(%rsp)
    6ff6:	00 00 
    6ff8:	83 f8 01             	cmp    $0x1,%eax
    6ffb:	0f 84 0f 01 00 00    	je     7110 <learnStructure+0x15b0>
    7001:	83 f8 02             	cmp    $0x2,%eax
    7004:	0f 84 8f f5 ff ff    	je     6599 <learnStructure+0xa39>
    700a:	85 c0                	test   %eax,%eax
    700c:	0f 85 c4 05 00 00    	jne    75d6 <learnStructure+0x1a76>
    7012:	31 ff                	xor    %edi,%edi
    7014:	e8 77 91 00 00       	callq  10190 <stm_start>
    7019:	48 89 c7             	mov    %rax,%rdi
    701c:	48 85 c0             	test   %rax,%rax
    701f:	74 0b                	je     702c <learnStructure+0x14cc>
    7021:	31 f6                	xor    %esi,%esi
    7023:	e8 28 b5 ff ff       	callq  2550 <__sigsetjmp@plt>
    7028:	f3 0f 1e fa          	endbr64 
    702c:	48 8b ac 24 28 01 00 	mov    0x128(%rsp),%rbp
    7033:	00 
    7034:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
    7039:	4c 8b b4 24 20 01 00 	mov    0x120(%rsp),%r14
    7040:	00 
    7041:	4c 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%r15
    7048:	00 
    7049:	48 8b bc 24 38 01 00 	mov    0x138(%rsp),%rdi
    7050:	00 
    7051:	49 89 e8             	mov    %rbp,%r8
    7054:	48 89 de             	mov    %rbx,%rsi
    7057:	4c 89 f1             	mov    %r14,%rcx
    705a:	4c 89 fa             	mov    %r15,%rdx
    705d:	e8 de da ff ff       	callq  4b40 <TMpopulateQueryVectors>
    7062:	49 89 e8             	mov    %rbp,%r8
    7065:	4c 89 f1             	mov    %r14,%rcx
    7068:	4c 89 fa             	mov    %r15,%rdx
    706b:	48 8b b4 24 40 01 00 	mov    0x140(%rsp),%rsi
    7072:	00 
    7073:	48 89 df             	mov    %rbx,%rdi
    7076:	e8 45 de ff ff       	callq  4ec0 <computeLocalLogLikelihood.isra.0>
    707b:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
    7082:	00 
    7083:	f3 0f 11 84 24 94 01 	movss  %xmm0,0x194(%rsp)
    708a:	00 00 
    708c:	48 8d 2c 98          	lea    (%rax,%rbx,4),%rbp
    7090:	48 89 ef             	mov    %rbp,%rdi
    7093:	e8 48 c4 00 00       	callq  134e0 <stm_load_float>
    7098:	48 89 ef             	mov    %rbp,%rdi
    709b:	f3 0f 10 8c 24 94 01 	movss  0x194(%rsp),%xmm1
    70a2:	00 00 
    70a4:	f3 0f 5c c1          	subss  %xmm1,%xmm0
    70a8:	f3 0f 58 84 24 e4 00 	addss  0xe4(%rsp),%xmm0
    70af:	00 00 
    70b1:	f3 0f 11 84 24 e4 00 	movss  %xmm0,0xe4(%rsp)
    70b8:	00 00 
    70ba:	0f 28 c1             	movaps %xmm1,%xmm0
    70bd:	e8 6e f2 00 00       	callq  16330 <stm_store_float>
    70c2:	e8 79 76 00 00       	callq  e740 <stm_commit>
    70c7:	31 ff                	xor    %edi,%edi
    70c9:	e8 c2 90 00 00       	callq  10190 <stm_start>
    70ce:	48 89 c7             	mov    %rax,%rdi
    70d1:	48 85 c0             	test   %rax,%rax
    70d4:	74 0b                	je     70e1 <learnStructure+0x1581>
    70d6:	31 f6                	xor    %esi,%esi
    70d8:	e8 73 b4 ff ff       	callq  2550 <__sigsetjmp@plt>
    70dd:	f3 0f 1e fa          	endbr64 
    70e1:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
    70e8:	00 
    70e9:	48 8d a8 10 01 00 00 	lea    0x110(%rax),%rbp
    70f0:	48 89 ef             	mov    %rbp,%rdi
    70f3:	e8 88 7c 00 00       	callq  ed80 <stm_load>
    70f8:	48 89 ef             	mov    %rbp,%rdi
    70fb:	48 8d 70 01          	lea    0x1(%rax),%rsi
    70ff:	e8 3c 82 00 00       	callq  f340 <stm_store>
    7104:	e8 37 76 00 00       	callq  e740 <stm_commit>
    7109:	e9 ba ee ff ff       	jmpq   5fc8 <learnStructure+0x468>
    710e:	66 90                	xchg   %ax,%ax
    7110:	31 ff                	xor    %edi,%edi
    7112:	e8 79 90 00 00       	callq  10190 <stm_start>
    7117:	48 89 c7             	mov    %rax,%rdi
    711a:	48 85 c0             	test   %rax,%rax
    711d:	74 0b                	je     712a <learnStructure+0x15ca>
    711f:	31 f6                	xor    %esi,%esi
    7121:	e8 2a b4 ff ff       	callq  2550 <__sigsetjmp@plt>
    7126:	f3 0f 1e fa          	endbr64 
    712a:	48 8b ac 24 28 01 00 	mov    0x128(%rsp),%rbp
    7131:	00 
    7132:	48 8b 9c 24 68 01 00 	mov    0x168(%rsp),%rbx
    7139:	00 
    713a:	4c 8b b4 24 20 01 00 	mov    0x120(%rsp),%r14
    7141:	00 
    7142:	4c 8b bc 24 f8 00 00 	mov    0xf8(%rsp),%r15
    7149:	00 
    714a:	48 8b bc 24 38 01 00 	mov    0x138(%rsp),%rdi
    7151:	00 
    7152:	49 89 e8             	mov    %rbp,%r8
    7155:	48 89 de             	mov    %rbx,%rsi
    7158:	4c 89 f1             	mov    %r14,%rcx
    715b:	4c 89 fa             	mov    %r15,%rdx
    715e:	e8 dd d9 ff ff       	callq  4b40 <TMpopulateQueryVectors>
    7163:	49 89 e8             	mov    %rbp,%r8
    7166:	4c 89 f1             	mov    %r14,%rcx
    7169:	4c 89 fa             	mov    %r15,%rdx
    716c:	48 8b b4 24 40 01 00 	mov    0x140(%rsp),%rsi
    7173:	00 
    7174:	48 89 df             	mov    %rbx,%rdi
    7177:	e8 44 dd ff ff       	callq  4ec0 <computeLocalLogLikelihood.isra.0>
    717c:	48 8b 84 24 60 01 00 	mov    0x160(%rsp),%rax
    7183:	00 
    7184:	f3 0f 11 84 24 98 01 	movss  %xmm0,0x198(%rsp)
    718b:	00 00 
    718d:	48 8d 2c 98          	lea    (%rax,%rbx,4),%rbp
    7191:	48 89 ef             	mov    %rbp,%rdi
    7194:	e8 47 c3 00 00       	callq  134e0 <stm_load_float>
    7199:	48 89 ef             	mov    %rbp,%rdi
    719c:	f3 0f 10 8c 24 98 01 	movss  0x198(%rsp),%xmm1
    71a3:	00 00 
    71a5:	f3 0f 5c c1          	subss  %xmm1,%xmm0
    71a9:	f3 0f 58 84 24 e4 00 	addss  0xe4(%rsp),%xmm0
    71b0:	00 00 
    71b2:	f3 0f 11 84 24 e4 00 	movss  %xmm0,0xe4(%rsp)
    71b9:	00 00 
    71bb:	0f 28 c1             	movaps %xmm1,%xmm0
    71be:	e8 6d f1 00 00       	callq  16330 <stm_store_float>
    71c3:	e8 78 75 00 00       	callq  e740 <stm_commit>
    71c8:	31 ff                	xor    %edi,%edi
    71ca:	e8 c1 8f 00 00       	callq  10190 <stm_start>
    71cf:	48 89 c7             	mov    %rax,%rdi
    71d2:	48 85 c0             	test   %rax,%rax
    71d5:	74 0b                	je     71e2 <learnStructure+0x1682>
    71d7:	31 f6                	xor    %esi,%esi
    71d9:	e8 72 b3 ff ff       	callq  2550 <__sigsetjmp@plt>
    71de:	f3 0f 1e fa          	endbr64 
    71e2:	48 8b 84 24 e8 00 00 	mov    0xe8(%rsp),%rax
    71e9:	00 
    71ea:	48 8d a8 10 01 00 00 	lea    0x110(%rax),%rbp
    71f1:	48 89 ef             	mov    %rbp,%rdi
    71f4:	e8 87 7b 00 00       	callq  ed80 <stm_load>
    71f9:	48 89 ef             	mov    %rbp,%rdi
    71fc:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
    7200:	e8 3b 81 00 00       	callq  f340 <stm_store>
    7205:	e8 36 75 00 00       	callq  e740 <stm_commit>
    720a:	e9 b9 ed ff ff       	jmpq   5fc8 <learnStructure+0x468>
    720f:	90                   	nop
    7210:	4c 89 f1             	mov    %r14,%rcx
    7213:	4c 89 fa             	mov    %r15,%rdx
    7216:	31 f6                	xor    %esi,%esi
    7218:	48 89 df             	mov    %rbx,%rdi
    721b:	e8 a0 0e 00 00       	callq  80c0 <TMnet_applyOperation>
    7220:	e8 1b 75 00 00       	callq  e740 <stm_commit>
    7225:	66 0f ef e4          	pxor   %xmm4,%xmm4
    7229:	f3 0f 11 a4 24 e4 00 	movss  %xmm4,0xe4(%rsp)
    7230:	00 00 
    7232:	e9 91 ed ff ff       	jmpq   5fc8 <learnStructure+0x468>
    7237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    723e:	00 00 
    7240:	4c 8b b4 24 68 01 00 	mov    0x168(%rsp),%r14
    7247:	00 
    7248:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
    724d:	48 8b 9c 24 38 01 00 	mov    0x138(%rsp),%rbx
    7254:	00 
    7255:	4c 8b 84 24 58 01 00 	mov    0x158(%rsp),%r8
    725c:	00 
    725d:	48 8b 8c 24 50 01 00 	mov    0x150(%rsp),%rcx
    7264:	00 
    7265:	4c 89 f2             	mov    %r14,%rdx
    7268:	4c 89 fe             	mov    %r15,%rsi
    726b:	48 89 df             	mov    %rbx,%rdi
    726e:	e8 1d 13 00 00       	callq  8590 <TMnet_isPath>
    7273:	48 85 c0             	test   %rax,%rax
    7276:	75 51                	jne    72c9 <learnStructure+0x1769>
    7278:	4c 89 f9             	mov    %r15,%rcx
    727b:	4c 89 f2             	mov    %r14,%rdx
    727e:	31 f6                	xor    %esi,%esi
    7280:	48 89 df             	mov    %rbx,%rdi
    7283:	e8 38 0e 00 00       	callq  80c0 <TMnet_applyOperation>
    7288:	e8 b3 74 00 00       	callq  e740 <stm_commit>
    728d:	e9 52 fd ff ff       	jmpq   6fe4 <learnStructure+0x1484>
    7292:	31 c0                	xor    %eax,%eax
    7294:	e9 1c ea ff ff       	jmpq   5cb5 <learnStructure+0x155>
    7299:	f3 0f 10 a4 24 d8 00 	movss  0xd8(%rsp),%xmm4
    72a0:	00 00 
    72a2:	f3 0f 11 44 24 58    	movss  %xmm0,0x58(%rsp)
    72a8:	f3 0f 11 a4 24 a0 00 	movss  %xmm4,0xa0(%rsp)
    72af:	00 00 
    72b1:	e9 62 f4 ff ff       	jmpq   6718 <learnStructure+0xbb8>
    72b6:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    72bb:	66 0f ef c0          	pxor   %xmm0,%xmm0
    72bf:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    72c4:	e9 cb fa ff ff       	jmpq   6d94 <learnStructure+0x1234>
    72c9:	e8 72 74 00 00       	callq  e740 <stm_commit>
    72ce:	66 0f ef f6          	pxor   %xmm6,%xmm6
    72d2:	f3 0f 11 b4 24 e4 00 	movss  %xmm6,0xe4(%rsp)
    72d9:	00 00 
    72db:	e9 e8 ec ff ff       	jmpq   5fc8 <learnStructure+0x468>
    72e0:	48 8d 0d f9 25 01 00 	lea    0x125f9(%rip),%rcx        # 198e0 <__PRETTY_FUNCTION__.6043>
    72e7:	ba 86 03 00 00       	mov    $0x386,%edx
    72ec:	48 8d 35 73 24 01 00 	lea    0x12473(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    72f3:	48 8d 3d 63 1e 01 00 	lea    0x11e63(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    72fa:	e8 a1 b0 ff ff       	callq  23a0 <__assert_fail@plt>
    72ff:	48 8d 0d da 25 01 00 	lea    0x125da(%rip),%rcx        # 198e0 <__PRETTY_FUNCTION__.6043>
    7306:	ba 88 03 00 00       	mov    $0x388,%edx
    730b:	48 8d 35 54 24 01 00 	lea    0x12454(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7312:	48 8d 3d 44 1e 01 00 	lea    0x11e44(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7319:	e8 82 b0 ff ff       	callq  23a0 <__assert_fail@plt>
    731e:	48 8d 0d 9b 25 01 00 	lea    0x1259b(%rip),%rcx        # 198c0 <__PRETTY_FUNCTION__.6084>
    7325:	ba 06 04 00 00       	mov    $0x406,%edx
    732a:	48 8d 35 35 24 01 00 	lea    0x12435(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7331:	48 8d 3d 25 1e 01 00 	lea    0x11e25(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7338:	e8 63 b0 ff ff       	callq  23a0 <__assert_fail@plt>
    733d:	48 8d 0d 7c 25 01 00 	lea    0x1257c(%rip),%rcx        # 198c0 <__PRETTY_FUNCTION__.6084>
    7344:	ba 04 04 00 00       	mov    $0x404,%edx
    7349:	48 8d 35 16 24 01 00 	lea    0x12416(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7350:	48 8d 3d 06 1e 01 00 	lea    0x11e06(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7357:	e8 44 b0 ff ff       	callq  23a0 <__assert_fail@plt>
    735c:	48 8d 0d 5d 25 01 00 	lea    0x1255d(%rip),%rcx        # 198c0 <__PRETTY_FUNCTION__.6084>
    7363:	ba 1c 04 00 00       	mov    $0x41c,%edx
    7368:	48 8d 35 f7 23 01 00 	lea    0x123f7(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    736f:	48 8d 3d e7 1d 01 00 	lea    0x11de7(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7376:	e8 25 b0 ff ff       	callq  23a0 <__assert_fail@plt>
    737b:	48 8d 0d 3e 25 01 00 	lea    0x1253e(%rip),%rcx        # 198c0 <__PRETTY_FUNCTION__.6084>
    7382:	ba 20 04 00 00       	mov    $0x420,%edx
    7387:	48 8d 35 d8 23 01 00 	lea    0x123d8(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    738e:	48 8d 3d c8 1d 01 00 	lea    0x11dc8(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7395:	e8 06 b0 ff ff       	callq  23a0 <__assert_fail@plt>
    739a:	48 8d 0d 1f 25 01 00 	lea    0x1251f(%rip),%rcx        # 198c0 <__PRETTY_FUNCTION__.6084>
    73a1:	ba 22 04 00 00       	mov    $0x422,%edx
    73a6:	48 8d 35 b9 23 01 00 	lea    0x123b9(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    73ad:	48 8d 3d a9 1d 01 00 	lea    0x11da9(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    73b4:	e8 e7 af ff ff       	callq  23a0 <__assert_fail@plt>
    73b9:	48 8d 0d 00 25 01 00 	lea    0x12500(%rip),%rcx        # 198c0 <__PRETTY_FUNCTION__.6084>
    73c0:	ba 1a 04 00 00       	mov    $0x41a,%edx
    73c5:	48 8d 35 9a 23 01 00 	lea    0x1239a(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    73cc:	48 8d 3d 8a 1d 01 00 	lea    0x11d8a(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    73d3:	e8 c8 af ff ff       	callq  23a0 <__assert_fail@plt>
    73d8:	48 8d 0d 21 25 01 00 	lea    0x12521(%rip),%rcx        # 19900 <__PRETTY_FUNCTION__.5996>
    73df:	ba 13 03 00 00       	mov    $0x313,%edx
    73e4:	48 8d 35 7b 23 01 00 	lea    0x1237b(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    73eb:	48 8d 3d 6b 1d 01 00 	lea    0x11d6b(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    73f2:	e8 a9 af ff ff       	callq  23a0 <__assert_fail@plt>
    73f7:	48 8d 0d 02 25 01 00 	lea    0x12502(%rip),%rcx        # 19900 <__PRETTY_FUNCTION__.5996>
    73fe:	ba 17 03 00 00       	mov    $0x317,%edx
    7403:	48 8d 35 5c 23 01 00 	lea    0x1235c(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    740a:	48 8d 3d 4c 1d 01 00 	lea    0x11d4c(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7411:	e8 8a af ff ff       	callq  23a0 <__assert_fail@plt>
    7416:	48 8d 0d e3 24 01 00 	lea    0x124e3(%rip),%rcx        # 19900 <__PRETTY_FUNCTION__.5996>
    741d:	ba 19 03 00 00       	mov    $0x319,%edx
    7422:	48 8d 35 3d 23 01 00 	lea    0x1233d(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7429:	48 8d 3d 2d 1d 01 00 	lea    0x11d2d(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7430:	e8 6b af ff ff       	callq  23a0 <__assert_fail@plt>
    7435:	48 8d 0d c4 24 01 00 	lea    0x124c4(%rip),%rcx        # 19900 <__PRETTY_FUNCTION__.5996>
    743c:	ba 11 03 00 00       	mov    $0x311,%edx
    7441:	48 8d 35 1e 23 01 00 	lea    0x1231e(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7448:	48 8d 3d 0e 1d 01 00 	lea    0x11d0e(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    744f:	e8 4c af ff ff       	callq  23a0 <__assert_fail@plt>
    7454:	48 8d 0d a5 24 01 00 	lea    0x124a5(%rip),%rcx        # 19900 <__PRETTY_FUNCTION__.5996>
    745b:	ba e6 02 00 00       	mov    $0x2e6,%edx
    7460:	48 8d 35 ff 22 01 00 	lea    0x122ff(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7467:	48 8d 3d ef 1c 01 00 	lea    0x11cef(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    746e:	e8 2d af ff ff       	callq  23a0 <__assert_fail@plt>
    7473:	48 8d 0d 86 24 01 00 	lea    0x12486(%rip),%rcx        # 19900 <__PRETTY_FUNCTION__.5996>
    747a:	ba e9 02 00 00       	mov    $0x2e9,%edx
    747f:	48 8d 35 e0 22 01 00 	lea    0x122e0(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7486:	48 8d 3d d0 1c 01 00 	lea    0x11cd0(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    748d:	e8 0e af ff ff       	callq  23a0 <__assert_fail@plt>
    7492:	48 8d 0d 67 24 01 00 	lea    0x12467(%rip),%rcx        # 19900 <__PRETTY_FUNCTION__.5996>
    7499:	ba eb 02 00 00       	mov    $0x2eb,%edx
    749e:	48 8d 35 c1 22 01 00 	lea    0x122c1(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    74a5:	48 8d 3d b1 1c 01 00 	lea    0x11cb1(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    74ac:	e8 ef ae ff ff       	callq  23a0 <__assert_fail@plt>
    74b1:	48 8d 0d 48 24 01 00 	lea    0x12448(%rip),%rcx        # 19900 <__PRETTY_FUNCTION__.5996>
    74b8:	ba f8 02 00 00       	mov    $0x2f8,%edx
    74bd:	48 8d 35 a2 22 01 00 	lea    0x122a2(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    74c4:	48 8d 3d 92 1c 01 00 	lea    0x11c92(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    74cb:	e8 d0 ae ff ff       	callq  23a0 <__assert_fail@plt>
    74d0:	48 8d 0d c1 24 01 00 	lea    0x124c1(%rip),%rcx        # 19998 <__PRETTY_FUNCTION__.5909>
    74d7:	ba 09 02 00 00       	mov    $0x209,%edx
    74dc:	48 8d 35 83 22 01 00 	lea    0x12283(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    74e3:	48 8d 3d 73 1c 01 00 	lea    0x11c73(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    74ea:	e8 b1 ae ff ff       	callq  23a0 <__assert_fail@plt>
    74ef:	e8 6c ae ff ff       	callq  2360 <__stack_chk_fail@plt>
    74f4:	48 8d 0d 8d 24 01 00 	lea    0x1248d(%rip),%rcx        # 19988 <__PRETTY_FUNCTION__.6110>
    74fb:	ba 86 04 00 00       	mov    $0x486,%edx
    7500:	48 8d 35 5f 22 01 00 	lea    0x1225f(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7507:	48 8d 3d bc 22 01 00 	lea    0x122bc(%rip),%rdi        # 197ca <__PRETTY_FUNCTION__.4667+0x72>
    750e:	e8 8d ae ff ff       	callq  23a0 <__assert_fail@plt>
    7513:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7517:	e9 78 f8 ff ff       	jmpq   6d94 <learnStructure+0x1234>
    751c:	48 8d 0d 65 24 01 00 	lea    0x12465(%rip),%rcx        # 19988 <__PRETTY_FUNCTION__.6110>
    7523:	ba 82 04 00 00       	mov    $0x482,%edx
    7528:	48 8d 35 37 22 01 00 	lea    0x12237(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    752f:	48 8d 3d e2 20 01 00 	lea    0x120e2(%rip),%rdi        # 19618 <__PRETTY_FUNCTION__.4821+0x5c>
    7536:	e8 65 ae ff ff       	callq  23a0 <__assert_fail@plt>
    753b:	48 8d 0d 46 24 01 00 	lea    0x12446(%rip),%rcx        # 19988 <__PRETTY_FUNCTION__.6110>
    7542:	ba 80 04 00 00       	mov    $0x480,%edx
    7547:	48 8d 35 18 22 01 00 	lea    0x12218(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    754e:	48 8d 3d 64 22 01 00 	lea    0x12264(%rip),%rdi        # 197b9 <__PRETTY_FUNCTION__.4667+0x61>
    7555:	e8 46 ae ff ff       	callq  23a0 <__assert_fail@plt>
    755a:	48 8d 0d 27 24 01 00 	lea    0x12427(%rip),%rcx        # 19988 <__PRETTY_FUNCTION__.6110>
    7561:	ba 96 04 00 00       	mov    $0x496,%edx
    7566:	48 8d 35 f9 21 01 00 	lea    0x121f9(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    756d:	48 8d 3d 6e 22 01 00 	lea    0x1226e(%rip),%rdi        # 197e2 <__PRETTY_FUNCTION__.4667+0x8a>
    7574:	e8 27 ae ff ff       	callq  23a0 <__assert_fail@plt>
    7579:	48 8d 0d 08 24 01 00 	lea    0x12408(%rip),%rcx        # 19988 <__PRETTY_FUNCTION__.6110>
    7580:	ba 94 04 00 00       	mov    $0x494,%edx
    7585:	48 8d 35 da 21 01 00 	lea    0x121da(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    758c:	48 8d 3d 3f 22 01 00 	lea    0x1223f(%rip),%rdi        # 197d2 <__PRETTY_FUNCTION__.4667+0x7a>
    7593:	e8 08 ae ff ff       	callq  23a0 <__assert_fail@plt>
    7598:	48 8d 0d e9 23 01 00 	lea    0x123e9(%rip),%rcx        # 19988 <__PRETTY_FUNCTION__.6110>
    759f:	ba 92 04 00 00       	mov    $0x492,%edx
    75a4:	48 8d 35 bb 21 01 00 	lea    0x121bb(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    75ab:	48 8d 3d cd 21 01 00 	lea    0x121cd(%rip),%rdi        # 1977f <__PRETTY_FUNCTION__.4667+0x27>
    75b2:	e8 e9 ad ff ff       	callq  23a0 <__assert_fail@plt>
    75b7:	48 8d 0d ca 23 01 00 	lea    0x123ca(%rip),%rcx        # 19988 <__PRETTY_FUNCTION__.6110>
    75be:	ba 90 04 00 00       	mov    $0x490,%edx
    75c3:	48 8d 35 9c 21 01 00 	lea    0x1219c(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    75ca:	48 8d 3d 9f 21 01 00 	lea    0x1219f(%rip),%rdi        # 19770 <__PRETTY_FUNCTION__.4667+0x18>
    75d1:	e8 ca ad ff ff       	callq  23a0 <__assert_fail@plt>
    75d6:	48 8d 0d ab 23 01 00 	lea    0x123ab(%rip),%rcx        # 19988 <__PRETTY_FUNCTION__.6110>
    75dd:	ba 5d 05 00 00       	mov    $0x55d,%edx
    75e2:	48 8d 35 7d 21 01 00 	lea    0x1217d(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    75e9:	48 8d 3d db 26 01 00 	lea    0x126db(%rip),%rdi        # 19ccb <__PRETTY_FUNCTION__.4407+0x2b>
    75f0:	e8 ab ad ff ff       	callq  23a0 <__assert_fail@plt>
    75f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    75fc:	00 00 00 00 

0000000000007600 <learner_alloc>:
    7600:	f3 0f 1e fa          	endbr64 
    7604:	41 54                	push   %r12
    7606:	55                   	push   %rbp
    7607:	48 89 f5             	mov    %rsi,%rbp
    760a:	53                   	push   %rbx
    760b:	48 89 fb             	mov    %rdi,%rbx
    760e:	bf 50 01 00 00       	mov    $0x150,%edi
    7613:	e8 38 ae ff ff       	callq  2450 <malloc@plt>
    7618:	49 89 c4             	mov    %rax,%r12
    761b:	48 85 c0             	test   %rax,%rax
    761e:	74 7a                	je     769a <learner_alloc+0x9a>
    7620:	48 89 28             	mov    %rbp,(%rax)
    7623:	48 8b 3b             	mov    (%rbx),%rdi
    7626:	e8 c5 06 00 00       	callq  7cf0 <net_alloc>
    762b:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    7630:	48 85 c0             	test   %rax,%rax
    7633:	74 6d                	je     76a2 <learner_alloc+0xa2>
    7635:	48 8b 1b             	mov    (%rbx),%rbx
    7638:	48 8d 3c 9d 00 00 00 	lea    0x0(,%rbx,4),%rdi
    763f:	00 
    7640:	e8 0b ae ff ff       	callq  2450 <malloc@plt>
    7645:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    764a:	48 85 c0             	test   %rax,%rax
    764d:	0f 84 ac 00 00 00    	je     76ff <learner_alloc+0xff>
    7653:	41 c7 44 24 50 00 00 	movl   $0x0,0x50(%r12)
    765a:	00 00 
    765c:	48 c1 e3 05          	shl    $0x5,%rbx
    7660:	48 89 df             	mov    %rbx,%rdi
    7663:	e8 e8 ad ff ff       	callq  2450 <malloc@plt>
    7668:	49 89 84 24 90 00 00 	mov    %rax,0x90(%r12)
    766f:	00 
    7670:	48 85 c0             	test   %rax,%rax
    7673:	74 6b                	je     76e0 <learner_alloc+0xe0>
    7675:	48 8d 3d d4 ca ff ff 	lea    -0x352c(%rip),%rdi        # 4150 <compareTask>
    767c:	e8 2f 2f 00 00       	callq  a5b0 <list_alloc>
    7681:	49 89 84 24 d0 00 00 	mov    %rax,0xd0(%r12)
    7688:	00 
    7689:	48 85 c0             	test   %rax,%rax
    768c:	74 33                	je     76c1 <learner_alloc+0xc1>
    768e:	49 c7 84 24 10 01 00 	movq   $0x0,0x110(%r12)
    7695:	00 00 00 00 00 
    769a:	4c 89 e0             	mov    %r12,%rax
    769d:	5b                   	pop    %rbx
    769e:	5d                   	pop    %rbp
    769f:	41 5c                	pop    %r12
    76a1:	c3                   	retq   
    76a2:	48 8d 0d ff 22 01 00 	lea    0x122ff(%rip),%rcx        # 199a8 <__PRETTY_FUNCTION__.5826>
    76a9:	ba ed 00 00 00       	mov    $0xed,%edx
    76ae:	48 8d 35 b1 20 01 00 	lea    0x120b1(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    76b5:	48 8d 3d 36 21 01 00 	lea    0x12136(%rip),%rdi        # 197f2 <__PRETTY_FUNCTION__.4667+0x9a>
    76bc:	e8 df ac ff ff       	callq  23a0 <__assert_fail@plt>
    76c1:	48 8d 0d e0 22 01 00 	lea    0x122e0(%rip),%rcx        # 199a8 <__PRETTY_FUNCTION__.5826>
    76c8:	ba f6 00 00 00       	mov    $0xf6,%edx
    76cd:	48 8d 35 92 20 01 00 	lea    0x12092(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    76d4:	48 8d 3d 3c 21 01 00 	lea    0x1213c(%rip),%rdi        # 19817 <__PRETTY_FUNCTION__.4667+0xbf>
    76db:	e8 c0 ac ff ff       	callq  23a0 <__assert_fail@plt>
    76e0:	48 8d 0d c1 22 01 00 	lea    0x122c1(%rip),%rcx        # 199a8 <__PRETTY_FUNCTION__.5826>
    76e7:	ba f4 00 00 00       	mov    $0xf4,%edx
    76ec:	48 8d 35 73 20 01 00 	lea    0x12073(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    76f3:	48 8d 3d 0b 21 01 00 	lea    0x1210b(%rip),%rdi        # 19805 <__PRETTY_FUNCTION__.4667+0xad>
    76fa:	e8 a1 ac ff ff       	callq  23a0 <__assert_fail@plt>
    76ff:	48 8d 0d a2 22 01 00 	lea    0x122a2(%rip),%rcx        # 199a8 <__PRETTY_FUNCTION__.5826>
    7706:	ba f0 00 00 00       	mov    $0xf0,%edx
    770b:	48 8d 35 54 20 01 00 	lea    0x12054(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7712:	48 8d 3d 17 21 01 00 	lea    0x12117(%rip),%rdi        # 19830 <__PRETTY_FUNCTION__.4667+0xd8>
    7719:	e8 82 ac ff ff       	callq  23a0 <__assert_fail@plt>
    771e:	66 90                	xchg   %ax,%ax

0000000000007720 <learner_free>:
    7720:	f3 0f 1e fa          	endbr64 
    7724:	55                   	push   %rbp
    7725:	48 89 fd             	mov    %rdi,%rbp
    7728:	48 8b bf d0 00 00 00 	mov    0xd0(%rdi),%rdi
    772f:	e8 3c 2f 00 00       	callq  a670 <list_free>
    7734:	48 8b bd 90 00 00 00 	mov    0x90(%rbp),%rdi
    773b:	e8 90 ab ff ff       	callq  22d0 <free@plt>
    7740:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    7744:	e8 87 ab ff ff       	callq  22d0 <free@plt>
    7749:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    774d:	e8 fe 06 00 00       	callq  7e50 <net_free>
    7752:	48 89 ef             	mov    %rbp,%rdi
    7755:	5d                   	pop    %rbp
    7756:	e9 75 ab ff ff       	jmpq   22d0 <free@plt>
    775b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007760 <TMpopTask>:
    7760:	f3 0f 1e fa          	endbr64 
    7764:	41 54                	push   %r12
    7766:	48 89 fe             	mov    %rdi,%rsi
    7769:	55                   	push   %rbp
    776a:	48 89 fd             	mov    %rdi,%rbp
    776d:	48 83 ec 18          	sub    $0x18,%rsp
    7771:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7778:	00 00 
    777a:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    777f:	31 c0                	xor    %eax,%eax
    7781:	49 89 e4             	mov    %rsp,%r12
    7784:	4c 89 e7             	mov    %r12,%rdi
    7787:	e8 84 2d 00 00       	callq  a510 <TMlist_iter_reset>
    778c:	48 89 ee             	mov    %rbp,%rsi
    778f:	4c 89 e7             	mov    %r12,%rdi
    7792:	e8 a9 2d 00 00       	callq  a540 <TMlist_iter_hasNext>
    7797:	48 85 c0             	test   %rax,%rax
    779a:	74 3c                	je     77d8 <TMpopTask+0x78>
    779c:	4c 89 e7             	mov    %r12,%rdi
    779f:	48 89 ee             	mov    %rbp,%rsi
    77a2:	e8 e9 2d 00 00       	callq  a590 <TMlist_iter_next>
    77a7:	48 89 ef             	mov    %rbp,%rdi
    77aa:	48 89 c6             	mov    %rax,%rsi
    77ad:	49 89 c4             	mov    %rax,%r12
    77b0:	e8 8b 35 00 00       	callq  ad40 <TMlist_remove>
    77b5:	48 85 c0             	test   %rax,%rax
    77b8:	74 28                	je     77e2 <TMpopTask+0x82>
    77ba:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    77bf:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    77c6:	00 00 
    77c8:	75 13                	jne    77dd <TMpopTask+0x7d>
    77ca:	48 83 c4 18          	add    $0x18,%rsp
    77ce:	4c 89 e0             	mov    %r12,%rax
    77d1:	5d                   	pop    %rbp
    77d2:	41 5c                	pop    %r12
    77d4:	c3                   	retq   
    77d5:	0f 1f 00             	nopl   (%rax)
    77d8:	45 31 e4             	xor    %r12d,%r12d
    77db:	eb dd                	jmp    77ba <TMpopTask+0x5a>
    77dd:	e8 7e ab ff ff       	callq  2360 <__stack_chk_fail@plt>
    77e2:	48 8d 0d af 21 01 00 	lea    0x121af(%rip),%rcx        # 19998 <__PRETTY_FUNCTION__.5909>
    77e9:	ba 09 02 00 00       	mov    $0x209,%edx
    77ee:	48 8d 35 71 1f 01 00 	lea    0x11f71(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    77f5:	48 8d 3d 61 19 01 00 	lea    0x11961(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    77fc:	e8 9f ab ff ff       	callq  23a0 <__assert_fail@plt>
    7801:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7808:	00 00 00 00 
    780c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007810 <learner_run>:
    7810:	f3 0f 1e fa          	endbr64 
    7814:	55                   	push   %rbp
    7815:	48 89 fe             	mov    %rdi,%rsi
    7818:	48 89 fd             	mov    %rdi,%rbp
    781b:	48 8d 3d 7e c9 ff ff 	lea    -0x3682(%rip),%rdi        # 41a0 <createTaskList>
    7822:	e8 39 51 00 00       	callq  c960 <thread_start>
    7827:	48 89 ee             	mov    %rbp,%rsi
    782a:	48 8d 3d 2f e3 ff ff 	lea    -0x1cd1(%rip),%rdi        # 5b60 <learnStructure>
    7831:	5d                   	pop    %rbp
    7832:	e9 29 51 00 00       	jmpq   c960 <thread_start>
    7837:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    783e:	00 00 

0000000000007840 <learner_score>:
    7840:	f3 0f 1e fa          	endbr64 
    7844:	41 57                	push   %r15
    7846:	41 56                	push   %r14
    7848:	41 55                	push   %r13
    784a:	41 54                	push   %r12
    784c:	55                   	push   %rbp
    784d:	53                   	push   %rbx
    784e:	48 83 ec 48          	sub    $0x48,%rsp
    7852:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7859:	00 00 
    785b:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    7860:	31 c0                	xor    %eax,%eax
    7862:	48 8b 07             	mov    (%rdi),%rax
    7865:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    786a:	48 8b 47 08          	mov    0x8(%rdi),%rax
    786e:	bf 01 00 00 00       	mov    $0x1,%edi
    7873:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    7878:	e8 93 51 00 00       	callq  ca10 <vector_alloc>
    787d:	48 85 c0             	test   %rax,%rax
    7880:	0f 84 35 03 00 00    	je     7bbb <learner_score+0x37b>
    7886:	bf 01 00 00 00       	mov    $0x1,%edi
    788b:	49 89 c5             	mov    %rax,%r13
    788e:	e8 7d 51 00 00       	callq  ca10 <vector_alloc>
    7893:	49 89 c4             	mov    %rax,%r12
    7896:	48 85 c0             	test   %rax,%rax
    7899:	0f 84 40 03 00 00    	je     7bdf <learner_score+0x39f>
    789f:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    78a4:	48 8b 18             	mov    (%rax),%rbx
    78a7:	48 89 df             	mov    %rbx,%rdi
    78aa:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    78af:	48 c1 e7 04          	shl    $0x4,%rdi
    78b3:	e8 98 ab ff ff       	callq  2450 <malloc@plt>
    78b8:	49 89 c6             	mov    %rax,%r14
    78bb:	48 85 c0             	test   %rax,%rax
    78be:	0f 84 d8 02 00 00    	je     7b9c <learner_score+0x35c>
    78c4:	48 85 db             	test   %rbx,%rbx
    78c7:	0f 8e 53 02 00 00    	jle    7b20 <learner_score+0x2e0>
    78cd:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    78d2:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    78d6:	48 83 f8 02          	cmp    $0x2,%rax
    78da:	0f 86 58 02 00 00    	jbe    7b38 <learner_score+0x2f8>
    78e0:	48 d1 ea             	shr    %rdx
    78e3:	66 0f 6f 0d e5 20 01 	movdqa 0x120e5(%rip),%xmm1        # 199d0 <__PRETTY_FUNCTION__.5826+0x28>
    78ea:	00 
    78eb:	4c 89 f0             	mov    %r14,%rax
    78ee:	66 0f 76 d2          	pcmpeqd %xmm2,%xmm2
    78f2:	48 c1 e2 05          	shl    $0x5,%rdx
    78f6:	66 0f 6f 25 e2 20 01 	movdqa 0x120e2(%rip),%xmm4        # 199e0 <__PRETTY_FUNCTION__.5826+0x38>
    78fd:	00 
    78fe:	4c 01 f2             	add    %r14,%rdx
    7901:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7908:	66 0f 6f c1          	movdqa %xmm1,%xmm0
    790c:	48 83 c0 20          	add    $0x20,%rax
    7910:	66 0f d4 cc          	paddq  %xmm4,%xmm1
    7914:	66 0f 6f d8          	movdqa %xmm0,%xmm3
    7918:	66 0f 6d c2          	punpckhqdq %xmm2,%xmm0
    791c:	66 0f 6c da          	punpcklqdq %xmm2,%xmm3
    7920:	0f 11 40 f0          	movups %xmm0,-0x10(%rax)
    7924:	0f 11 58 e0          	movups %xmm3,-0x20(%rax)
    7928:	48 39 d0             	cmp    %rdx,%rax
    792b:	75 db                	jne    7908 <learner_score+0xc8>
    792d:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    7932:	48 89 d0             	mov    %rdx,%rax
    7935:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    7939:	83 e2 01             	and    $0x1,%edx
    793c:	74 4d                	je     798b <learner_score+0x14b>
    793e:	48 89 c2             	mov    %rax,%rdx
    7941:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    7946:	48 c1 e2 04          	shl    $0x4,%rdx
    794a:	49 8d 0c 16          	lea    (%r14,%rdx,1),%rcx
    794e:	48 89 01             	mov    %rax,(%rcx)
    7951:	48 c7 41 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rcx)
    7958:	ff 
    7959:	48 8d 48 01          	lea    0x1(%rax),%rcx
    795d:	48 39 cb             	cmp    %rcx,%rbx
    7960:	7e 29                	jle    798b <learner_score+0x14b>
    7962:	49 8d 74 16 10       	lea    0x10(%r14,%rdx,1),%rsi
    7967:	48 83 c0 02          	add    $0x2,%rax
    796b:	48 89 0e             	mov    %rcx,(%rsi)
    796e:	48 c7 46 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rsi)
    7975:	ff 
    7976:	48 39 c3             	cmp    %rax,%rbx
    7979:	7e 10                	jle    798b <learner_score+0x14b>
    797b:	49 8d 54 16 20       	lea    0x20(%r14,%rdx,1),%rdx
    7980:	48 89 02             	mov    %rax,(%rdx)
    7983:	48 c7 42 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rdx)
    798a:	ff 
    798b:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    7992:	00 00 
    7994:	66 0f ef ff          	pxor   %xmm7,%xmm7
    7998:	31 db                	xor    %ebx,%ebx
    799a:	4c 8d 7c 24 30       	lea    0x30(%rsp),%r15
    799f:	f3 0f 11 7c 24 0c    	movss  %xmm7,0xc(%rsp)
    79a5:	0f 1f 00             	nopl   (%rax)
    79a8:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
    79ad:	48 89 de             	mov    %rbx,%rsi
    79b0:	48 89 ef             	mov    %rbp,%rdi
    79b3:	e8 88 0e 00 00       	callq  8840 <net_getParentIdListPtr>
    79b8:	48 89 c7             	mov    %rax,%rdi
    79bb:	e8 50 2f 00 00       	callq  a910 <list_getSize>
    79c0:	4c 89 e7             	mov    %r12,%rdi
    79c3:	48 01 44 24 20       	add    %rax,0x20(%rsp)
    79c8:	e8 b3 53 00 00       	callq  cd80 <vector_clear>
    79cd:	48 89 de             	mov    %rbx,%rsi
    79d0:	48 89 ef             	mov    %rbp,%rdi
    79d3:	e8 68 0e 00 00       	callq  8840 <net_getParentIdListPtr>
    79d8:	4c 89 ff             	mov    %r15,%rdi
    79db:	48 89 c6             	mov    %rax,%rsi
    79de:	48 89 c5             	mov    %rax,%rbp
    79e1:	e8 1a 2b 00 00       	callq  a500 <list_iter_reset>
    79e6:	eb 2c                	jmp    7a14 <learner_score+0x1d4>
    79e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    79ef:	00 
    79f0:	48 89 ee             	mov    %rbp,%rsi
    79f3:	4c 89 ff             	mov    %r15,%rdi
    79f6:	e8 75 2b 00 00       	callq  a570 <list_iter_next>
    79fb:	4c 89 e7             	mov    %r12,%rdi
    79fe:	48 c1 e0 04          	shl    $0x4,%rax
    7a02:	49 8d 34 06          	lea    (%r14,%rax,1),%rsi
    7a06:	e8 35 51 00 00       	callq  cb40 <vector_pushBack>
    7a0b:	48 85 c0             	test   %rax,%rax
    7a0e:	0f 84 2b 01 00 00    	je     7b3f <learner_score+0x2ff>
    7a14:	48 89 ee             	mov    %rbp,%rsi
    7a17:	4c 89 ff             	mov    %r15,%rdi
    7a1a:	e8 01 2b 00 00       	callq  a520 <list_iter_hasNext>
    7a1f:	48 85 c0             	test   %rax,%rax
    7a22:	75 cc                	jne    79f0 <learner_score+0x1b0>
    7a24:	4c 89 e6             	mov    %r12,%rsi
    7a27:	4c 89 ef             	mov    %r13,%rdi
    7a2a:	e8 81 53 00 00       	callq  cdb0 <vector_copy>
    7a2f:	48 85 c0             	test   %rax,%rax
    7a32:	0f 84 45 01 00 00    	je     7b7d <learner_score+0x33d>
    7a38:	48 89 de             	mov    %rbx,%rsi
    7a3b:	4c 89 ef             	mov    %r13,%rdi
    7a3e:	48 c1 e6 04          	shl    $0x4,%rsi
    7a42:	4c 01 f6             	add    %r14,%rsi
    7a45:	e8 f6 50 00 00       	callq  cb40 <vector_pushBack>
    7a4a:	48 85 c0             	test   %rax,%rax
    7a4d:	0f 84 0b 01 00 00    	je     7b5e <learner_score+0x31e>
    7a53:	48 8d 35 36 c7 ff ff 	lea    -0x38ca(%rip),%rsi        # 4190 <compareQuery>
    7a5a:	4c 89 ef             	mov    %r13,%rdi
    7a5d:	e8 2e 53 00 00       	callq  cd90 <vector_sort>
    7a62:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    7a67:	48 89 df             	mov    %rbx,%rdi
    7a6a:	4d 89 e0             	mov    %r12,%r8
    7a6d:	4c 89 e9             	mov    %r13,%rcx
    7a70:	4c 89 f2             	mov    %r14,%rdx
    7a73:	48 83 c3 01          	add    $0x1,%rbx
    7a77:	e8 44 d4 ff ff       	callq  4ec0 <computeLocalLogLikelihood.isra.0>
    7a7c:	f3 0f 58 44 24 0c    	addss  0xc(%rsp),%xmm0
    7a82:	f3 0f 11 44 24 0c    	movss  %xmm0,0xc(%rsp)
    7a88:	48 39 5c 24 10       	cmp    %rbx,0x10(%rsp)
    7a8d:	0f 85 15 ff ff ff    	jne    79a8 <learner_score+0x168>
    7a93:	4c 89 ef             	mov    %r13,%rdi
    7a96:	e8 35 50 00 00       	callq  cad0 <vector_free>
    7a9b:	4c 89 e7             	mov    %r12,%rdi
    7a9e:	e8 2d 50 00 00       	callq  cad0 <vector_free>
    7aa3:	4c 89 f7             	mov    %r14,%rdi
    7aa6:	e8 25 a8 ff ff       	callq  22d0 <free@plt>
    7aab:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    7ab0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7ab4:	48 8b 58 08          	mov    0x8(%rax),%rbx
    7ab8:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
    7abd:	e8 fe a8 ff ff       	callq  23c0 <log@plt>
    7ac2:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    7ac7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    7ace:	00 00 
    7ad0:	66 0f 28 c8          	movapd %xmm0,%xmm1
    7ad4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7ad8:	f2 48 0f 2a 44 24 20 	cvtsi2sdq 0x20(%rsp),%xmm0
    7adf:	f2 0f 59 05 d9 1e 01 	mulsd  0x11ed9(%rip),%xmm0        # 199c0 <__PRETTY_FUNCTION__.5826+0x18>
    7ae6:	00 
    7ae7:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    7aeb:	66 0f ef c9          	pxor   %xmm1,%xmm1
    7aef:	f3 48 0f 2a cb       	cvtsi2ss %rbx,%xmm1
    7af4:	f3 0f 59 4c 24 0c    	mulss  0xc(%rsp),%xmm1
    7afa:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    7afe:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    7b02:	0f 85 d2 00 00 00    	jne    7bda <learner_score+0x39a>
    7b08:	48 83 c4 48          	add    $0x48,%rsp
    7b0c:	5b                   	pop    %rbx
    7b0d:	5d                   	pop    %rbp
    7b0e:	41 5c                	pop    %r12
    7b10:	41 5d                	pop    %r13
    7b12:	41 5e                	pop    %r14
    7b14:	41 5f                	pop    %r15
    7b16:	c3                   	retq   
    7b17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7b1e:	00 00 
    7b20:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    7b27:	00 00 
    7b29:	66 0f ef ff          	pxor   %xmm7,%xmm7
    7b2d:	f3 0f 11 7c 24 0c    	movss  %xmm7,0xc(%rsp)
    7b33:	e9 5b ff ff ff       	jmpq   7a93 <learner_score+0x253>
    7b38:	31 c0                	xor    %eax,%eax
    7b3a:	e9 ff fd ff ff       	jmpq   793e <learner_score+0xfe>
    7b3f:	48 8d 0d 1a 1d 01 00 	lea    0x11d1a(%rip),%rcx        # 19860 <__PRETTY_FUNCTION__.5920>
    7b46:	ba 24 02 00 00       	mov    $0x224,%edx
    7b4b:	48 8d 35 14 1c 01 00 	lea    0x11c14(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7b52:	48 8d 3d 04 16 01 00 	lea    0x11604(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7b59:	e8 42 a8 ff ff       	callq  23a0 <__assert_fail@plt>
    7b5e:	48 8d 0d 1b 1d 01 00 	lea    0x11d1b(%rip),%rcx        # 19880 <__PRETTY_FUNCTION__.5946>
    7b65:	ba 55 02 00 00       	mov    $0x255,%edx
    7b6a:	48 8d 35 f5 1b 01 00 	lea    0x11bf5(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7b71:	48 8d 3d e5 15 01 00 	lea    0x115e5(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7b78:	e8 23 a8 ff ff       	callq  23a0 <__assert_fail@plt>
    7b7d:	48 8d 0d fc 1c 01 00 	lea    0x11cfc(%rip),%rcx        # 19880 <__PRETTY_FUNCTION__.5946>
    7b84:	ba 53 02 00 00       	mov    $0x253,%edx
    7b89:	48 8d 35 d6 1b 01 00 	lea    0x11bd6(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7b90:	48 8d 3d c6 15 01 00 	lea    0x115c6(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7b97:	e8 04 a8 ff ff       	callq  23a0 <__assert_fail@plt>
    7b9c:	48 8d 0d f5 1c 01 00 	lea    0x11cf5(%rip),%rcx        # 19898 <__PRETTY_FUNCTION__.6192>
    7ba3:	ba ed 05 00 00       	mov    $0x5ed,%edx
    7ba8:	48 8d 35 b7 1b 01 00 	lea    0x11bb7(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7baf:	48 8d 3d 14 1c 01 00 	lea    0x11c14(%rip),%rdi        # 197ca <__PRETTY_FUNCTION__.4667+0x72>
    7bb6:	e8 e5 a7 ff ff       	callq  23a0 <__assert_fail@plt>
    7bbb:	48 8d 0d d6 1c 01 00 	lea    0x11cd6(%rip),%rcx        # 19898 <__PRETTY_FUNCTION__.6192>
    7bc2:	ba e7 05 00 00       	mov    $0x5e7,%edx
    7bc7:	48 8d 35 98 1b 01 00 	lea    0x11b98(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7bce:	48 8d 3d 9b 1b 01 00 	lea    0x11b9b(%rip),%rdi        # 19770 <__PRETTY_FUNCTION__.4667+0x18>
    7bd5:	e8 c6 a7 ff ff       	callq  23a0 <__assert_fail@plt>
    7bda:	e8 81 a7 ff ff       	callq  2360 <__stack_chk_fail@plt>
    7bdf:	48 8d 0d b2 1c 01 00 	lea    0x11cb2(%rip),%rcx        # 19898 <__PRETTY_FUNCTION__.6192>
    7be6:	ba e9 05 00 00       	mov    $0x5e9,%edx
    7beb:	48 8d 35 74 1b 01 00 	lea    0x11b74(%rip),%rsi        # 19766 <__PRETTY_FUNCTION__.4667+0xe>
    7bf2:	48 8d 3d 86 1b 01 00 	lea    0x11b86(%rip),%rdi        # 1977f <__PRETTY_FUNCTION__.4667+0x27>
    7bf9:	e8 a2 a7 ff ff       	callq  23a0 <__assert_fail@plt>
    7bfe:	66 90                	xchg   %ax,%ax

0000000000007c00 <compareId>:
    7c00:	f3 0f 1e fa          	endbr64 
    7c04:	48 89 f8             	mov    %rdi,%rax
    7c07:	48 29 f0             	sub    %rsi,%rax
    7c0a:	c3                   	retq   
    7c0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007c10 <isCycle.isra.0>:
    7c10:	41 55                	push   %r13
    7c12:	41 54                	push   %r12
    7c14:	55                   	push   %rbp
    7c15:	53                   	push   %rbx
    7c16:	48 83 ec 18          	sub    $0x18,%rsp
    7c1a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7c21:	00 00 
    7c23:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7c28:	31 c0                	xor    %eax,%eax
    7c2a:	8b 02                	mov    (%rdx),%eax
    7c2c:	83 f8 01             	cmp    $0x1,%eax
    7c2f:	0f 84 a3 00 00 00    	je     7cd8 <isCycle.isra.0+0xc8>
    7c35:	83 f8 02             	cmp    $0x2,%eax
    7c38:	74 7b                	je     7cb5 <isCycle.isra.0+0xa5>
    7c3a:	85 c0                	test   %eax,%eax
    7c3c:	74 22                	je     7c60 <isCycle.isra.0+0x50>
    7c3e:	48 8d 0d 63 1f 01 00 	lea    0x11f63(%rip),%rcx        # 19ba8 <__PRETTY_FUNCTION__.4907>
    7c45:	ba 16 02 00 00       	mov    $0x216,%edx
    7c4a:	48 8d 35 9f 1d 01 00 	lea    0x11d9f(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    7c51:	48 8d 3d 73 20 01 00 	lea    0x12073(%rip),%rdi        # 19ccb <__PRETTY_FUNCTION__.4407+0x2b>
    7c58:	e8 43 a7 ff ff       	callq  23a0 <__assert_fail@plt>
    7c5d:	0f 1f 00             	nopl   (%rax)
    7c60:	c7 02 02 00 00 00    	movl   $0x2,(%rdx)
    7c66:	49 89 e5             	mov    %rsp,%r13
    7c69:	48 89 fd             	mov    %rdi,%rbp
    7c6c:	48 89 f3             	mov    %rsi,%rbx
    7c6f:	4c 89 ef             	mov    %r13,%rdi
    7c72:	49 89 d4             	mov    %rdx,%r12
    7c75:	e8 86 28 00 00       	callq  a500 <list_iter_reset>
    7c7a:	48 89 de             	mov    %rbx,%rsi
    7c7d:	4c 89 ef             	mov    %r13,%rdi
    7c80:	e8 9b 28 00 00       	callq  a520 <list_iter_hasNext>
    7c85:	48 85 c0             	test   %rax,%rax
    7c88:	74 56                	je     7ce0 <isCycle.isra.0+0xd0>
    7c8a:	48 89 de             	mov    %rbx,%rsi
    7c8d:	4c 89 ef             	mov    %r13,%rdi
    7c90:	e8 db 28 00 00       	callq  a570 <list_iter_next>
    7c95:	48 89 ef             	mov    %rbp,%rdi
    7c98:	48 89 c6             	mov    %rax,%rsi
    7c9b:	e8 70 4e 00 00       	callq  cb10 <vector_at>
    7ca0:	48 89 ef             	mov    %rbp,%rdi
    7ca3:	48 8b 70 10          	mov    0x10(%rax),%rsi
    7ca7:	48 8d 50 18          	lea    0x18(%rax),%rdx
    7cab:	e8 60 ff ff ff       	callq  7c10 <isCycle.isra.0>
    7cb0:	48 85 c0             	test   %rax,%rax
    7cb3:	74 c5                	je     7c7a <isCycle.isra.0+0x6a>
    7cb5:	b8 01 00 00 00       	mov    $0x1,%eax
    7cba:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    7cbf:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    7cc6:	00 00 
    7cc8:	75 20                	jne    7cea <isCycle.isra.0+0xda>
    7cca:	48 83 c4 18          	add    $0x18,%rsp
    7cce:	5b                   	pop    %rbx
    7ccf:	5d                   	pop    %rbp
    7cd0:	41 5c                	pop    %r12
    7cd2:	41 5d                	pop    %r13
    7cd4:	c3                   	retq   
    7cd5:	0f 1f 00             	nopl   (%rax)
    7cd8:	31 c0                	xor    %eax,%eax
    7cda:	eb de                	jmp    7cba <isCycle.isra.0+0xaa>
    7cdc:	0f 1f 40 00          	nopl   0x0(%rax)
    7ce0:	41 c7 04 24 01 00 00 	movl   $0x1,(%r12)
    7ce7:	00 
    7ce8:	eb d0                	jmp    7cba <isCycle.isra.0+0xaa>
    7cea:	e8 71 a6 ff ff       	callq  2360 <__stack_chk_fail@plt>
    7cef:	90                   	nop

0000000000007cf0 <net_alloc>:
    7cf0:	f3 0f 1e fa          	endbr64 
    7cf4:	41 57                	push   %r15
    7cf6:	41 56                	push   %r14
    7cf8:	49 89 fe             	mov    %rdi,%r14
    7cfb:	bf 08 00 00 00       	mov    $0x8,%edi
    7d00:	41 55                	push   %r13
    7d02:	41 54                	push   %r12
    7d04:	55                   	push   %rbp
    7d05:	53                   	push   %rbx
    7d06:	48 83 ec 08          	sub    $0x8,%rsp
    7d0a:	e8 41 a7 ff ff       	callq  2450 <malloc@plt>
    7d0f:	49 89 c7             	mov    %rax,%r15
    7d12:	48 85 c0             	test   %rax,%rax
    7d15:	0f 84 de 00 00 00    	je     7df9 <net_alloc+0x109>
    7d1b:	4c 89 f7             	mov    %r14,%rdi
    7d1e:	e8 ed 4c 00 00       	callq  ca10 <vector_alloc>
    7d23:	49 89 c5             	mov    %rax,%r13
    7d26:	48 85 c0             	test   %rax,%rax
    7d29:	0f 84 bf 00 00 00    	je     7dee <net_alloc+0xfe>
    7d2f:	31 db                	xor    %ebx,%ebx
    7d31:	4c 8d 25 c8 fe ff ff 	lea    -0x138(%rip),%r12        # 7c00 <compareId>
    7d38:	4d 85 f6             	test   %r14,%r14
    7d3b:	7f 45                	jg     7d82 <net_alloc+0x92>
    7d3d:	e9 de 00 00 00       	jmpq   7e20 <net_alloc+0x130>
    7d42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7d48:	4c 89 e7             	mov    %r12,%rdi
    7d4b:	e8 60 28 00 00       	callq  a5b0 <list_alloc>
    7d50:	48 89 45 10          	mov    %rax,0x10(%rbp)
    7d54:	48 85 c0             	test   %rax,%rax
    7d57:	0f 84 b3 00 00 00    	je     7e10 <net_alloc+0x120>
    7d5d:	48 89 5d 00          	mov    %rbx,0x0(%rbp)
    7d61:	48 89 ee             	mov    %rbp,%rsi
    7d64:	4c 89 ef             	mov    %r13,%rdi
    7d67:	e8 d4 4d 00 00       	callq  cb40 <vector_pushBack>
    7d6c:	48 85 c0             	test   %rax,%rax
    7d6f:	0f 84 b0 00 00 00    	je     7e25 <net_alloc+0x135>
    7d75:	48 83 c3 01          	add    $0x1,%rbx
    7d79:	49 39 de             	cmp    %rbx,%r14
    7d7c:	0f 84 9e 00 00 00    	je     7e20 <net_alloc+0x130>
    7d82:	bf 20 00 00 00       	mov    $0x20,%edi
    7d87:	e8 c4 a6 ff ff       	callq  2450 <malloc@plt>
    7d8c:	48 89 c5             	mov    %rax,%rbp
    7d8f:	48 85 c0             	test   %rax,%rax
    7d92:	74 19                	je     7dad <net_alloc+0xbd>
    7d94:	4c 89 e7             	mov    %r12,%rdi
    7d97:	e8 14 28 00 00       	callq  a5b0 <list_alloc>
    7d9c:	48 89 45 08          	mov    %rax,0x8(%rbp)
    7da0:	48 85 c0             	test   %rax,%rax
    7da3:	75 a3                	jne    7d48 <net_alloc+0x58>
    7da5:	48 89 ef             	mov    %rbp,%rdi
    7da8:	e8 23 a5 ff ff       	callq  22d0 <free@plt>
    7dad:	45 31 e4             	xor    %r12d,%r12d
    7db0:	48 85 db             	test   %rbx,%rbx
    7db3:	74 31                	je     7de6 <net_alloc+0xf6>
    7db5:	4c 89 e6             	mov    %r12,%rsi
    7db8:	4c 89 ef             	mov    %r13,%rdi
    7dbb:	49 83 c4 01          	add    $0x1,%r12
    7dbf:	e8 4c 4d 00 00       	callq  cb10 <vector_at>
    7dc4:	48 8b 78 10          	mov    0x10(%rax),%rdi
    7dc8:	48 89 c5             	mov    %rax,%rbp
    7dcb:	e8 50 29 00 00       	callq  a720 <Plist_free>
    7dd0:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    7dd4:	e8 47 29 00 00       	callq  a720 <Plist_free>
    7dd9:	48 89 ef             	mov    %rbp,%rdi
    7ddc:	e8 ef a4 ff ff       	callq  22d0 <free@plt>
    7de1:	49 39 dc             	cmp    %rbx,%r12
    7de4:	75 cf                	jne    7db5 <net_alloc+0xc5>
    7de6:	4c 89 ef             	mov    %r13,%rdi
    7de9:	e8 e2 4c 00 00       	callq  cad0 <vector_free>
    7dee:	4c 89 ff             	mov    %r15,%rdi
    7df1:	45 31 ff             	xor    %r15d,%r15d
    7df4:	e8 d7 a4 ff ff       	callq  22d0 <free@plt>
    7df9:	48 83 c4 08          	add    $0x8,%rsp
    7dfd:	4c 89 f8             	mov    %r15,%rax
    7e00:	5b                   	pop    %rbx
    7e01:	5d                   	pop    %rbp
    7e02:	41 5c                	pop    %r12
    7e04:	41 5d                	pop    %r13
    7e06:	41 5e                	pop    %r14
    7e08:	41 5f                	pop    %r15
    7e0a:	c3                   	retq   
    7e0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7e10:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    7e14:	e8 57 28 00 00       	callq  a670 <list_free>
    7e19:	eb 8a                	jmp    7da5 <net_alloc+0xb5>
    7e1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7e20:	4d 89 2f             	mov    %r13,(%r15)
    7e23:	eb d4                	jmp    7df9 <net_alloc+0x109>
    7e25:	48 8d 0d 2c 1e 01 00 	lea    0x11e2c(%rip),%rcx        # 19c58 <__PRETTY_FUNCTION__.4727>
    7e2c:	ba bb 00 00 00       	mov    $0xbb,%edx
    7e31:	48 8d 35 b8 1b 01 00 	lea    0x11bb8(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    7e38:	48 8d 3d 1e 13 01 00 	lea    0x1131e(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7e3f:	e8 5c a5 ff ff       	callq  23a0 <__assert_fail@plt>
    7e44:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7e4b:	00 00 00 00 
    7e4f:	90                   	nop

0000000000007e50 <net_free>:
    7e50:	f3 0f 1e fa          	endbr64 
    7e54:	41 56                	push   %r14
    7e56:	49 89 fe             	mov    %rdi,%r14
    7e59:	41 55                	push   %r13
    7e5b:	41 54                	push   %r12
    7e5d:	55                   	push   %rbp
    7e5e:	53                   	push   %rbx
    7e5f:	4c 8b 2f             	mov    (%rdi),%r13
    7e62:	4c 89 ef             	mov    %r13,%rdi
    7e65:	e8 06 4f 00 00       	callq  cd70 <vector_getSize>
    7e6a:	48 85 c0             	test   %rax,%rax
    7e6d:	7e 3a                	jle    7ea9 <net_free+0x59>
    7e6f:	49 89 c4             	mov    %rax,%r12
    7e72:	31 db                	xor    %ebx,%ebx
    7e74:	0f 1f 40 00          	nopl   0x0(%rax)
    7e78:	48 89 de             	mov    %rbx,%rsi
    7e7b:	4c 89 ef             	mov    %r13,%rdi
    7e7e:	48 83 c3 01          	add    $0x1,%rbx
    7e82:	e8 89 4c 00 00       	callq  cb10 <vector_at>
    7e87:	48 8b 78 10          	mov    0x10(%rax),%rdi
    7e8b:	48 89 c5             	mov    %rax,%rbp
    7e8e:	e8 8d 28 00 00       	callq  a720 <Plist_free>
    7e93:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    7e97:	e8 84 28 00 00       	callq  a720 <Plist_free>
    7e9c:	48 89 ef             	mov    %rbp,%rdi
    7e9f:	e8 2c a4 ff ff       	callq  22d0 <free@plt>
    7ea4:	49 39 dc             	cmp    %rbx,%r12
    7ea7:	75 cf                	jne    7e78 <net_free+0x28>
    7ea9:	49 8b 3e             	mov    (%r14),%rdi
    7eac:	e8 1f 4c 00 00       	callq  cad0 <vector_free>
    7eb1:	5b                   	pop    %rbx
    7eb2:	4c 89 f7             	mov    %r14,%rdi
    7eb5:	5d                   	pop    %rbp
    7eb6:	41 5c                	pop    %r12
    7eb8:	41 5d                	pop    %r13
    7eba:	41 5e                	pop    %r14
    7ebc:	e9 0f a4 ff ff       	jmpq   22d0 <free@plt>
    7ec1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    7ec8:	00 00 00 00 
    7ecc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007ed0 <net_applyOperation>:
    7ed0:	f3 0f 1e fa          	endbr64 
    7ed4:	41 55                	push   %r13
    7ed6:	41 54                	push   %r12
    7ed8:	49 89 cc             	mov    %rcx,%r12
    7edb:	55                   	push   %rbp
    7edc:	48 89 d5             	mov    %rdx,%rbp
    7edf:	53                   	push   %rbx
    7ee0:	48 89 fb             	mov    %rdi,%rbx
    7ee3:	48 83 ec 08          	sub    $0x8,%rsp
    7ee7:	83 fe 01             	cmp    $0x1,%esi
    7eea:	74 34                	je     7f20 <net_applyOperation+0x50>
    7eec:	83 fe 02             	cmp    $0x2,%esi
    7eef:	0f 84 db 00 00 00    	je     7fd0 <net_applyOperation+0x100>
    7ef5:	85 f6                	test   %esi,%esi
    7ef7:	74 77                	je     7f70 <net_applyOperation+0xa0>
    7ef9:	48 8d 0d 40 1d 01 00 	lea    0x11d40(%rip),%rcx        # 19c40 <__PRETTY_FUNCTION__.4810>
    7f00:	ba 53 01 00 00       	mov    $0x153,%edx
    7f05:	48 8d 35 e4 1a 01 00 	lea    0x11ae4(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    7f0c:	48 8d 3d b8 1d 01 00 	lea    0x11db8(%rip),%rdi        # 19ccb <__PRETTY_FUNCTION__.4407+0x2b>
    7f13:	e8 88 a4 ff ff       	callq  23a0 <__assert_fail@plt>
    7f18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7f1f:	00 
    7f20:	4c 8b 2f             	mov    (%rdi),%r13
    7f23:	48 89 ce             	mov    %rcx,%rsi
    7f26:	4c 89 ef             	mov    %r13,%rdi
    7f29:	e8 e2 4b 00 00       	callq  cb10 <vector_at>
    7f2e:	48 89 ee             	mov    %rbp,%rsi
    7f31:	48 8b 78 08          	mov    0x8(%rax),%rdi
    7f35:	e8 a6 2c 00 00       	callq  abe0 <list_remove>
    7f3a:	48 85 c0             	test   %rax,%rax
    7f3d:	0f 84 12 01 00 00    	je     8055 <net_applyOperation+0x185>
    7f43:	48 89 ee             	mov    %rbp,%rsi
    7f46:	4c 89 ef             	mov    %r13,%rdi
    7f49:	e8 c2 4b 00 00       	callq  cb10 <vector_at>
    7f4e:	4c 89 e6             	mov    %r12,%rsi
    7f51:	48 8b 78 10          	mov    0x10(%rax),%rdi
    7f55:	e8 86 2c 00 00       	callq  abe0 <list_remove>
    7f5a:	48 85 c0             	test   %rax,%rax
    7f5d:	0f 84 11 01 00 00    	je     8074 <net_applyOperation+0x1a4>
    7f63:	48 83 c4 08          	add    $0x8,%rsp
    7f67:	5b                   	pop    %rbx
    7f68:	5d                   	pop    %rbp
    7f69:	41 5c                	pop    %r12
    7f6b:	41 5d                	pop    %r13
    7f6d:	c3                   	retq   
    7f6e:	66 90                	xchg   %ax,%ax
    7f70:	4c 8b 2f             	mov    (%rdi),%r13
    7f73:	48 89 ce             	mov    %rcx,%rsi
    7f76:	4c 89 ef             	mov    %r13,%rdi
    7f79:	e8 92 4b 00 00       	callq  cb10 <vector_at>
    7f7e:	48 89 ee             	mov    %rbp,%rsi
    7f81:	48 8b 78 08          	mov    0x8(%rax),%rdi
    7f85:	e8 b6 2a 00 00       	callq  aa40 <list_insert>
    7f8a:	48 85 c0             	test   %rax,%rax
    7f8d:	0f 84 00 01 00 00    	je     8093 <net_applyOperation+0x1c3>
    7f93:	48 89 ee             	mov    %rbp,%rsi
    7f96:	4c 89 ef             	mov    %r13,%rdi
    7f99:	e8 72 4b 00 00       	callq  cb10 <vector_at>
    7f9e:	4c 89 e6             	mov    %r12,%rsi
    7fa1:	48 8b 78 10          	mov    0x10(%rax),%rdi
    7fa5:	e8 96 2a 00 00       	callq  aa40 <list_insert>
    7faa:	48 85 c0             	test   %rax,%rax
    7fad:	75 b4                	jne    7f63 <net_applyOperation+0x93>
    7faf:	48 8d 0d 72 1c 01 00 	lea    0x11c72(%rip),%rcx        # 19c28 <__PRETTY_FUNCTION__.4750>
    7fb6:	ba e9 00 00 00       	mov    $0xe9,%edx
    7fbb:	48 8d 35 2e 1a 01 00 	lea    0x11a2e(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    7fc2:	48 8d 3d 94 11 01 00 	lea    0x11194(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    7fc9:	e8 d2 a3 ff ff       	callq  23a0 <__assert_fail@plt>
    7fce:	66 90                	xchg   %ax,%ax
    7fd0:	4c 8b 2f             	mov    (%rdi),%r13
    7fd3:	48 89 ce             	mov    %rcx,%rsi
    7fd6:	4c 89 ef             	mov    %r13,%rdi
    7fd9:	e8 32 4b 00 00       	callq  cb10 <vector_at>
    7fde:	48 89 ee             	mov    %rbp,%rsi
    7fe1:	48 8b 78 08          	mov    0x8(%rax),%rdi
    7fe5:	e8 f6 2b 00 00       	callq  abe0 <list_remove>
    7fea:	48 85 c0             	test   %rax,%rax
    7fed:	74 66                	je     8055 <net_applyOperation+0x185>
    7fef:	48 89 ee             	mov    %rbp,%rsi
    7ff2:	4c 89 ef             	mov    %r13,%rdi
    7ff5:	e8 16 4b 00 00       	callq  cb10 <vector_at>
    7ffa:	4c 89 e6             	mov    %r12,%rsi
    7ffd:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8001:	e8 da 2b 00 00       	callq  abe0 <list_remove>
    8006:	48 85 c0             	test   %rax,%rax
    8009:	74 69                	je     8074 <net_applyOperation+0x1a4>
    800b:	4c 8b 2b             	mov    (%rbx),%r13
    800e:	48 89 ee             	mov    %rbp,%rsi
    8011:	4c 89 ef             	mov    %r13,%rdi
    8014:	e8 f7 4a 00 00       	callq  cb10 <vector_at>
    8019:	4c 89 e6             	mov    %r12,%rsi
    801c:	48 8b 78 08          	mov    0x8(%rax),%rdi
    8020:	e8 1b 2a 00 00       	callq  aa40 <list_insert>
    8025:	48 85 c0             	test   %rax,%rax
    8028:	74 69                	je     8093 <net_applyOperation+0x1c3>
    802a:	4c 89 e6             	mov    %r12,%rsi
    802d:	4c 89 ef             	mov    %r13,%rdi
    8030:	e8 db 4a 00 00       	callq  cb10 <vector_at>
    8035:	48 89 ee             	mov    %rbp,%rsi
    8038:	48 8b 78 10          	mov    0x10(%rax),%rdi
    803c:	e8 ff 29 00 00       	callq  aa40 <list_insert>
    8041:	48 85 c0             	test   %rax,%rax
    8044:	0f 84 65 ff ff ff    	je     7faf <net_applyOperation+0xdf>
    804a:	48 83 c4 08          	add    $0x8,%rsp
    804e:	5b                   	pop    %rbx
    804f:	5d                   	pop    %rbp
    8050:	41 5c                	pop    %r12
    8052:	41 5d                	pop    %r13
    8054:	c3                   	retq   
    8055:	48 8d 0d bc 1b 01 00 	lea    0x11bbc(%rip),%rcx        # 19c18 <__PRETTY_FUNCTION__.4774>
    805c:	ba 10 01 00 00       	mov    $0x110,%edx
    8061:	48 8d 35 88 19 01 00 	lea    0x11988(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8068:	48 8d 3d ee 10 01 00 	lea    0x110ee(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    806f:	e8 2c a3 ff ff       	callq  23a0 <__assert_fail@plt>
    8074:	48 8d 0d 9d 1b 01 00 	lea    0x11b9d(%rip),%rcx        # 19c18 <__PRETTY_FUNCTION__.4774>
    807b:	ba 15 01 00 00       	mov    $0x115,%edx
    8080:	48 8d 35 69 19 01 00 	lea    0x11969(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8087:	48 8d 3d cf 10 01 00 	lea    0x110cf(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    808e:	e8 0d a3 ff ff       	callq  23a0 <__assert_fail@plt>
    8093:	48 8d 0d 8e 1b 01 00 	lea    0x11b8e(%rip),%rcx        # 19c28 <__PRETTY_FUNCTION__.4750>
    809a:	ba e4 00 00 00       	mov    $0xe4,%edx
    809f:	48 8d 35 4a 19 01 00 	lea    0x1194a(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    80a6:	48 8d 3d b0 10 01 00 	lea    0x110b0(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    80ad:	e8 ee a2 ff ff       	callq  23a0 <__assert_fail@plt>
    80b2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    80b9:	00 00 00 00 
    80bd:	0f 1f 00             	nopl   (%rax)

00000000000080c0 <TMnet_applyOperation>:
    80c0:	f3 0f 1e fa          	endbr64 
    80c4:	41 55                	push   %r13
    80c6:	41 54                	push   %r12
    80c8:	49 89 cc             	mov    %rcx,%r12
    80cb:	55                   	push   %rbp
    80cc:	48 89 d5             	mov    %rdx,%rbp
    80cf:	53                   	push   %rbx
    80d0:	48 89 fb             	mov    %rdi,%rbx
    80d3:	48 83 ec 08          	sub    $0x8,%rsp
    80d7:	83 fe 01             	cmp    $0x1,%esi
    80da:	74 34                	je     8110 <TMnet_applyOperation+0x50>
    80dc:	83 fe 02             	cmp    $0x2,%esi
    80df:	0f 84 db 00 00 00    	je     81c0 <TMnet_applyOperation+0x100>
    80e5:	85 f6                	test   %esi,%esi
    80e7:	74 77                	je     8160 <TMnet_applyOperation+0xa0>
    80e9:	48 8d 0d 10 1b 01 00 	lea    0x11b10(%rip),%rcx        # 19c00 <__PRETTY_FUNCTION__.4822>
    80f0:	ba 65 01 00 00       	mov    $0x165,%edx
    80f5:	48 8d 35 f4 18 01 00 	lea    0x118f4(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    80fc:	48 8d 3d c8 1b 01 00 	lea    0x11bc8(%rip),%rdi        # 19ccb <__PRETTY_FUNCTION__.4407+0x2b>
    8103:	e8 98 a2 ff ff       	callq  23a0 <__assert_fail@plt>
    8108:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    810f:	00 
    8110:	4c 8b 2f             	mov    (%rdi),%r13
    8113:	48 89 ce             	mov    %rcx,%rsi
    8116:	4c 89 ef             	mov    %r13,%rdi
    8119:	e8 f2 49 00 00       	callq  cb10 <vector_at>
    811e:	48 89 ee             	mov    %rbp,%rsi
    8121:	48 8b 78 08          	mov    0x8(%rax),%rdi
    8125:	e8 16 2c 00 00       	callq  ad40 <TMlist_remove>
    812a:	48 85 c0             	test   %rax,%rax
    812d:	0f 84 12 01 00 00    	je     8245 <TMnet_applyOperation+0x185>
    8133:	48 89 ee             	mov    %rbp,%rsi
    8136:	4c 89 ef             	mov    %r13,%rdi
    8139:	e8 d2 49 00 00       	callq  cb10 <vector_at>
    813e:	4c 89 e6             	mov    %r12,%rsi
    8141:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8145:	e8 f6 2b 00 00       	callq  ad40 <TMlist_remove>
    814a:	48 85 c0             	test   %rax,%rax
    814d:	0f 84 11 01 00 00    	je     8264 <TMnet_applyOperation+0x1a4>
    8153:	48 83 c4 08          	add    $0x8,%rsp
    8157:	5b                   	pop    %rbx
    8158:	5d                   	pop    %rbp
    8159:	41 5c                	pop    %r12
    815b:	41 5d                	pop    %r13
    815d:	c3                   	retq   
    815e:	66 90                	xchg   %ax,%ax
    8160:	4c 8b 2f             	mov    (%rdi),%r13
    8163:	48 89 ce             	mov    %rcx,%rsi
    8166:	4c 89 ef             	mov    %r13,%rdi
    8169:	e8 a2 49 00 00       	callq  cb10 <vector_at>
    816e:	48 89 ee             	mov    %rbp,%rsi
    8171:	48 8b 78 08          	mov    0x8(%rax),%rdi
    8175:	e8 86 29 00 00       	callq  ab00 <TMlist_insert>
    817a:	48 85 c0             	test   %rax,%rax
    817d:	0f 84 00 01 00 00    	je     8283 <TMnet_applyOperation+0x1c3>
    8183:	48 89 ee             	mov    %rbp,%rsi
    8186:	4c 89 ef             	mov    %r13,%rdi
    8189:	e8 82 49 00 00       	callq  cb10 <vector_at>
    818e:	4c 89 e6             	mov    %r12,%rsi
    8191:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8195:	e8 66 29 00 00       	callq  ab00 <TMlist_insert>
    819a:	48 85 c0             	test   %rax,%rax
    819d:	75 b4                	jne    8153 <TMnet_applyOperation+0x93>
    819f:	48 8d 0d 4a 1a 01 00 	lea    0x11a4a(%rip),%rcx        # 19bf0 <__PRETTY_FUNCTION__.4762>
    81a6:	ba ff 00 00 00       	mov    $0xff,%edx
    81ab:	48 8d 35 3e 18 01 00 	lea    0x1183e(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    81b2:	48 8d 3d a4 0f 01 00 	lea    0x10fa4(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    81b9:	e8 e2 a1 ff ff       	callq  23a0 <__assert_fail@plt>
    81be:	66 90                	xchg   %ax,%ax
    81c0:	4c 8b 2f             	mov    (%rdi),%r13
    81c3:	48 89 ce             	mov    %rcx,%rsi
    81c6:	4c 89 ef             	mov    %r13,%rdi
    81c9:	e8 42 49 00 00       	callq  cb10 <vector_at>
    81ce:	48 89 ee             	mov    %rbp,%rsi
    81d1:	48 8b 78 08          	mov    0x8(%rax),%rdi
    81d5:	e8 66 2b 00 00       	callq  ad40 <TMlist_remove>
    81da:	48 85 c0             	test   %rax,%rax
    81dd:	74 66                	je     8245 <TMnet_applyOperation+0x185>
    81df:	48 89 ee             	mov    %rbp,%rsi
    81e2:	4c 89 ef             	mov    %r13,%rdi
    81e5:	e8 26 49 00 00       	callq  cb10 <vector_at>
    81ea:	4c 89 e6             	mov    %r12,%rsi
    81ed:	48 8b 78 10          	mov    0x10(%rax),%rdi
    81f1:	e8 4a 2b 00 00       	callq  ad40 <TMlist_remove>
    81f6:	48 85 c0             	test   %rax,%rax
    81f9:	74 69                	je     8264 <TMnet_applyOperation+0x1a4>
    81fb:	4c 8b 2b             	mov    (%rbx),%r13
    81fe:	48 89 ee             	mov    %rbp,%rsi
    8201:	4c 89 ef             	mov    %r13,%rdi
    8204:	e8 07 49 00 00       	callq  cb10 <vector_at>
    8209:	4c 89 e6             	mov    %r12,%rsi
    820c:	48 8b 78 08          	mov    0x8(%rax),%rdi
    8210:	e8 eb 28 00 00       	callq  ab00 <TMlist_insert>
    8215:	48 85 c0             	test   %rax,%rax
    8218:	74 69                	je     8283 <TMnet_applyOperation+0x1c3>
    821a:	4c 89 e6             	mov    %r12,%rsi
    821d:	4c 89 ef             	mov    %r13,%rdi
    8220:	e8 eb 48 00 00       	callq  cb10 <vector_at>
    8225:	48 89 ee             	mov    %rbp,%rsi
    8228:	48 8b 78 10          	mov    0x10(%rax),%rdi
    822c:	e8 cf 28 00 00       	callq  ab00 <TMlist_insert>
    8231:	48 85 c0             	test   %rax,%rax
    8234:	0f 84 65 ff ff ff    	je     819f <TMnet_applyOperation+0xdf>
    823a:	48 83 c4 08          	add    $0x8,%rsp
    823e:	5b                   	pop    %rbx
    823f:	5d                   	pop    %rbp
    8240:	41 5c                	pop    %r12
    8242:	41 5d                	pop    %r13
    8244:	c3                   	retq   
    8245:	48 8d 0d 94 19 01 00 	lea    0x11994(%rip),%rcx        # 19be0 <__PRETTY_FUNCTION__.4786>
    824c:	ba 26 01 00 00       	mov    $0x126,%edx
    8251:	48 8d 35 98 17 01 00 	lea    0x11798(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8258:	48 8d 3d fe 0e 01 00 	lea    0x10efe(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    825f:	e8 3c a1 ff ff       	callq  23a0 <__assert_fail@plt>
    8264:	48 8d 0d 75 19 01 00 	lea    0x11975(%rip),%rcx        # 19be0 <__PRETTY_FUNCTION__.4786>
    826b:	ba 2b 01 00 00       	mov    $0x12b,%edx
    8270:	48 8d 35 79 17 01 00 	lea    0x11779(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8277:	48 8d 3d df 0e 01 00 	lea    0x10edf(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    827e:	e8 1d a1 ff ff       	callq  23a0 <__assert_fail@plt>
    8283:	48 8d 0d 66 19 01 00 	lea    0x11966(%rip),%rcx        # 19bf0 <__PRETTY_FUNCTION__.4762>
    828a:	ba fa 00 00 00       	mov    $0xfa,%edx
    828f:	48 8d 35 5a 17 01 00 	lea    0x1175a(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8296:	48 8d 3d c0 0e 01 00 	lea    0x10ec0(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    829d:	e8 fe a0 ff ff       	callq  23a0 <__assert_fail@plt>
    82a2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    82a9:	00 00 00 00 
    82ad:	0f 1f 00             	nopl   (%rax)

00000000000082b0 <net_hasEdge>:
    82b0:	f3 0f 1e fa          	endbr64 
    82b4:	41 54                	push   %r12
    82b6:	49 89 f4             	mov    %rsi,%r12
    82b9:	48 89 d6             	mov    %rdx,%rsi
    82bc:	55                   	push   %rbp
    82bd:	53                   	push   %rbx
    82be:	48 83 ec 10          	sub    $0x10,%rsp
    82c2:	48 8b 3f             	mov    (%rdi),%rdi
    82c5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    82cc:	00 00 
    82ce:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    82d3:	31 c0                	xor    %eax,%eax
    82d5:	48 89 e3             	mov    %rsp,%rbx
    82d8:	e8 33 48 00 00       	callq  cb10 <vector_at>
    82dd:	48 89 df             	mov    %rbx,%rdi
    82e0:	48 8b 68 08          	mov    0x8(%rax),%rbp
    82e4:	48 89 ee             	mov    %rbp,%rsi
    82e7:	e8 14 22 00 00       	callq  a500 <list_iter_reset>
    82ec:	eb 12                	jmp    8300 <net_hasEdge+0x50>
    82ee:	66 90                	xchg   %ax,%ax
    82f0:	48 89 ee             	mov    %rbp,%rsi
    82f3:	48 89 df             	mov    %rbx,%rdi
    82f6:	e8 75 22 00 00       	callq  a570 <list_iter_next>
    82fb:	4c 39 e0             	cmp    %r12,%rax
    82fe:	74 30                	je     8330 <net_hasEdge+0x80>
    8300:	48 89 ee             	mov    %rbp,%rsi
    8303:	48 89 df             	mov    %rbx,%rdi
    8306:	e8 15 22 00 00       	callq  a520 <list_iter_hasNext>
    830b:	48 85 c0             	test   %rax,%rax
    830e:	75 e0                	jne    82f0 <net_hasEdge+0x40>
    8310:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    8315:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    831c:	00 00 
    831e:	75 17                	jne    8337 <net_hasEdge+0x87>
    8320:	48 83 c4 10          	add    $0x10,%rsp
    8324:	5b                   	pop    %rbx
    8325:	5d                   	pop    %rbp
    8326:	41 5c                	pop    %r12
    8328:	c3                   	retq   
    8329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8330:	b8 01 00 00 00       	mov    $0x1,%eax
    8335:	eb d9                	jmp    8310 <net_hasEdge+0x60>
    8337:	e8 24 a0 ff ff       	callq  2360 <__stack_chk_fail@plt>
    833c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008340 <TMnet_hasEdge>:
    8340:	f3 0f 1e fa          	endbr64 
    8344:	41 54                	push   %r12
    8346:	49 89 f4             	mov    %rsi,%r12
    8349:	48 89 d6             	mov    %rdx,%rsi
    834c:	55                   	push   %rbp
    834d:	53                   	push   %rbx
    834e:	48 83 ec 10          	sub    $0x10,%rsp
    8352:	48 8b 3f             	mov    (%rdi),%rdi
    8355:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    835c:	00 00 
    835e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8363:	31 c0                	xor    %eax,%eax
    8365:	48 89 e3             	mov    %rsp,%rbx
    8368:	e8 a3 47 00 00       	callq  cb10 <vector_at>
    836d:	48 89 df             	mov    %rbx,%rdi
    8370:	48 8b 68 08          	mov    0x8(%rax),%rbp
    8374:	48 89 ee             	mov    %rbp,%rsi
    8377:	e8 94 21 00 00       	callq  a510 <TMlist_iter_reset>
    837c:	eb 12                	jmp    8390 <TMnet_hasEdge+0x50>
    837e:	66 90                	xchg   %ax,%ax
    8380:	48 89 ee             	mov    %rbp,%rsi
    8383:	48 89 df             	mov    %rbx,%rdi
    8386:	e8 05 22 00 00       	callq  a590 <TMlist_iter_next>
    838b:	4c 39 e0             	cmp    %r12,%rax
    838e:	74 30                	je     83c0 <TMnet_hasEdge+0x80>
    8390:	48 89 ee             	mov    %rbp,%rsi
    8393:	48 89 df             	mov    %rbx,%rdi
    8396:	e8 a5 21 00 00       	callq  a540 <TMlist_iter_hasNext>
    839b:	48 85 c0             	test   %rax,%rax
    839e:	75 e0                	jne    8380 <TMnet_hasEdge+0x40>
    83a0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    83a5:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    83ac:	00 00 
    83ae:	75 17                	jne    83c7 <TMnet_hasEdge+0x87>
    83b0:	48 83 c4 10          	add    $0x10,%rsp
    83b4:	5b                   	pop    %rbx
    83b5:	5d                   	pop    %rbp
    83b6:	41 5c                	pop    %r12
    83b8:	c3                   	retq   
    83b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    83c0:	b8 01 00 00 00       	mov    $0x1,%eax
    83c5:	eb d9                	jmp    83a0 <TMnet_hasEdge+0x60>
    83c7:	e8 94 9f ff ff       	callq  2360 <__stack_chk_fail@plt>
    83cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000083d0 <net_isPath>:
    83d0:	f3 0f 1e fa          	endbr64 
    83d4:	41 57                	push   %r15
    83d6:	41 56                	push   %r14
    83d8:	41 55                	push   %r13
    83da:	4d 89 c5             	mov    %r8,%r13
    83dd:	41 54                	push   %r12
    83df:	49 89 cc             	mov    %rcx,%r12
    83e2:	55                   	push   %rbp
    83e3:	48 89 f5             	mov    %rsi,%rbp
    83e6:	53                   	push   %rbx
    83e7:	48 83 ec 28          	sub    $0x28,%rsp
    83eb:	4c 8b 3f             	mov    (%rdi),%r15
    83ee:	48 8b 19             	mov    (%rcx),%rbx
    83f1:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    83f6:	4c 89 ff             	mov    %r15,%rdi
    83f9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8400:	00 00 
    8402:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8407:	31 c0                	xor    %eax,%eax
    8409:	e8 62 49 00 00       	callq  cd70 <vector_getSize>
    840e:	48 39 c3             	cmp    %rax,%rbx
    8411:	0f 85 58 01 00 00    	jne    856f <net_isPath+0x19f>
    8417:	4c 89 e7             	mov    %r12,%rdi
    841a:	e8 c1 1d 00 00       	callq  a1e0 <bitmap_clearAll>
    841f:	4c 89 ef             	mov    %r13,%rdi
    8422:	e8 09 32 00 00       	callq  b630 <queue_clear>
    8427:	48 89 ee             	mov    %rbp,%rsi
    842a:	4c 89 ef             	mov    %r13,%rdi
    842d:	e8 3e 33 00 00       	callq  b770 <queue_push>
    8432:	48 85 c0             	test   %rax,%rax
    8435:	0f 84 f2 00 00 00    	je     852d <net_isPath+0x15d>
    843b:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    8440:	4c 89 ef             	mov    %r13,%rdi
    8443:	e8 c8 31 00 00       	callq  b610 <queue_isEmpty>
    8448:	48 85 c0             	test   %rax,%rax
    844b:	0f 85 a7 00 00 00    	jne    84f8 <net_isPath+0x128>
    8451:	4c 89 ef             	mov    %r13,%rdi
    8454:	e8 87 3c 00 00       	callq  c0e0 <queue_pop>
    8459:	48 89 c3             	mov    %rax,%rbx
    845c:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    8461:	0f 84 b2 00 00 00    	je     8519 <net_isPath+0x149>
    8467:	48 89 c6             	mov    %rax,%rsi
    846a:	4c 89 e7             	mov    %r12,%rdi
    846d:	e8 0e 1d 00 00       	callq  a180 <bitmap_set>
    8472:	48 85 c0             	test   %rax,%rax
    8475:	0f 84 d5 00 00 00    	je     8550 <net_isPath+0x180>
    847b:	48 89 de             	mov    %rbx,%rsi
    847e:	4c 89 ff             	mov    %r15,%rdi
    8481:	e8 8a 46 00 00       	callq  cb10 <vector_at>
    8486:	48 89 ef             	mov    %rbp,%rdi
    8489:	48 8b 58 10          	mov    0x10(%rax),%rbx
    848d:	48 89 de             	mov    %rbx,%rsi
    8490:	e8 6b 20 00 00       	callq  a500 <list_iter_reset>
    8495:	0f 1f 00             	nopl   (%rax)
    8498:	48 89 de             	mov    %rbx,%rsi
    849b:	48 89 ef             	mov    %rbp,%rdi
    849e:	e8 7d 20 00 00       	callq  a520 <list_iter_hasNext>
    84a3:	48 85 c0             	test   %rax,%rax
    84a6:	74 98                	je     8440 <net_isPath+0x70>
    84a8:	48 89 de             	mov    %rbx,%rsi
    84ab:	48 89 ef             	mov    %rbp,%rdi
    84ae:	e8 bd 20 00 00       	callq  a570 <list_iter_next>
    84b3:	4c 89 e7             	mov    %r12,%rdi
    84b6:	48 89 c6             	mov    %rax,%rsi
    84b9:	49 89 c6             	mov    %rax,%r14
    84bc:	e8 6f 1d 00 00       	callq  a230 <bitmap_isSet>
    84c1:	48 85 c0             	test   %rax,%rax
    84c4:	75 d2                	jne    8498 <net_isPath+0xc8>
    84c6:	4c 89 f6             	mov    %r14,%rsi
    84c9:	4c 89 ef             	mov    %r13,%rdi
    84cc:	e8 9f 32 00 00       	callq  b770 <queue_push>
    84d1:	48 85 c0             	test   %rax,%rax
    84d4:	75 c2                	jne    8498 <net_isPath+0xc8>
    84d6:	48 8d 0d f3 16 01 00 	lea    0x116f3(%rip),%rcx        # 19bd0 <__PRETTY_FUNCTION__.4858>
    84dd:	ba c0 01 00 00       	mov    $0x1c0,%edx
    84e2:	48 8d 35 07 15 01 00 	lea    0x11507(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    84e9:	48 8d 3d 6d 0c 01 00 	lea    0x10c6d(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    84f0:	e8 ab 9e ff ff       	callq  23a0 <__assert_fail@plt>
    84f5:	0f 1f 00             	nopl   (%rax)
    84f8:	31 c0                	xor    %eax,%eax
    84fa:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    84ff:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    8506:	00 00 
    8508:	75 1e                	jne    8528 <net_isPath+0x158>
    850a:	48 83 c4 28          	add    $0x28,%rsp
    850e:	5b                   	pop    %rbx
    850f:	5d                   	pop    %rbp
    8510:	41 5c                	pop    %r12
    8512:	41 5d                	pop    %r13
    8514:	41 5e                	pop    %r14
    8516:	41 5f                	pop    %r15
    8518:	c3                   	retq   
    8519:	4c 89 ef             	mov    %r13,%rdi
    851c:	e8 0f 31 00 00       	callq  b630 <queue_clear>
    8521:	b8 01 00 00 00       	mov    $0x1,%eax
    8526:	eb d2                	jmp    84fa <net_isPath+0x12a>
    8528:	e8 33 9e ff ff       	callq  2360 <__stack_chk_fail@plt>
    852d:	48 8d 0d 9c 16 01 00 	lea    0x1169c(%rip),%rcx        # 19bd0 <__PRETTY_FUNCTION__.4858>
    8534:	ba ae 01 00 00       	mov    $0x1ae,%edx
    8539:	48 8d 35 b0 14 01 00 	lea    0x114b0(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8540:	48 8d 3d 16 0c 01 00 	lea    0x10c16(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8547:	e8 54 9e ff ff       	callq  23a0 <__assert_fail@plt>
    854c:	0f 1f 40 00          	nopl   0x0(%rax)
    8550:	48 8d 0d 79 16 01 00 	lea    0x11679(%rip),%rcx        # 19bd0 <__PRETTY_FUNCTION__.4858>
    8557:	ba b7 01 00 00       	mov    $0x1b7,%edx
    855c:	48 8d 35 8d 14 01 00 	lea    0x1148d(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8563:	48 8d 3d f3 0b 01 00 	lea    0x10bf3(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    856a:	e8 31 9e ff ff       	callq  23a0 <__assert_fail@plt>
    856f:	48 8d 0d 5a 16 01 00 	lea    0x1165a(%rip),%rcx        # 19bd0 <__PRETTY_FUNCTION__.4858>
    8576:	ba a8 01 00 00       	mov    $0x1a8,%edx
    857b:	48 8d 35 6e 14 01 00 	lea    0x1146e(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8582:	48 8d 3d 87 14 01 00 	lea    0x11487(%rip),%rdi        # 19a10 <__PRETTY_FUNCTION__.5826+0x68>
    8589:	e8 12 9e ff ff       	callq  23a0 <__assert_fail@plt>
    858e:	66 90                	xchg   %ax,%ax

0000000000008590 <TMnet_isPath>:
    8590:	f3 0f 1e fa          	endbr64 
    8594:	41 57                	push   %r15
    8596:	41 56                	push   %r14
    8598:	41 55                	push   %r13
    859a:	4d 89 c5             	mov    %r8,%r13
    859d:	41 54                	push   %r12
    859f:	49 89 cc             	mov    %rcx,%r12
    85a2:	55                   	push   %rbp
    85a3:	48 89 f5             	mov    %rsi,%rbp
    85a6:	53                   	push   %rbx
    85a7:	48 83 ec 28          	sub    $0x28,%rsp
    85ab:	4c 8b 3f             	mov    (%rdi),%r15
    85ae:	48 8b 19             	mov    (%rcx),%rbx
    85b1:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    85b6:	4c 89 ff             	mov    %r15,%rdi
    85b9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    85c0:	00 00 
    85c2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    85c7:	31 c0                	xor    %eax,%eax
    85c9:	e8 a2 47 00 00       	callq  cd70 <vector_getSize>
    85ce:	48 39 c3             	cmp    %rax,%rbx
    85d1:	0f 85 58 01 00 00    	jne    872f <TMnet_isPath+0x19f>
    85d7:	4c 89 e7             	mov    %r12,%rdi
    85da:	e8 01 1c 00 00       	callq  a1e0 <bitmap_clearAll>
    85df:	4c 89 ef             	mov    %r13,%rdi
    85e2:	e8 49 30 00 00       	callq  b630 <queue_clear>
    85e7:	48 89 ee             	mov    %rbp,%rsi
    85ea:	4c 89 ef             	mov    %r13,%rdi
    85ed:	e8 ce 34 00 00       	callq  bac0 <Pqueue_push>
    85f2:	48 85 c0             	test   %rax,%rax
    85f5:	0f 84 f2 00 00 00    	je     86ed <TMnet_isPath+0x15d>
    85fb:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
    8600:	4c 89 ef             	mov    %r13,%rdi
    8603:	e8 08 30 00 00       	callq  b610 <queue_isEmpty>
    8608:	48 85 c0             	test   %rax,%rax
    860b:	0f 85 a7 00 00 00    	jne    86b8 <TMnet_isPath+0x128>
    8611:	4c 89 ef             	mov    %r13,%rdi
    8614:	e8 c7 3a 00 00       	callq  c0e0 <queue_pop>
    8619:	48 89 c3             	mov    %rax,%rbx
    861c:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    8621:	0f 84 b2 00 00 00    	je     86d9 <TMnet_isPath+0x149>
    8627:	48 89 c6             	mov    %rax,%rsi
    862a:	4c 89 e7             	mov    %r12,%rdi
    862d:	e8 4e 1b 00 00       	callq  a180 <bitmap_set>
    8632:	48 85 c0             	test   %rax,%rax
    8635:	0f 84 d5 00 00 00    	je     8710 <TMnet_isPath+0x180>
    863b:	48 89 de             	mov    %rbx,%rsi
    863e:	4c 89 ff             	mov    %r15,%rdi
    8641:	e8 ca 44 00 00       	callq  cb10 <vector_at>
    8646:	48 89 ef             	mov    %rbp,%rdi
    8649:	48 8b 58 10          	mov    0x10(%rax),%rbx
    864d:	48 89 de             	mov    %rbx,%rsi
    8650:	e8 bb 1e 00 00       	callq  a510 <TMlist_iter_reset>
    8655:	0f 1f 00             	nopl   (%rax)
    8658:	48 89 de             	mov    %rbx,%rsi
    865b:	48 89 ef             	mov    %rbp,%rdi
    865e:	e8 dd 1e 00 00       	callq  a540 <TMlist_iter_hasNext>
    8663:	48 85 c0             	test   %rax,%rax
    8666:	74 98                	je     8600 <TMnet_isPath+0x70>
    8668:	48 89 de             	mov    %rbx,%rsi
    866b:	48 89 ef             	mov    %rbp,%rdi
    866e:	e8 1d 1f 00 00       	callq  a590 <TMlist_iter_next>
    8673:	4c 89 e7             	mov    %r12,%rdi
    8676:	48 89 c6             	mov    %rax,%rsi
    8679:	49 89 c6             	mov    %rax,%r14
    867c:	e8 af 1b 00 00       	callq  a230 <bitmap_isSet>
    8681:	48 85 c0             	test   %rax,%rax
    8684:	75 d2                	jne    8658 <TMnet_isPath+0xc8>
    8686:	4c 89 f6             	mov    %r14,%rsi
    8689:	4c 89 ef             	mov    %r13,%rdi
    868c:	e8 2f 34 00 00       	callq  bac0 <Pqueue_push>
    8691:	48 85 c0             	test   %rax,%rax
    8694:	75 c2                	jne    8658 <TMnet_isPath+0xc8>
    8696:	48 8d 0d 23 15 01 00 	lea    0x11523(%rip),%rcx        # 19bc0 <__PRETTY_FUNCTION__.4879>
    869d:	ba f0 01 00 00       	mov    $0x1f0,%edx
    86a2:	48 8d 35 47 13 01 00 	lea    0x11347(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    86a9:	48 8d 3d ad 0a 01 00 	lea    0x10aad(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    86b0:	e8 eb 9c ff ff       	callq  23a0 <__assert_fail@plt>
    86b5:	0f 1f 00             	nopl   (%rax)
    86b8:	31 c0                	xor    %eax,%eax
    86ba:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    86bf:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    86c6:	00 00 
    86c8:	75 1e                	jne    86e8 <TMnet_isPath+0x158>
    86ca:	48 83 c4 28          	add    $0x28,%rsp
    86ce:	5b                   	pop    %rbx
    86cf:	5d                   	pop    %rbp
    86d0:	41 5c                	pop    %r12
    86d2:	41 5d                	pop    %r13
    86d4:	41 5e                	pop    %r14
    86d6:	41 5f                	pop    %r15
    86d8:	c3                   	retq   
    86d9:	4c 89 ef             	mov    %r13,%rdi
    86dc:	e8 4f 2f 00 00       	callq  b630 <queue_clear>
    86e1:	b8 01 00 00 00       	mov    $0x1,%eax
    86e6:	eb d2                	jmp    86ba <TMnet_isPath+0x12a>
    86e8:	e8 73 9c ff ff       	callq  2360 <__stack_chk_fail@plt>
    86ed:	48 8d 0d cc 14 01 00 	lea    0x114cc(%rip),%rcx        # 19bc0 <__PRETTY_FUNCTION__.4879>
    86f4:	ba de 01 00 00       	mov    $0x1de,%edx
    86f9:	48 8d 35 f0 12 01 00 	lea    0x112f0(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8700:	48 8d 3d 56 0a 01 00 	lea    0x10a56(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8707:	e8 94 9c ff ff       	callq  23a0 <__assert_fail@plt>
    870c:	0f 1f 40 00          	nopl   0x0(%rax)
    8710:	48 8d 0d a9 14 01 00 	lea    0x114a9(%rip),%rcx        # 19bc0 <__PRETTY_FUNCTION__.4879>
    8717:	ba e7 01 00 00       	mov    $0x1e7,%edx
    871c:	48 8d 35 cd 12 01 00 	lea    0x112cd(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8723:	48 8d 3d 33 0a 01 00 	lea    0x10a33(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    872a:	e8 71 9c ff ff       	callq  23a0 <__assert_fail@plt>
    872f:	48 8d 0d 8a 14 01 00 	lea    0x1148a(%rip),%rcx        # 19bc0 <__PRETTY_FUNCTION__.4879>
    8736:	ba d8 01 00 00       	mov    $0x1d8,%edx
    873b:	48 8d 35 ae 12 01 00 	lea    0x112ae(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8742:	48 8d 3d c7 12 01 00 	lea    0x112c7(%rip),%rdi        # 19a10 <__PRETTY_FUNCTION__.5826+0x68>
    8749:	e8 52 9c ff ff       	callq  23a0 <__assert_fail@plt>
    874e:	66 90                	xchg   %ax,%ax

0000000000008750 <net_isCycle>:
    8750:	f3 0f 1e fa          	endbr64 
    8754:	41 55                	push   %r13
    8756:	41 54                	push   %r12
    8758:	55                   	push   %rbp
    8759:	53                   	push   %rbx
    875a:	48 83 ec 08          	sub    $0x8,%rsp
    875e:	48 8b 2f             	mov    (%rdi),%rbp
    8761:	48 89 ef             	mov    %rbp,%rdi
    8764:	e8 07 46 00 00       	callq  cd70 <vector_getSize>
    8769:	48 85 c0             	test   %rax,%rax
    876c:	7e 6f                	jle    87dd <net_isCycle+0x8d>
    876e:	49 89 c5             	mov    %rax,%r13
    8771:	31 db                	xor    %ebx,%ebx
    8773:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8778:	48 89 de             	mov    %rbx,%rsi
    877b:	48 89 ef             	mov    %rbp,%rdi
    877e:	49 89 dc             	mov    %rbx,%r12
    8781:	e8 8a 43 00 00       	callq  cb10 <vector_at>
    8786:	48 8d 5b 01          	lea    0x1(%rbx),%rbx
    878a:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
    8791:	49 39 dd             	cmp    %rbx,%r13
    8794:	75 e2                	jne    8778 <net_isCycle+0x28>
    8796:	31 db                	xor    %ebx,%ebx
    8798:	eb 09                	jmp    87a3 <net_isCycle+0x53>
    879a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    87a0:	48 89 c3             	mov    %rax,%rbx
    87a3:	48 89 de             	mov    %rbx,%rsi
    87a6:	48 89 ef             	mov    %rbp,%rdi
    87a9:	e8 62 43 00 00       	callq  cb10 <vector_at>
    87ae:	8b 50 18             	mov    0x18(%rax),%edx
    87b1:	83 fa 01             	cmp    $0x1,%edx
    87b4:	74 1e                	je     87d4 <net_isCycle+0x84>
    87b6:	83 fa 02             	cmp    $0x2,%edx
    87b9:	74 64                	je     881f <net_isCycle+0xcf>
    87bb:	85 d2                	test   %edx,%edx
    87bd:	75 41                	jne    8800 <net_isCycle+0xb0>
    87bf:	48 8b 70 10          	mov    0x10(%rax),%rsi
    87c3:	48 8d 50 18          	lea    0x18(%rax),%rdx
    87c7:	48 89 ef             	mov    %rbp,%rdi
    87ca:	e8 41 f4 ff ff       	callq  7c10 <isCycle.isra.0>
    87cf:	48 85 c0             	test   %rax,%rax
    87d2:	75 1c                	jne    87f0 <net_isCycle+0xa0>
    87d4:	48 8d 43 01          	lea    0x1(%rbx),%rax
    87d8:	49 39 dc             	cmp    %rbx,%r12
    87db:	75 c3                	jne    87a0 <net_isCycle+0x50>
    87dd:	48 83 c4 08          	add    $0x8,%rsp
    87e1:	31 c0                	xor    %eax,%eax
    87e3:	5b                   	pop    %rbx
    87e4:	5d                   	pop    %rbp
    87e5:	41 5c                	pop    %r12
    87e7:	41 5d                	pop    %r13
    87e9:	c3                   	retq   
    87ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    87f0:	48 83 c4 08          	add    $0x8,%rsp
    87f4:	b8 01 00 00 00       	mov    $0x1,%eax
    87f9:	5b                   	pop    %rbx
    87fa:	5d                   	pop    %rbp
    87fb:	41 5c                	pop    %r12
    87fd:	41 5d                	pop    %r13
    87ff:	c3                   	retq   
    8800:	48 8d 0d a9 13 01 00 	lea    0x113a9(%rip),%rcx        # 19bb0 <__PRETTY_FUNCTION__.4923>
    8807:	ba 3c 02 00 00       	mov    $0x23c,%edx
    880c:	48 8d 35 dd 11 01 00 	lea    0x111dd(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8813:	48 8d 3d b1 14 01 00 	lea    0x114b1(%rip),%rdi        # 19ccb <__PRETTY_FUNCTION__.4407+0x2b>
    881a:	e8 81 9b ff ff       	callq  23a0 <__assert_fail@plt>
    881f:	48 8d 0d 8a 13 01 00 	lea    0x1138a(%rip),%rcx        # 19bb0 <__PRETTY_FUNCTION__.4923>
    8826:	ba 39 02 00 00       	mov    $0x239,%edx
    882b:	48 8d 35 be 11 01 00 	lea    0x111be(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8832:	48 8d 3d 92 14 01 00 	lea    0x11492(%rip),%rdi        # 19ccb <__PRETTY_FUNCTION__.4407+0x2b>
    8839:	e8 62 9b ff ff       	callq  23a0 <__assert_fail@plt>
    883e:	66 90                	xchg   %ax,%ax

0000000000008840 <net_getParentIdListPtr>:
    8840:	f3 0f 1e fa          	endbr64 
    8844:	48 83 ec 08          	sub    $0x8,%rsp
    8848:	48 8b 3f             	mov    (%rdi),%rdi
    884b:	e8 c0 42 00 00       	callq  cb10 <vector_at>
    8850:	48 85 c0             	test   %rax,%rax
    8853:	74 09                	je     885e <net_getParentIdListPtr+0x1e>
    8855:	48 8b 40 08          	mov    0x8(%rax),%rax
    8859:	48 83 c4 08          	add    $0x8,%rsp
    885d:	c3                   	retq   
    885e:	48 8d 0d 2b 13 01 00 	lea    0x1132b(%rip),%rcx        # 19b90 <__PRETTY_FUNCTION__.4933>
    8865:	ba 4d 02 00 00       	mov    $0x24d,%edx
    886a:	48 8d 35 7f 11 01 00 	lea    0x1117f(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8871:	48 8d 3d 95 07 01 00 	lea    0x10795(%rip),%rdi        # 1900d <_IO_stdin_used+0xd>
    8878:	e8 23 9b ff ff       	callq  23a0 <__assert_fail@plt>
    887d:	0f 1f 00             	nopl   (%rax)

0000000000008880 <net_getChildIdListPtr>:
    8880:	f3 0f 1e fa          	endbr64 
    8884:	48 83 ec 08          	sub    $0x8,%rsp
    8888:	48 8b 3f             	mov    (%rdi),%rdi
    888b:	e8 80 42 00 00       	callq  cb10 <vector_at>
    8890:	48 85 c0             	test   %rax,%rax
    8893:	74 09                	je     889e <net_getChildIdListPtr+0x1e>
    8895:	48 8b 40 10          	mov    0x10(%rax),%rax
    8899:	48 83 c4 08          	add    $0x8,%rsp
    889d:	c3                   	retq   
    889e:	48 8d 0d cb 12 01 00 	lea    0x112cb(%rip),%rcx        # 19b70 <__PRETTY_FUNCTION__.4939>
    88a5:	ba 5b 02 00 00       	mov    $0x25b,%edx
    88aa:	48 8d 35 3f 11 01 00 	lea    0x1113f(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    88b1:	48 8d 3d 55 07 01 00 	lea    0x10755(%rip),%rdi        # 1900d <_IO_stdin_used+0xd>
    88b8:	e8 e3 9a ff ff       	callq  23a0 <__assert_fail@plt>
    88bd:	0f 1f 00             	nopl   (%rax)

00000000000088c0 <net_findAncestors>:
    88c0:	f3 0f 1e fa          	endbr64 
    88c4:	41 57                	push   %r15
    88c6:	41 56                	push   %r14
    88c8:	41 55                	push   %r13
    88ca:	49 89 cd             	mov    %rcx,%r13
    88cd:	41 54                	push   %r12
    88cf:	49 89 d4             	mov    %rdx,%r12
    88d2:	55                   	push   %rbp
    88d3:	53                   	push   %rbx
    88d4:	48 83 ec 28          	sub    $0x28,%rsp
    88d8:	4c 8b 3f             	mov    (%rdi),%r15
    88db:	48 8b 1a             	mov    (%rdx),%rbx
    88de:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    88e3:	4c 89 ff             	mov    %r15,%rdi
    88e6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    88ed:	00 00 
    88ef:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    88f4:	31 c0                	xor    %eax,%eax
    88f6:	e8 75 44 00 00       	callq  cd70 <vector_getSize>
    88fb:	48 39 c3             	cmp    %rax,%rbx
    88fe:	0f 85 d9 01 00 00    	jne    8add <net_findAncestors+0x21d>
    8904:	4c 89 e7             	mov    %r12,%rdi
    8907:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    890c:	e8 cf 18 00 00       	callq  a1e0 <bitmap_clearAll>
    8911:	4c 89 ef             	mov    %r13,%rdi
    8914:	e8 17 2d 00 00       	callq  b630 <queue_clear>
    8919:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    891e:	4c 89 ff             	mov    %r15,%rdi
    8921:	e8 ea 41 00 00       	callq  cb10 <vector_at>
    8926:	48 89 df             	mov    %rbx,%rdi
    8929:	48 8b 68 08          	mov    0x8(%rax),%rbp
    892d:	48 89 ee             	mov    %rbp,%rsi
    8930:	e8 cb 1b 00 00       	callq  a500 <list_iter_reset>
    8935:	eb 3f                	jmp    8976 <net_findAncestors+0xb6>
    8937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    893e:	00 00 
    8940:	48 89 ee             	mov    %rbp,%rsi
    8943:	48 89 df             	mov    %rbx,%rdi
    8946:	e8 25 1c 00 00       	callq  a570 <list_iter_next>
    894b:	4c 89 e7             	mov    %r12,%rdi
    894e:	48 89 c6             	mov    %rax,%rsi
    8951:	49 89 c6             	mov    %rax,%r14
    8954:	e8 27 18 00 00       	callq  a180 <bitmap_set>
    8959:	48 85 c0             	test   %rax,%rax
    895c:	0f 84 5c 01 00 00    	je     8abe <net_findAncestors+0x1fe>
    8962:	4c 89 f6             	mov    %r14,%rsi
    8965:	4c 89 ef             	mov    %r13,%rdi
    8968:	e8 03 2e 00 00       	callq  b770 <queue_push>
    896d:	48 85 c0             	test   %rax,%rax
    8970:	0f 84 29 01 00 00    	je     8a9f <net_findAncestors+0x1df>
    8976:	48 89 ee             	mov    %rbp,%rsi
    8979:	48 89 df             	mov    %rbx,%rdi
    897c:	e8 9f 1b 00 00       	callq  a520 <list_iter_hasNext>
    8981:	48 85 c0             	test   %rax,%rax
    8984:	75 ba                	jne    8940 <net_findAncestors+0x80>
    8986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    898d:	00 00 00 
    8990:	4c 89 ef             	mov    %r13,%rdi
    8993:	e8 78 2c 00 00       	callq  b610 <queue_isEmpty>
    8998:	48 89 c5             	mov    %rax,%rbp
    899b:	48 85 c0             	test   %rax,%rax
    899e:	0f 85 a4 00 00 00    	jne    8a48 <net_findAncestors+0x188>
    89a4:	4c 89 ef             	mov    %r13,%rdi
    89a7:	e8 34 37 00 00       	callq  c0e0 <queue_pop>
    89ac:	48 89 c6             	mov    %rax,%rsi
    89af:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
    89b4:	0f 84 b5 00 00 00    	je     8a6f <net_findAncestors+0x1af>
    89ba:	4c 89 ff             	mov    %r15,%rdi
    89bd:	e8 4e 41 00 00       	callq  cb10 <vector_at>
    89c2:	48 89 df             	mov    %rbx,%rdi
    89c5:	48 8b 68 08          	mov    0x8(%rax),%rbp
    89c9:	48 89 ee             	mov    %rbp,%rsi
    89cc:	e8 2f 1b 00 00       	callq  a500 <list_iter_reset>
    89d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    89d8:	48 89 ee             	mov    %rbp,%rsi
    89db:	48 89 df             	mov    %rbx,%rdi
    89de:	e8 3d 1b 00 00       	callq  a520 <list_iter_hasNext>
    89e3:	48 85 c0             	test   %rax,%rax
    89e6:	74 a8                	je     8990 <net_findAncestors+0xd0>
    89e8:	48 89 ee             	mov    %rbp,%rsi
    89eb:	48 89 df             	mov    %rbx,%rdi
    89ee:	e8 7d 1b 00 00       	callq  a570 <list_iter_next>
    89f3:	4c 89 e7             	mov    %r12,%rdi
    89f6:	48 89 c6             	mov    %rax,%rsi
    89f9:	49 89 c6             	mov    %rax,%r14
    89fc:	e8 2f 18 00 00       	callq  a230 <bitmap_isSet>
    8a01:	48 85 c0             	test   %rax,%rax
    8a04:	75 d2                	jne    89d8 <net_findAncestors+0x118>
    8a06:	4c 89 f6             	mov    %r14,%rsi
    8a09:	4c 89 e7             	mov    %r12,%rdi
    8a0c:	e8 6f 17 00 00       	callq  a180 <bitmap_set>
    8a11:	48 85 c0             	test   %rax,%rax
    8a14:	74 6a                	je     8a80 <net_findAncestors+0x1c0>
    8a16:	4c 89 f6             	mov    %r14,%rsi
    8a19:	4c 89 ef             	mov    %r13,%rdi
    8a1c:	e8 4f 2d 00 00       	callq  b770 <queue_push>
    8a21:	48 85 c0             	test   %rax,%rax
    8a24:	75 b2                	jne    89d8 <net_findAncestors+0x118>
    8a26:	48 8d 0d 23 11 01 00 	lea    0x11123(%rip),%rcx        # 19b50 <__PRETTY_FUNCTION__.4948>
    8a2d:	ba 93 02 00 00       	mov    $0x293,%edx
    8a32:	48 8d 35 b7 0f 01 00 	lea    0x10fb7(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8a39:	48 8d 3d 1d 07 01 00 	lea    0x1071d(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8a40:	e8 5b 99 ff ff       	callq  23a0 <__assert_fail@plt>
    8a45:	0f 1f 00             	nopl   (%rax)
    8a48:	bd 01 00 00 00       	mov    $0x1,%ebp
    8a4d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8a52:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    8a59:	00 00 
    8a5b:	75 1c                	jne    8a79 <net_findAncestors+0x1b9>
    8a5d:	48 83 c4 28          	add    $0x28,%rsp
    8a61:	48 89 e8             	mov    %rbp,%rax
    8a64:	5b                   	pop    %rbx
    8a65:	5d                   	pop    %rbp
    8a66:	41 5c                	pop    %r12
    8a68:	41 5d                	pop    %r13
    8a6a:	41 5e                	pop    %r14
    8a6c:	41 5f                	pop    %r15
    8a6e:	c3                   	retq   
    8a6f:	4c 89 ef             	mov    %r13,%rdi
    8a72:	e8 b9 2b 00 00       	callq  b630 <queue_clear>
    8a77:	eb d4                	jmp    8a4d <net_findAncestors+0x18d>
    8a79:	e8 e2 98 ff ff       	callq  2360 <__stack_chk_fail@plt>
    8a7e:	66 90                	xchg   %ax,%ax
    8a80:	48 8d 0d c9 10 01 00 	lea    0x110c9(%rip),%rcx        # 19b50 <__PRETTY_FUNCTION__.4948>
    8a87:	ba 91 02 00 00       	mov    $0x291,%edx
    8a8c:	48 8d 35 5d 0f 01 00 	lea    0x10f5d(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8a93:	48 8d 3d c3 06 01 00 	lea    0x106c3(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8a9a:	e8 01 99 ff ff       	callq  23a0 <__assert_fail@plt>
    8a9f:	48 8d 0d aa 10 01 00 	lea    0x110aa(%rip),%rcx        # 19b50 <__PRETTY_FUNCTION__.4948>
    8aa6:	ba 7f 02 00 00       	mov    $0x27f,%edx
    8aab:	48 8d 35 3e 0f 01 00 	lea    0x10f3e(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8ab2:	48 8d 3d a4 06 01 00 	lea    0x106a4(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8ab9:	e8 e2 98 ff ff       	callq  23a0 <__assert_fail@plt>
    8abe:	48 8d 0d 8b 10 01 00 	lea    0x1108b(%rip),%rcx        # 19b50 <__PRETTY_FUNCTION__.4948>
    8ac5:	ba 7d 02 00 00       	mov    $0x27d,%edx
    8aca:	48 8d 35 1f 0f 01 00 	lea    0x10f1f(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8ad1:	48 8d 3d 85 06 01 00 	lea    0x10685(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8ad8:	e8 c3 98 ff ff       	callq  23a0 <__assert_fail@plt>
    8add:	48 8d 0d 6c 10 01 00 	lea    0x1106c(%rip),%rcx        # 19b50 <__PRETTY_FUNCTION__.4948>
    8ae4:	ba 70 02 00 00       	mov    $0x270,%edx
    8ae9:	48 8d 35 00 0f 01 00 	lea    0x10f00(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8af0:	48 8d 3d 59 0f 01 00 	lea    0x10f59(%rip),%rdi        # 19a50 <__PRETTY_FUNCTION__.5826+0xa8>
    8af7:	e8 a4 98 ff ff       	callq  23a0 <__assert_fail@plt>
    8afc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008b00 <TMnet_findAncestors>:
    8b00:	f3 0f 1e fa          	endbr64 
    8b04:	41 57                	push   %r15
    8b06:	41 56                	push   %r14
    8b08:	41 55                	push   %r13
    8b0a:	49 89 cd             	mov    %rcx,%r13
    8b0d:	41 54                	push   %r12
    8b0f:	49 89 d4             	mov    %rdx,%r12
    8b12:	55                   	push   %rbp
    8b13:	53                   	push   %rbx
    8b14:	48 83 ec 28          	sub    $0x28,%rsp
    8b18:	4c 8b 3f             	mov    (%rdi),%r15
    8b1b:	48 8b 1a             	mov    (%rdx),%rbx
    8b1e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    8b23:	4c 89 ff             	mov    %r15,%rdi
    8b26:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8b2d:	00 00 
    8b2f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8b34:	31 c0                	xor    %eax,%eax
    8b36:	e8 35 42 00 00       	callq  cd70 <vector_getSize>
    8b3b:	48 39 c3             	cmp    %rax,%rbx
    8b3e:	0f 85 d9 01 00 00    	jne    8d1d <TMnet_findAncestors+0x21d>
    8b44:	4c 89 e7             	mov    %r12,%rdi
    8b47:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    8b4c:	e8 8f 16 00 00       	callq  a1e0 <bitmap_clearAll>
    8b51:	4c 89 ef             	mov    %r13,%rdi
    8b54:	e8 d7 2a 00 00       	callq  b630 <queue_clear>
    8b59:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    8b5e:	4c 89 ff             	mov    %r15,%rdi
    8b61:	e8 aa 3f 00 00       	callq  cb10 <vector_at>
    8b66:	48 89 df             	mov    %rbx,%rdi
    8b69:	48 8b 68 08          	mov    0x8(%rax),%rbp
    8b6d:	48 89 ee             	mov    %rbp,%rsi
    8b70:	e8 9b 19 00 00       	callq  a510 <TMlist_iter_reset>
    8b75:	eb 3f                	jmp    8bb6 <TMnet_findAncestors+0xb6>
    8b77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8b7e:	00 00 
    8b80:	48 89 ee             	mov    %rbp,%rsi
    8b83:	48 89 df             	mov    %rbx,%rdi
    8b86:	e8 05 1a 00 00       	callq  a590 <TMlist_iter_next>
    8b8b:	4c 89 e7             	mov    %r12,%rdi
    8b8e:	48 89 c6             	mov    %rax,%rsi
    8b91:	49 89 c6             	mov    %rax,%r14
    8b94:	e8 e7 15 00 00       	callq  a180 <bitmap_set>
    8b99:	48 85 c0             	test   %rax,%rax
    8b9c:	0f 84 5c 01 00 00    	je     8cfe <TMnet_findAncestors+0x1fe>
    8ba2:	4c 89 f6             	mov    %r14,%rsi
    8ba5:	4c 89 ef             	mov    %r13,%rdi
    8ba8:	e8 13 2f 00 00       	callq  bac0 <Pqueue_push>
    8bad:	48 85 c0             	test   %rax,%rax
    8bb0:	0f 84 29 01 00 00    	je     8cdf <TMnet_findAncestors+0x1df>
    8bb6:	48 89 ee             	mov    %rbp,%rsi
    8bb9:	48 89 df             	mov    %rbx,%rdi
    8bbc:	e8 7f 19 00 00       	callq  a540 <TMlist_iter_hasNext>
    8bc1:	48 85 c0             	test   %rax,%rax
    8bc4:	75 ba                	jne    8b80 <TMnet_findAncestors+0x80>
    8bc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8bcd:	00 00 00 
    8bd0:	4c 89 ef             	mov    %r13,%rdi
    8bd3:	e8 38 2a 00 00       	callq  b610 <queue_isEmpty>
    8bd8:	48 89 c5             	mov    %rax,%rbp
    8bdb:	48 85 c0             	test   %rax,%rax
    8bde:	0f 85 a4 00 00 00    	jne    8c88 <TMnet_findAncestors+0x188>
    8be4:	4c 89 ef             	mov    %r13,%rdi
    8be7:	e8 f4 34 00 00       	callq  c0e0 <queue_pop>
    8bec:	48 89 c6             	mov    %rax,%rsi
    8bef:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
    8bf4:	0f 84 b5 00 00 00    	je     8caf <TMnet_findAncestors+0x1af>
    8bfa:	4c 89 ff             	mov    %r15,%rdi
    8bfd:	e8 0e 3f 00 00       	callq  cb10 <vector_at>
    8c02:	48 89 df             	mov    %rbx,%rdi
    8c05:	48 8b 68 08          	mov    0x8(%rax),%rbp
    8c09:	48 89 ee             	mov    %rbp,%rsi
    8c0c:	e8 ff 18 00 00       	callq  a510 <TMlist_iter_reset>
    8c11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8c18:	48 89 ee             	mov    %rbp,%rsi
    8c1b:	48 89 df             	mov    %rbx,%rdi
    8c1e:	e8 1d 19 00 00       	callq  a540 <TMlist_iter_hasNext>
    8c23:	48 85 c0             	test   %rax,%rax
    8c26:	74 a8                	je     8bd0 <TMnet_findAncestors+0xd0>
    8c28:	48 89 ee             	mov    %rbp,%rsi
    8c2b:	48 89 df             	mov    %rbx,%rdi
    8c2e:	e8 5d 19 00 00       	callq  a590 <TMlist_iter_next>
    8c33:	4c 89 e7             	mov    %r12,%rdi
    8c36:	48 89 c6             	mov    %rax,%rsi
    8c39:	49 89 c6             	mov    %rax,%r14
    8c3c:	e8 ef 15 00 00       	callq  a230 <bitmap_isSet>
    8c41:	48 85 c0             	test   %rax,%rax
    8c44:	75 d2                	jne    8c18 <TMnet_findAncestors+0x118>
    8c46:	4c 89 f6             	mov    %r14,%rsi
    8c49:	4c 89 e7             	mov    %r12,%rdi
    8c4c:	e8 2f 15 00 00       	callq  a180 <bitmap_set>
    8c51:	48 85 c0             	test   %rax,%rax
    8c54:	74 6a                	je     8cc0 <TMnet_findAncestors+0x1c0>
    8c56:	4c 89 f6             	mov    %r14,%rsi
    8c59:	4c 89 ef             	mov    %r13,%rdi
    8c5c:	e8 5f 2e 00 00       	callq  bac0 <Pqueue_push>
    8c61:	48 85 c0             	test   %rax,%rax
    8c64:	75 b2                	jne    8c18 <TMnet_findAncestors+0x118>
    8c66:	48 8d 0d c3 0e 01 00 	lea    0x10ec3(%rip),%rcx        # 19b30 <__PRETTY_FUNCTION__.4975>
    8c6d:	ba cf 02 00 00       	mov    $0x2cf,%edx
    8c72:	48 8d 35 77 0d 01 00 	lea    0x10d77(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8c79:	48 8d 3d dd 04 01 00 	lea    0x104dd(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8c80:	e8 1b 97 ff ff       	callq  23a0 <__assert_fail@plt>
    8c85:	0f 1f 00             	nopl   (%rax)
    8c88:	bd 01 00 00 00       	mov    $0x1,%ebp
    8c8d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8c92:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    8c99:	00 00 
    8c9b:	75 1c                	jne    8cb9 <TMnet_findAncestors+0x1b9>
    8c9d:	48 83 c4 28          	add    $0x28,%rsp
    8ca1:	48 89 e8             	mov    %rbp,%rax
    8ca4:	5b                   	pop    %rbx
    8ca5:	5d                   	pop    %rbp
    8ca6:	41 5c                	pop    %r12
    8ca8:	41 5d                	pop    %r13
    8caa:	41 5e                	pop    %r14
    8cac:	41 5f                	pop    %r15
    8cae:	c3                   	retq   
    8caf:	4c 89 ef             	mov    %r13,%rdi
    8cb2:	e8 79 29 00 00       	callq  b630 <queue_clear>
    8cb7:	eb d4                	jmp    8c8d <TMnet_findAncestors+0x18d>
    8cb9:	e8 a2 96 ff ff       	callq  2360 <__stack_chk_fail@plt>
    8cbe:	66 90                	xchg   %ax,%ax
    8cc0:	48 8d 0d 69 0e 01 00 	lea    0x10e69(%rip),%rcx        # 19b30 <__PRETTY_FUNCTION__.4975>
    8cc7:	ba cd 02 00 00       	mov    $0x2cd,%edx
    8ccc:	48 8d 35 1d 0d 01 00 	lea    0x10d1d(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8cd3:	48 8d 3d 83 04 01 00 	lea    0x10483(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8cda:	e8 c1 96 ff ff       	callq  23a0 <__assert_fail@plt>
    8cdf:	48 8d 0d 4a 0e 01 00 	lea    0x10e4a(%rip),%rcx        # 19b30 <__PRETTY_FUNCTION__.4975>
    8ce6:	ba bb 02 00 00       	mov    $0x2bb,%edx
    8ceb:	48 8d 35 fe 0c 01 00 	lea    0x10cfe(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8cf2:	48 8d 3d 64 04 01 00 	lea    0x10464(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8cf9:	e8 a2 96 ff ff       	callq  23a0 <__assert_fail@plt>
    8cfe:	48 8d 0d 2b 0e 01 00 	lea    0x10e2b(%rip),%rcx        # 19b30 <__PRETTY_FUNCTION__.4975>
    8d05:	ba b9 02 00 00       	mov    $0x2b9,%edx
    8d0a:	48 8d 35 df 0c 01 00 	lea    0x10cdf(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8d11:	48 8d 3d 45 04 01 00 	lea    0x10445(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8d18:	e8 83 96 ff ff       	callq  23a0 <__assert_fail@plt>
    8d1d:	48 8d 0d 0c 0e 01 00 	lea    0x10e0c(%rip),%rcx        # 19b30 <__PRETTY_FUNCTION__.4975>
    8d24:	ba ac 02 00 00       	mov    $0x2ac,%edx
    8d29:	48 8d 35 c0 0c 01 00 	lea    0x10cc0(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8d30:	48 8d 3d 19 0d 01 00 	lea    0x10d19(%rip),%rdi        # 19a50 <__PRETTY_FUNCTION__.5826+0xa8>
    8d37:	e8 64 96 ff ff       	callq  23a0 <__assert_fail@plt>
    8d3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008d40 <net_findDescendants>:
    8d40:	f3 0f 1e fa          	endbr64 
    8d44:	41 57                	push   %r15
    8d46:	41 56                	push   %r14
    8d48:	41 55                	push   %r13
    8d4a:	49 89 cd             	mov    %rcx,%r13
    8d4d:	41 54                	push   %r12
    8d4f:	49 89 d4             	mov    %rdx,%r12
    8d52:	55                   	push   %rbp
    8d53:	53                   	push   %rbx
    8d54:	48 83 ec 28          	sub    $0x28,%rsp
    8d58:	4c 8b 3f             	mov    (%rdi),%r15
    8d5b:	48 8b 1a             	mov    (%rdx),%rbx
    8d5e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    8d63:	4c 89 ff             	mov    %r15,%rdi
    8d66:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8d6d:	00 00 
    8d6f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8d74:	31 c0                	xor    %eax,%eax
    8d76:	e8 f5 3f 00 00       	callq  cd70 <vector_getSize>
    8d7b:	48 39 c3             	cmp    %rax,%rbx
    8d7e:	0f 85 d9 01 00 00    	jne    8f5d <net_findDescendants+0x21d>
    8d84:	4c 89 e7             	mov    %r12,%rdi
    8d87:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    8d8c:	e8 4f 14 00 00       	callq  a1e0 <bitmap_clearAll>
    8d91:	4c 89 ef             	mov    %r13,%rdi
    8d94:	e8 97 28 00 00       	callq  b630 <queue_clear>
    8d99:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    8d9e:	4c 89 ff             	mov    %r15,%rdi
    8da1:	e8 6a 3d 00 00       	callq  cb10 <vector_at>
    8da6:	48 89 df             	mov    %rbx,%rdi
    8da9:	48 8b 68 10          	mov    0x10(%rax),%rbp
    8dad:	48 89 ee             	mov    %rbp,%rsi
    8db0:	e8 4b 17 00 00       	callq  a500 <list_iter_reset>
    8db5:	eb 3f                	jmp    8df6 <net_findDescendants+0xb6>
    8db7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8dbe:	00 00 
    8dc0:	48 89 ee             	mov    %rbp,%rsi
    8dc3:	48 89 df             	mov    %rbx,%rdi
    8dc6:	e8 a5 17 00 00       	callq  a570 <list_iter_next>
    8dcb:	4c 89 e7             	mov    %r12,%rdi
    8dce:	48 89 c6             	mov    %rax,%rsi
    8dd1:	49 89 c6             	mov    %rax,%r14
    8dd4:	e8 a7 13 00 00       	callq  a180 <bitmap_set>
    8dd9:	48 85 c0             	test   %rax,%rax
    8ddc:	0f 84 5c 01 00 00    	je     8f3e <net_findDescendants+0x1fe>
    8de2:	4c 89 f6             	mov    %r14,%rsi
    8de5:	4c 89 ef             	mov    %r13,%rdi
    8de8:	e8 83 29 00 00       	callq  b770 <queue_push>
    8ded:	48 85 c0             	test   %rax,%rax
    8df0:	0f 84 29 01 00 00    	je     8f1f <net_findDescendants+0x1df>
    8df6:	48 89 ee             	mov    %rbp,%rsi
    8df9:	48 89 df             	mov    %rbx,%rdi
    8dfc:	e8 1f 17 00 00       	callq  a520 <list_iter_hasNext>
    8e01:	48 85 c0             	test   %rax,%rax
    8e04:	75 ba                	jne    8dc0 <net_findDescendants+0x80>
    8e06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    8e0d:	00 00 00 
    8e10:	4c 89 ef             	mov    %r13,%rdi
    8e13:	e8 f8 27 00 00       	callq  b610 <queue_isEmpty>
    8e18:	48 89 c5             	mov    %rax,%rbp
    8e1b:	48 85 c0             	test   %rax,%rax
    8e1e:	0f 85 a4 00 00 00    	jne    8ec8 <net_findDescendants+0x188>
    8e24:	4c 89 ef             	mov    %r13,%rdi
    8e27:	e8 b4 32 00 00       	callq  c0e0 <queue_pop>
    8e2c:	48 89 c6             	mov    %rax,%rsi
    8e2f:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
    8e34:	0f 84 b5 00 00 00    	je     8eef <net_findDescendants+0x1af>
    8e3a:	4c 89 ff             	mov    %r15,%rdi
    8e3d:	e8 ce 3c 00 00       	callq  cb10 <vector_at>
    8e42:	48 89 df             	mov    %rbx,%rdi
    8e45:	48 8b 68 10          	mov    0x10(%rax),%rbp
    8e49:	48 89 ee             	mov    %rbp,%rsi
    8e4c:	e8 af 16 00 00       	callq  a500 <list_iter_reset>
    8e51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8e58:	48 89 ee             	mov    %rbp,%rsi
    8e5b:	48 89 df             	mov    %rbx,%rdi
    8e5e:	e8 bd 16 00 00       	callq  a520 <list_iter_hasNext>
    8e63:	48 85 c0             	test   %rax,%rax
    8e66:	74 a8                	je     8e10 <net_findDescendants+0xd0>
    8e68:	48 89 ee             	mov    %rbp,%rsi
    8e6b:	48 89 df             	mov    %rbx,%rdi
    8e6e:	e8 fd 16 00 00       	callq  a570 <list_iter_next>
    8e73:	4c 89 e7             	mov    %r12,%rdi
    8e76:	48 89 c6             	mov    %rax,%rsi
    8e79:	49 89 c6             	mov    %rax,%r14
    8e7c:	e8 af 13 00 00       	callq  a230 <bitmap_isSet>
    8e81:	48 85 c0             	test   %rax,%rax
    8e84:	75 d2                	jne    8e58 <net_findDescendants+0x118>
    8e86:	4c 89 f6             	mov    %r14,%rsi
    8e89:	4c 89 e7             	mov    %r12,%rdi
    8e8c:	e8 ef 12 00 00       	callq  a180 <bitmap_set>
    8e91:	48 85 c0             	test   %rax,%rax
    8e94:	74 6a                	je     8f00 <net_findDescendants+0x1c0>
    8e96:	4c 89 f6             	mov    %r14,%rsi
    8e99:	4c 89 ef             	mov    %r13,%rdi
    8e9c:	e8 cf 28 00 00       	callq  b770 <queue_push>
    8ea1:	48 85 c0             	test   %rax,%rax
    8ea4:	75 b2                	jne    8e58 <net_findDescendants+0x118>
    8ea6:	48 8d 0d 63 0c 01 00 	lea    0x10c63(%rip),%rcx        # 19b10 <__PRETTY_FUNCTION__.5002>
    8ead:	ba 0a 03 00 00       	mov    $0x30a,%edx
    8eb2:	48 8d 35 37 0b 01 00 	lea    0x10b37(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8eb9:	48 8d 3d 9d 02 01 00 	lea    0x1029d(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8ec0:	e8 db 94 ff ff       	callq  23a0 <__assert_fail@plt>
    8ec5:	0f 1f 00             	nopl   (%rax)
    8ec8:	bd 01 00 00 00       	mov    $0x1,%ebp
    8ecd:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8ed2:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    8ed9:	00 00 
    8edb:	75 1c                	jne    8ef9 <net_findDescendants+0x1b9>
    8edd:	48 83 c4 28          	add    $0x28,%rsp
    8ee1:	48 89 e8             	mov    %rbp,%rax
    8ee4:	5b                   	pop    %rbx
    8ee5:	5d                   	pop    %rbp
    8ee6:	41 5c                	pop    %r12
    8ee8:	41 5d                	pop    %r13
    8eea:	41 5e                	pop    %r14
    8eec:	41 5f                	pop    %r15
    8eee:	c3                   	retq   
    8eef:	4c 89 ef             	mov    %r13,%rdi
    8ef2:	e8 39 27 00 00       	callq  b630 <queue_clear>
    8ef7:	eb d4                	jmp    8ecd <net_findDescendants+0x18d>
    8ef9:	e8 62 94 ff ff       	callq  2360 <__stack_chk_fail@plt>
    8efe:	66 90                	xchg   %ax,%ax
    8f00:	48 8d 0d 09 0c 01 00 	lea    0x10c09(%rip),%rcx        # 19b10 <__PRETTY_FUNCTION__.5002>
    8f07:	ba 08 03 00 00       	mov    $0x308,%edx
    8f0c:	48 8d 35 dd 0a 01 00 	lea    0x10add(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8f13:	48 8d 3d 43 02 01 00 	lea    0x10243(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8f1a:	e8 81 94 ff ff       	callq  23a0 <__assert_fail@plt>
    8f1f:	48 8d 0d ea 0b 01 00 	lea    0x10bea(%rip),%rcx        # 19b10 <__PRETTY_FUNCTION__.5002>
    8f26:	ba f6 02 00 00       	mov    $0x2f6,%edx
    8f2b:	48 8d 35 be 0a 01 00 	lea    0x10abe(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8f32:	48 8d 3d 24 02 01 00 	lea    0x10224(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8f39:	e8 62 94 ff ff       	callq  23a0 <__assert_fail@plt>
    8f3e:	48 8d 0d cb 0b 01 00 	lea    0x10bcb(%rip),%rcx        # 19b10 <__PRETTY_FUNCTION__.5002>
    8f45:	ba f4 02 00 00       	mov    $0x2f4,%edx
    8f4a:	48 8d 35 9f 0a 01 00 	lea    0x10a9f(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8f51:	48 8d 3d 05 02 01 00 	lea    0x10205(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    8f58:	e8 43 94 ff ff       	callq  23a0 <__assert_fail@plt>
    8f5d:	48 8d 0d ac 0b 01 00 	lea    0x10bac(%rip),%rcx        # 19b10 <__PRETTY_FUNCTION__.5002>
    8f64:	ba e7 02 00 00       	mov    $0x2e7,%edx
    8f69:	48 8d 35 80 0a 01 00 	lea    0x10a80(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    8f70:	48 8d 3d 19 0b 01 00 	lea    0x10b19(%rip),%rdi        # 19a90 <__PRETTY_FUNCTION__.5826+0xe8>
    8f77:	e8 24 94 ff ff       	callq  23a0 <__assert_fail@plt>
    8f7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008f80 <TMnet_findDescendants>:
    8f80:	f3 0f 1e fa          	endbr64 
    8f84:	41 57                	push   %r15
    8f86:	41 56                	push   %r14
    8f88:	41 55                	push   %r13
    8f8a:	49 89 cd             	mov    %rcx,%r13
    8f8d:	41 54                	push   %r12
    8f8f:	49 89 d4             	mov    %rdx,%r12
    8f92:	55                   	push   %rbp
    8f93:	53                   	push   %rbx
    8f94:	48 83 ec 28          	sub    $0x28,%rsp
    8f98:	4c 8b 3f             	mov    (%rdi),%r15
    8f9b:	48 8b 1a             	mov    (%rdx),%rbx
    8f9e:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    8fa3:	4c 89 ff             	mov    %r15,%rdi
    8fa6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8fad:	00 00 
    8faf:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8fb4:	31 c0                	xor    %eax,%eax
    8fb6:	e8 b5 3d 00 00       	callq  cd70 <vector_getSize>
    8fbb:	48 39 c3             	cmp    %rax,%rbx
    8fbe:	0f 85 d9 01 00 00    	jne    919d <TMnet_findDescendants+0x21d>
    8fc4:	4c 89 e7             	mov    %r12,%rdi
    8fc7:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    8fcc:	e8 0f 12 00 00       	callq  a1e0 <bitmap_clearAll>
    8fd1:	4c 89 ef             	mov    %r13,%rdi
    8fd4:	e8 57 26 00 00       	callq  b630 <queue_clear>
    8fd9:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    8fde:	4c 89 ff             	mov    %r15,%rdi
    8fe1:	e8 2a 3b 00 00       	callq  cb10 <vector_at>
    8fe6:	48 89 df             	mov    %rbx,%rdi
    8fe9:	48 8b 68 10          	mov    0x10(%rax),%rbp
    8fed:	48 89 ee             	mov    %rbp,%rsi
    8ff0:	e8 1b 15 00 00       	callq  a510 <TMlist_iter_reset>
    8ff5:	eb 3f                	jmp    9036 <TMnet_findDescendants+0xb6>
    8ff7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8ffe:	00 00 
    9000:	48 89 ee             	mov    %rbp,%rsi
    9003:	48 89 df             	mov    %rbx,%rdi
    9006:	e8 85 15 00 00       	callq  a590 <TMlist_iter_next>
    900b:	4c 89 e7             	mov    %r12,%rdi
    900e:	48 89 c6             	mov    %rax,%rsi
    9011:	49 89 c6             	mov    %rax,%r14
    9014:	e8 67 11 00 00       	callq  a180 <bitmap_set>
    9019:	48 85 c0             	test   %rax,%rax
    901c:	0f 84 5c 01 00 00    	je     917e <TMnet_findDescendants+0x1fe>
    9022:	4c 89 f6             	mov    %r14,%rsi
    9025:	4c 89 ef             	mov    %r13,%rdi
    9028:	e8 93 2a 00 00       	callq  bac0 <Pqueue_push>
    902d:	48 85 c0             	test   %rax,%rax
    9030:	0f 84 29 01 00 00    	je     915f <TMnet_findDescendants+0x1df>
    9036:	48 89 ee             	mov    %rbp,%rsi
    9039:	48 89 df             	mov    %rbx,%rdi
    903c:	e8 ff 14 00 00       	callq  a540 <TMlist_iter_hasNext>
    9041:	48 85 c0             	test   %rax,%rax
    9044:	75 ba                	jne    9000 <TMnet_findDescendants+0x80>
    9046:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    904d:	00 00 00 
    9050:	4c 89 ef             	mov    %r13,%rdi
    9053:	e8 b8 25 00 00       	callq  b610 <queue_isEmpty>
    9058:	48 89 c5             	mov    %rax,%rbp
    905b:	48 85 c0             	test   %rax,%rax
    905e:	0f 85 a4 00 00 00    	jne    9108 <TMnet_findDescendants+0x188>
    9064:	4c 89 ef             	mov    %r13,%rdi
    9067:	e8 74 30 00 00       	callq  c0e0 <queue_pop>
    906c:	48 89 c6             	mov    %rax,%rsi
    906f:	48 39 44 24 08       	cmp    %rax,0x8(%rsp)
    9074:	0f 84 b5 00 00 00    	je     912f <TMnet_findDescendants+0x1af>
    907a:	4c 89 ff             	mov    %r15,%rdi
    907d:	e8 8e 3a 00 00       	callq  cb10 <vector_at>
    9082:	48 89 df             	mov    %rbx,%rdi
    9085:	48 8b 68 10          	mov    0x10(%rax),%rbp
    9089:	48 89 ee             	mov    %rbp,%rsi
    908c:	e8 7f 14 00 00       	callq  a510 <TMlist_iter_reset>
    9091:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9098:	48 89 ee             	mov    %rbp,%rsi
    909b:	48 89 df             	mov    %rbx,%rdi
    909e:	e8 9d 14 00 00       	callq  a540 <TMlist_iter_hasNext>
    90a3:	48 85 c0             	test   %rax,%rax
    90a6:	74 a8                	je     9050 <TMnet_findDescendants+0xd0>
    90a8:	48 89 ee             	mov    %rbp,%rsi
    90ab:	48 89 df             	mov    %rbx,%rdi
    90ae:	e8 dd 14 00 00       	callq  a590 <TMlist_iter_next>
    90b3:	4c 89 e7             	mov    %r12,%rdi
    90b6:	48 89 c6             	mov    %rax,%rsi
    90b9:	49 89 c6             	mov    %rax,%r14
    90bc:	e8 6f 11 00 00       	callq  a230 <bitmap_isSet>
    90c1:	48 85 c0             	test   %rax,%rax
    90c4:	75 d2                	jne    9098 <TMnet_findDescendants+0x118>
    90c6:	4c 89 f6             	mov    %r14,%rsi
    90c9:	4c 89 e7             	mov    %r12,%rdi
    90cc:	e8 af 10 00 00       	callq  a180 <bitmap_set>
    90d1:	48 85 c0             	test   %rax,%rax
    90d4:	74 6a                	je     9140 <TMnet_findDescendants+0x1c0>
    90d6:	4c 89 f6             	mov    %r14,%rsi
    90d9:	4c 89 ef             	mov    %r13,%rdi
    90dc:	e8 df 29 00 00       	callq  bac0 <Pqueue_push>
    90e1:	48 85 c0             	test   %rax,%rax
    90e4:	75 b2                	jne    9098 <TMnet_findDescendants+0x118>
    90e6:	48 8d 0d 03 0a 01 00 	lea    0x10a03(%rip),%rcx        # 19af0 <__PRETTY_FUNCTION__.5029>
    90ed:	ba 46 03 00 00       	mov    $0x346,%edx
    90f2:	48 8d 35 f7 08 01 00 	lea    0x108f7(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    90f9:	48 8d 3d 5d 00 01 00 	lea    0x1005d(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    9100:	e8 9b 92 ff ff       	callq  23a0 <__assert_fail@plt>
    9105:	0f 1f 00             	nopl   (%rax)
    9108:	bd 01 00 00 00       	mov    $0x1,%ebp
    910d:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    9112:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    9119:	00 00 
    911b:	75 1c                	jne    9139 <TMnet_findDescendants+0x1b9>
    911d:	48 83 c4 28          	add    $0x28,%rsp
    9121:	48 89 e8             	mov    %rbp,%rax
    9124:	5b                   	pop    %rbx
    9125:	5d                   	pop    %rbp
    9126:	41 5c                	pop    %r12
    9128:	41 5d                	pop    %r13
    912a:	41 5e                	pop    %r14
    912c:	41 5f                	pop    %r15
    912e:	c3                   	retq   
    912f:	4c 89 ef             	mov    %r13,%rdi
    9132:	e8 f9 24 00 00       	callq  b630 <queue_clear>
    9137:	eb d4                	jmp    910d <TMnet_findDescendants+0x18d>
    9139:	e8 22 92 ff ff       	callq  2360 <__stack_chk_fail@plt>
    913e:	66 90                	xchg   %ax,%ax
    9140:	48 8d 0d a9 09 01 00 	lea    0x109a9(%rip),%rcx        # 19af0 <__PRETTY_FUNCTION__.5029>
    9147:	ba 44 03 00 00       	mov    $0x344,%edx
    914c:	48 8d 35 9d 08 01 00 	lea    0x1089d(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    9153:	48 8d 3d 03 00 01 00 	lea    0x10003(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    915a:	e8 41 92 ff ff       	callq  23a0 <__assert_fail@plt>
    915f:	48 8d 0d 8a 09 01 00 	lea    0x1098a(%rip),%rcx        # 19af0 <__PRETTY_FUNCTION__.5029>
    9166:	ba 32 03 00 00       	mov    $0x332,%edx
    916b:	48 8d 35 7e 08 01 00 	lea    0x1087e(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    9172:	48 8d 3d e4 ff 00 00 	lea    0xffe4(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    9179:	e8 22 92 ff ff       	callq  23a0 <__assert_fail@plt>
    917e:	48 8d 0d 6b 09 01 00 	lea    0x1096b(%rip),%rcx        # 19af0 <__PRETTY_FUNCTION__.5029>
    9185:	ba 30 03 00 00       	mov    $0x330,%edx
    918a:	48 8d 35 5f 08 01 00 	lea    0x1085f(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    9191:	48 8d 3d c5 ff 00 00 	lea    0xffc5(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    9198:	e8 03 92 ff ff       	callq  23a0 <__assert_fail@plt>
    919d:	48 8d 0d 4c 09 01 00 	lea    0x1094c(%rip),%rcx        # 19af0 <__PRETTY_FUNCTION__.5029>
    91a4:	ba 23 03 00 00       	mov    $0x323,%edx
    91a9:	48 8d 35 40 08 01 00 	lea    0x10840(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    91b0:	48 8d 3d d9 08 01 00 	lea    0x108d9(%rip),%rdi        # 19a90 <__PRETTY_FUNCTION__.5826+0xe8>
    91b7:	e8 e4 91 ff ff       	callq  23a0 <__assert_fail@plt>
    91bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000091c0 <net_generateRandomEdges>:
    91c0:	f3 0f 1e fa          	endbr64 
    91c4:	41 57                	push   %r15
    91c6:	41 56                	push   %r14
    91c8:	49 89 ce             	mov    %rcx,%r14
    91cb:	41 55                	push   %r13
    91cd:	41 54                	push   %r12
    91cf:	55                   	push   %rbp
    91d0:	53                   	push   %rbx
    91d1:	48 83 ec 48          	sub    $0x48,%rsp
    91d5:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    91da:	48 8b 3f             	mov    (%rdi),%rdi
    91dd:	48 89 34 24          	mov    %rsi,(%rsp)
    91e1:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    91e6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    91ed:	00 00 
    91ef:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    91f4:	31 c0                	xor    %eax,%eax
    91f6:	e8 75 3b 00 00       	callq  cd70 <vector_getSize>
    91fb:	48 89 c7             	mov    %rax,%rdi
    91fe:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9203:	e8 58 0e 00 00       	callq  a060 <bitmap_alloc>
    9208:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    920d:	48 85 c0             	test   %rax,%rax
    9210:	0f 84 cb 01 00 00    	je     93e1 <net_generateRandomEdges+0x221>
    9216:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
    921d:	45 31 ff             	xor    %r15d,%r15d
    9220:	e8 fb 21 00 00       	callq  b420 <queue_alloc>
    9225:	48 83 7c 24 10 00    	cmpq   $0x0,0x10(%rsp)
    922b:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    9230:	0f 8e 69 01 00 00    	jle    939f <net_generateRandomEdges+0x1df>
    9236:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    923d:	00 00 00 
    9240:	31 db                	xor    %ebx,%ebx
    9242:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    9247:	7f 15                	jg     925e <net_generateRandomEdges+0x9e>
    9249:	e9 42 01 00 00       	jmpq   9390 <net_generateRandomEdges+0x1d0>
    924e:	66 90                	xchg   %ax,%ax
    9250:	48 83 c3 01          	add    $0x1,%rbx
    9254:	48 39 1c 24          	cmp    %rbx,(%rsp)
    9258:	0f 84 32 01 00 00    	je     9390 <net_generateRandomEdges+0x1d0>
    925e:	4c 89 f7             	mov    %r14,%rdi
    9261:	e8 fa 2f 00 00       	callq  c260 <random_generate>
    9266:	48 89 c2             	mov    %rax,%rdx
    9269:	48 89 c1             	mov    %rax,%rcx
    926c:	48 b8 c3 f5 28 5c 8f 	movabs $0x28f5c28f5c28f5c3,%rax
    9273:	c2 f5 28 
    9276:	48 c1 ea 02          	shr    $0x2,%rdx
    927a:	48 f7 e2             	mul    %rdx
    927d:	48 89 d0             	mov    %rdx,%rax
    9280:	48 83 e2 fc          	and    $0xfffffffffffffffc,%rdx
    9284:	48 c1 e8 02          	shr    $0x2,%rax
    9288:	48 01 c2             	add    %rax,%rdx
    928b:	48 8d 04 92          	lea    (%rdx,%rdx,4),%rax
    928f:	48 c1 e0 02          	shl    $0x2,%rax
    9293:	48 29 c1             	sub    %rax,%rcx
    9296:	48 3b 4c 24 08       	cmp    0x8(%rsp),%rcx
    929b:	7d b3                	jge    9250 <net_generateRandomEdges+0x90>
    929d:	4c 89 f7             	mov    %r14,%rdi
    92a0:	e8 bb 2f 00 00       	callq  c260 <random_generate>
    92a5:	31 d2                	xor    %edx,%edx
    92a7:	48 f7 74 24 10       	divq   0x10(%rsp)
    92ac:	49 89 d5             	mov    %rdx,%r13
    92af:	4c 39 fa             	cmp    %r15,%rdx
    92b2:	74 9c                	je     9250 <net_generateRandomEdges+0x90>
    92b4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    92b9:	4c 89 fe             	mov    %r15,%rsi
    92bc:	48 8d 6c 24 30       	lea    0x30(%rsp),%rbp
    92c1:	48 8b 38             	mov    (%rax),%rdi
    92c4:	e8 47 38 00 00       	callq  cb10 <vector_at>
    92c9:	48 89 ef             	mov    %rbp,%rdi
    92cc:	4c 8b 60 08          	mov    0x8(%rax),%r12
    92d0:	4c 89 e6             	mov    %r12,%rsi
    92d3:	e8 28 12 00 00       	callq  a500 <list_iter_reset>
    92d8:	eb 1a                	jmp    92f4 <net_generateRandomEdges+0x134>
    92da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    92e0:	4c 89 e6             	mov    %r12,%rsi
    92e3:	48 89 ef             	mov    %rbp,%rdi
    92e6:	e8 85 12 00 00       	callq  a570 <list_iter_next>
    92eb:	4c 39 e8             	cmp    %r13,%rax
    92ee:	0f 84 5c ff ff ff    	je     9250 <net_generateRandomEdges+0x90>
    92f4:	4c 89 e6             	mov    %r12,%rsi
    92f7:	48 89 ef             	mov    %rbp,%rdi
    92fa:	e8 21 12 00 00       	callq  a520 <list_iter_hasNext>
    92ff:	48 85 c0             	test   %rax,%rax
    9302:	75 dc                	jne    92e0 <net_generateRandomEdges+0x120>
    9304:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
    9309:	48 8b 4c 24 20       	mov    0x20(%rsp),%rcx
    930e:	4c 89 ea             	mov    %r13,%rdx
    9311:	4c 89 fe             	mov    %r15,%rsi
    9314:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    9319:	e8 b2 f0 ff ff       	callq  83d0 <net_isPath>
    931e:	48 85 c0             	test   %rax,%rax
    9321:	0f 85 29 ff ff ff    	jne    9250 <net_generateRandomEdges+0x90>
    9327:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    932c:	4c 89 fe             	mov    %r15,%rsi
    932f:	48 8b 28             	mov    (%rax),%rbp
    9332:	48 89 ef             	mov    %rbp,%rdi
    9335:	e8 d6 37 00 00       	callq  cb10 <vector_at>
    933a:	4c 89 ee             	mov    %r13,%rsi
    933d:	48 8b 78 08          	mov    0x8(%rax),%rdi
    9341:	e8 fa 16 00 00       	callq  aa40 <list_insert>
    9346:	48 85 c0             	test   %rax,%rax
    9349:	0f 84 d5 00 00 00    	je     9424 <net_generateRandomEdges+0x264>
    934f:	4c 89 ee             	mov    %r13,%rsi
    9352:	48 89 ef             	mov    %rbp,%rdi
    9355:	e8 b6 37 00 00       	callq  cb10 <vector_at>
    935a:	4c 89 fe             	mov    %r15,%rsi
    935d:	48 8b 78 10          	mov    0x10(%rax),%rdi
    9361:	e8 da 16 00 00       	callq  aa40 <list_insert>
    9366:	48 85 c0             	test   %rax,%rax
    9369:	0f 85 e1 fe ff ff    	jne    9250 <net_generateRandomEdges+0x90>
    936f:	48 8d 0d b2 08 01 00 	lea    0x108b2(%rip),%rcx        # 19c28 <__PRETTY_FUNCTION__.4750>
    9376:	ba e9 00 00 00       	mov    $0xe9,%edx
    937b:	48 8d 35 6e 06 01 00 	lea    0x1066e(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    9382:	48 8d 3d d4 fd 00 00 	lea    0xfdd4(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    9389:	e8 12 90 ff ff       	callq  23a0 <__assert_fail@plt>
    938e:	66 90                	xchg   %ax,%ax
    9390:	49 83 c7 01          	add    $0x1,%r15
    9394:	4c 39 7c 24 10       	cmp    %r15,0x10(%rsp)
    9399:	0f 85 a1 fe ff ff    	jne    9240 <net_generateRandomEdges+0x80>
    939f:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    93a4:	e8 a7 f3 ff ff       	callq  8750 <net_isCycle>
    93a9:	48 85 c0             	test   %rax,%rax
    93ac:	75 57                	jne    9405 <net_generateRandomEdges+0x245>
    93ae:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
    93b3:	e8 88 0d 00 00       	callq  a140 <bitmap_free>
    93b8:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    93bd:	e8 de 21 00 00       	callq  b5a0 <queue_free>
    93c2:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    93c7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    93ce:	00 00 
    93d0:	75 2e                	jne    9400 <net_generateRandomEdges+0x240>
    93d2:	48 83 c4 48          	add    $0x48,%rsp
    93d6:	5b                   	pop    %rbx
    93d7:	5d                   	pop    %rbp
    93d8:	41 5c                	pop    %r12
    93da:	41 5d                	pop    %r13
    93dc:	41 5e                	pop    %r14
    93de:	41 5f                	pop    %r15
    93e0:	c3                   	retq   
    93e1:	48 8d 0d e8 06 01 00 	lea    0x106e8(%rip),%rcx        # 19ad0 <__PRETTY_FUNCTION__.5057>
    93e8:	ba 5d 03 00 00       	mov    $0x35d,%edx
    93ed:	48 8d 35 fc 05 01 00 	lea    0x105fc(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    93f4:	48 8d 3d be 03 01 00 	lea    0x103be(%rip),%rdi        # 197b9 <__PRETTY_FUNCTION__.4667+0x61>
    93fb:	e8 a0 8f ff ff       	callq  23a0 <__assert_fail@plt>
    9400:	e8 5b 8f ff ff       	callq  2360 <__stack_chk_fail@plt>
    9405:	48 8d 0d c4 06 01 00 	lea    0x106c4(%rip),%rcx        # 19ad0 <__PRETTY_FUNCTION__.5057>
    940c:	ba 75 03 00 00       	mov    $0x375,%edx
    9411:	48 8d 35 d8 05 01 00 	lea    0x105d8(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    9418:	48 8d 3d d7 05 01 00 	lea    0x105d7(%rip),%rdi        # 199f6 <__PRETTY_FUNCTION__.5826+0x4e>
    941f:	e8 7c 8f ff ff       	callq  23a0 <__assert_fail@plt>
    9424:	48 8d 0d fd 07 01 00 	lea    0x107fd(%rip),%rcx        # 19c28 <__PRETTY_FUNCTION__.4750>
    942b:	ba e4 00 00 00       	mov    $0xe4,%edx
    9430:	48 8d 35 b9 05 01 00 	lea    0x105b9(%rip),%rsi        # 199f0 <__PRETTY_FUNCTION__.5826+0x48>
    9437:	48 8d 3d 1f fd 00 00 	lea    0xfd1f(%rip),%rdi        # 1915d <__PRETTY_FUNCTION__.4726+0xed>
    943e:	e8 5d 8f ff ff       	callq  23a0 <__assert_fail@plt>
    9443:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    944a:	00 00 00 
    944d:	0f 1f 00             	nopl   (%rax)

0000000000009450 <sort>:
    9450:	f3 0f 1e fa          	endbr64 
    9454:	41 57                	push   %r15
    9456:	41 56                	push   %r14
    9458:	41 55                	push   %r13
    945a:	41 54                	push   %r12
    945c:	55                   	push   %rbp
    945d:	53                   	push   %rbx
    945e:	48 81 ec 88 02 00 00 	sub    $0x288,%rsp
    9465:	89 54 24 30          	mov    %edx,0x30(%rsp)
    9469:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9470:	00 00 
    9472:	48 89 84 24 78 02 00 	mov    %rax,0x278(%rsp)
    9479:	00 
    947a:	31 c0                	xor    %eax,%eax
    947c:	83 fe 01             	cmp    $0x1,%esi
    947f:	0f 86 f7 0a 00 00    	jbe    9f7c <sort+0xb2c>
    9485:	85 d2                	test   %edx,%edx
    9487:	0f 84 ef 0a 00 00    	je     9f7c <sort+0xb2c>
    948d:	83 ee 01             	sub    $0x1,%esi
    9490:	8d 42 f0             	lea    -0x10(%rdx),%eax
    9493:	48 89 fb             	mov    %rdi,%rbx
    9496:	49 89 cd             	mov    %rcx,%r13
    9499:	0f af f2             	imul   %edx,%esi
    949c:	c1 e8 04             	shr    $0x4,%eax
    949f:	89 d1                	mov    %edx,%ecx
    94a1:	c7 44 24 64 00 00 00 	movl   $0x0,0x64(%rsp)
    94a8:	00 
    94a9:	48 89 0c 24          	mov    %rcx,(%rsp)
    94ad:	4c 89 c5             	mov    %r8,%rbp
    94b0:	4d 89 cc             	mov    %r9,%r12
    94b3:	4d 89 ef             	mov    %r13,%r15
    94b6:	4c 8d 34 37          	lea    (%rdi,%rsi,1),%r14
    94ba:	8d 78 01             	lea    0x1(%rax),%edi
    94bd:	89 7c 24 34          	mov    %edi,0x34(%rsp)
    94c1:	c1 e7 04             	shl    $0x4,%edi
    94c4:	8d 72 ff             	lea    -0x1(%rdx),%esi
    94c7:	89 f8                	mov    %edi,%eax
    94c9:	89 7c 24 40          	mov    %edi,0x40(%rsp)
    94cd:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    94d2:	89 f0                	mov    %esi,%eax
    94d4:	29 f8                	sub    %edi,%eax
    94d6:	89 74 24 24          	mov    %esi,0x24(%rsp)
    94da:	8d 78 ff             	lea    -0x1(%rax),%edi
    94dd:	8d 70 fd             	lea    -0x3(%rax),%esi
    94e0:	89 44 24 44          	mov    %eax,0x44(%rsp)
    94e4:	89 7c 24 48          	mov    %edi,0x48(%rsp)
    94e8:	8d 78 fe             	lea    -0x2(%rax),%edi
    94eb:	89 7c 24 4c          	mov    %edi,0x4c(%rsp)
    94ef:	8d 78 fc             	lea    -0x4(%rax),%edi
    94f2:	89 74 24 50          	mov    %esi,0x50(%rsp)
    94f6:	8d 70 fb             	lea    -0x5(%rax),%esi
    94f9:	89 7c 24 54          	mov    %edi,0x54(%rsp)
    94fd:	8d 78 fa             	lea    -0x6(%rax),%edi
    9500:	89 74 24 60          	mov    %esi,0x60(%rsp)
    9504:	8d 70 f9             	lea    -0x7(%rax),%esi
    9507:	89 7c 24 68          	mov    %edi,0x68(%rsp)
    950b:	8d 78 f8             	lea    -0x8(%rax),%edi
    950e:	89 74 24 6c          	mov    %esi,0x6c(%rsp)
    9512:	8d 70 f7             	lea    -0x9(%rax),%esi
    9515:	89 7c 24 70          	mov    %edi,0x70(%rsp)
    9519:	8d 78 f6             	lea    -0xa(%rax),%edi
    951c:	89 74 24 74          	mov    %esi,0x74(%rsp)
    9520:	8d 70 f5             	lea    -0xb(%rax),%esi
    9523:	89 7c 24 78          	mov    %edi,0x78(%rsp)
    9527:	8d 78 f4             	lea    -0xc(%rax),%edi
    952a:	83 e8 0d             	sub    $0xd,%eax
    952d:	89 84 24 84 00 00 00 	mov    %eax,0x84(%rsp)
    9534:	48 89 c8             	mov    %rcx,%rax
    9537:	48 f7 d8             	neg    %rax
    953a:	89 74 24 7c          	mov    %esi,0x7c(%rsp)
    953e:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    9543:	48 8d 41 10          	lea    0x10(%rcx),%rax
    9547:	89 bc 24 80 00 00 00 	mov    %edi,0x80(%rsp)
    954e:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    9553:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9558:	4c 89 f0             	mov    %r14,%rax
    955b:	48 8b 3c 24          	mov    (%rsp),%rdi
    955f:	48 29 d8             	sub    %rbx,%rax
    9562:	48 99                	cqto   
    9564:	48 f7 ff             	idiv   %rdi
    9567:	83 c0 01             	add    $0x1,%eax
    956a:	83 f8 08             	cmp    $0x8,%eax
    956d:	0f 87 ad 02 00 00    	ja     9820 <sort+0x3d0>
    9573:	4c 39 f3             	cmp    %r14,%rbx
    9576:	0f 83 44 02 00 00    	jae    97c0 <sort+0x370>
    957c:	48 8d 04 3b          	lea    (%rbx,%rdi,1),%rax
    9580:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    9585:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    958a:	8b 44 24 24          	mov    0x24(%rsp),%eax
    958e:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    9593:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9598:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
    959d:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    95a2:	4d 39 ee             	cmp    %r13,%r14
    95a5:	72 27                	jb     95ce <sort+0x17e>
    95a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    95ae:	00 00 
    95b0:	48 89 de             	mov    %rbx,%rsi
    95b3:	4c 89 ef             	mov    %r13,%rdi
    95b6:	4c 89 e1             	mov    %r12,%rcx
    95b9:	48 89 ea             	mov    %rbp,%rdx
    95bc:	41 ff d7             	callq  *%r15
    95bf:	85 c0                	test   %eax,%eax
    95c1:	49 0f 4f dd          	cmovg  %r13,%rbx
    95c5:	4c 03 2c 24          	add    (%rsp),%r13
    95c9:	4d 39 f5             	cmp    %r14,%r13
    95cc:	76 e2                	jbe    95b0 <sort+0x160>
    95ce:	49 39 de             	cmp    %rbx,%r14
    95d1:	0f 84 d9 01 00 00    	je     97b0 <sort+0x360>
    95d7:	49 8d 46 0f          	lea    0xf(%r14),%rax
    95db:	48 29 d8             	sub    %rbx,%rax
    95de:	48 83 f8 1e          	cmp    $0x1e,%rax
    95e2:	0f 86 08 02 00 00    	jbe    97f0 <sort+0x3a0>
    95e8:	83 7c 24 24 0e       	cmpl   $0xe,0x24(%rsp)
    95ed:	0f 86 fd 01 00 00    	jbe    97f0 <sort+0x3a0>
    95f3:	8b 4c 24 34          	mov    0x34(%rsp),%ecx
    95f7:	31 c0                	xor    %eax,%eax
    95f9:	31 d2                	xor    %edx,%edx
    95fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9600:	f3 0f 6f 04 03       	movdqu (%rbx,%rax,1),%xmm0
    9605:	f3 41 0f 6f 0c 06    	movdqu (%r14,%rax,1),%xmm1
    960b:	83 c2 01             	add    $0x1,%edx
    960e:	0f 11 0c 03          	movups %xmm1,(%rbx,%rax,1)
    9612:	41 0f 11 04 06       	movups %xmm0,(%r14,%rax,1)
    9617:	48 83 c0 10          	add    $0x10,%rax
    961b:	39 d1                	cmp    %edx,%ecx
    961d:	77 e1                	ja     9600 <sort+0x1b0>
    961f:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    9624:	8b 4c 24 40          	mov    0x40(%rsp),%ecx
    9628:	48 8d 34 03          	lea    (%rbx,%rax,1),%rsi
    962c:	4c 01 f0             	add    %r14,%rax
    962f:	39 4c 24 30          	cmp    %ecx,0x30(%rsp)
    9633:	0f 84 77 01 00 00    	je     97b0 <sort+0x360>
    9639:	0f b6 16             	movzbl (%rsi),%edx
    963c:	0f b6 08             	movzbl (%rax),%ecx
    963f:	44 8b 4c 24 44       	mov    0x44(%rsp),%r9d
    9644:	88 0e                	mov    %cl,(%rsi)
    9646:	88 10                	mov    %dl,(%rax)
    9648:	45 85 c9             	test   %r9d,%r9d
    964b:	0f 84 5f 01 00 00    	je     97b0 <sort+0x360>
    9651:	0f b6 56 01          	movzbl 0x1(%rsi),%edx
    9655:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
    9659:	44 8b 44 24 48       	mov    0x48(%rsp),%r8d
    965e:	88 4e 01             	mov    %cl,0x1(%rsi)
    9661:	88 50 01             	mov    %dl,0x1(%rax)
    9664:	45 85 c0             	test   %r8d,%r8d
    9667:	0f 84 43 01 00 00    	je     97b0 <sort+0x360>
    966d:	0f b6 56 02          	movzbl 0x2(%rsi),%edx
    9671:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
    9675:	8b 7c 24 4c          	mov    0x4c(%rsp),%edi
    9679:	88 4e 02             	mov    %cl,0x2(%rsi)
    967c:	88 50 02             	mov    %dl,0x2(%rax)
    967f:	85 ff                	test   %edi,%edi
    9681:	0f 84 29 01 00 00    	je     97b0 <sort+0x360>
    9687:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
    968b:	0f b6 56 03          	movzbl 0x3(%rsi),%edx
    968f:	88 4e 03             	mov    %cl,0x3(%rsi)
    9692:	8b 4c 24 50          	mov    0x50(%rsp),%ecx
    9696:	88 50 03             	mov    %dl,0x3(%rax)
    9699:	85 c9                	test   %ecx,%ecx
    969b:	0f 84 0f 01 00 00    	je     97b0 <sort+0x360>
    96a1:	0f b6 56 04          	movzbl 0x4(%rsi),%edx
    96a5:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
    96a9:	88 4e 04             	mov    %cl,0x4(%rsi)
    96ac:	88 50 04             	mov    %dl,0x4(%rax)
    96af:	8b 54 24 54          	mov    0x54(%rsp),%edx
    96b3:	85 d2                	test   %edx,%edx
    96b5:	0f 84 f5 00 00 00    	je     97b0 <sort+0x360>
    96bb:	0f b6 56 05          	movzbl 0x5(%rsi),%edx
    96bf:	0f b6 48 05          	movzbl 0x5(%rax),%ecx
    96c3:	44 8b 6c 24 60       	mov    0x60(%rsp),%r13d
    96c8:	88 4e 05             	mov    %cl,0x5(%rsi)
    96cb:	88 50 05             	mov    %dl,0x5(%rax)
    96ce:	45 85 ed             	test   %r13d,%r13d
    96d1:	0f 84 d9 00 00 00    	je     97b0 <sort+0x360>
    96d7:	0f b6 56 06          	movzbl 0x6(%rsi),%edx
    96db:	0f b6 48 06          	movzbl 0x6(%rax),%ecx
    96df:	8b 5c 24 68          	mov    0x68(%rsp),%ebx
    96e3:	88 4e 06             	mov    %cl,0x6(%rsi)
    96e6:	88 50 06             	mov    %dl,0x6(%rax)
    96e9:	85 db                	test   %ebx,%ebx
    96eb:	0f 84 bf 00 00 00    	je     97b0 <sort+0x360>
    96f1:	0f b6 56 07          	movzbl 0x7(%rsi),%edx
    96f5:	0f b6 48 07          	movzbl 0x7(%rax),%ecx
    96f9:	44 8b 5c 24 6c       	mov    0x6c(%rsp),%r11d
    96fe:	88 4e 07             	mov    %cl,0x7(%rsi)
    9701:	88 50 07             	mov    %dl,0x7(%rax)
    9704:	45 85 db             	test   %r11d,%r11d
    9707:	0f 84 a3 00 00 00    	je     97b0 <sort+0x360>
    970d:	0f b6 56 08          	movzbl 0x8(%rsi),%edx
    9711:	0f b6 48 08          	movzbl 0x8(%rax),%ecx
    9715:	44 8b 54 24 70       	mov    0x70(%rsp),%r10d
    971a:	88 4e 08             	mov    %cl,0x8(%rsi)
    971d:	88 50 08             	mov    %dl,0x8(%rax)
    9720:	45 85 d2             	test   %r10d,%r10d
    9723:	0f 84 87 00 00 00    	je     97b0 <sort+0x360>
    9729:	0f b6 56 09          	movzbl 0x9(%rsi),%edx
    972d:	0f b6 48 09          	movzbl 0x9(%rax),%ecx
    9731:	44 8b 4c 24 74       	mov    0x74(%rsp),%r9d
    9736:	88 4e 09             	mov    %cl,0x9(%rsi)
    9739:	88 50 09             	mov    %dl,0x9(%rax)
    973c:	45 85 c9             	test   %r9d,%r9d
    973f:	74 6f                	je     97b0 <sort+0x360>
    9741:	0f b6 56 0a          	movzbl 0xa(%rsi),%edx
    9745:	0f b6 48 0a          	movzbl 0xa(%rax),%ecx
    9749:	44 8b 44 24 78       	mov    0x78(%rsp),%r8d
    974e:	88 4e 0a             	mov    %cl,0xa(%rsi)
    9751:	88 50 0a             	mov    %dl,0xa(%rax)
    9754:	45 85 c0             	test   %r8d,%r8d
    9757:	74 57                	je     97b0 <sort+0x360>
    9759:	0f b6 56 0b          	movzbl 0xb(%rsi),%edx
    975d:	0f b6 48 0b          	movzbl 0xb(%rax),%ecx
    9761:	8b 7c 24 7c          	mov    0x7c(%rsp),%edi
    9765:	88 4e 0b             	mov    %cl,0xb(%rsi)
    9768:	88 50 0b             	mov    %dl,0xb(%rax)
    976b:	85 ff                	test   %edi,%edi
    976d:	74 41                	je     97b0 <sort+0x360>
    976f:	0f b6 48 0c          	movzbl 0xc(%rax),%ecx
    9773:	0f b6 56 0c          	movzbl 0xc(%rsi),%edx
    9777:	88 4e 0c             	mov    %cl,0xc(%rsi)
    977a:	8b 8c 24 80 00 00 00 	mov    0x80(%rsp),%ecx
    9781:	88 50 0c             	mov    %dl,0xc(%rax)
    9784:	85 c9                	test   %ecx,%ecx
    9786:	74 28                	je     97b0 <sort+0x360>
    9788:	0f b6 56 0d          	movzbl 0xd(%rsi),%edx
    978c:	0f b6 48 0d          	movzbl 0xd(%rax),%ecx
    9790:	88 4e 0d             	mov    %cl,0xd(%rsi)
    9793:	88 50 0d             	mov    %dl,0xd(%rax)
    9796:	8b 94 24 84 00 00 00 	mov    0x84(%rsp),%edx
    979d:	85 d2                	test   %edx,%edx
    979f:	74 0f                	je     97b0 <sort+0x360>
    97a1:	0f b6 56 0e          	movzbl 0xe(%rsi),%edx
    97a5:	0f b6 48 0e          	movzbl 0xe(%rax),%ecx
    97a9:	88 4e 0e             	mov    %cl,0xe(%rsi)
    97ac:	88 50 0e             	mov    %dl,0xe(%rax)
    97af:	90                   	nop
    97b0:	4c 03 74 24 10       	add    0x10(%rsp),%r14
    97b5:	4c 39 74 24 08       	cmp    %r14,0x8(%rsp)
    97ba:	0f 82 d8 fd ff ff    	jb     9598 <sort+0x148>
    97c0:	83 6c 24 64 01       	subl   $0x1,0x64(%rsp)
    97c5:	48 63 44 24 64       	movslq 0x64(%rsp),%rax
    97ca:	83 f8 ff             	cmp    $0xffffffff,%eax
    97cd:	0f 84 a9 07 00 00    	je     9f7c <sort+0xb2c>
    97d3:	48 8b 9c c4 90 00 00 	mov    0x90(%rsp,%rax,8),%rbx
    97da:	00 
    97db:	4c 8b b4 c4 80 01 00 	mov    0x180(%rsp,%rax,8),%r14
    97e2:	00 
    97e3:	e9 70 fd ff ff       	jmpq   9558 <sort+0x108>
    97e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    97ef:	00 
    97f0:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    97f5:	4c 89 f0             	mov    %r14,%rax
    97f8:	49 8d 7c 36 01       	lea    0x1(%r14,%rsi,1),%rdi
    97fd:	0f 1f 00             	nopl   (%rax)
    9800:	0f b6 13             	movzbl (%rbx),%edx
    9803:	0f b6 08             	movzbl (%rax),%ecx
    9806:	48 83 c0 01          	add    $0x1,%rax
    980a:	48 83 c3 01          	add    $0x1,%rbx
    980e:	88 4b ff             	mov    %cl,-0x1(%rbx)
    9811:	88 50 ff             	mov    %dl,-0x1(%rax)
    9814:	48 39 f8             	cmp    %rdi,%rax
    9817:	75 e7                	jne    9800 <sort+0x3b0>
    9819:	eb 95                	jmp    97b0 <sort+0x360>
    981b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9820:	d1 e8                	shr    %eax
    9822:	0f af 44 24 30       	imul   0x30(%rsp),%eax
    9827:	48 01 d8             	add    %rbx,%rax
    982a:	48 39 c3             	cmp    %rax,%rbx
    982d:	0f 84 ed 01 00 00    	je     9a20 <sort+0x5d0>
    9833:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    9837:	48 39 d0             	cmp    %rdx,%rax
    983a:	0f 82 b4 07 00 00    	jb     9ff4 <sort+0xba4>
    9840:	83 7c 24 24 0e       	cmpl   $0xe,0x24(%rsp)
    9845:	0f 86 a9 07 00 00    	jbe    9ff4 <sort+0xba4>
    984b:	8b 74 24 34          	mov    0x34(%rsp),%esi
    984f:	31 d2                	xor    %edx,%edx
    9851:	31 c9                	xor    %ecx,%ecx
    9853:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9858:	f3 0f 6f 04 10       	movdqu (%rax,%rdx,1),%xmm0
    985d:	f3 0f 6f 1c 13       	movdqu (%rbx,%rdx,1),%xmm3
    9862:	83 c1 01             	add    $0x1,%ecx
    9865:	0f 11 1c 10          	movups %xmm3,(%rax,%rdx,1)
    9869:	0f 11 04 13          	movups %xmm0,(%rbx,%rdx,1)
    986d:	48 83 c2 10          	add    $0x10,%rdx
    9871:	39 ce                	cmp    %ecx,%esi
    9873:	77 e3                	ja     9858 <sort+0x408>
    9875:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    987a:	48 01 f8             	add    %rdi,%rax
    987d:	48 8d 14 3b          	lea    (%rbx,%rdi,1),%rdx
    9881:	8b 7c 24 40          	mov    0x40(%rsp),%edi
    9885:	39 7c 24 30          	cmp    %edi,0x30(%rsp)
    9889:	0f 84 91 01 00 00    	je     9a20 <sort+0x5d0>
    988f:	0f b6 08             	movzbl (%rax),%ecx
    9892:	0f b6 32             	movzbl (%rdx),%esi
    9895:	44 8b 6c 24 44       	mov    0x44(%rsp),%r13d
    989a:	40 88 30             	mov    %sil,(%rax)
    989d:	88 0a                	mov    %cl,(%rdx)
    989f:	45 85 ed             	test   %r13d,%r13d
    98a2:	0f 84 78 01 00 00    	je     9a20 <sort+0x5d0>
    98a8:	0f b6 48 01          	movzbl 0x1(%rax),%ecx
    98ac:	0f b6 72 01          	movzbl 0x1(%rdx),%esi
    98b0:	44 8b 5c 24 48       	mov    0x48(%rsp),%r11d
    98b5:	40 88 70 01          	mov    %sil,0x1(%rax)
    98b9:	88 4a 01             	mov    %cl,0x1(%rdx)
    98bc:	45 85 db             	test   %r11d,%r11d
    98bf:	0f 84 5b 01 00 00    	je     9a20 <sort+0x5d0>
    98c5:	0f b6 48 02          	movzbl 0x2(%rax),%ecx
    98c9:	0f b6 72 02          	movzbl 0x2(%rdx),%esi
    98cd:	44 8b 54 24 4c       	mov    0x4c(%rsp),%r10d
    98d2:	40 88 70 02          	mov    %sil,0x2(%rax)
    98d6:	88 4a 02             	mov    %cl,0x2(%rdx)
    98d9:	45 85 d2             	test   %r10d,%r10d
    98dc:	0f 84 3e 01 00 00    	je     9a20 <sort+0x5d0>
    98e2:	0f b6 48 03          	movzbl 0x3(%rax),%ecx
    98e6:	0f b6 72 03          	movzbl 0x3(%rdx),%esi
    98ea:	44 8b 4c 24 50       	mov    0x50(%rsp),%r9d
    98ef:	40 88 70 03          	mov    %sil,0x3(%rax)
    98f3:	88 4a 03             	mov    %cl,0x3(%rdx)
    98f6:	45 85 c9             	test   %r9d,%r9d
    98f9:	0f 84 21 01 00 00    	je     9a20 <sort+0x5d0>
    98ff:	0f b6 48 04          	movzbl 0x4(%rax),%ecx
    9903:	0f b6 72 04          	movzbl 0x4(%rdx),%esi
    9907:	44 8b 44 24 54       	mov    0x54(%rsp),%r8d
    990c:	40 88 70 04          	mov    %sil,0x4(%rax)
    9910:	88 4a 04             	mov    %cl,0x4(%rdx)
    9913:	45 85 c0             	test   %r8d,%r8d
    9916:	0f 84 04 01 00 00    	je     9a20 <sort+0x5d0>
    991c:	0f b6 48 05          	movzbl 0x5(%rax),%ecx
    9920:	0f b6 72 05          	movzbl 0x5(%rdx),%esi
    9924:	8b 7c 24 60          	mov    0x60(%rsp),%edi
    9928:	40 88 70 05          	mov    %sil,0x5(%rax)
    992c:	88 4a 05             	mov    %cl,0x5(%rdx)
    992f:	85 ff                	test   %edi,%edi
    9931:	0f 84 e9 00 00 00    	je     9a20 <sort+0x5d0>
    9937:	0f b6 72 06          	movzbl 0x6(%rdx),%esi
    993b:	0f b6 48 06          	movzbl 0x6(%rax),%ecx
    993f:	40 88 70 06          	mov    %sil,0x6(%rax)
    9943:	8b 74 24 68          	mov    0x68(%rsp),%esi
    9947:	88 4a 06             	mov    %cl,0x6(%rdx)
    994a:	85 f6                	test   %esi,%esi
    994c:	0f 84 ce 00 00 00    	je     9a20 <sort+0x5d0>
    9952:	0f b6 48 07          	movzbl 0x7(%rax),%ecx
    9956:	0f b6 72 07          	movzbl 0x7(%rdx),%esi
    995a:	40 88 70 07          	mov    %sil,0x7(%rax)
    995e:	88 4a 07             	mov    %cl,0x7(%rdx)
    9961:	8b 4c 24 6c          	mov    0x6c(%rsp),%ecx
    9965:	85 c9                	test   %ecx,%ecx
    9967:	0f 84 b3 00 00 00    	je     9a20 <sort+0x5d0>
    996d:	0f b6 48 08          	movzbl 0x8(%rax),%ecx
    9971:	0f b6 72 08          	movzbl 0x8(%rdx),%esi
    9975:	44 8b 6c 24 70       	mov    0x70(%rsp),%r13d
    997a:	40 88 70 08          	mov    %sil,0x8(%rax)
    997e:	88 4a 08             	mov    %cl,0x8(%rdx)
    9981:	45 85 ed             	test   %r13d,%r13d
    9984:	0f 84 96 00 00 00    	je     9a20 <sort+0x5d0>
    998a:	0f b6 48 09          	movzbl 0x9(%rax),%ecx
    998e:	0f b6 72 09          	movzbl 0x9(%rdx),%esi
    9992:	44 8b 5c 24 74       	mov    0x74(%rsp),%r11d
    9997:	40 88 70 09          	mov    %sil,0x9(%rax)
    999b:	88 4a 09             	mov    %cl,0x9(%rdx)
    999e:	45 85 db             	test   %r11d,%r11d
    99a1:	74 7d                	je     9a20 <sort+0x5d0>
    99a3:	0f b6 48 0a          	movzbl 0xa(%rax),%ecx
    99a7:	0f b6 72 0a          	movzbl 0xa(%rdx),%esi
    99ab:	44 8b 54 24 78       	mov    0x78(%rsp),%r10d
    99b0:	40 88 70 0a          	mov    %sil,0xa(%rax)
    99b4:	88 4a 0a             	mov    %cl,0xa(%rdx)
    99b7:	45 85 d2             	test   %r10d,%r10d
    99ba:	74 64                	je     9a20 <sort+0x5d0>
    99bc:	0f b6 48 0b          	movzbl 0xb(%rax),%ecx
    99c0:	0f b6 72 0b          	movzbl 0xb(%rdx),%esi
    99c4:	44 8b 4c 24 7c       	mov    0x7c(%rsp),%r9d
    99c9:	40 88 70 0b          	mov    %sil,0xb(%rax)
    99cd:	88 4a 0b             	mov    %cl,0xb(%rdx)
    99d0:	45 85 c9             	test   %r9d,%r9d
    99d3:	74 4b                	je     9a20 <sort+0x5d0>
    99d5:	0f b6 48 0c          	movzbl 0xc(%rax),%ecx
    99d9:	0f b6 72 0c          	movzbl 0xc(%rdx),%esi
    99dd:	44 8b 84 24 80 00 00 	mov    0x80(%rsp),%r8d
    99e4:	00 
    99e5:	40 88 70 0c          	mov    %sil,0xc(%rax)
    99e9:	88 4a 0c             	mov    %cl,0xc(%rdx)
    99ec:	45 85 c0             	test   %r8d,%r8d
    99ef:	74 2f                	je     9a20 <sort+0x5d0>
    99f1:	0f b6 48 0d          	movzbl 0xd(%rax),%ecx
    99f5:	0f b6 72 0d          	movzbl 0xd(%rdx),%esi
    99f9:	8b bc 24 84 00 00 00 	mov    0x84(%rsp),%edi
    9a00:	40 88 70 0d          	mov    %sil,0xd(%rax)
    9a04:	88 4a 0d             	mov    %cl,0xd(%rdx)
    9a07:	85 ff                	test   %edi,%edi
    9a09:	74 15                	je     9a20 <sort+0x5d0>
    9a0b:	0f b6 48 0e          	movzbl 0xe(%rax),%ecx
    9a0f:	0f b6 72 0e          	movzbl 0xe(%rdx),%esi
    9a13:	40 88 70 0e          	mov    %sil,0xe(%rax)
    9a17:	88 4a 0e             	mov    %cl,0xe(%rdx)
    9a1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9a20:	48 8b 04 24          	mov    (%rsp),%rax
    9a24:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    9a29:	4c 89 74 24 28       	mov    %r14,0x28(%rsp)
    9a2e:	4d 8d 2c 06          	lea    (%r14,%rax,1),%r13
    9a32:	48 01 d8             	add    %rbx,%rax
    9a35:	48 89 84 24 88 00 00 	mov    %rax,0x88(%rsp)
    9a3c:	00 
    9a3d:	4d 89 ee             	mov    %r13,%r14
    9a40:	49 89 dd             	mov    %rbx,%r13
    9a43:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9a48:	48 03 1c 24          	add    (%rsp),%rbx
    9a4c:	48 39 5c 24 28       	cmp    %rbx,0x28(%rsp)
    9a51:	72 17                	jb     9a6a <sort+0x61a>
    9a53:	4c 89 e1             	mov    %r12,%rcx
    9a56:	48 89 ea             	mov    %rbp,%rdx
    9a59:	4c 89 ee             	mov    %r13,%rsi
    9a5c:	48 89 df             	mov    %rbx,%rdi
    9a5f:	41 ff d7             	callq  *%r15
    9a62:	85 c0                	test   %eax,%eax
    9a64:	0f 8e 46 02 00 00    	jle    9cb0 <sort+0x860>
    9a6a:	48 89 5c 24 18       	mov    %rbx,0x18(%rsp)
    9a6f:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    9a74:	eb 1d                	jmp    9a93 <sort+0x643>
    9a76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    9a7d:	00 00 00 
    9a80:	4c 89 e1             	mov    %r12,%rcx
    9a83:	48 89 ea             	mov    %rbp,%rdx
    9a86:	4c 89 ee             	mov    %r13,%rsi
    9a89:	4c 89 f7             	mov    %r14,%rdi
    9a8c:	41 ff d7             	callq  *%r15
    9a8f:	85 c0                	test   %eax,%eax
    9a91:	78 08                	js     9a9b <sort+0x64b>
    9a93:	49 01 de             	add    %rbx,%r14
    9a96:	4d 39 f5             	cmp    %r14,%r13
    9a99:	72 e5                	jb     9a80 <sort+0x630>
    9a9b:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    9aa0:	4c 39 f3             	cmp    %r14,%rbx
    9aa3:	0f 87 57 02 00 00    	ja     9d00 <sort+0x8b0>
    9aa9:	0f 84 11 02 00 00    	je     9cc0 <sort+0x870>
    9aaf:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9ab4:	48 03 44 24 58       	add    0x58(%rsp),%rax
    9ab9:	49 39 c6             	cmp    %rax,%r14
    9abc:	49 8d 46 10          	lea    0x10(%r14),%rax
    9ac0:	0f 93 c2             	setae  %dl
    9ac3:	48 39 c3             	cmp    %rax,%rbx
    9ac6:	0f 93 c0             	setae  %al
    9ac9:	08 c2                	or     %al,%dl
    9acb:	0f 84 ff 01 00 00    	je     9cd0 <sort+0x880>
    9ad1:	83 7c 24 24 0e       	cmpl   $0xe,0x24(%rsp)
    9ad6:	0f 86 f4 01 00 00    	jbe    9cd0 <sort+0x880>
    9adc:	8b 4c 24 34          	mov    0x34(%rsp),%ecx
    9ae0:	31 c0                	xor    %eax,%eax
    9ae2:	31 d2                	xor    %edx,%edx
    9ae4:	0f 1f 40 00          	nopl   0x0(%rax)
    9ae8:	f3 0f 6f 04 03       	movdqu (%rbx,%rax,1),%xmm0
    9aed:	f3 41 0f 6f 14 06    	movdqu (%r14,%rax,1),%xmm2
    9af3:	83 c2 01             	add    $0x1,%edx
    9af6:	0f 11 14 03          	movups %xmm2,(%rbx,%rax,1)
    9afa:	41 0f 11 04 06       	movups %xmm0,(%r14,%rax,1)
    9aff:	48 83 c0 10          	add    $0x10,%rax
    9b03:	39 d1                	cmp    %edx,%ecx
    9b05:	77 e1                	ja     9ae8 <sort+0x698>
    9b07:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    9b0c:	8b 74 24 40          	mov    0x40(%rsp),%esi
    9b10:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    9b14:	4c 01 f0             	add    %r14,%rax
    9b17:	39 74 24 30          	cmp    %esi,0x30(%rsp)
    9b1b:	0f 84 8f 01 00 00    	je     9cb0 <sort+0x860>
    9b21:	0f b6 0a             	movzbl (%rdx),%ecx
    9b24:	0f b6 38             	movzbl (%rax),%edi
    9b27:	8b 74 24 44          	mov    0x44(%rsp),%esi
    9b2b:	40 88 3a             	mov    %dil,(%rdx)
    9b2e:	88 08                	mov    %cl,(%rax)
    9b30:	85 f6                	test   %esi,%esi
    9b32:	0f 84 78 01 00 00    	je     9cb0 <sort+0x860>
    9b38:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
    9b3c:	0f b6 78 01          	movzbl 0x1(%rax),%edi
    9b40:	40 88 7a 01          	mov    %dil,0x1(%rdx)
    9b44:	88 48 01             	mov    %cl,0x1(%rax)
    9b47:	8b 4c 24 48          	mov    0x48(%rsp),%ecx
    9b4b:	85 c9                	test   %ecx,%ecx
    9b4d:	0f 84 5d 01 00 00    	je     9cb0 <sort+0x860>
    9b53:	0f b6 4a 02          	movzbl 0x2(%rdx),%ecx
    9b57:	0f b6 78 02          	movzbl 0x2(%rax),%edi
    9b5b:	44 8b 5c 24 4c       	mov    0x4c(%rsp),%r11d
    9b60:	40 88 7a 02          	mov    %dil,0x2(%rdx)
    9b64:	88 48 02             	mov    %cl,0x2(%rax)
    9b67:	45 85 db             	test   %r11d,%r11d
    9b6a:	0f 84 40 01 00 00    	je     9cb0 <sort+0x860>
    9b70:	0f b6 4a 03          	movzbl 0x3(%rdx),%ecx
    9b74:	0f b6 78 03          	movzbl 0x3(%rax),%edi
    9b78:	44 8b 54 24 50       	mov    0x50(%rsp),%r10d
    9b7d:	40 88 7a 03          	mov    %dil,0x3(%rdx)
    9b81:	88 48 03             	mov    %cl,0x3(%rax)
    9b84:	45 85 d2             	test   %r10d,%r10d
    9b87:	0f 84 23 01 00 00    	je     9cb0 <sort+0x860>
    9b8d:	0f b6 4a 04          	movzbl 0x4(%rdx),%ecx
    9b91:	0f b6 78 04          	movzbl 0x4(%rax),%edi
    9b95:	44 8b 4c 24 54       	mov    0x54(%rsp),%r9d
    9b9a:	40 88 7a 04          	mov    %dil,0x4(%rdx)
    9b9e:	88 48 04             	mov    %cl,0x4(%rax)
    9ba1:	45 85 c9             	test   %r9d,%r9d
    9ba4:	0f 84 06 01 00 00    	je     9cb0 <sort+0x860>
    9baa:	0f b6 4a 05          	movzbl 0x5(%rdx),%ecx
    9bae:	0f b6 78 05          	movzbl 0x5(%rax),%edi
    9bb2:	44 8b 44 24 60       	mov    0x60(%rsp),%r8d
    9bb7:	40 88 7a 05          	mov    %dil,0x5(%rdx)
    9bbb:	88 48 05             	mov    %cl,0x5(%rax)
    9bbe:	45 85 c0             	test   %r8d,%r8d
    9bc1:	0f 84 e9 00 00 00    	je     9cb0 <sort+0x860>
    9bc7:	0f b6 78 06          	movzbl 0x6(%rax),%edi
    9bcb:	0f b6 4a 06          	movzbl 0x6(%rdx),%ecx
    9bcf:	40 88 7a 06          	mov    %dil,0x6(%rdx)
    9bd3:	8b 7c 24 68          	mov    0x68(%rsp),%edi
    9bd7:	88 48 06             	mov    %cl,0x6(%rax)
    9bda:	85 ff                	test   %edi,%edi
    9bdc:	0f 84 ce 00 00 00    	je     9cb0 <sort+0x860>
    9be2:	0f b6 4a 07          	movzbl 0x7(%rdx),%ecx
    9be6:	0f b6 78 07          	movzbl 0x7(%rax),%edi
    9bea:	8b 74 24 6c          	mov    0x6c(%rsp),%esi
    9bee:	40 88 7a 07          	mov    %dil,0x7(%rdx)
    9bf2:	88 48 07             	mov    %cl,0x7(%rax)
    9bf5:	85 f6                	test   %esi,%esi
    9bf7:	0f 84 b3 00 00 00    	je     9cb0 <sort+0x860>
    9bfd:	0f b6 4a 08          	movzbl 0x8(%rdx),%ecx
    9c01:	0f b6 78 08          	movzbl 0x8(%rax),%edi
    9c05:	40 88 7a 08          	mov    %dil,0x8(%rdx)
    9c09:	88 48 08             	mov    %cl,0x8(%rax)
    9c0c:	8b 4c 24 70          	mov    0x70(%rsp),%ecx
    9c10:	85 c9                	test   %ecx,%ecx
    9c12:	0f 84 98 00 00 00    	je     9cb0 <sort+0x860>
    9c18:	0f b6 4a 09          	movzbl 0x9(%rdx),%ecx
    9c1c:	0f b6 78 09          	movzbl 0x9(%rax),%edi
    9c20:	44 8b 5c 24 74       	mov    0x74(%rsp),%r11d
    9c25:	40 88 7a 09          	mov    %dil,0x9(%rdx)
    9c29:	88 48 09             	mov    %cl,0x9(%rax)
    9c2c:	45 85 db             	test   %r11d,%r11d
    9c2f:	74 7f                	je     9cb0 <sort+0x860>
    9c31:	0f b6 4a 0a          	movzbl 0xa(%rdx),%ecx
    9c35:	0f b6 78 0a          	movzbl 0xa(%rax),%edi
    9c39:	44 8b 54 24 78       	mov    0x78(%rsp),%r10d
    9c3e:	40 88 7a 0a          	mov    %dil,0xa(%rdx)
    9c42:	88 48 0a             	mov    %cl,0xa(%rax)
    9c45:	45 85 d2             	test   %r10d,%r10d
    9c48:	74 66                	je     9cb0 <sort+0x860>
    9c4a:	0f b6 4a 0b          	movzbl 0xb(%rdx),%ecx
    9c4e:	0f b6 78 0b          	movzbl 0xb(%rax),%edi
    9c52:	44 8b 4c 24 7c       	mov    0x7c(%rsp),%r9d
    9c57:	40 88 7a 0b          	mov    %dil,0xb(%rdx)
    9c5b:	88 48 0b             	mov    %cl,0xb(%rax)
    9c5e:	45 85 c9             	test   %r9d,%r9d
    9c61:	74 4d                	je     9cb0 <sort+0x860>
    9c63:	0f b6 4a 0c          	movzbl 0xc(%rdx),%ecx
    9c67:	0f b6 78 0c          	movzbl 0xc(%rax),%edi
    9c6b:	44 8b 84 24 80 00 00 	mov    0x80(%rsp),%r8d
    9c72:	00 
    9c73:	40 88 7a 0c          	mov    %dil,0xc(%rdx)
    9c77:	88 48 0c             	mov    %cl,0xc(%rax)
    9c7a:	45 85 c0             	test   %r8d,%r8d
    9c7d:	74 31                	je     9cb0 <sort+0x860>
    9c7f:	0f b6 78 0d          	movzbl 0xd(%rax),%edi
    9c83:	0f b6 4a 0d          	movzbl 0xd(%rdx),%ecx
    9c87:	40 88 7a 0d          	mov    %dil,0xd(%rdx)
    9c8b:	8b bc 24 84 00 00 00 	mov    0x84(%rsp),%edi
    9c92:	88 48 0d             	mov    %cl,0xd(%rax)
    9c95:	85 ff                	test   %edi,%edi
    9c97:	74 17                	je     9cb0 <sort+0x860>
    9c99:	0f b6 4a 0e          	movzbl 0xe(%rdx),%ecx
    9c9d:	0f b6 78 0e          	movzbl 0xe(%rax),%edi
    9ca1:	40 88 7a 0e          	mov    %dil,0xe(%rdx)
    9ca5:	88 48 0e             	mov    %cl,0xe(%rax)
    9ca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9caf:	00 
    9cb0:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    9cb5:	e9 8e fd ff ff       	jmpq   9a48 <sort+0x5f8>
    9cba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9cc0:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
    9cc5:	4c 89 f3             	mov    %r14,%rbx
    9cc8:	e9 7b fd ff ff       	jmpq   9a48 <sort+0x5f8>
    9ccd:	0f 1f 00             	nopl   (%rax)
    9cd0:	8b 44 24 24          	mov    0x24(%rsp),%eax
    9cd4:	4c 89 f2             	mov    %r14,%rdx
    9cd7:	4c 8d 4c 03 01       	lea    0x1(%rbx,%rax,1),%r9
    9cdc:	48 89 d8             	mov    %rbx,%rax
    9cdf:	90                   	nop
    9ce0:	0f b6 08             	movzbl (%rax),%ecx
    9ce3:	0f b6 32             	movzbl (%rdx),%esi
    9ce6:	48 83 c0 01          	add    $0x1,%rax
    9cea:	48 83 c2 01          	add    $0x1,%rdx
    9cee:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    9cf2:	88 4a ff             	mov    %cl,-0x1(%rdx)
    9cf5:	4c 39 c8             	cmp    %r9,%rax
    9cf8:	75 e6                	jne    9ce0 <sort+0x890>
    9cfa:	eb b4                	jmp    9cb0 <sort+0x860>
    9cfc:	0f 1f 40 00          	nopl   0x0(%rax)
    9d00:	49 89 da             	mov    %rbx,%r10
    9d03:	4c 89 eb             	mov    %r13,%rbx
    9d06:	4d 89 f5             	mov    %r14,%r13
    9d09:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
    9d0e:	4c 39 eb             	cmp    %r13,%rbx
    9d11:	0f 84 e9 01 00 00    	je     9f00 <sort+0xab0>
    9d17:	48 8d 43 0f          	lea    0xf(%rbx),%rax
    9d1b:	4c 29 e8             	sub    %r13,%rax
    9d1e:	48 83 f8 1e          	cmp    $0x1e,%rax
    9d22:	0f 86 f7 02 00 00    	jbe    a01f <sort+0xbcf>
    9d28:	83 7c 24 24 0e       	cmpl   $0xe,0x24(%rsp)
    9d2d:	0f 86 ec 02 00 00    	jbe    a01f <sort+0xbcf>
    9d33:	8b 4c 24 34          	mov    0x34(%rsp),%ecx
    9d37:	31 c0                	xor    %eax,%eax
    9d39:	31 d2                	xor    %edx,%edx
    9d3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9d40:	f3 0f 6f 04 03       	movdqu (%rbx,%rax,1),%xmm0
    9d45:	f3 41 0f 6f 64 05 00 	movdqu 0x0(%r13,%rax,1),%xmm4
    9d4c:	83 c2 01             	add    $0x1,%edx
    9d4f:	0f 11 24 03          	movups %xmm4,(%rbx,%rax,1)
    9d53:	41 0f 11 44 05 00    	movups %xmm0,0x0(%r13,%rax,1)
    9d59:	48 83 c0 10          	add    $0x10,%rax
    9d5d:	39 d1                	cmp    %edx,%ecx
    9d5f:	77 df                	ja     9d40 <sort+0x8f0>
    9d61:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    9d66:	8b 7c 24 40          	mov    0x40(%rsp),%edi
    9d6a:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    9d6e:	4c 01 e8             	add    %r13,%rax
    9d71:	39 7c 24 30          	cmp    %edi,0x30(%rsp)
    9d75:	0f 84 85 01 00 00    	je     9f00 <sort+0xab0>
    9d7b:	0f b6 30             	movzbl (%rax),%esi
    9d7e:	0f b6 0a             	movzbl (%rdx),%ecx
    9d81:	40 88 32             	mov    %sil,(%rdx)
    9d84:	8b 74 24 44          	mov    0x44(%rsp),%esi
    9d88:	88 08                	mov    %cl,(%rax)
    9d8a:	85 f6                	test   %esi,%esi
    9d8c:	0f 84 6e 01 00 00    	je     9f00 <sort+0xab0>
    9d92:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
    9d96:	0f b6 70 01          	movzbl 0x1(%rax),%esi
    9d9a:	40 88 72 01          	mov    %sil,0x1(%rdx)
    9d9e:	88 48 01             	mov    %cl,0x1(%rax)
    9da1:	8b 4c 24 48          	mov    0x48(%rsp),%ecx
    9da5:	85 c9                	test   %ecx,%ecx
    9da7:	0f 84 53 01 00 00    	je     9f00 <sort+0xab0>
    9dad:	0f b6 4a 02          	movzbl 0x2(%rdx),%ecx
    9db1:	0f b6 70 02          	movzbl 0x2(%rax),%esi
    9db5:	44 8b 5c 24 4c       	mov    0x4c(%rsp),%r11d
    9dba:	40 88 72 02          	mov    %sil,0x2(%rdx)
    9dbe:	88 48 02             	mov    %cl,0x2(%rax)
    9dc1:	45 85 db             	test   %r11d,%r11d
    9dc4:	0f 84 36 01 00 00    	je     9f00 <sort+0xab0>
    9dca:	0f b6 4a 03          	movzbl 0x3(%rdx),%ecx
    9dce:	0f b6 70 03          	movzbl 0x3(%rax),%esi
    9dd2:	44 8b 4c 24 50       	mov    0x50(%rsp),%r9d
    9dd7:	40 88 72 03          	mov    %sil,0x3(%rdx)
    9ddb:	88 48 03             	mov    %cl,0x3(%rax)
    9dde:	45 85 c9             	test   %r9d,%r9d
    9de1:	0f 84 19 01 00 00    	je     9f00 <sort+0xab0>
    9de7:	0f b6 4a 04          	movzbl 0x4(%rdx),%ecx
    9deb:	0f b6 70 04          	movzbl 0x4(%rax),%esi
    9def:	44 8b 44 24 54       	mov    0x54(%rsp),%r8d
    9df4:	40 88 72 04          	mov    %sil,0x4(%rdx)
    9df8:	88 48 04             	mov    %cl,0x4(%rax)
    9dfb:	45 85 c0             	test   %r8d,%r8d
    9dfe:	0f 84 fc 00 00 00    	je     9f00 <sort+0xab0>
    9e04:	0f b6 4a 05          	movzbl 0x5(%rdx),%ecx
    9e08:	0f b6 70 05          	movzbl 0x5(%rax),%esi
    9e0c:	8b 7c 24 60          	mov    0x60(%rsp),%edi
    9e10:	40 88 72 05          	mov    %sil,0x5(%rdx)
    9e14:	88 48 05             	mov    %cl,0x5(%rax)
    9e17:	85 ff                	test   %edi,%edi
    9e19:	0f 84 e1 00 00 00    	je     9f00 <sort+0xab0>
    9e1f:	0f b6 70 06          	movzbl 0x6(%rax),%esi
    9e23:	0f b6 4a 06          	movzbl 0x6(%rdx),%ecx
    9e27:	40 88 72 06          	mov    %sil,0x6(%rdx)
    9e2b:	8b 74 24 68          	mov    0x68(%rsp),%esi
    9e2f:	88 48 06             	mov    %cl,0x6(%rax)
    9e32:	85 f6                	test   %esi,%esi
    9e34:	0f 84 c6 00 00 00    	je     9f00 <sort+0xab0>
    9e3a:	0f b6 4a 07          	movzbl 0x7(%rdx),%ecx
    9e3e:	0f b6 70 07          	movzbl 0x7(%rax),%esi
    9e42:	40 88 72 07          	mov    %sil,0x7(%rdx)
    9e46:	88 48 07             	mov    %cl,0x7(%rax)
    9e49:	8b 4c 24 6c          	mov    0x6c(%rsp),%ecx
    9e4d:	85 c9                	test   %ecx,%ecx
    9e4f:	0f 84 ab 00 00 00    	je     9f00 <sort+0xab0>
    9e55:	0f b6 4a 08          	movzbl 0x8(%rdx),%ecx
    9e59:	0f b6 70 08          	movzbl 0x8(%rax),%esi
    9e5d:	44 8b 5c 24 70       	mov    0x70(%rsp),%r11d
    9e62:	40 88 72 08          	mov    %sil,0x8(%rdx)
    9e66:	88 48 08             	mov    %cl,0x8(%rax)
    9e69:	45 85 db             	test   %r11d,%r11d
    9e6c:	0f 84 8e 00 00 00    	je     9f00 <sort+0xab0>
    9e72:	0f b6 4a 09          	movzbl 0x9(%rdx),%ecx
    9e76:	0f b6 70 09          	movzbl 0x9(%rax),%esi
    9e7a:	44 8b 4c 24 74       	mov    0x74(%rsp),%r9d
    9e7f:	40 88 72 09          	mov    %sil,0x9(%rdx)
    9e83:	88 48 09             	mov    %cl,0x9(%rax)
    9e86:	45 85 c9             	test   %r9d,%r9d
    9e89:	74 75                	je     9f00 <sort+0xab0>
    9e8b:	0f b6 4a 0a          	movzbl 0xa(%rdx),%ecx
    9e8f:	0f b6 70 0a          	movzbl 0xa(%rax),%esi
    9e93:	44 8b 44 24 78       	mov    0x78(%rsp),%r8d
    9e98:	40 88 72 0a          	mov    %sil,0xa(%rdx)
    9e9c:	88 48 0a             	mov    %cl,0xa(%rax)
    9e9f:	45 85 c0             	test   %r8d,%r8d
    9ea2:	74 5c                	je     9f00 <sort+0xab0>
    9ea4:	0f b6 4a 0b          	movzbl 0xb(%rdx),%ecx
    9ea8:	0f b6 70 0b          	movzbl 0xb(%rax),%esi
    9eac:	8b 7c 24 7c          	mov    0x7c(%rsp),%edi
    9eb0:	40 88 72 0b          	mov    %sil,0xb(%rdx)
    9eb4:	88 48 0b             	mov    %cl,0xb(%rax)
    9eb7:	85 ff                	test   %edi,%edi
    9eb9:	74 45                	je     9f00 <sort+0xab0>
    9ebb:	0f b6 70 0c          	movzbl 0xc(%rax),%esi
    9ebf:	0f b6 4a 0c          	movzbl 0xc(%rdx),%ecx
    9ec3:	40 88 72 0c          	mov    %sil,0xc(%rdx)
    9ec7:	8b b4 24 80 00 00 00 	mov    0x80(%rsp),%esi
    9ece:	88 48 0c             	mov    %cl,0xc(%rax)
    9ed1:	85 f6                	test   %esi,%esi
    9ed3:	74 2b                	je     9f00 <sort+0xab0>
    9ed5:	0f b6 4a 0d          	movzbl 0xd(%rdx),%ecx
    9ed9:	0f b6 70 0d          	movzbl 0xd(%rax),%esi
    9edd:	40 88 72 0d          	mov    %sil,0xd(%rdx)
    9ee1:	88 48 0d             	mov    %cl,0xd(%rax)
    9ee4:	8b 8c 24 84 00 00 00 	mov    0x84(%rsp),%ecx
    9eeb:	85 c9                	test   %ecx,%ecx
    9eed:	74 11                	je     9f00 <sort+0xab0>
    9eef:	0f b6 4a 0e          	movzbl 0xe(%rdx),%ecx
    9ef3:	0f b6 70 0e          	movzbl 0xe(%rax),%esi
    9ef7:	40 88 72 0e          	mov    %sil,0xe(%rdx)
    9efb:	88 48 0e             	mov    %cl,0xe(%rax)
    9efe:	66 90                	xchg   %ax,%ax
    9f00:	49 8d 45 ff          	lea    -0x1(%r13),%rax
    9f04:	4c 89 f2             	mov    %r14,%rdx
    9f07:	48 29 d8             	sub    %rbx,%rax
    9f0a:	4c 29 d2             	sub    %r10,%rdx
    9f0d:	48 39 d0             	cmp    %rdx,%rax
    9f10:	7c 3e                	jl     9f50 <sort+0xb00>
    9f12:	4c 3b ac 24 88 00 00 	cmp    0x88(%rsp),%r13
    9f19:	00 
    9f1a:	0f 86 a2 00 00 00    	jbe    9fc2 <sort+0xb72>
    9f20:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    9f25:	48 63 44 24 64       	movslq 0x64(%rsp),%rax
    9f2a:	4d 8d 44 35 00       	lea    0x0(%r13,%rsi,1),%r8
    9f2f:	48 89 9c c4 90 00 00 	mov    %rbx,0x90(%rsp,%rax,8)
    9f36:	00 
    9f37:	4c 89 84 c4 80 01 00 	mov    %r8,0x180(%rsp,%rax,8)
    9f3e:	00 
    9f3f:	4d 39 d6             	cmp    %r10,%r14
    9f42:	0f 87 8b 00 00 00    	ja     9fd3 <sort+0xb83>
    9f48:	4d 89 c6             	mov    %r8,%r14
    9f4b:	e9 08 f6 ff ff       	jmpq   9558 <sort+0x108>
    9f50:	4d 39 d6             	cmp    %r10,%r14
    9f53:	76 50                	jbe    9fa5 <sort+0xb55>
    9f55:	48 63 44 24 64       	movslq 0x64(%rsp),%rax
    9f5a:	4c 89 94 c4 90 00 00 	mov    %r10,0x90(%rsp,%rax,8)
    9f61:	00 
    9f62:	4c 89 b4 c4 80 01 00 	mov    %r14,0x180(%rsp,%rax,8)
    9f69:	00 
    9f6a:	4c 3b ac 24 88 00 00 	cmp    0x88(%rsp),%r13
    9f71:	00 
    9f72:	77 6c                	ja     9fe0 <sort+0xb90>
    9f74:	4c 89 d3             	mov    %r10,%rbx
    9f77:	e9 dc f5 ff ff       	jmpq   9558 <sort+0x108>
    9f7c:	48 8b 84 24 78 02 00 	mov    0x278(%rsp),%rax
    9f83:	00 
    9f84:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    9f8b:	00 00 
    9f8d:	0f 85 bc 00 00 00    	jne    a04f <sort+0xbff>
    9f93:	48 81 c4 88 02 00 00 	add    $0x288,%rsp
    9f9a:	5b                   	pop    %rbx
    9f9b:	5d                   	pop    %rbp
    9f9c:	41 5c                	pop    %r12
    9f9e:	41 5d                	pop    %r13
    9fa0:	41 5e                	pop    %r14
    9fa2:	41 5f                	pop    %r15
    9fa4:	c3                   	retq   
    9fa5:	4c 3b ac 24 88 00 00 	cmp    0x88(%rsp),%r13
    9fac:	00 
    9fad:	0f 86 0d f8 ff ff    	jbe    97c0 <sort+0x370>
    9fb3:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9fb8:	4d 8d 74 05 00       	lea    0x0(%r13,%rax,1),%r14
    9fbd:	e9 96 f5 ff ff       	jmpq   9558 <sort+0x108>
    9fc2:	4d 39 d6             	cmp    %r10,%r14
    9fc5:	0f 86 f5 f7 ff ff    	jbe    97c0 <sort+0x370>
    9fcb:	4c 89 d3             	mov    %r10,%rbx
    9fce:	e9 85 f5 ff ff       	jmpq   9558 <sort+0x108>
    9fd3:	83 44 24 64 01       	addl   $0x1,0x64(%rsp)
    9fd8:	4c 89 d3             	mov    %r10,%rbx
    9fdb:	e9 78 f5 ff ff       	jmpq   9558 <sort+0x108>
    9fe0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9fe5:	83 44 24 64 01       	addl   $0x1,0x64(%rsp)
    9fea:	4d 8d 74 05 00       	lea    0x0(%r13,%rax,1),%r14
    9fef:	e9 64 f5 ff ff       	jmpq   9558 <sort+0x108>
    9ff4:	8b 54 24 24          	mov    0x24(%rsp),%edx
    9ff8:	48 8d 7c 10 01       	lea    0x1(%rax,%rdx,1),%rdi
    9ffd:	48 89 da             	mov    %rbx,%rdx
    a000:	0f b6 08             	movzbl (%rax),%ecx
    a003:	0f b6 32             	movzbl (%rdx),%esi
    a006:	48 83 c0 01          	add    $0x1,%rax
    a00a:	48 83 c2 01          	add    $0x1,%rdx
    a00e:	40 88 70 ff          	mov    %sil,-0x1(%rax)
    a012:	88 4a ff             	mov    %cl,-0x1(%rdx)
    a015:	48 39 f8             	cmp    %rdi,%rax
    a018:	75 e6                	jne    a000 <sort+0xbb0>
    a01a:	e9 01 fa ff ff       	jmpq   9a20 <sort+0x5d0>
    a01f:	8b 44 24 24          	mov    0x24(%rsp),%eax
    a023:	48 89 da             	mov    %rbx,%rdx
    a026:	49 8d 7c 05 01       	lea    0x1(%r13,%rax,1),%rdi
    a02b:	4c 89 e8             	mov    %r13,%rax
    a02e:	66 90                	xchg   %ax,%ax
    a030:	0f b6 0a             	movzbl (%rdx),%ecx
    a033:	0f b6 30             	movzbl (%rax),%esi
    a036:	48 83 c0 01          	add    $0x1,%rax
    a03a:	48 83 c2 01          	add    $0x1,%rdx
    a03e:	40 88 72 ff          	mov    %sil,-0x1(%rdx)
    a042:	88 48 ff             	mov    %cl,-0x1(%rax)
    a045:	48 39 f8             	cmp    %rdi,%rax
    a048:	75 e6                	jne    a030 <sort+0xbe0>
    a04a:	e9 b1 fe ff ff       	jmpq   9f00 <sort+0xab0>
    a04f:	e8 0c 83 ff ff       	callq  2360 <__stack_chk_fail@plt>
    a054:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a05b:	00 00 00 
    a05e:	66 90                	xchg   %ax,%ax

000000000000a060 <bitmap_alloc>:
    a060:	f3 0f 1e fa          	endbr64 
    a064:	41 54                	push   %r12
    a066:	53                   	push   %rbx
    a067:	48 89 fb             	mov    %rdi,%rbx
    a06a:	bf 18 00 00 00       	mov    $0x18,%edi
    a06f:	48 83 ec 08          	sub    $0x8,%rsp
    a073:	e8 d8 83 ff ff       	callq  2450 <malloc@plt>
    a078:	48 85 c0             	test   %rax,%rax
    a07b:	74 41                	je     a0be <bitmap_alloc+0x5e>
    a07d:	31 ff                	xor    %edi,%edi
    a07f:	f6 c3 3f             	test   $0x3f,%bl
    a082:	48 89 18             	mov    %rbx,(%rax)
    a085:	be 01 00 00 00       	mov    $0x1,%esi
    a08a:	40 0f 95 c7          	setne  %dil
    a08e:	48 c1 eb 06          	shr    $0x6,%rbx
    a092:	49 89 c4             	mov    %rax,%r12
    a095:	48 01 fb             	add    %rdi,%rbx
    a098:	48 89 58 08          	mov    %rbx,0x8(%rax)
    a09c:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
    a0a3:	00 
    a0a4:	e8 47 83 ff ff       	callq  23f0 <calloc@plt>
    a0a9:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    a0ae:	48 85 c0             	test   %rax,%rax
    a0b1:	74 0b                	je     a0be <bitmap_alloc+0x5e>
    a0b3:	48 83 c4 08          	add    $0x8,%rsp
    a0b7:	4c 89 e0             	mov    %r12,%rax
    a0ba:	5b                   	pop    %rbx
    a0bb:	41 5c                	pop    %r12
    a0bd:	c3                   	retq   
    a0be:	45 31 e4             	xor    %r12d,%r12d
    a0c1:	eb f0                	jmp    a0b3 <bitmap_alloc+0x53>
    a0c3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a0ca:	00 00 00 00 
    a0ce:	66 90                	xchg   %ax,%ax

000000000000a0d0 <Pbitmap_alloc>:
    a0d0:	f3 0f 1e fa          	endbr64 
    a0d4:	41 54                	push   %r12
    a0d6:	53                   	push   %rbx
    a0d7:	48 89 fb             	mov    %rdi,%rbx
    a0da:	bf 18 00 00 00       	mov    $0x18,%edi
    a0df:	48 83 ec 08          	sub    $0x8,%rsp
    a0e3:	e8 68 83 ff ff       	callq  2450 <malloc@plt>
    a0e8:	49 89 c4             	mov    %rax,%r12
    a0eb:	48 85 c0             	test   %rax,%rax
    a0ee:	74 33                	je     a123 <Pbitmap_alloc+0x53>
    a0f0:	31 ff                	xor    %edi,%edi
    a0f2:	f6 c3 3f             	test   $0x3f,%bl
    a0f5:	48 89 18             	mov    %rbx,(%rax)
    a0f8:	be 01 00 00 00       	mov    $0x1,%esi
    a0fd:	40 0f 95 c7          	setne  %dil
    a101:	48 c1 eb 06          	shr    $0x6,%rbx
    a105:	48 01 fb             	add    %rdi,%rbx
    a108:	48 89 58 08          	mov    %rbx,0x8(%rax)
    a10c:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
    a113:	00 
    a114:	e8 d7 82 ff ff       	callq  23f0 <calloc@plt>
    a119:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    a11e:	48 85 c0             	test   %rax,%rax
    a121:	74 0b                	je     a12e <Pbitmap_alloc+0x5e>
    a123:	48 83 c4 08          	add    $0x8,%rsp
    a127:	4c 89 e0             	mov    %r12,%rax
    a12a:	5b                   	pop    %rbx
    a12b:	41 5c                	pop    %r12
    a12d:	c3                   	retq   
    a12e:	4c 89 e7             	mov    %r12,%rdi
    a131:	45 31 e4             	xor    %r12d,%r12d
    a134:	e8 97 81 ff ff       	callq  22d0 <free@plt>
    a139:	eb e8                	jmp    a123 <Pbitmap_alloc+0x53>
    a13b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a140 <bitmap_free>:
    a140:	f3 0f 1e fa          	endbr64 
    a144:	55                   	push   %rbp
    a145:	48 89 fd             	mov    %rdi,%rbp
    a148:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    a14c:	e8 7f 81 ff ff       	callq  22d0 <free@plt>
    a151:	48 89 ef             	mov    %rbp,%rdi
    a154:	5d                   	pop    %rbp
    a155:	e9 76 81 ff ff       	jmpq   22d0 <free@plt>
    a15a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a160 <Pbitmap_free>:
    a160:	f3 0f 1e fa          	endbr64 
    a164:	55                   	push   %rbp
    a165:	48 89 fd             	mov    %rdi,%rbp
    a168:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    a16c:	e8 5f 81 ff ff       	callq  22d0 <free@plt>
    a171:	48 89 ef             	mov    %rbp,%rdi
    a174:	5d                   	pop    %rbp
    a175:	e9 56 81 ff ff       	jmpq   22d0 <free@plt>
    a17a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a180 <bitmap_set>:
    a180:	f3 0f 1e fa          	endbr64 
    a184:	48 89 f1             	mov    %rsi,%rcx
    a187:	31 c0                	xor    %eax,%eax
    a189:	48 85 f6             	test   %rsi,%rsi
    a18c:	78 1e                	js     a1ac <bitmap_set+0x2c>
    a18e:	48 39 37             	cmp    %rsi,(%rdi)
    a191:	7e 19                	jle    a1ac <bitmap_set+0x2c>
    a193:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    a197:	48 c1 ee 06          	shr    $0x6,%rsi
    a19b:	b8 01 00 00 00       	mov    $0x1,%eax
    a1a0:	48 d3 e0             	shl    %cl,%rax
    a1a3:	48 09 04 f2          	or     %rax,(%rdx,%rsi,8)
    a1a7:	b8 01 00 00 00       	mov    $0x1,%eax
    a1ac:	c3                   	retq   
    a1ad:	0f 1f 00             	nopl   (%rax)

000000000000a1b0 <bitmap_clear>:
    a1b0:	f3 0f 1e fa          	endbr64 
    a1b4:	48 89 f1             	mov    %rsi,%rcx
    a1b7:	31 c0                	xor    %eax,%eax
    a1b9:	48 85 f6             	test   %rsi,%rsi
    a1bc:	78 21                	js     a1df <bitmap_clear+0x2f>
    a1be:	48 39 37             	cmp    %rsi,(%rdi)
    a1c1:	7e 1c                	jle    a1df <bitmap_clear+0x2f>
    a1c3:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    a1c7:	b8 01 00 00 00       	mov    $0x1,%eax
    a1cc:	48 c1 ee 06          	shr    $0x6,%rsi
    a1d0:	48 d3 e0             	shl    %cl,%rax
    a1d3:	48 f7 d0             	not    %rax
    a1d6:	48 21 04 f2          	and    %rax,(%rdx,%rsi,8)
    a1da:	b8 01 00 00 00       	mov    $0x1,%eax
    a1df:	c3                   	retq   

000000000000a1e0 <bitmap_clearAll>:
    a1e0:	f3 0f 1e fa          	endbr64 
    a1e4:	48 8b 47 08          	mov    0x8(%rdi),%rax
    a1e8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    a1ec:	31 f6                	xor    %esi,%esi
    a1ee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a1f5:	00 
    a1f6:	e9 b5 81 ff ff       	jmpq   23b0 <memset@plt>
    a1fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a200 <bitmap_isClear>:
    a200:	f3 0f 1e fa          	endbr64 
    a204:	31 c0                	xor    %eax,%eax
    a206:	48 85 f6             	test   %rsi,%rsi
    a209:	78 1f                	js     a22a <bitmap_isClear+0x2a>
    a20b:	48 39 37             	cmp    %rsi,(%rdi)
    a20e:	7e 1a                	jle    a22a <bitmap_isClear+0x2a>
    a210:	48 8b 47 10          	mov    0x10(%rdi),%rax
    a214:	48 89 f2             	mov    %rsi,%rdx
    a217:	89 f1                	mov    %esi,%ecx
    a219:	48 c1 ea 06          	shr    $0x6,%rdx
    a21d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    a221:	48 d3 e8             	shr    %cl,%rax
    a224:	48 f7 d0             	not    %rax
    a227:	83 e0 01             	and    $0x1,%eax
    a22a:	c3                   	retq   
    a22b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a230 <bitmap_isSet>:
    a230:	f3 0f 1e fa          	endbr64 
    a234:	31 c0                	xor    %eax,%eax
    a236:	48 85 f6             	test   %rsi,%rsi
    a239:	78 1c                	js     a257 <bitmap_isSet+0x27>
    a23b:	48 39 37             	cmp    %rsi,(%rdi)
    a23e:	7e 17                	jle    a257 <bitmap_isSet+0x27>
    a240:	48 8b 47 10          	mov    0x10(%rdi),%rax
    a244:	48 89 f2             	mov    %rsi,%rdx
    a247:	89 f1                	mov    %esi,%ecx
    a249:	48 c1 ea 06          	shr    $0x6,%rdx
    a24d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    a251:	48 d3 e8             	shr    %cl,%rax
    a254:	83 e0 01             	and    $0x1,%eax
    a257:	c3                   	retq   
    a258:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a25f:	00 

000000000000a260 <bitmap_findClear>:
    a260:	f3 0f 1e fa          	endbr64 
    a264:	48 85 f6             	test   %rsi,%rsi
    a267:	b8 00 00 00 00       	mov    $0x0,%eax
    a26c:	48 8b 0f             	mov    (%rdi),%rcx
    a26f:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    a273:	48 0f 49 c6          	cmovns %rsi,%rax
    a277:	48 39 c1             	cmp    %rax,%rcx
    a27a:	7e 2e                	jle    a2aa <bitmap_findClear+0x4a>
    a27c:	48 89 c2             	mov    %rax,%rdx
    a27f:	48 c1 ea 06          	shr    $0x6,%rdx
    a283:	48 8b 14 d7          	mov    (%rdi,%rdx,8),%rdx
    a287:	48 0f a3 c2          	bt     %rax,%rdx
    a28b:	72 14                	jb     a2a1 <bitmap_findClear+0x41>
    a28d:	eb 23                	jmp    a2b2 <bitmap_findClear+0x52>
    a28f:	90                   	nop
    a290:	48 89 c2             	mov    %rax,%rdx
    a293:	48 c1 ea 06          	shr    $0x6,%rdx
    a297:	48 8b 14 d7          	mov    (%rdi,%rdx,8),%rdx
    a29b:	48 0f a3 c2          	bt     %rax,%rdx
    a29f:	73 10                	jae    a2b1 <bitmap_findClear+0x51>
    a2a1:	48 83 c0 01          	add    $0x1,%rax
    a2a5:	48 39 c1             	cmp    %rax,%rcx
    a2a8:	75 e6                	jne    a290 <bitmap_findClear+0x30>
    a2aa:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    a2b1:	c3                   	retq   
    a2b2:	c3                   	retq   
    a2b3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a2ba:	00 00 00 00 
    a2be:	66 90                	xchg   %ax,%ax

000000000000a2c0 <bitmap_findSet>:
    a2c0:	f3 0f 1e fa          	endbr64 
    a2c4:	48 85 f6             	test   %rsi,%rsi
    a2c7:	b8 00 00 00 00       	mov    $0x0,%eax
    a2cc:	48 8b 0f             	mov    (%rdi),%rcx
    a2cf:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    a2d3:	48 0f 49 c6          	cmovns %rsi,%rax
    a2d7:	48 39 c1             	cmp    %rax,%rcx
    a2da:	7e 2e                	jle    a30a <bitmap_findSet+0x4a>
    a2dc:	48 89 c2             	mov    %rax,%rdx
    a2df:	48 c1 ea 06          	shr    $0x6,%rdx
    a2e3:	48 8b 14 d7          	mov    (%rdi,%rdx,8),%rdx
    a2e7:	48 0f a3 c2          	bt     %rax,%rdx
    a2eb:	73 14                	jae    a301 <bitmap_findSet+0x41>
    a2ed:	eb 23                	jmp    a312 <bitmap_findSet+0x52>
    a2ef:	90                   	nop
    a2f0:	48 89 c2             	mov    %rax,%rdx
    a2f3:	48 c1 ea 06          	shr    $0x6,%rdx
    a2f7:	48 8b 14 d7          	mov    (%rdi,%rdx,8),%rdx
    a2fb:	48 0f a3 c2          	bt     %rax,%rdx
    a2ff:	72 10                	jb     a311 <bitmap_findSet+0x51>
    a301:	48 83 c0 01          	add    $0x1,%rax
    a305:	48 39 c1             	cmp    %rax,%rcx
    a308:	75 e6                	jne    a2f0 <bitmap_findSet+0x30>
    a30a:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    a311:	c3                   	retq   
    a312:	c3                   	retq   
    a313:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a31a:	00 00 00 00 
    a31e:	66 90                	xchg   %ax,%ax

000000000000a320 <bitmap_getNumClear>:
    a320:	f3 0f 1e fa          	endbr64 
    a324:	4c 8b 07             	mov    (%rdi),%r8
    a327:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    a32b:	4d 85 c0             	test   %r8,%r8
    a32e:	7e 2d                	jle    a35d <bitmap_getNumClear+0x3d>
    a330:	31 d2                	xor    %edx,%edx
    a332:	31 c9                	xor    %ecx,%ecx
    a334:	0f 1f 40 00          	nopl   0x0(%rax)
    a338:	48 89 c8             	mov    %rcx,%rax
    a33b:	48 c1 e8 06          	shr    $0x6,%rax
    a33f:	48 8b 04 c6          	mov    (%rsi,%rax,8),%rax
    a343:	48 d3 e8             	shr    %cl,%rax
    a346:	83 e0 01             	and    $0x1,%eax
    a349:	48 83 f8 01          	cmp    $0x1,%rax
    a34d:	48 83 da ff          	sbb    $0xffffffffffffffff,%rdx
    a351:	48 83 c1 01          	add    $0x1,%rcx
    a355:	49 39 c8             	cmp    %rcx,%r8
    a358:	75 de                	jne    a338 <bitmap_getNumClear+0x18>
    a35a:	49 29 d0             	sub    %rdx,%r8
    a35d:	4c 89 c0             	mov    %r8,%rax
    a360:	c3                   	retq   
    a361:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a368:	00 00 00 00 
    a36c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a370 <bitmap_getNumSet>:
    a370:	f3 0f 1e fa          	endbr64 
    a374:	48 8b 17             	mov    (%rdi),%rdx
    a377:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    a37b:	45 31 c0             	xor    %r8d,%r8d
    a37e:	48 85 d2             	test   %rdx,%rdx
    a381:	7e 27                	jle    a3aa <bitmap_getNumSet+0x3a>
    a383:	31 c9                	xor    %ecx,%ecx
    a385:	0f 1f 00             	nopl   (%rax)
    a388:	48 89 c8             	mov    %rcx,%rax
    a38b:	48 c1 e8 06          	shr    $0x6,%rax
    a38f:	48 8b 04 c6          	mov    (%rsi,%rax,8),%rax
    a393:	48 d3 e8             	shr    %cl,%rax
    a396:	83 e0 01             	and    $0x1,%eax
    a399:	48 83 f8 01          	cmp    $0x1,%rax
    a39d:	49 83 d8 ff          	sbb    $0xffffffffffffffff,%r8
    a3a1:	48 83 c1 01          	add    $0x1,%rcx
    a3a5:	48 39 ca             	cmp    %rcx,%rdx
    a3a8:	75 de                	jne    a388 <bitmap_getNumSet+0x18>
    a3aa:	4c 89 c0             	mov    %r8,%rax
    a3ad:	c3                   	retq   
    a3ae:	66 90                	xchg   %ax,%ax

000000000000a3b0 <bitmap_copy>:
    a3b0:	f3 0f 1e fa          	endbr64 
    a3b4:	48 8b 06             	mov    (%rsi),%rax
    a3b7:	48 39 07             	cmp    %rax,(%rdi)
    a3ba:	75 18                	jne    a3d4 <bitmap_copy+0x24>
    a3bc:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    a3c0:	4c 8b 47 10          	mov    0x10(%rdi),%r8
    a3c4:	48 8b 76 10          	mov    0x10(%rsi),%rsi
    a3c8:	48 c1 e2 03          	shl    $0x3,%rdx
    a3cc:	4c 89 c7             	mov    %r8,%rdi
    a3cf:	e9 3c 80 ff ff       	jmpq   2410 <memcpy@plt>
    a3d4:	50                   	push   %rax
    a3d5:	48 8d 0d c4 f8 00 00 	lea    0xf8c4(%rip),%rcx        # 19ca0 <__PRETTY_FUNCTION__.4407>
    a3dc:	ba 57 01 00 00       	mov    $0x157,%edx
    a3e1:	48 8d 35 7a f8 00 00 	lea    0xf87a(%rip),%rsi        # 19c62 <__PRETTY_FUNCTION__.4727+0xa>
    a3e8:	48 8d 3d 89 f8 00 00 	lea    0xf889(%rip),%rdi        # 19c78 <__PRETTY_FUNCTION__.4727+0x20>
    a3ef:	e8 ac 7f ff ff       	callq  23a0 <__assert_fail@plt>
    a3f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a3fb:	00 00 00 00 
    a3ff:	90                   	nop

000000000000a400 <bitmap_toggleAll>:
    a400:	f3 0f 1e fa          	endbr64 
    a404:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    a408:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    a40c:	48 85 f6             	test   %rsi,%rsi
    a40f:	7e 44                	jle    a455 <bitmap_toggleAll+0x55>
    a411:	48 83 fe 01          	cmp    $0x1,%rsi
    a415:	74 4a                	je     a461 <bitmap_toggleAll+0x61>
    a417:	48 89 f1             	mov    %rsi,%rcx
    a41a:	48 89 d0             	mov    %rdx,%rax
    a41d:	66 0f 76 c9          	pcmpeqd %xmm1,%xmm1
    a421:	48 d1 e9             	shr    %rcx
    a424:	48 c1 e1 04          	shl    $0x4,%rcx
    a428:	48 01 d1             	add    %rdx,%rcx
    a42b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a430:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    a434:	48 83 c0 10          	add    $0x10,%rax
    a438:	66 0f ef c1          	pxor   %xmm1,%xmm0
    a43c:	0f 11 40 f0          	movups %xmm0,-0x10(%rax)
    a440:	48 39 c1             	cmp    %rax,%rcx
    a443:	75 eb                	jne    a430 <bitmap_toggleAll+0x30>
    a445:	48 89 f0             	mov    %rsi,%rax
    a448:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    a44c:	83 e6 01             	and    $0x1,%esi
    a44f:	74 0f                	je     a460 <bitmap_toggleAll+0x60>
    a451:	48 f7 14 c2          	notq   (%rdx,%rax,8)
    a455:	c3                   	retq   
    a456:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a45d:	00 00 00 
    a460:	c3                   	retq   
    a461:	31 c0                	xor    %eax,%eax
    a463:	eb ec                	jmp    a451 <bitmap_toggleAll+0x51>
    a465:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    a46c:	00 00 00 
    a46f:	90                   	nop

000000000000a470 <compareDataPtrAddresses>:
    a470:	f3 0f 1e fa          	endbr64 
    a474:	48 89 f8             	mov    %rdi,%rax
    a477:	48 29 f0             	sub    %rsi,%rax
    a47a:	c3                   	retq   
    a47b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a480 <TMfreeList>:
    a480:	48 85 ff             	test   %rdi,%rdi
    a483:	74 2b                	je     a4b0 <TMfreeList+0x30>
    a485:	55                   	push   %rbp
    a486:	48 89 fd             	mov    %rdi,%rbp
    a489:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    a48d:	e8 ce 6b 00 00       	callq  11060 <stm_load_ptr>
    a492:	48 89 c7             	mov    %rax,%rdi
    a495:	e8 e6 ff ff ff       	callq  a480 <TMfreeList>
    a49a:	48 89 ef             	mov    %rbp,%rdi
    a49d:	be 08 00 00 00       	mov    $0x8,%esi
    a4a2:	5d                   	pop    %rbp
    a4a3:	e9 c8 e0 00 00       	jmpq   18570 <stm_free>
    a4a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a4af:	00 
    a4b0:	c3                   	retq   
    a4b1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a4b8:	00 00 00 00 
    a4bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a4c0 <freeList.part.0>:
    a4c0:	55                   	push   %rbp
    a4c1:	48 89 fd             	mov    %rdi,%rbp
    a4c4:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    a4c8:	48 85 ff             	test   %rdi,%rdi
    a4cb:	74 05                	je     a4d2 <freeList.part.0+0x12>
    a4cd:	e8 ee ff ff ff       	callq  a4c0 <freeList.part.0>
    a4d2:	48 89 ef             	mov    %rbp,%rdi
    a4d5:	5d                   	pop    %rbp
    a4d6:	e9 f5 7d ff ff       	jmpq   22d0 <free@plt>
    a4db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a4e0 <PfreeList.part.0>:
    a4e0:	55                   	push   %rbp
    a4e1:	48 89 fd             	mov    %rdi,%rbp
    a4e4:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    a4e8:	48 85 ff             	test   %rdi,%rdi
    a4eb:	74 05                	je     a4f2 <PfreeList.part.0+0x12>
    a4ed:	e8 ee ff ff ff       	callq  a4e0 <PfreeList.part.0>
    a4f2:	48 89 ef             	mov    %rbp,%rdi
    a4f5:	5d                   	pop    %rbp
    a4f6:	e9 d5 7d ff ff       	jmpq   22d0 <free@plt>
    a4fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000a500 <list_iter_reset>:
    a500:	f3 0f 1e fa          	endbr64 
    a504:	48 89 37             	mov    %rsi,(%rdi)
    a507:	c3                   	retq   
    a508:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a50f:	00 

000000000000a510 <TMlist_iter_reset>:
    a510:	f3 0f 1e fa          	endbr64 
    a514:	48 89 37             	mov    %rsi,(%rdi)
    a517:	c3                   	retq   
    a518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a51f:	00 

000000000000a520 <list_iter_hasNext>:
    a520:	f3 0f 1e fa          	endbr64 
    a524:	48 8b 07             	mov    (%rdi),%rax
    a527:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
    a52c:	0f 95 c0             	setne  %al
    a52f:	0f b6 c0             	movzbl %al,%eax
    a532:	c3                   	retq   
    a533:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a53a:	00 00 00 00 
    a53e:	66 90                	xchg   %ax,%ax

000000000000a540 <TMlist_iter_hasNext>:
    a540:	f3 0f 1e fa          	endbr64 
    a544:	48 83 ec 08          	sub    $0x8,%rsp
    a548:	48 8b 3f             	mov    (%rdi),%rdi
    a54b:	48 83 c7 08          	add    $0x8,%rdi
    a54f:	e8 0c 6b 00 00       	callq  11060 <stm_load_ptr>
    a554:	48 85 c0             	test   %rax,%rax
    a557:	0f 95 c0             	setne  %al
    a55a:	48 83 c4 08          	add    $0x8,%rsp
    a55e:	0f b6 c0             	movzbl %al,%eax
    a561:	c3                   	retq   
    a562:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a569:	00 00 00 00 
    a56d:	0f 1f 00             	nopl   (%rax)

000000000000a570 <list_iter_next>:
    a570:	f3 0f 1e fa          	endbr64 
    a574:	48 8b 07             	mov    (%rdi),%rax
    a577:	48 8b 40 08          	mov    0x8(%rax),%rax
    a57b:	48 89 07             	mov    %rax,(%rdi)
    a57e:	48 8b 00             	mov    (%rax),%rax
    a581:	c3                   	retq   
    a582:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a589:	00 00 00 00 
    a58d:	0f 1f 00             	nopl   (%rax)

000000000000a590 <TMlist_iter_next>:
    a590:	f3 0f 1e fa          	endbr64 
    a594:	53                   	push   %rbx
    a595:	48 8b 07             	mov    (%rdi),%rax
    a598:	48 89 fb             	mov    %rdi,%rbx
    a59b:	48 8d 78 08          	lea    0x8(%rax),%rdi
    a59f:	e8 bc 6a 00 00       	callq  11060 <stm_load_ptr>
    a5a4:	48 89 03             	mov    %rax,(%rbx)
    a5a7:	5b                   	pop    %rbx
    a5a8:	48 8b 00             	mov    (%rax),%rax
    a5ab:	c3                   	retq   
    a5ac:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a5b0 <list_alloc>:
    a5b0:	f3 0f 1e fa          	endbr64 
    a5b4:	53                   	push   %rbx
    a5b5:	48 89 fb             	mov    %rdi,%rbx
    a5b8:	bf 20 00 00 00       	mov    $0x20,%edi
    a5bd:	e8 8e 7e ff ff       	callq  2450 <malloc@plt>
    a5c2:	48 85 c0             	test   %rax,%rax
    a5c5:	74 21                	je     a5e8 <list_alloc+0x38>
    a5c7:	48 85 db             	test   %rbx,%rbx
    a5ca:	48 8d 3d 9f fe ff ff 	lea    -0x161(%rip),%rdi        # a470 <compareDataPtrAddresses>
    a5d1:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    a5d8:	00 
    a5d9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a5dd:	48 0f 44 df          	cmove  %rdi,%rbx
    a5e1:	0f 11 00             	movups %xmm0,(%rax)
    a5e4:	48 89 58 10          	mov    %rbx,0x10(%rax)
    a5e8:	5b                   	pop    %rbx
    a5e9:	c3                   	retq   
    a5ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a5f0 <Plist_alloc>:
    a5f0:	f3 0f 1e fa          	endbr64 
    a5f4:	53                   	push   %rbx
    a5f5:	48 89 fb             	mov    %rdi,%rbx
    a5f8:	bf 20 00 00 00       	mov    $0x20,%edi
    a5fd:	e8 4e 7e ff ff       	callq  2450 <malloc@plt>
    a602:	48 85 c0             	test   %rax,%rax
    a605:	74 21                	je     a628 <Plist_alloc+0x38>
    a607:	48 85 db             	test   %rbx,%rbx
    a60a:	48 8d 3d 5f fe ff ff 	lea    -0x1a1(%rip),%rdi        # a470 <compareDataPtrAddresses>
    a611:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    a618:	00 
    a619:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a61d:	48 0f 44 df          	cmove  %rdi,%rbx
    a621:	0f 11 00             	movups %xmm0,(%rax)
    a624:	48 89 58 10          	mov    %rbx,0x10(%rax)
    a628:	5b                   	pop    %rbx
    a629:	c3                   	retq   
    a62a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a630 <TMlist_alloc>:
    a630:	f3 0f 1e fa          	endbr64 
    a634:	53                   	push   %rbx
    a635:	48 89 fb             	mov    %rdi,%rbx
    a638:	bf 20 00 00 00       	mov    $0x20,%edi
    a63d:	e8 0e da 00 00       	callq  18050 <stm_malloc>
    a642:	48 85 c0             	test   %rax,%rax
    a645:	74 21                	je     a668 <TMlist_alloc+0x38>
    a647:	48 85 db             	test   %rbx,%rbx
    a64a:	48 8d 3d 1f fe ff ff 	lea    -0x1e1(%rip),%rdi        # a470 <compareDataPtrAddresses>
    a651:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    a658:	00 
    a659:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a65d:	48 0f 44 df          	cmove  %rdi,%rbx
    a661:	0f 11 00             	movups %xmm0,(%rax)
    a664:	48 89 58 10          	mov    %rbx,0x10(%rax)
    a668:	5b                   	pop    %rbx
    a669:	c3                   	retq   
    a66a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a670 <list_free>:
    a670:	f3 0f 1e fa          	endbr64 
    a674:	41 57                	push   %r15
    a676:	41 56                	push   %r14
    a678:	41 55                	push   %r13
    a67a:	41 54                	push   %r12
    a67c:	55                   	push   %rbp
    a67d:	48 89 fd             	mov    %rdi,%rbp
    a680:	53                   	push   %rbx
    a681:	48 83 ec 18          	sub    $0x18,%rsp
    a685:	4c 8b 67 08          	mov    0x8(%rdi),%r12
    a689:	4d 85 e4             	test   %r12,%r12
    a68c:	74 76                	je     a704 <list_free+0x94>
    a68e:	4d 8b 6c 24 08       	mov    0x8(%r12),%r13
    a693:	4d 85 ed             	test   %r13,%r13
    a696:	74 64                	je     a6fc <list_free+0x8c>
    a698:	4d 8b 75 08          	mov    0x8(%r13),%r14
    a69c:	4d 85 f6             	test   %r14,%r14
    a69f:	74 53                	je     a6f4 <list_free+0x84>
    a6a1:	4d 8b 7e 08          	mov    0x8(%r14),%r15
    a6a5:	4d 85 ff             	test   %r15,%r15
    a6a8:	74 42                	je     a6ec <list_free+0x7c>
    a6aa:	49 8b 5f 08          	mov    0x8(%r15),%rbx
    a6ae:	48 85 db             	test   %rbx,%rbx
    a6b1:	74 31                	je     a6e4 <list_free+0x74>
    a6b3:	4c 8b 43 08          	mov    0x8(%rbx),%r8
    a6b7:	4d 85 c0             	test   %r8,%r8
    a6ba:	74 20                	je     a6dc <list_free+0x6c>
    a6bc:	49 8b 78 08          	mov    0x8(%r8),%rdi
    a6c0:	48 85 ff             	test   %rdi,%rdi
    a6c3:	74 0f                	je     a6d4 <list_free+0x64>
    a6c5:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    a6ca:	e8 f1 fd ff ff       	callq  a4c0 <freeList.part.0>
    a6cf:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    a6d4:	4c 89 c7             	mov    %r8,%rdi
    a6d7:	e8 f4 7b ff ff       	callq  22d0 <free@plt>
    a6dc:	48 89 df             	mov    %rbx,%rdi
    a6df:	e8 ec 7b ff ff       	callq  22d0 <free@plt>
    a6e4:	4c 89 ff             	mov    %r15,%rdi
    a6e7:	e8 e4 7b ff ff       	callq  22d0 <free@plt>
    a6ec:	4c 89 f7             	mov    %r14,%rdi
    a6ef:	e8 dc 7b ff ff       	callq  22d0 <free@plt>
    a6f4:	4c 89 ef             	mov    %r13,%rdi
    a6f7:	e8 d4 7b ff ff       	callq  22d0 <free@plt>
    a6fc:	4c 89 e7             	mov    %r12,%rdi
    a6ff:	e8 cc 7b ff ff       	callq  22d0 <free@plt>
    a704:	48 83 c4 18          	add    $0x18,%rsp
    a708:	48 89 ef             	mov    %rbp,%rdi
    a70b:	5b                   	pop    %rbx
    a70c:	5d                   	pop    %rbp
    a70d:	41 5c                	pop    %r12
    a70f:	41 5d                	pop    %r13
    a711:	41 5e                	pop    %r14
    a713:	41 5f                	pop    %r15
    a715:	e9 b6 7b ff ff       	jmpq   22d0 <free@plt>
    a71a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a720 <Plist_free>:
    a720:	f3 0f 1e fa          	endbr64 
    a724:	41 57                	push   %r15
    a726:	41 56                	push   %r14
    a728:	41 55                	push   %r13
    a72a:	41 54                	push   %r12
    a72c:	55                   	push   %rbp
    a72d:	48 89 fd             	mov    %rdi,%rbp
    a730:	53                   	push   %rbx
    a731:	48 83 ec 18          	sub    $0x18,%rsp
    a735:	4c 8b 67 08          	mov    0x8(%rdi),%r12
    a739:	4d 85 e4             	test   %r12,%r12
    a73c:	74 76                	je     a7b4 <Plist_free+0x94>
    a73e:	4d 8b 6c 24 08       	mov    0x8(%r12),%r13
    a743:	4d 85 ed             	test   %r13,%r13
    a746:	74 64                	je     a7ac <Plist_free+0x8c>
    a748:	4d 8b 75 08          	mov    0x8(%r13),%r14
    a74c:	4d 85 f6             	test   %r14,%r14
    a74f:	74 53                	je     a7a4 <Plist_free+0x84>
    a751:	4d 8b 7e 08          	mov    0x8(%r14),%r15
    a755:	4d 85 ff             	test   %r15,%r15
    a758:	74 42                	je     a79c <Plist_free+0x7c>
    a75a:	49 8b 5f 08          	mov    0x8(%r15),%rbx
    a75e:	48 85 db             	test   %rbx,%rbx
    a761:	74 31                	je     a794 <Plist_free+0x74>
    a763:	4c 8b 43 08          	mov    0x8(%rbx),%r8
    a767:	4d 85 c0             	test   %r8,%r8
    a76a:	74 20                	je     a78c <Plist_free+0x6c>
    a76c:	49 8b 78 08          	mov    0x8(%r8),%rdi
    a770:	48 85 ff             	test   %rdi,%rdi
    a773:	74 0f                	je     a784 <Plist_free+0x64>
    a775:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    a77a:	e8 61 fd ff ff       	callq  a4e0 <PfreeList.part.0>
    a77f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    a784:	4c 89 c7             	mov    %r8,%rdi
    a787:	e8 44 7b ff ff       	callq  22d0 <free@plt>
    a78c:	48 89 df             	mov    %rbx,%rdi
    a78f:	e8 3c 7b ff ff       	callq  22d0 <free@plt>
    a794:	4c 89 ff             	mov    %r15,%rdi
    a797:	e8 34 7b ff ff       	callq  22d0 <free@plt>
    a79c:	4c 89 f7             	mov    %r14,%rdi
    a79f:	e8 2c 7b ff ff       	callq  22d0 <free@plt>
    a7a4:	4c 89 ef             	mov    %r13,%rdi
    a7a7:	e8 24 7b ff ff       	callq  22d0 <free@plt>
    a7ac:	4c 89 e7             	mov    %r12,%rdi
    a7af:	e8 1c 7b ff ff       	callq  22d0 <free@plt>
    a7b4:	48 83 c4 18          	add    $0x18,%rsp
    a7b8:	48 89 ef             	mov    %rbp,%rdi
    a7bb:	5b                   	pop    %rbx
    a7bc:	5d                   	pop    %rbp
    a7bd:	41 5c                	pop    %r12
    a7bf:	41 5d                	pop    %r13
    a7c1:	41 5e                	pop    %r14
    a7c3:	41 5f                	pop    %r15
    a7c5:	e9 06 7b ff ff       	jmpq   22d0 <free@plt>
    a7ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000a7d0 <TMlist_free>:
    a7d0:	f3 0f 1e fa          	endbr64 
    a7d4:	41 57                	push   %r15
    a7d6:	41 56                	push   %r14
    a7d8:	41 55                	push   %r13
    a7da:	49 89 fd             	mov    %rdi,%r13
    a7dd:	48 83 c7 08          	add    $0x8,%rdi
    a7e1:	41 54                	push   %r12
    a7e3:	55                   	push   %rbp
    a7e4:	53                   	push   %rbx
    a7e5:	48 83 ec 18          	sub    $0x18,%rsp
    a7e9:	e8 72 68 00 00       	callq  11060 <stm_load_ptr>
    a7ee:	48 85 c0             	test   %rax,%rax
    a7f1:	0f 84 c2 00 00 00    	je     a8b9 <TMlist_free+0xe9>
    a7f7:	48 8d 78 08          	lea    0x8(%rax),%rdi
    a7fb:	48 89 c5             	mov    %rax,%rbp
    a7fe:	e8 5d 68 00 00       	callq  11060 <stm_load_ptr>
    a803:	49 89 c4             	mov    %rax,%r12
    a806:	48 85 c0             	test   %rax,%rax
    a809:	0f 84 9d 00 00 00    	je     a8ac <TMlist_free+0xdc>
    a80f:	48 8d 78 08          	lea    0x8(%rax),%rdi
    a813:	e8 48 68 00 00       	callq  11060 <stm_load_ptr>
    a818:	49 89 c6             	mov    %rax,%r14
    a81b:	48 85 c0             	test   %rax,%rax
    a81e:	74 7f                	je     a89f <TMlist_free+0xcf>
    a820:	48 8d 78 08          	lea    0x8(%rax),%rdi
    a824:	e8 37 68 00 00       	callq  11060 <stm_load_ptr>
    a829:	49 89 c7             	mov    %rax,%r15
    a82c:	48 85 c0             	test   %rax,%rax
    a82f:	74 61                	je     a892 <TMlist_free+0xc2>
    a831:	48 8d 78 08          	lea    0x8(%rax),%rdi
    a835:	e8 26 68 00 00       	callq  11060 <stm_load_ptr>
    a83a:	48 89 c3             	mov    %rax,%rbx
    a83d:	48 85 c0             	test   %rax,%rax
    a840:	74 43                	je     a885 <TMlist_free+0xb5>
    a842:	48 8d 78 08          	lea    0x8(%rax),%rdi
    a846:	e8 15 68 00 00       	callq  11060 <stm_load_ptr>
    a84b:	48 85 c0             	test   %rax,%rax
    a84e:	74 28                	je     a878 <TMlist_free+0xa8>
    a850:	48 8d 78 08          	lea    0x8(%rax),%rdi
    a854:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a859:	e8 02 68 00 00       	callq  11060 <stm_load_ptr>
    a85e:	48 89 c7             	mov    %rax,%rdi
    a861:	e8 1a fc ff ff       	callq  a480 <TMfreeList>
    a866:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    a86b:	be 08 00 00 00       	mov    $0x8,%esi
    a870:	4c 89 c7             	mov    %r8,%rdi
    a873:	e8 f8 dc 00 00       	callq  18570 <stm_free>
    a878:	be 08 00 00 00       	mov    $0x8,%esi
    a87d:	48 89 df             	mov    %rbx,%rdi
    a880:	e8 eb dc 00 00       	callq  18570 <stm_free>
    a885:	be 08 00 00 00       	mov    $0x8,%esi
    a88a:	4c 89 ff             	mov    %r15,%rdi
    a88d:	e8 de dc 00 00       	callq  18570 <stm_free>
    a892:	be 08 00 00 00       	mov    $0x8,%esi
    a897:	4c 89 f7             	mov    %r14,%rdi
    a89a:	e8 d1 dc 00 00       	callq  18570 <stm_free>
    a89f:	be 08 00 00 00       	mov    $0x8,%esi
    a8a4:	4c 89 e7             	mov    %r12,%rdi
    a8a7:	e8 c4 dc 00 00       	callq  18570 <stm_free>
    a8ac:	be 08 00 00 00       	mov    $0x8,%esi
    a8b1:	48 89 ef             	mov    %rbp,%rdi
    a8b4:	e8 b7 dc 00 00       	callq  18570 <stm_free>
    a8b9:	48 83 c4 18          	add    $0x18,%rsp
    a8bd:	4c 89 ef             	mov    %r13,%rdi
    a8c0:	be 08 00 00 00       	mov    $0x8,%esi
    a8c5:	5b                   	pop    %rbx
    a8c6:	5d                   	pop    %rbp
    a8c7:	41 5c                	pop    %r12
    a8c9:	41 5d                	pop    %r13
    a8cb:	41 5e                	pop    %r14
    a8cd:	41 5f                	pop    %r15
    a8cf:	e9 9c dc 00 00       	jmpq   18570 <stm_free>
    a8d4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    a8db:	00 00 00 00 
    a8df:	90                   	nop

000000000000a8e0 <list_isEmpty>:
    a8e0:	f3 0f 1e fa          	endbr64 
    a8e4:	31 c0                	xor    %eax,%eax
    a8e6:	48 83 7f 08 00       	cmpq   $0x0,0x8(%rdi)
    a8eb:	0f 94 c0             	sete   %al
    a8ee:	c3                   	retq   
    a8ef:	90                   	nop

000000000000a8f0 <TMlist_isEmpty>:
    a8f0:	f3 0f 1e fa          	endbr64 
    a8f4:	48 83 ec 08          	sub    $0x8,%rsp
    a8f8:	48 83 c7 08          	add    $0x8,%rdi
    a8fc:	e8 5f 67 00 00       	callq  11060 <stm_load_ptr>
    a901:	48 85 c0             	test   %rax,%rax
    a904:	0f 94 c0             	sete   %al
    a907:	48 83 c4 08          	add    $0x8,%rsp
    a90b:	0f b6 c0             	movzbl %al,%eax
    a90e:	c3                   	retq   
    a90f:	90                   	nop

000000000000a910 <list_getSize>:
    a910:	f3 0f 1e fa          	endbr64 
    a914:	48 8b 47 18          	mov    0x18(%rdi),%rax
    a918:	c3                   	retq   
    a919:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a920 <TMlist_getSize>:
    a920:	f3 0f 1e fa          	endbr64 
    a924:	48 83 c7 18          	add    $0x18,%rdi
    a928:	e9 53 44 00 00       	jmpq   ed80 <stm_load>
    a92d:	0f 1f 00             	nopl   (%rax)

000000000000a930 <list_find>:
    a930:	f3 0f 1e fa          	endbr64 
    a934:	41 55                	push   %r13
    a936:	49 89 fd             	mov    %rdi,%r13
    a939:	41 54                	push   %r12
    a93b:	49 89 f4             	mov    %rsi,%r12
    a93e:	55                   	push   %rbp
    a93f:	48 89 fd             	mov    %rdi,%rbp
    a942:	53                   	push   %rbx
    a943:	48 83 ec 08          	sub    $0x8,%rsp
    a947:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    a94b:	48 85 db             	test   %rbx,%rbx
    a94e:	75 17                	jne    a967 <list_find+0x37>
    a950:	eb 4e                	jmp    a9a0 <list_find+0x70>
    a952:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a958:	48 8b 43 08          	mov    0x8(%rbx),%rax
    a95c:	49 89 dd             	mov    %rbx,%r13
    a95f:	48 85 c0             	test   %rax,%rax
    a962:	74 3c                	je     a9a0 <list_find+0x70>
    a964:	48 89 c3             	mov    %rax,%rbx
    a967:	48 8b 3b             	mov    (%rbx),%rdi
    a96a:	4c 89 e6             	mov    %r12,%rsi
    a96d:	ff 55 10             	callq  *0x10(%rbp)
    a970:	48 85 c0             	test   %rax,%rax
    a973:	78 e3                	js     a958 <list_find+0x28>
    a975:	49 8b 5d 08          	mov    0x8(%r13),%rbx
    a979:	48 85 db             	test   %rbx,%rbx
    a97c:	74 22                	je     a9a0 <list_find+0x70>
    a97e:	48 8b 3b             	mov    (%rbx),%rdi
    a981:	4c 89 e6             	mov    %r12,%rsi
    a984:	ff 55 10             	callq  *0x10(%rbp)
    a987:	48 85 c0             	test   %rax,%rax
    a98a:	75 14                	jne    a9a0 <list_find+0x70>
    a98c:	48 8b 03             	mov    (%rbx),%rax
    a98f:	48 83 c4 08          	add    $0x8,%rsp
    a993:	5b                   	pop    %rbx
    a994:	5d                   	pop    %rbp
    a995:	41 5c                	pop    %r12
    a997:	41 5d                	pop    %r13
    a999:	c3                   	retq   
    a99a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a9a0:	48 83 c4 08          	add    $0x8,%rsp
    a9a4:	31 c0                	xor    %eax,%eax
    a9a6:	5b                   	pop    %rbx
    a9a7:	5d                   	pop    %rbp
    a9a8:	41 5c                	pop    %r12
    a9aa:	41 5d                	pop    %r13
    a9ac:	c3                   	retq   
    a9ad:	0f 1f 00             	nopl   (%rax)

000000000000a9b0 <TMlist_find>:
    a9b0:	f3 0f 1e fa          	endbr64 
    a9b4:	41 55                	push   %r13
    a9b6:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
    a9ba:	41 54                	push   %r12
    a9bc:	49 89 f4             	mov    %rsi,%r12
    a9bf:	55                   	push   %rbp
    a9c0:	48 89 fd             	mov    %rdi,%rbp
    a9c3:	4c 89 ef             	mov    %r13,%rdi
    a9c6:	53                   	push   %rbx
    a9c7:	48 83 ec 08          	sub    $0x8,%rsp
    a9cb:	e8 90 66 00 00       	callq  11060 <stm_load_ptr>
    a9d0:	48 85 c0             	test   %rax,%rax
    a9d3:	74 2d                	je     aa02 <TMlist_find+0x52>
    a9d5:	48 89 c3             	mov    %rax,%rbx
    a9d8:	eb 1a                	jmp    a9f4 <TMlist_find+0x44>
    a9da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a9e0:	4c 8d 6b 08          	lea    0x8(%rbx),%r13
    a9e4:	4c 89 ef             	mov    %r13,%rdi
    a9e7:	e8 74 66 00 00       	callq  11060 <stm_load_ptr>
    a9ec:	48 89 c3             	mov    %rax,%rbx
    a9ef:	48 85 c0             	test   %rax,%rax
    a9f2:	74 0e                	je     aa02 <TMlist_find+0x52>
    a9f4:	48 8b 3b             	mov    (%rbx),%rdi
    a9f7:	4c 89 e6             	mov    %r12,%rsi
    a9fa:	ff 55 10             	callq  *0x10(%rbp)
    a9fd:	48 85 c0             	test   %rax,%rax
    aa00:	78 de                	js     a9e0 <TMlist_find+0x30>
    aa02:	4c 89 ef             	mov    %r13,%rdi
    aa05:	e8 56 66 00 00       	callq  11060 <stm_load_ptr>
    aa0a:	48 89 c3             	mov    %rax,%rbx
    aa0d:	48 85 c0             	test   %rax,%rax
    aa10:	74 1e                	je     aa30 <TMlist_find+0x80>
    aa12:	48 8b 38             	mov    (%rax),%rdi
    aa15:	4c 89 e6             	mov    %r12,%rsi
    aa18:	ff 55 10             	callq  *0x10(%rbp)
    aa1b:	48 85 c0             	test   %rax,%rax
    aa1e:	75 10                	jne    aa30 <TMlist_find+0x80>
    aa20:	48 8b 03             	mov    (%rbx),%rax
    aa23:	48 83 c4 08          	add    $0x8,%rsp
    aa27:	5b                   	pop    %rbx
    aa28:	5d                   	pop    %rbp
    aa29:	41 5c                	pop    %r12
    aa2b:	41 5d                	pop    %r13
    aa2d:	c3                   	retq   
    aa2e:	66 90                	xchg   %ax,%ax
    aa30:	48 83 c4 08          	add    $0x8,%rsp
    aa34:	31 c0                	xor    %eax,%eax
    aa36:	5b                   	pop    %rbx
    aa37:	5d                   	pop    %rbp
    aa38:	41 5c                	pop    %r12
    aa3a:	41 5d                	pop    %r13
    aa3c:	c3                   	retq   
    aa3d:	0f 1f 00             	nopl   (%rax)

000000000000aa40 <list_insert>:
    aa40:	f3 0f 1e fa          	endbr64 
    aa44:	41 56                	push   %r14
    aa46:	49 89 fe             	mov    %rdi,%r14
    aa49:	41 55                	push   %r13
    aa4b:	49 89 f5             	mov    %rsi,%r13
    aa4e:	41 54                	push   %r12
    aa50:	49 89 fc             	mov    %rdi,%r12
    aa53:	55                   	push   %rbp
    aa54:	53                   	push   %rbx
    aa55:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    aa59:	48 85 db             	test   %rbx,%rbx
    aa5c:	75 19                	jne    aa77 <list_insert+0x37>
    aa5e:	e9 88 00 00 00       	jmpq   aaeb <list_insert+0xab>
    aa63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    aa68:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    aa6c:	49 89 de             	mov    %rbx,%r14
    aa6f:	48 85 ed             	test   %rbp,%rbp
    aa72:	74 2d                	je     aaa1 <list_insert+0x61>
    aa74:	48 89 eb             	mov    %rbp,%rbx
    aa77:	48 8b 3b             	mov    (%rbx),%rdi
    aa7a:	4c 89 ee             	mov    %r13,%rsi
    aa7d:	41 ff 54 24 10       	callq  *0x10(%r12)
    aa82:	48 85 c0             	test   %rax,%rax
    aa85:	78 e1                	js     aa68 <list_insert+0x28>
    aa87:	49 8b 6e 08          	mov    0x8(%r14),%rbp
    aa8b:	48 85 ed             	test   %rbp,%rbp
    aa8e:	74 11                	je     aaa1 <list_insert+0x61>
    aa90:	48 8b 7d 00          	mov    0x0(%rbp),%rdi
    aa94:	4c 89 ee             	mov    %r13,%rsi
    aa97:	41 ff 54 24 10       	callq  *0x10(%r12)
    aa9c:	48 85 c0             	test   %rax,%rax
    aa9f:	74 3f                	je     aae0 <list_insert+0xa0>
    aaa1:	bf 10 00 00 00       	mov    $0x10,%edi
    aaa6:	e8 a5 79 ff ff       	callq  2450 <malloc@plt>
    aaab:	48 85 c0             	test   %rax,%rax
    aaae:	74 30                	je     aae0 <list_insert+0xa0>
    aab0:	66 49 0f 6e c5       	movq   %r13,%xmm0
    aab5:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    aaba:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    aabe:	0f 11 00             	movups %xmm0,(%rax)
    aac1:	49 89 46 08          	mov    %rax,0x8(%r14)
    aac5:	b8 01 00 00 00       	mov    $0x1,%eax
    aaca:	5b                   	pop    %rbx
    aacb:	5d                   	pop    %rbp
    aacc:	49 83 44 24 18 01    	addq   $0x1,0x18(%r12)
    aad2:	41 5c                	pop    %r12
    aad4:	41 5d                	pop    %r13
    aad6:	41 5e                	pop    %r14
    aad8:	c3                   	retq   
    aad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    aae0:	5b                   	pop    %rbx
    aae1:	31 c0                	xor    %eax,%eax
    aae3:	5d                   	pop    %rbp
    aae4:	41 5c                	pop    %r12
    aae6:	41 5d                	pop    %r13
    aae8:	41 5e                	pop    %r14
    aaea:	c3                   	retq   
    aaeb:	31 ed                	xor    %ebp,%ebp
    aaed:	eb b2                	jmp    aaa1 <list_insert+0x61>
    aaef:	90                   	nop

000000000000aaf0 <Plist_insert>:
    aaf0:	f3 0f 1e fa          	endbr64 
    aaf4:	e9 47 ff ff ff       	jmpq   aa40 <list_insert>
    aaf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000ab00 <TMlist_insert>:
    ab00:	f3 0f 1e fa          	endbr64 
    ab04:	41 55                	push   %r13
    ab06:	4c 8d 6f 08          	lea    0x8(%rdi),%r13
    ab0a:	41 54                	push   %r12
    ab0c:	49 89 f4             	mov    %rsi,%r12
    ab0f:	55                   	push   %rbp
    ab10:	48 89 fd             	mov    %rdi,%rbp
    ab13:	4c 89 ef             	mov    %r13,%rdi
    ab16:	53                   	push   %rbx
    ab17:	48 83 ec 08          	sub    $0x8,%rsp
    ab1b:	e8 40 65 00 00       	callq  11060 <stm_load_ptr>
    ab20:	48 85 c0             	test   %rax,%rax
    ab23:	74 2d                	je     ab52 <TMlist_insert+0x52>
    ab25:	48 89 c3             	mov    %rax,%rbx
    ab28:	eb 1a                	jmp    ab44 <TMlist_insert+0x44>
    ab2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ab30:	4c 8d 6b 08          	lea    0x8(%rbx),%r13
    ab34:	4c 89 ef             	mov    %r13,%rdi
    ab37:	e8 24 65 00 00       	callq  11060 <stm_load_ptr>
    ab3c:	48 89 c3             	mov    %rax,%rbx
    ab3f:	48 85 c0             	test   %rax,%rax
    ab42:	74 0e                	je     ab52 <TMlist_insert+0x52>
    ab44:	48 8b 3b             	mov    (%rbx),%rdi
    ab47:	4c 89 e6             	mov    %r12,%rsi
    ab4a:	ff 55 10             	callq  *0x10(%rbp)
    ab4d:	48 85 c0             	test   %rax,%rax
    ab50:	78 de                	js     ab30 <TMlist_insert+0x30>
    ab52:	4c 89 ef             	mov    %r13,%rdi
    ab55:	e8 06 65 00 00       	callq  11060 <stm_load_ptr>
    ab5a:	48 89 c3             	mov    %rax,%rbx
    ab5d:	48 85 c0             	test   %rax,%rax
    ab60:	74 0e                	je     ab70 <TMlist_insert+0x70>
    ab62:	48 8b 38             	mov    (%rax),%rdi
    ab65:	4c 89 e6             	mov    %r12,%rsi
    ab68:	ff 55 10             	callq  *0x10(%rbp)
    ab6b:	48 85 c0             	test   %rax,%rax
    ab6e:	74 58                	je     abc8 <TMlist_insert+0xc8>
    ab70:	bf 10 00 00 00       	mov    $0x10,%edi
    ab75:	e8 d6 d4 00 00       	callq  18050 <stm_malloc>
    ab7a:	48 89 c6             	mov    %rax,%rsi
    ab7d:	48 85 c0             	test   %rax,%rax
    ab80:	74 46                	je     abc8 <TMlist_insert+0xc8>
    ab82:	66 48 0f 6e cb       	movq   %rbx,%xmm1
    ab87:	66 49 0f 6e c4       	movq   %r12,%xmm0
    ab8c:	4c 89 ef             	mov    %r13,%rdi
    ab8f:	48 83 c5 18          	add    $0x18,%rbp
    ab93:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    ab97:	0f 11 00             	movups %xmm0,(%rax)
    ab9a:	e8 b1 96 00 00       	callq  14250 <stm_store_ptr>
    ab9f:	48 89 ef             	mov    %rbp,%rdi
    aba2:	e8 d9 41 00 00       	callq  ed80 <stm_load>
    aba7:	48 89 ef             	mov    %rbp,%rdi
    abaa:	48 8d 70 01          	lea    0x1(%rax),%rsi
    abae:	e8 8d 47 00 00       	callq  f340 <stm_store>
    abb3:	48 83 c4 08          	add    $0x8,%rsp
    abb7:	b8 01 00 00 00       	mov    $0x1,%eax
    abbc:	5b                   	pop    %rbx
    abbd:	5d                   	pop    %rbp
    abbe:	41 5c                	pop    %r12
    abc0:	41 5d                	pop    %r13
    abc2:	c3                   	retq   
    abc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    abc8:	48 83 c4 08          	add    $0x8,%rsp
    abcc:	31 c0                	xor    %eax,%eax
    abce:	5b                   	pop    %rbx
    abcf:	5d                   	pop    %rbp
    abd0:	41 5c                	pop    %r12
    abd2:	41 5d                	pop    %r13
    abd4:	c3                   	retq   
    abd5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    abdc:	00 00 00 00 

000000000000abe0 <list_remove>:
    abe0:	f3 0f 1e fa          	endbr64 
    abe4:	41 56                	push   %r14
    abe6:	41 55                	push   %r13
    abe8:	49 89 fd             	mov    %rdi,%r13
    abeb:	41 54                	push   %r12
    abed:	49 89 f4             	mov    %rsi,%r12
    abf0:	55                   	push   %rbp
    abf1:	48 89 fd             	mov    %rdi,%rbp
    abf4:	53                   	push   %rbx
    abf5:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    abf9:	48 85 db             	test   %rbx,%rbx
    abfc:	75 11                	jne    ac0f <list_remove+0x2f>
    abfe:	eb 34                	jmp    ac34 <list_remove+0x54>
    ac00:	48 8b 43 08          	mov    0x8(%rbx),%rax
    ac04:	49 89 dd             	mov    %rbx,%r13
    ac07:	48 85 c0             	test   %rax,%rax
    ac0a:	74 28                	je     ac34 <list_remove+0x54>
    ac0c:	48 89 c3             	mov    %rax,%rbx
    ac0f:	48 8b 3b             	mov    (%rbx),%rdi
    ac12:	4c 89 e6             	mov    %r12,%rsi
    ac15:	ff 55 10             	callq  *0x10(%rbp)
    ac18:	48 85 c0             	test   %rax,%rax
    ac1b:	78 e3                	js     ac00 <list_remove+0x20>
    ac1d:	4d 8b 75 08          	mov    0x8(%r13),%r14
    ac21:	4d 85 f6             	test   %r14,%r14
    ac24:	74 0e                	je     ac34 <list_remove+0x54>
    ac26:	49 8b 3e             	mov    (%r14),%rdi
    ac29:	4c 89 e6             	mov    %r12,%rsi
    ac2c:	ff 55 10             	callq  *0x10(%rbp)
    ac2f:	48 85 c0             	test   %rax,%rax
    ac32:	74 0c                	je     ac40 <list_remove+0x60>
    ac34:	5b                   	pop    %rbx
    ac35:	31 c0                	xor    %eax,%eax
    ac37:	5d                   	pop    %rbp
    ac38:	41 5c                	pop    %r12
    ac3a:	41 5d                	pop    %r13
    ac3c:	41 5e                	pop    %r14
    ac3e:	c3                   	retq   
    ac3f:	90                   	nop
    ac40:	49 8b 46 08          	mov    0x8(%r14),%rax
    ac44:	4c 89 f7             	mov    %r14,%rdi
    ac47:	49 89 45 08          	mov    %rax,0x8(%r13)
    ac4b:	e8 80 76 ff ff       	callq  22d0 <free@plt>
    ac50:	48 83 6d 18 01       	subq   $0x1,0x18(%rbp)
    ac55:	78 0e                	js     ac65 <list_remove+0x85>
    ac57:	5b                   	pop    %rbx
    ac58:	b8 01 00 00 00       	mov    $0x1,%eax
    ac5d:	5d                   	pop    %rbp
    ac5e:	41 5c                	pop    %r12
    ac60:	41 5d                	pop    %r13
    ac62:	41 5e                	pop    %r14
    ac64:	c3                   	retq   
    ac65:	48 8d 0d 84 f0 00 00 	lea    0xf084(%rip),%rcx        # 19cf0 <__PRETTY_FUNCTION__.4535>
    ac6c:	ba bf 02 00 00       	mov    $0x2bf,%edx
    ac71:	48 8d 35 34 f0 00 00 	lea    0xf034(%rip),%rsi        # 19cac <__PRETTY_FUNCTION__.4407+0xc>
    ac78:	48 8d 3d 3b f0 00 00 	lea    0xf03b(%rip),%rdi        # 19cba <__PRETTY_FUNCTION__.4407+0x1a>
    ac7f:	e8 1c 77 ff ff       	callq  23a0 <__assert_fail@plt>
    ac84:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    ac8b:	00 00 00 00 
    ac8f:	90                   	nop

000000000000ac90 <Plist_remove>:
    ac90:	f3 0f 1e fa          	endbr64 
    ac94:	41 56                	push   %r14
    ac96:	41 55                	push   %r13
    ac98:	49 89 fd             	mov    %rdi,%r13
    ac9b:	41 54                	push   %r12
    ac9d:	49 89 f4             	mov    %rsi,%r12
    aca0:	55                   	push   %rbp
    aca1:	48 89 fd             	mov    %rdi,%rbp
    aca4:	53                   	push   %rbx
    aca5:	48 8b 5f 08          	mov    0x8(%rdi),%rbx
    aca9:	48 85 db             	test   %rbx,%rbx
    acac:	75 11                	jne    acbf <Plist_remove+0x2f>
    acae:	eb 34                	jmp    ace4 <Plist_remove+0x54>
    acb0:	48 8b 43 08          	mov    0x8(%rbx),%rax
    acb4:	49 89 dd             	mov    %rbx,%r13
    acb7:	48 85 c0             	test   %rax,%rax
    acba:	74 28                	je     ace4 <Plist_remove+0x54>
    acbc:	48 89 c3             	mov    %rax,%rbx
    acbf:	48 8b 3b             	mov    (%rbx),%rdi
    acc2:	4c 89 e6             	mov    %r12,%rsi
    acc5:	ff 55 10             	callq  *0x10(%rbp)
    acc8:	48 85 c0             	test   %rax,%rax
    accb:	78 e3                	js     acb0 <Plist_remove+0x20>
    accd:	4d 8b 75 08          	mov    0x8(%r13),%r14
    acd1:	4d 85 f6             	test   %r14,%r14
    acd4:	74 0e                	je     ace4 <Plist_remove+0x54>
    acd6:	49 8b 3e             	mov    (%r14),%rdi
    acd9:	4c 89 e6             	mov    %r12,%rsi
    acdc:	ff 55 10             	callq  *0x10(%rbp)
    acdf:	48 85 c0             	test   %rax,%rax
    ace2:	74 0c                	je     acf0 <Plist_remove+0x60>
    ace4:	5b                   	pop    %rbx
    ace5:	31 c0                	xor    %eax,%eax
    ace7:	5d                   	pop    %rbp
    ace8:	41 5c                	pop    %r12
    acea:	41 5d                	pop    %r13
    acec:	41 5e                	pop    %r14
    acee:	c3                   	retq   
    acef:	90                   	nop
    acf0:	49 8b 46 08          	mov    0x8(%r14),%rax
    acf4:	4c 89 f7             	mov    %r14,%rdi
    acf7:	49 89 45 08          	mov    %rax,0x8(%r13)
    acfb:	e8 d0 75 ff ff       	callq  22d0 <free@plt>
    ad00:	48 83 6d 18 01       	subq   $0x1,0x18(%rbp)
    ad05:	78 0e                	js     ad15 <Plist_remove+0x85>
    ad07:	5b                   	pop    %rbx
    ad08:	b8 01 00 00 00       	mov    $0x1,%eax
    ad0d:	5d                   	pop    %rbp
    ad0e:	41 5c                	pop    %r12
    ad10:	41 5d                	pop    %r13
    ad12:	41 5e                	pop    %r14
    ad14:	c3                   	retq   
    ad15:	48 8d 0d c4 ef 00 00 	lea    0xefc4(%rip),%rcx        # 19ce0 <__PRETTY_FUNCTION__.4542>
    ad1c:	ba dc 02 00 00       	mov    $0x2dc,%edx
    ad21:	48 8d 35 84 ef 00 00 	lea    0xef84(%rip),%rsi        # 19cac <__PRETTY_FUNCTION__.4407+0xc>
    ad28:	48 8d 3d 8b ef 00 00 	lea    0xef8b(%rip),%rdi        # 19cba <__PRETTY_FUNCTION__.4407+0x1a>
    ad2f:	e8 6c 76 ff ff       	callq  23a0 <__assert_fail@plt>
    ad34:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    ad3b:	00 00 00 00 
    ad3f:	90                   	nop

000000000000ad40 <TMlist_remove>:
    ad40:	f3 0f 1e fa          	endbr64 
    ad44:	41 56                	push   %r14
    ad46:	41 55                	push   %r13
    ad48:	49 89 f5             	mov    %rsi,%r13
    ad4b:	41 54                	push   %r12
    ad4d:	4c 8d 67 08          	lea    0x8(%rdi),%r12
    ad51:	55                   	push   %rbp
    ad52:	48 89 fd             	mov    %rdi,%rbp
    ad55:	4c 89 e7             	mov    %r12,%rdi
    ad58:	53                   	push   %rbx
    ad59:	e8 02 63 00 00       	callq  11060 <stm_load_ptr>
    ad5e:	48 85 c0             	test   %rax,%rax
    ad61:	74 2f                	je     ad92 <TMlist_remove+0x52>
    ad63:	48 89 c3             	mov    %rax,%rbx
    ad66:	eb 1c                	jmp    ad84 <TMlist_remove+0x44>
    ad68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ad6f:	00 
    ad70:	4c 8d 63 08          	lea    0x8(%rbx),%r12
    ad74:	4c 89 e7             	mov    %r12,%rdi
    ad77:	e8 e4 62 00 00       	callq  11060 <stm_load_ptr>
    ad7c:	48 89 c3             	mov    %rax,%rbx
    ad7f:	48 85 c0             	test   %rax,%rax
    ad82:	74 0e                	je     ad92 <TMlist_remove+0x52>
    ad84:	48 8b 3b             	mov    (%rbx),%rdi
    ad87:	4c 89 ee             	mov    %r13,%rsi
    ad8a:	ff 55 10             	callq  *0x10(%rbp)
    ad8d:	48 85 c0             	test   %rax,%rax
    ad90:	78 de                	js     ad70 <TMlist_remove+0x30>
    ad92:	4c 89 e7             	mov    %r12,%rdi
    ad95:	e8 c6 62 00 00       	callq  11060 <stm_load_ptr>
    ad9a:	49 89 c6             	mov    %rax,%r14
    ad9d:	48 85 c0             	test   %rax,%rax
    ada0:	74 0e                	je     adb0 <TMlist_remove+0x70>
    ada2:	48 8b 38             	mov    (%rax),%rdi
    ada5:	4c 89 ee             	mov    %r13,%rsi
    ada8:	ff 55 10             	callq  *0x10(%rbp)
    adab:	48 85 c0             	test   %rax,%rax
    adae:	74 10                	je     adc0 <TMlist_remove+0x80>
    adb0:	5b                   	pop    %rbx
    adb1:	31 c0                	xor    %eax,%eax
    adb3:	5d                   	pop    %rbp
    adb4:	41 5c                	pop    %r12
    adb6:	41 5d                	pop    %r13
    adb8:	41 5e                	pop    %r14
    adba:	c3                   	retq   
    adbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    adc0:	4d 8d 6e 08          	lea    0x8(%r14),%r13
    adc4:	4c 89 ef             	mov    %r13,%rdi
    adc7:	e8 94 62 00 00       	callq  11060 <stm_load_ptr>
    adcc:	4c 89 e7             	mov    %r12,%rdi
    adcf:	4c 8d 65 18          	lea    0x18(%rbp),%r12
    add3:	48 89 c6             	mov    %rax,%rsi
    add6:	e8 75 94 00 00       	callq  14250 <stm_store_ptr>
    addb:	31 f6                	xor    %esi,%esi
    addd:	4c 89 ef             	mov    %r13,%rdi
    ade0:	e8 6b 94 00 00       	callq  14250 <stm_store_ptr>
    ade5:	be 08 00 00 00       	mov    $0x8,%esi
    adea:	4c 89 f7             	mov    %r14,%rdi
    aded:	e8 7e d7 00 00       	callq  18570 <stm_free>
    adf2:	4c 89 e7             	mov    %r12,%rdi
    adf5:	e8 86 3f 00 00       	callq  ed80 <stm_load>
    adfa:	4c 89 e7             	mov    %r12,%rdi
    adfd:	48 8d 70 ff          	lea    -0x1(%rax),%rsi
    ae01:	e8 3a 45 00 00       	callq  f340 <stm_store>
    ae06:	48 83 7d 18 00       	cmpq   $0x0,0x18(%rbp)
    ae0b:	78 0e                	js     ae1b <TMlist_remove+0xdb>
    ae0d:	5b                   	pop    %rbx
    ae0e:	b8 01 00 00 00       	mov    $0x1,%eax
    ae13:	5d                   	pop    %rbp
    ae14:	41 5c                	pop    %r12
    ae16:	41 5d                	pop    %r13
    ae18:	41 5e                	pop    %r14
    ae1a:	c3                   	retq   
    ae1b:	48 8d 0d ae ee 00 00 	lea    0xeeae(%rip),%rcx        # 19cd0 <__PRETTY_FUNCTION__.4549>
    ae22:	ba f9 02 00 00       	mov    $0x2f9,%edx
    ae27:	48 8d 35 7e ee 00 00 	lea    0xee7e(%rip),%rsi        # 19cac <__PRETTY_FUNCTION__.4407+0xc>
    ae2e:	48 8d 3d 85 ee 00 00 	lea    0xee85(%rip),%rdi        # 19cba <__PRETTY_FUNCTION__.4407+0x1a>
    ae35:	e8 66 75 ff ff       	callq  23a0 <__assert_fail@plt>
    ae3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000ae40 <list_clear>:
    ae40:	f3 0f 1e fa          	endbr64 
    ae44:	41 57                	push   %r15
    ae46:	41 56                	push   %r14
    ae48:	41 55                	push   %r13
    ae4a:	41 54                	push   %r12
    ae4c:	55                   	push   %rbp
    ae4d:	53                   	push   %rbx
    ae4e:	48 89 fb             	mov    %rdi,%rbx
    ae51:	48 83 ec 18          	sub    $0x18,%rsp
    ae55:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    ae59:	48 85 ed             	test   %rbp,%rbp
    ae5c:	74 76                	je     aed4 <list_clear+0x94>
    ae5e:	4c 8b 65 08          	mov    0x8(%rbp),%r12
    ae62:	4d 85 e4             	test   %r12,%r12
    ae65:	74 65                	je     aecc <list_clear+0x8c>
    ae67:	4d 8b 6c 24 08       	mov    0x8(%r12),%r13
    ae6c:	4d 85 ed             	test   %r13,%r13
    ae6f:	74 53                	je     aec4 <list_clear+0x84>
    ae71:	4d 8b 75 08          	mov    0x8(%r13),%r14
    ae75:	4d 85 f6             	test   %r14,%r14
    ae78:	74 42                	je     aebc <list_clear+0x7c>
    ae7a:	4d 8b 7e 08          	mov    0x8(%r14),%r15
    ae7e:	4d 85 ff             	test   %r15,%r15
    ae81:	74 31                	je     aeb4 <list_clear+0x74>
    ae83:	4d 8b 47 08          	mov    0x8(%r15),%r8
    ae87:	4d 85 c0             	test   %r8,%r8
    ae8a:	74 20                	je     aeac <list_clear+0x6c>
    ae8c:	49 8b 78 08          	mov    0x8(%r8),%rdi
    ae90:	48 85 ff             	test   %rdi,%rdi
    ae93:	74 0f                	je     aea4 <list_clear+0x64>
    ae95:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    ae9a:	e8 21 f6 ff ff       	callq  a4c0 <freeList.part.0>
    ae9f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    aea4:	4c 89 c7             	mov    %r8,%rdi
    aea7:	e8 24 74 ff ff       	callq  22d0 <free@plt>
    aeac:	4c 89 ff             	mov    %r15,%rdi
    aeaf:	e8 1c 74 ff ff       	callq  22d0 <free@plt>
    aeb4:	4c 89 f7             	mov    %r14,%rdi
    aeb7:	e8 14 74 ff ff       	callq  22d0 <free@plt>
    aebc:	4c 89 ef             	mov    %r13,%rdi
    aebf:	e8 0c 74 ff ff       	callq  22d0 <free@plt>
    aec4:	4c 89 e7             	mov    %r12,%rdi
    aec7:	e8 04 74 ff ff       	callq  22d0 <free@plt>
    aecc:	48 89 ef             	mov    %rbp,%rdi
    aecf:	e8 fc 73 ff ff       	callq  22d0 <free@plt>
    aed4:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    aedb:	00 
    aedc:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    aee3:	00 
    aee4:	48 83 c4 18          	add    $0x18,%rsp
    aee8:	5b                   	pop    %rbx
    aee9:	5d                   	pop    %rbp
    aeea:	41 5c                	pop    %r12
    aeec:	41 5d                	pop    %r13
    aeee:	41 5e                	pop    %r14
    aef0:	41 5f                	pop    %r15
    aef2:	c3                   	retq   
    aef3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    aefa:	00 00 00 00 
    aefe:	66 90                	xchg   %ax,%ax

000000000000af00 <Plist_clear>:
    af00:	f3 0f 1e fa          	endbr64 
    af04:	41 57                	push   %r15
    af06:	41 56                	push   %r14
    af08:	41 55                	push   %r13
    af0a:	41 54                	push   %r12
    af0c:	55                   	push   %rbp
    af0d:	53                   	push   %rbx
    af0e:	48 89 fb             	mov    %rdi,%rbx
    af11:	48 83 ec 18          	sub    $0x18,%rsp
    af15:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    af19:	48 85 ed             	test   %rbp,%rbp
    af1c:	74 76                	je     af94 <Plist_clear+0x94>
    af1e:	4c 8b 65 08          	mov    0x8(%rbp),%r12
    af22:	4d 85 e4             	test   %r12,%r12
    af25:	74 65                	je     af8c <Plist_clear+0x8c>
    af27:	4d 8b 6c 24 08       	mov    0x8(%r12),%r13
    af2c:	4d 85 ed             	test   %r13,%r13
    af2f:	74 53                	je     af84 <Plist_clear+0x84>
    af31:	4d 8b 75 08          	mov    0x8(%r13),%r14
    af35:	4d 85 f6             	test   %r14,%r14
    af38:	74 42                	je     af7c <Plist_clear+0x7c>
    af3a:	4d 8b 7e 08          	mov    0x8(%r14),%r15
    af3e:	4d 85 ff             	test   %r15,%r15
    af41:	74 31                	je     af74 <Plist_clear+0x74>
    af43:	4d 8b 47 08          	mov    0x8(%r15),%r8
    af47:	4d 85 c0             	test   %r8,%r8
    af4a:	74 20                	je     af6c <Plist_clear+0x6c>
    af4c:	49 8b 78 08          	mov    0x8(%r8),%rdi
    af50:	48 85 ff             	test   %rdi,%rdi
    af53:	74 0f                	je     af64 <Plist_clear+0x64>
    af55:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    af5a:	e8 81 f5 ff ff       	callq  a4e0 <PfreeList.part.0>
    af5f:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    af64:	4c 89 c7             	mov    %r8,%rdi
    af67:	e8 64 73 ff ff       	callq  22d0 <free@plt>
    af6c:	4c 89 ff             	mov    %r15,%rdi
    af6f:	e8 5c 73 ff ff       	callq  22d0 <free@plt>
    af74:	4c 89 f7             	mov    %r14,%rdi
    af77:	e8 54 73 ff ff       	callq  22d0 <free@plt>
    af7c:	4c 89 ef             	mov    %r13,%rdi
    af7f:	e8 4c 73 ff ff       	callq  22d0 <free@plt>
    af84:	4c 89 e7             	mov    %r12,%rdi
    af87:	e8 44 73 ff ff       	callq  22d0 <free@plt>
    af8c:	48 89 ef             	mov    %rbp,%rdi
    af8f:	e8 3c 73 ff ff       	callq  22d0 <free@plt>
    af94:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    af9b:	00 
    af9c:	48 c7 43 18 00 00 00 	movq   $0x0,0x18(%rbx)
    afa3:	00 
    afa4:	48 83 c4 18          	add    $0x18,%rsp
    afa8:	5b                   	pop    %rbx
    afa9:	5d                   	pop    %rbp
    afaa:	41 5c                	pop    %r12
    afac:	41 5d                	pop    %r13
    afae:	41 5e                	pop    %r14
    afb0:	41 5f                	pop    %r15
    afb2:	c3                   	retq   
    afb3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    afba:	00 00 00 
    afbd:	0f 1f 00             	nopl   (%rax)

000000000000afc0 <init_genrand>:
    afc0:	f3 0f 1e fa          	endbr64 
    afc4:	89 d1                	mov    %edx,%ecx
    afc6:	ba 01 00 00 00       	mov    $0x1,%edx
    afcb:	48 89 0f             	mov    %rcx,(%rdi)
    afce:	66 90                	xchg   %ax,%ax
    afd0:	48 89 c8             	mov    %rcx,%rax
    afd3:	48 c1 e8 1e          	shr    $0x1e,%rax
    afd7:	48 31 c8             	xor    %rcx,%rax
    afda:	48 69 c0 65 89 07 6c 	imul   $0x6c078965,%rax,%rax
    afe1:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    afe4:	48 89 0c d7          	mov    %rcx,(%rdi,%rdx,8)
    afe8:	48 83 c2 01          	add    $0x1,%rdx
    afec:	48 81 fa 70 02 00 00 	cmp    $0x270,%rdx
    aff3:	75 db                	jne    afd0 <init_genrand+0x10>
    aff5:	48 c7 06 70 02 00 00 	movq   $0x270,(%rsi)
    affc:	c3                   	retq   
    affd:	0f 1f 00             	nopl   (%rax)

000000000000b000 <init_by_array>:
    b000:	f3 0f 1e fa          	endbr64 
    b004:	41 54                	push   %r12
    b006:	41 b9 aa d6 2b 01    	mov    $0x12bd6aa,%r9d
    b00c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b012:	55                   	push   %rbp
    b013:	48 c7 07 aa d6 2b 01 	movq   $0x12bd6aa,(%rdi)
    b01a:	53                   	push   %rbx
    b01b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b020:	4c 89 c8             	mov    %r9,%rax
    b023:	48 c1 e8 1e          	shr    $0x1e,%rax
    b027:	4c 31 c8             	xor    %r9,%rax
    b02a:	48 69 c0 65 89 07 6c 	imul   $0x6c078965,%rax,%rax
    b031:	46 8d 0c 00          	lea    (%rax,%r8,1),%r9d
    b035:	4e 89 0c c7          	mov    %r9,(%rdi,%r8,8)
    b039:	49 83 c0 01          	add    $0x1,%r8
    b03d:	49 81 f8 70 02 00 00 	cmp    $0x270,%r8
    b044:	75 da                	jne    b020 <init_by_array+0x20>
    b046:	48 81 f9 70 02 00 00 	cmp    $0x270,%rcx
    b04d:	4d 89 c1             	mov    %r8,%r9
    b050:	48 c7 06 70 02 00 00 	movq   $0x270,(%rsi)
    b057:	4c 8b 17             	mov    (%rdi),%r10
    b05a:	4c 0f 4d c9          	cmovge %rcx,%r9
    b05e:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b064:	45 31 db             	xor    %r11d,%r11d
    b067:	45 31 e4             	xor    %r12d,%r12d
    b06a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b070:	4c 89 d0             	mov    %r10,%rax
    b073:	4a 8d 2c c5 00 00 00 	lea    0x0(,%r8,8),%rbp
    b07a:	00 
    b07b:	49 83 c0 01          	add    $0x1,%r8
    b07f:	48 c1 e8 1e          	shr    $0x1e,%rax
    b083:	48 8d 1c 2f          	lea    (%rdi,%rbp,1),%rbx
    b087:	4c 31 d0             	xor    %r10,%rax
    b08a:	4e 8b 14 da          	mov    (%rdx,%r11,8),%r10
    b08e:	48 69 c0 0d 66 19 00 	imul   $0x19660d,%rax,%rax
    b095:	48 33 03             	xor    (%rbx),%rax
    b098:	4d 01 da             	add    %r11,%r10
    b09b:	49 83 c3 01          	add    $0x1,%r11
    b09f:	44 01 d0             	add    %r10d,%eax
    b0a2:	48 89 03             	mov    %rax,(%rbx)
    b0a5:	49 89 c2             	mov    %rax,%r10
    b0a8:	49 81 f8 6f 02 00 00 	cmp    $0x26f,%r8
    b0af:	7e 10                	jle    b0c1 <init_by_array+0xc1>
    b0b1:	4c 8b 97 78 13 00 00 	mov    0x1378(%rdi),%r10
    b0b8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b0be:	4c 89 17             	mov    %r10,(%rdi)
    b0c1:	4c 39 d9             	cmp    %r11,%rcx
    b0c4:	4d 0f 4e dc          	cmovle %r12,%r11
    b0c8:	49 83 e9 01          	sub    $0x1,%r9
    b0cc:	75 a2                	jne    b070 <init_by_array+0x70>
    b0ce:	ba 6f 02 00 00       	mov    $0x26f,%edx
    b0d3:	eb 08                	jmp    b0dd <init_by_array+0xdd>
    b0d5:	0f 1f 00             	nopl   (%rax)
    b0d8:	4e 8b 54 c7 f8       	mov    -0x8(%rdi,%r8,8),%r10
    b0dd:	4c 89 d0             	mov    %r10,%rax
    b0e0:	4a 8d 0c c7          	lea    (%rdi,%r8,8),%rcx
    b0e4:	48 c1 e8 1e          	shr    $0x1e,%rax
    b0e8:	4c 31 d0             	xor    %r10,%rax
    b0eb:	48 69 c0 65 8b 58 5d 	imul   $0x5d588b65,%rax,%rax
    b0f2:	48 33 01             	xor    (%rcx),%rax
    b0f5:	44 29 c0             	sub    %r8d,%eax
    b0f8:	49 83 c0 01          	add    $0x1,%r8
    b0fc:	48 89 01             	mov    %rax,(%rcx)
    b0ff:	49 81 f8 70 02 00 00 	cmp    $0x270,%r8
    b106:	75 10                	jne    b118 <init_by_array+0x118>
    b108:	48 8b 87 78 13 00 00 	mov    0x1378(%rdi),%rax
    b10f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    b115:	48 89 07             	mov    %rax,(%rdi)
    b118:	48 83 ea 01          	sub    $0x1,%rdx
    b11c:	75 ba                	jne    b0d8 <init_by_array+0xd8>
    b11e:	b8 00 00 00 80       	mov    $0x80000000,%eax
    b123:	5b                   	pop    %rbx
    b124:	5d                   	pop    %rbp
    b125:	48 89 07             	mov    %rax,(%rdi)
    b128:	41 5c                	pop    %r12
    b12a:	48 c7 06 71 02 00 00 	movq   $0x271,(%rsi)
    b131:	c3                   	retq   
    b132:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b139:	00 00 00 00 
    b13d:	0f 1f 00             	nopl   (%rax)

000000000000b140 <genrand_int32>:
    b140:	f3 0f 1e fa          	endbr64 
    b144:	48 8b 06             	mov    (%rsi),%rax
    b147:	48 3d 6f 02 00 00    	cmp    $0x26f,%rax
    b14d:	77 3e                	ja     b18d <genrand_int32+0x4d>
    b14f:	48 8d 48 01          	lea    0x1(%rax),%rcx
    b153:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    b157:	48 89 c2             	mov    %rax,%rdx
    b15a:	48 89 0e             	mov    %rcx,(%rsi)
    b15d:	48 c1 ea 0b          	shr    $0xb,%rdx
    b161:	48 31 c2             	xor    %rax,%rdx
    b164:	48 89 d0             	mov    %rdx,%rax
    b167:	48 c1 e0 07          	shl    $0x7,%rax
    b16b:	25 80 56 2c 9d       	and    $0x9d2c5680,%eax
    b170:	48 31 c2             	xor    %rax,%rdx
    b173:	48 89 d0             	mov    %rdx,%rax
    b176:	48 c1 e0 0f          	shl    $0xf,%rax
    b17a:	25 00 00 c6 ef       	and    $0xefc60000,%eax
    b17f:	48 31 d0             	xor    %rdx,%rax
    b182:	48 89 c2             	mov    %rax,%rdx
    b185:	48 c1 ea 12          	shr    $0x12,%rdx
    b189:	48 31 d0             	xor    %rdx,%rax
    b18c:	c3                   	retq   
    b18d:	48 3d 71 02 00 00    	cmp    $0x271,%rax
    b193:	0f 84 e4 00 00 00    	je     b27d <genrand_int32+0x13d>
    b199:	4c 8b 17             	mov    (%rdi),%r10
    b19c:	48 89 fa             	mov    %rdi,%rdx
    b19f:	4c 8d 9f 18 07 00 00 	lea    0x718(%rdi),%r11
    b1a6:	48 89 f9             	mov    %rdi,%rcx
    b1a9:	4c 8d 05 50 eb 00 00 	lea    0xeb50(%rip),%r8        # 19d00 <mag01.2566>
    b1b0:	41 81 e2 00 00 00 80 	and    $0x80000000,%r10d
    b1b7:	48 83 c1 08          	add    $0x8,%rcx
    b1bb:	4d 89 d1             	mov    %r10,%r9
    b1be:	4c 8b 11             	mov    (%rcx),%r10
    b1c1:	4c 89 d0             	mov    %r10,%rax
    b1c4:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
    b1c9:	4c 09 c8             	or     %r9,%rax
    b1cc:	49 89 c1             	mov    %rax,%r9
    b1cf:	83 e0 01             	and    $0x1,%eax
    b1d2:	49 d1 e9             	shr    %r9
    b1d5:	4c 33 89 60 0c 00 00 	xor    0xc60(%rcx),%r9
    b1dc:	4d 33 0c c0          	xor    (%r8,%rax,8),%r9
    b1e0:	4c 89 49 f8          	mov    %r9,-0x8(%rcx)
    b1e4:	49 39 cb             	cmp    %rcx,%r11
    b1e7:	75 c7                	jne    b1b0 <genrand_int32+0x70>
    b1e9:	4c 8b 8f 18 07 00 00 	mov    0x718(%rdi),%r9
    b1f0:	4c 8d 97 60 0c 00 00 	lea    0xc60(%rdi),%r10
    b1f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b1fe:	00 00 
    b200:	4c 89 c9             	mov    %r9,%rcx
    b203:	4c 8b 8a 20 07 00 00 	mov    0x720(%rdx),%r9
    b20a:	48 83 c2 08          	add    $0x8,%rdx
    b20e:	81 e1 00 00 00 80    	and    $0x80000000,%ecx
    b214:	4c 89 c8             	mov    %r9,%rax
    b217:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
    b21c:	48 09 c8             	or     %rcx,%rax
    b21f:	48 89 c1             	mov    %rax,%rcx
    b222:	83 e0 01             	and    $0x1,%eax
    b225:	48 d1 e9             	shr    %rcx
    b228:	48 33 4a f8          	xor    -0x8(%rdx),%rcx
    b22c:	49 33 0c c0          	xor    (%r8,%rax,8),%rcx
    b230:	48 89 8a 10 07 00 00 	mov    %rcx,0x710(%rdx)
    b237:	49 39 d2             	cmp    %rdx,%r10
    b23a:	75 c4                	jne    b200 <genrand_int32+0xc0>
    b23c:	48 8b 07             	mov    (%rdi),%rax
    b23f:	48 8b 8f 78 13 00 00 	mov    0x1378(%rdi),%rcx
    b246:	48 89 c2             	mov    %rax,%rdx
    b249:	81 e1 00 00 00 80    	and    $0x80000000,%ecx
    b24f:	81 e2 ff ff ff 7f    	and    $0x7fffffff,%edx
    b255:	48 09 d1             	or     %rdx,%rcx
    b258:	48 89 ca             	mov    %rcx,%rdx
    b25b:	83 e1 01             	and    $0x1,%ecx
    b25e:	48 d1 ea             	shr    %rdx
    b261:	48 33 97 60 0c 00 00 	xor    0xc60(%rdi),%rdx
    b268:	49 33 14 c8          	xor    (%r8,%rcx,8),%rdx
    b26c:	b9 01 00 00 00       	mov    $0x1,%ecx
    b271:	48 89 97 78 13 00 00 	mov    %rdx,0x1378(%rdi)
    b278:	e9 da fe ff ff       	jmpq   b157 <genrand_int32+0x17>
    b27d:	48 c7 07 71 15 00 00 	movq   $0x1571,(%rdi)
    b284:	b9 71 15 00 00       	mov    $0x1571,%ecx
    b289:	ba 01 00 00 00       	mov    $0x1,%edx
    b28e:	66 90                	xchg   %ax,%ax
    b290:	48 89 c8             	mov    %rcx,%rax
    b293:	48 c1 e8 1e          	shr    $0x1e,%rax
    b297:	48 31 c8             	xor    %rcx,%rax
    b29a:	48 69 c0 65 89 07 6c 	imul   $0x6c078965,%rax,%rax
    b2a1:	8d 0c 10             	lea    (%rax,%rdx,1),%ecx
    b2a4:	48 89 0c d7          	mov    %rcx,(%rdi,%rdx,8)
    b2a8:	48 83 c2 01          	add    $0x1,%rdx
    b2ac:	48 81 fa 70 02 00 00 	cmp    $0x270,%rdx
    b2b3:	75 db                	jne    b290 <genrand_int32+0x150>
    b2b5:	48 c7 06 70 02 00 00 	movq   $0x270,(%rsi)
    b2bc:	e9 d8 fe ff ff       	jmpq   b199 <genrand_int32+0x59>
    b2c1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b2c8:	00 00 00 00 
    b2cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b2d0 <genrand_int31>:
    b2d0:	f3 0f 1e fa          	endbr64 
    b2d4:	e8 67 fe ff ff       	callq  b140 <genrand_int32>
    b2d9:	48 d1 e8             	shr    %rax
    b2dc:	c3                   	retq   
    b2dd:	0f 1f 00             	nopl   (%rax)

000000000000b2e0 <genrand_real1>:
    b2e0:	f3 0f 1e fa          	endbr64 
    b2e4:	e8 57 fe ff ff       	callq  b140 <genrand_int32>
    b2e9:	48 85 c0             	test   %rax,%rax
    b2ec:	78 12                	js     b300 <genrand_real1+0x20>
    b2ee:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b2f2:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    b2f7:	f2 0f 59 05 11 ea 00 	mulsd  0xea11(%rip),%xmm0        # 19d10 <mag01.2566+0x10>
    b2fe:	00 
    b2ff:	c3                   	retq   
    b300:	48 89 c2             	mov    %rax,%rdx
    b303:	83 e0 01             	and    $0x1,%eax
    b306:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b30a:	48 d1 ea             	shr    %rdx
    b30d:	48 09 c2             	or     %rax,%rdx
    b310:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    b315:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    b319:	f2 0f 59 05 ef e9 00 	mulsd  0xe9ef(%rip),%xmm0        # 19d10 <mag01.2566+0x10>
    b320:	00 
    b321:	c3                   	retq   
    b322:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b329:	00 00 00 00 
    b32d:	0f 1f 00             	nopl   (%rax)

000000000000b330 <genrand_real2>:
    b330:	f3 0f 1e fa          	endbr64 
    b334:	e8 07 fe ff ff       	callq  b140 <genrand_int32>
    b339:	48 85 c0             	test   %rax,%rax
    b33c:	78 12                	js     b350 <genrand_real2+0x20>
    b33e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b342:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    b347:	f2 0f 59 05 c9 e9 00 	mulsd  0xe9c9(%rip),%xmm0        # 19d18 <mag01.2566+0x18>
    b34e:	00 
    b34f:	c3                   	retq   
    b350:	48 89 c2             	mov    %rax,%rdx
    b353:	83 e0 01             	and    $0x1,%eax
    b356:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b35a:	48 d1 ea             	shr    %rdx
    b35d:	48 09 c2             	or     %rax,%rdx
    b360:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    b365:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    b369:	f2 0f 59 05 a7 e9 00 	mulsd  0xe9a7(%rip),%xmm0        # 19d18 <mag01.2566+0x18>
    b370:	00 
    b371:	c3                   	retq   
    b372:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b379:	00 00 00 00 
    b37d:	0f 1f 00             	nopl   (%rax)

000000000000b380 <genrand_real3>:
    b380:	f3 0f 1e fa          	endbr64 
    b384:	e8 b7 fd ff ff       	callq  b140 <genrand_int32>
    b389:	48 85 c0             	test   %rax,%rax
    b38c:	78 22                	js     b3b0 <genrand_real3+0x30>
    b38e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b392:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    b397:	f2 0f 58 05 81 e9 00 	addsd  0xe981(%rip),%xmm0        # 19d20 <mag01.2566+0x20>
    b39e:	00 
    b39f:	f2 0f 59 05 71 e9 00 	mulsd  0xe971(%rip),%xmm0        # 19d18 <mag01.2566+0x18>
    b3a6:	00 
    b3a7:	c3                   	retq   
    b3a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b3af:	00 
    b3b0:	48 89 c2             	mov    %rax,%rdx
    b3b3:	83 e0 01             	and    $0x1,%eax
    b3b6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b3ba:	48 d1 ea             	shr    %rdx
    b3bd:	48 09 c2             	or     %rax,%rdx
    b3c0:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    b3c5:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    b3c9:	eb cc                	jmp    b397 <genrand_real3+0x17>
    b3cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b3d0 <genrand_res53>:
    b3d0:	f3 0f 1e fa          	endbr64 
    b3d4:	53                   	push   %rbx
    b3d5:	e8 66 fd ff ff       	callq  b140 <genrand_int32>
    b3da:	48 89 c3             	mov    %rax,%rbx
    b3dd:	e8 5e fd ff ff       	callq  b140 <genrand_int32>
    b3e2:	48 c1 eb 05          	shr    $0x5,%rbx
    b3e6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b3ea:	66 0f ef c9          	pxor   %xmm1,%xmm1
    b3ee:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
    b3f3:	48 c1 e8 06          	shr    $0x6,%rax
    b3f7:	5b                   	pop    %rbx
    b3f8:	f2 0f 59 05 28 e9 00 	mulsd  0xe928(%rip),%xmm0        # 19d28 <mag01.2566+0x28>
    b3ff:	00 
    b400:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    b405:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    b409:	f2 0f 59 05 1f e9 00 	mulsd  0xe91f(%rip),%xmm0        # 19d30 <mag01.2566+0x30>
    b410:	00 
    b411:	c3                   	retq   
    b412:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    b419:	00 00 00 
    b41c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b420 <queue_alloc>:
    b420:	f3 0f 1e fa          	endbr64 
    b424:	41 54                	push   %r12
    b426:	53                   	push   %rbx
    b427:	48 89 fb             	mov    %rdi,%rbx
    b42a:	bf 20 00 00 00       	mov    $0x20,%edi
    b42f:	48 83 ec 08          	sub    $0x8,%rsp
    b433:	e8 18 70 ff ff       	callq  2450 <malloc@plt>
    b438:	49 89 c4             	mov    %rax,%r12
    b43b:	48 85 c0             	test   %rax,%rax
    b43e:	74 3a                	je     b47a <queue_alloc+0x5a>
    b440:	48 83 fb 02          	cmp    $0x2,%rbx
    b444:	bf 02 00 00 00       	mov    $0x2,%edi
    b449:	48 0f 4c df          	cmovl  %rdi,%rbx
    b44d:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
    b454:	00 
    b455:	e8 f6 6f ff ff       	callq  2450 <malloc@plt>
    b45a:	49 89 44 24 18       	mov    %rax,0x18(%r12)
    b45f:	48 85 c0             	test   %rax,%rax
    b462:	74 21                	je     b485 <queue_alloc+0x65>
    b464:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    b468:	49 89 5c 24 10       	mov    %rbx,0x10(%r12)
    b46d:	49 89 04 24          	mov    %rax,(%r12)
    b471:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    b478:	00 00 
    b47a:	48 83 c4 08          	add    $0x8,%rsp
    b47e:	4c 89 e0             	mov    %r12,%rax
    b481:	5b                   	pop    %rbx
    b482:	41 5c                	pop    %r12
    b484:	c3                   	retq   
    b485:	4c 89 e7             	mov    %r12,%rdi
    b488:	45 31 e4             	xor    %r12d,%r12d
    b48b:	e8 40 6e ff ff       	callq  22d0 <free@plt>
    b490:	eb e8                	jmp    b47a <queue_alloc+0x5a>
    b492:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b499:	00 00 00 00 
    b49d:	0f 1f 00             	nopl   (%rax)

000000000000b4a0 <Pqueue_alloc>:
    b4a0:	f3 0f 1e fa          	endbr64 
    b4a4:	41 54                	push   %r12
    b4a6:	53                   	push   %rbx
    b4a7:	48 89 fb             	mov    %rdi,%rbx
    b4aa:	bf 20 00 00 00       	mov    $0x20,%edi
    b4af:	48 83 ec 08          	sub    $0x8,%rsp
    b4b3:	e8 98 6f ff ff       	callq  2450 <malloc@plt>
    b4b8:	49 89 c4             	mov    %rax,%r12
    b4bb:	48 85 c0             	test   %rax,%rax
    b4be:	74 3a                	je     b4fa <Pqueue_alloc+0x5a>
    b4c0:	48 83 fb 02          	cmp    $0x2,%rbx
    b4c4:	bf 02 00 00 00       	mov    $0x2,%edi
    b4c9:	48 0f 4c df          	cmovl  %rdi,%rbx
    b4cd:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
    b4d4:	00 
    b4d5:	e8 76 6f ff ff       	callq  2450 <malloc@plt>
    b4da:	49 89 44 24 18       	mov    %rax,0x18(%r12)
    b4df:	48 85 c0             	test   %rax,%rax
    b4e2:	74 21                	je     b505 <Pqueue_alloc+0x65>
    b4e4:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    b4e8:	49 89 5c 24 10       	mov    %rbx,0x10(%r12)
    b4ed:	49 89 04 24          	mov    %rax,(%r12)
    b4f1:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    b4f8:	00 00 
    b4fa:	48 83 c4 08          	add    $0x8,%rsp
    b4fe:	4c 89 e0             	mov    %r12,%rax
    b501:	5b                   	pop    %rbx
    b502:	41 5c                	pop    %r12
    b504:	c3                   	retq   
    b505:	4c 89 e7             	mov    %r12,%rdi
    b508:	45 31 e4             	xor    %r12d,%r12d
    b50b:	e8 c0 6d ff ff       	callq  22d0 <free@plt>
    b510:	eb e8                	jmp    b4fa <Pqueue_alloc+0x5a>
    b512:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b519:	00 00 00 00 
    b51d:	0f 1f 00             	nopl   (%rax)

000000000000b520 <TMqueue_alloc>:
    b520:	f3 0f 1e fa          	endbr64 
    b524:	41 54                	push   %r12
    b526:	53                   	push   %rbx
    b527:	48 89 fb             	mov    %rdi,%rbx
    b52a:	bf 20 00 00 00       	mov    $0x20,%edi
    b52f:	48 83 ec 08          	sub    $0x8,%rsp
    b533:	e8 18 cb 00 00       	callq  18050 <stm_malloc>
    b538:	49 89 c4             	mov    %rax,%r12
    b53b:	48 85 c0             	test   %rax,%rax
    b53e:	74 3a                	je     b57a <TMqueue_alloc+0x5a>
    b540:	48 83 fb 02          	cmp    $0x2,%rbx
    b544:	bf 02 00 00 00       	mov    $0x2,%edi
    b549:	48 0f 4c df          	cmovl  %rdi,%rbx
    b54d:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
    b554:	00 
    b555:	e8 f6 ca 00 00       	callq  18050 <stm_malloc>
    b55a:	49 89 44 24 18       	mov    %rax,0x18(%r12)
    b55f:	48 85 c0             	test   %rax,%rax
    b562:	74 24                	je     b588 <TMqueue_alloc+0x68>
    b564:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    b568:	49 89 5c 24 10       	mov    %rbx,0x10(%r12)
    b56d:	49 89 04 24          	mov    %rax,(%r12)
    b571:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    b578:	00 00 
    b57a:	48 83 c4 08          	add    $0x8,%rsp
    b57e:	4c 89 e0             	mov    %r12,%rax
    b581:	5b                   	pop    %rbx
    b582:	41 5c                	pop    %r12
    b584:	c3                   	retq   
    b585:	0f 1f 00             	nopl   (%rax)
    b588:	4c 89 e7             	mov    %r12,%rdi
    b58b:	45 31 e4             	xor    %r12d,%r12d
    b58e:	e8 3d 6d ff ff       	callq  22d0 <free@plt>
    b593:	eb e5                	jmp    b57a <TMqueue_alloc+0x5a>
    b595:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b59c:	00 00 00 00 

000000000000b5a0 <queue_free>:
    b5a0:	f3 0f 1e fa          	endbr64 
    b5a4:	55                   	push   %rbp
    b5a5:	48 89 fd             	mov    %rdi,%rbp
    b5a8:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    b5ac:	e8 1f 6d ff ff       	callq  22d0 <free@plt>
    b5b1:	48 89 ef             	mov    %rbp,%rdi
    b5b4:	5d                   	pop    %rbp
    b5b5:	e9 16 6d ff ff       	jmpq   22d0 <free@plt>
    b5ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b5c0 <Pqueue_free>:
    b5c0:	f3 0f 1e fa          	endbr64 
    b5c4:	55                   	push   %rbp
    b5c5:	48 89 fd             	mov    %rdi,%rbp
    b5c8:	48 8b 7f 18          	mov    0x18(%rdi),%rdi
    b5cc:	e8 ff 6c ff ff       	callq  22d0 <free@plt>
    b5d1:	48 89 ef             	mov    %rbp,%rdi
    b5d4:	5d                   	pop    %rbp
    b5d5:	e9 f6 6c ff ff       	jmpq   22d0 <free@plt>
    b5da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b5e0 <TMqueue_free>:
    b5e0:	f3 0f 1e fa          	endbr64 
    b5e4:	55                   	push   %rbp
    b5e5:	48 89 fd             	mov    %rdi,%rbp
    b5e8:	48 8d 7f 18          	lea    0x18(%rdi),%rdi
    b5ec:	e8 6f 5a 00 00       	callq  11060 <stm_load_ptr>
    b5f1:	be 08 00 00 00       	mov    $0x8,%esi
    b5f6:	48 89 c7             	mov    %rax,%rdi
    b5f9:	e8 72 cf 00 00       	callq  18570 <stm_free>
    b5fe:	48 89 ef             	mov    %rbp,%rdi
    b601:	be 08 00 00 00       	mov    $0x8,%esi
    b606:	5d                   	pop    %rbp
    b607:	e9 64 cf 00 00       	jmpq   18570 <stm_free>
    b60c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b610 <queue_isEmpty>:
    b610:	f3 0f 1e fa          	endbr64 
    b614:	48 8b 07             	mov    (%rdi),%rax
    b617:	48 83 c0 01          	add    $0x1,%rax
    b61b:	48 99                	cqto   
    b61d:	48 f7 7f 10          	idivq  0x10(%rdi)
    b621:	31 c0                	xor    %eax,%eax
    b623:	48 3b 57 08          	cmp    0x8(%rdi),%rdx
    b627:	0f 94 c0             	sete   %al
    b62a:	c3                   	retq   
    b62b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b630 <queue_clear>:
    b630:	f3 0f 1e fa          	endbr64 
    b634:	48 8b 47 10          	mov    0x10(%rdi),%rax
    b638:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    b63f:	00 
    b640:	48 83 e8 01          	sub    $0x1,%rax
    b644:	48 89 07             	mov    %rax,(%rdi)
    b647:	c3                   	retq   
    b648:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b64f:	00 

000000000000b650 <TMqueue_isEmpty>:
    b650:	f3 0f 1e fa          	endbr64 
    b654:	41 54                	push   %r12
    b656:	55                   	push   %rbp
    b657:	53                   	push   %rbx
    b658:	48 89 fb             	mov    %rdi,%rbx
    b65b:	e8 20 37 00 00       	callq  ed80 <stm_load>
    b660:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
    b664:	48 89 c5             	mov    %rax,%rbp
    b667:	e8 14 37 00 00       	callq  ed80 <stm_load>
    b66c:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    b670:	49 89 c4             	mov    %rax,%r12
    b673:	e8 08 37 00 00       	callq  ed80 <stm_load>
    b678:	5b                   	pop    %rbx
    b679:	49 89 c0             	mov    %rax,%r8
    b67c:	48 8d 45 01          	lea    0x1(%rbp),%rax
    b680:	5d                   	pop    %rbp
    b681:	48 99                	cqto   
    b683:	49 f7 f8             	idiv   %r8
    b686:	31 c0                	xor    %eax,%eax
    b688:	4c 39 e2             	cmp    %r12,%rdx
    b68b:	41 5c                	pop    %r12
    b68d:	0f 94 c0             	sete   %al
    b690:	c3                   	retq   
    b691:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b698:	00 00 00 00 
    b69c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b6a0 <queue_shuffle>:
    b6a0:	f3 0f 1e fa          	endbr64 
    b6a4:	41 57                	push   %r15
    b6a6:	41 56                	push   %r14
    b6a8:	41 55                	push   %r13
    b6aa:	41 54                	push   %r12
    b6ac:	55                   	push   %rbp
    b6ad:	48 89 f5             	mov    %rsi,%rbp
    b6b0:	53                   	push   %rbx
    b6b1:	48 83 ec 18          	sub    $0x18,%rsp
    b6b5:	48 8b 07             	mov    (%rdi),%rax
    b6b8:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    b6bc:	48 8b 5f 10          	mov    0x10(%rdi),%rbx
    b6c0:	4c 8d 60 01          	lea    0x1(%rax),%r12
    b6c4:	4c 39 f0             	cmp    %r14,%rax
    b6c7:	0f 8d 83 00 00 00    	jge    b750 <queue_shuffle+0xb0>
    b6cd:	4d 29 e6             	sub    %r12,%r14
    b6d0:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    b6d4:	45 31 ff             	xor    %r15d,%r15d
    b6d7:	4d 85 f6             	test   %r14,%r14
    b6da:	7e 5f                	jle    b73b <queue_shuffle+0x9b>
    b6dc:	0f 1f 40 00          	nopl   0x0(%rax)
    b6e0:	48 89 ef             	mov    %rbp,%rdi
    b6e3:	49 83 c7 01          	add    $0x1,%r15
    b6e7:	e8 74 0b 00 00       	callq  c260 <random_generate>
    b6ec:	48 89 ef             	mov    %rbp,%rdi
    b6ef:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b6f4:	e8 67 0b 00 00       	callq  c260 <random_generate>
    b6f9:	31 d2                	xor    %edx,%edx
    b6fb:	49 89 c0             	mov    %rax,%r8
    b6fe:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b703:	49 f7 f6             	div    %r14
    b706:	4a 8d 04 22          	lea    (%rdx,%r12,1),%rax
    b70a:	48 99                	cqto   
    b70c:	48 f7 fb             	idiv   %rbx
    b70f:	4c 89 c0             	mov    %r8,%rax
    b712:	49 8d 74 d5 00       	lea    0x0(%r13,%rdx,8),%rsi
    b717:	31 d2                	xor    %edx,%edx
    b719:	49 f7 f6             	div    %r14
    b71c:	48 8b 3e             	mov    (%rsi),%rdi
    b71f:	4a 8d 04 22          	lea    (%rdx,%r12,1),%rax
    b723:	48 99                	cqto   
    b725:	48 f7 fb             	idiv   %rbx
    b728:	49 8d 44 d5 00       	lea    0x0(%r13,%rdx,8),%rax
    b72d:	48 8b 10             	mov    (%rax),%rdx
    b730:	48 89 16             	mov    %rdx,(%rsi)
    b733:	48 89 38             	mov    %rdi,(%rax)
    b736:	4d 39 fe             	cmp    %r15,%r14
    b739:	75 a5                	jne    b6e0 <queue_shuffle+0x40>
    b73b:	48 83 c4 18          	add    $0x18,%rsp
    b73f:	5b                   	pop    %rbx
    b740:	5d                   	pop    %rbp
    b741:	41 5c                	pop    %r12
    b743:	41 5d                	pop    %r13
    b745:	41 5e                	pop    %r14
    b747:	41 5f                	pop    %r15
    b749:	c3                   	retq   
    b74a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b750:	4c 29 f0             	sub    %r14,%rax
    b753:	49 89 de             	mov    %rbx,%r14
    b756:	48 83 c0 01          	add    $0x1,%rax
    b75a:	49 29 c6             	sub    %rax,%r14
    b75d:	e9 6e ff ff ff       	jmpq   b6d0 <queue_shuffle+0x30>
    b762:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    b769:	00 00 00 00 
    b76d:	0f 1f 00             	nopl   (%rax)

000000000000b770 <queue_push>:
    b770:	f3 0f 1e fa          	endbr64 
    b774:	41 57                	push   %r15
    b776:	41 56                	push   %r14
    b778:	41 55                	push   %r13
    b77a:	41 54                	push   %r12
    b77c:	55                   	push   %rbp
    b77d:	53                   	push   %rbx
    b77e:	48 83 ec 18          	sub    $0x18,%rsp
    b782:	4c 8b 2f             	mov    (%rdi),%r13
    b785:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    b789:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    b78d:	49 39 ed             	cmp    %rbp,%r13
    b790:	0f 84 fa 02 00 00    	je     ba90 <queue_push+0x320>
    b796:	48 8d 45 01          	lea    0x1(%rbp),%rax
    b79a:	48 89 fb             	mov    %rdi,%rbx
    b79d:	48 99                	cqto   
    b79f:	49 f7 fc             	idiv   %r12
    b7a2:	49 39 d5             	cmp    %rdx,%r13
    b7a5:	74 29                	je     b7d0 <queue_push+0x60>
    b7a7:	48 8b 47 18          	mov    0x18(%rdi),%rax
    b7ab:	4c 8d 2c e8          	lea    (%rax,%rbp,8),%r13
    b7af:	49 89 75 00          	mov    %rsi,0x0(%r13)
    b7b3:	b8 01 00 00 00       	mov    $0x1,%eax
    b7b8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    b7bc:	48 83 c4 18          	add    $0x18,%rsp
    b7c0:	5b                   	pop    %rbx
    b7c1:	5d                   	pop    %rbp
    b7c2:	41 5c                	pop    %r12
    b7c4:	41 5d                	pop    %r13
    b7c6:	41 5e                	pop    %r14
    b7c8:	41 5f                	pop    %r15
    b7ca:	c3                   	retq   
    b7cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b7d0:	4c 89 e7             	mov    %r12,%rdi
    b7d3:	48 89 34 24          	mov    %rsi,(%rsp)
    b7d7:	4f 8d 34 24          	lea    (%r12,%r12,1),%r14
    b7db:	48 c1 e7 04          	shl    $0x4,%rdi
    b7df:	e8 6c 6c ff ff       	callq  2450 <malloc@plt>
    b7e4:	49 89 c7             	mov    %rax,%r15
    b7e7:	48 85 c0             	test   %rax,%rax
    b7ea:	0f 84 bf 02 00 00    	je     baaf <queue_push+0x33f>
    b7f0:	49 39 ed             	cmp    %rbp,%r13
    b7f3:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    b7f7:	48 8b 34 24          	mov    (%rsp),%rsi
    b7fb:	49 8d 45 01          	lea    0x1(%r13),%rax
    b7ff:	0f 8d 9b 00 00 00    	jge    b8a0 <queue_push+0x130>
    b805:	48 39 c5             	cmp    %rax,%rbp
    b808:	0f 8e 62 02 00 00    	jle    ba70 <queue_push+0x300>
    b80e:	4a 8d 14 ed 18 00 00 	lea    0x18(,%r13,8),%rdx
    b815:	00 
    b816:	49 8d 4f 10          	lea    0x10(%r15),%rcx
    b81a:	4c 8d 44 17 f0       	lea    -0x10(%rdi,%rdx,1),%r8
    b81f:	49 39 c8             	cmp    %rcx,%r8
    b822:	0f 93 c1             	setae  %cl
    b825:	48 01 fa             	add    %rdi,%rdx
    b828:	49 39 d7             	cmp    %rdx,%r15
    b82b:	0f 93 c2             	setae  %dl
    b82e:	08 d1                	or     %dl,%cl
    b830:	0f 84 0a 02 00 00    	je     ba40 <queue_push+0x2d0>
    b836:	48 8d 55 fe          	lea    -0x2(%rbp),%rdx
    b83a:	4c 29 ea             	sub    %r13,%rdx
    b83d:	48 83 fa 03          	cmp    $0x3,%rdx
    b841:	0f 86 f9 01 00 00    	jbe    ba40 <queue_push+0x2d0>
    b847:	48 83 ed 01          	sub    $0x1,%rbp
    b84b:	31 d2                	xor    %edx,%edx
    b84d:	49 89 e9             	mov    %rbp,%r9
    b850:	4d 29 e9             	sub    %r13,%r9
    b853:	4c 89 c9             	mov    %r9,%rcx
    b856:	48 d1 e9             	shr    %rcx
    b859:	48 c1 e1 04          	shl    $0x4,%rcx
    b85d:	0f 1f 00             	nopl   (%rax)
    b860:	f3 41 0f 6f 04 10    	movdqu (%r8,%rdx,1),%xmm0
    b866:	41 0f 11 04 17       	movups %xmm0,(%r15,%rdx,1)
    b86b:	48 83 c2 10          	add    $0x10,%rdx
    b86f:	48 39 ca             	cmp    %rcx,%rdx
    b872:	75 ec                	jne    b860 <queue_push+0xf0>
    b874:	4c 89 ca             	mov    %r9,%rdx
    b877:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    b87b:	48 01 d0             	add    %rdx,%rax
    b87e:	49 39 d1             	cmp    %rdx,%r9
    b881:	74 08                	je     b88b <queue_push+0x11b>
    b883:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    b887:	49 89 04 d7          	mov    %rax,(%r15,%rdx,8)
    b88b:	4c 29 ed             	sub    %r13,%rbp
    b88e:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    b892:	4d 8d 2c ef          	lea    (%r15,%rbp,8),%r13
    b896:	e9 1b 01 00 00       	jmpq   b9b6 <queue_push+0x246>
    b89b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b8a0:	49 39 c4             	cmp    %rax,%r12
    b8a3:	0f 8e d7 01 00 00    	jle    ba80 <queue_push+0x310>
    b8a9:	4a 8d 14 ed 18 00 00 	lea    0x18(,%r13,8),%rdx
    b8b0:	00 
    b8b1:	4c 8d 44 17 f0       	lea    -0x10(%rdi,%rdx,1),%r8
    b8b6:	48 01 fa             	add    %rdi,%rdx
    b8b9:	49 39 d7             	cmp    %rdx,%r15
    b8bc:	49 8d 57 10          	lea    0x10(%r15),%rdx
    b8c0:	0f 93 c1             	setae  %cl
    b8c3:	49 39 d0             	cmp    %rdx,%r8
    b8c6:	0f 93 c2             	setae  %dl
    b8c9:	08 d1                	or     %dl,%cl
    b8cb:	0f 84 17 01 00 00    	je     b9e8 <queue_push+0x278>
    b8d1:	49 8d 54 24 fe       	lea    -0x2(%r12),%rdx
    b8d6:	4c 29 ea             	sub    %r13,%rdx
    b8d9:	48 83 fa 03          	cmp    $0x3,%rdx
    b8dd:	0f 86 05 01 00 00    	jbe    b9e8 <queue_push+0x278>
    b8e3:	49 83 ec 01          	sub    $0x1,%r12
    b8e7:	31 d2                	xor    %edx,%edx
    b8e9:	4d 89 e1             	mov    %r12,%r9
    b8ec:	4d 29 e9             	sub    %r13,%r9
    b8ef:	4c 89 c9             	mov    %r9,%rcx
    b8f2:	48 d1 e9             	shr    %rcx
    b8f5:	48 c1 e1 04          	shl    $0x4,%rcx
    b8f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b900:	f3 41 0f 6f 0c 10    	movdqu (%r8,%rdx,1),%xmm1
    b906:	41 0f 11 0c 17       	movups %xmm1,(%r15,%rdx,1)
    b90b:	48 83 c2 10          	add    $0x10,%rdx
    b90f:	48 39 d1             	cmp    %rdx,%rcx
    b912:	75 ec                	jne    b900 <queue_push+0x190>
    b914:	4c 89 ca             	mov    %r9,%rdx
    b917:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    b91b:	48 01 d0             	add    %rdx,%rax
    b91e:	49 39 d1             	cmp    %rdx,%r9
    b921:	74 08                	je     b92b <queue_push+0x1bb>
    b923:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    b927:	49 89 04 d7          	mov    %rax,(%r15,%rdx,8)
    b92b:	4d 29 ec             	sub    %r13,%r12
    b92e:	4f 8d 2c e7          	lea    (%r15,%r12,8),%r13
    b932:	49 8d 54 24 01       	lea    0x1(%r12),%rdx
    b937:	48 85 ed             	test   %rbp,%rbp
    b93a:	7e 7a                	jle    b9b6 <queue_push+0x246>
    b93c:	48 8d 47 10          	lea    0x10(%rdi),%rax
    b940:	4b 8d 14 e7          	lea    (%r15,%r12,8),%rdx
    b944:	48 39 c2             	cmp    %rax,%rdx
    b947:	4b 8d 44 e7 10       	lea    0x10(%r15,%r12,8),%rax
    b94c:	0f 93 c1             	setae  %cl
    b94f:	48 39 c7             	cmp    %rax,%rdi
    b952:	0f 93 c0             	setae  %al
    b955:	08 c1                	or     %al,%cl
    b957:	0f 84 bb 00 00 00    	je     ba18 <queue_push+0x2a8>
    b95d:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    b961:	48 83 f8 03          	cmp    $0x3,%rax
    b965:	0f 86 ad 00 00 00    	jbe    ba18 <queue_push+0x2a8>
    b96b:	48 89 e9             	mov    %rbp,%rcx
    b96e:	31 c0                	xor    %eax,%eax
    b970:	48 d1 e9             	shr    %rcx
    b973:	48 c1 e1 04          	shl    $0x4,%rcx
    b977:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b97e:	00 00 
    b980:	f3 0f 6f 14 07       	movdqu (%rdi,%rax,1),%xmm2
    b985:	0f 11 14 02          	movups %xmm2,(%rdx,%rax,1)
    b989:	48 83 c0 10          	add    $0x10,%rax
    b98d:	48 39 c8             	cmp    %rcx,%rax
    b990:	75 ee                	jne    b980 <queue_push+0x210>
    b992:	48 89 e8             	mov    %rbp,%rax
    b995:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    b999:	4a 8d 14 20          	lea    (%rax,%r12,1),%rdx
    b99d:	48 39 c5             	cmp    %rax,%rbp
    b9a0:	74 08                	je     b9aa <queue_push+0x23a>
    b9a2:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    b9a6:	49 89 04 d7          	mov    %rax,(%r15,%rdx,8)
    b9aa:	49 01 ec             	add    %rbp,%r12
    b9ad:	49 8d 54 24 01       	lea    0x1(%r12),%rdx
    b9b2:	4f 8d 2c e7          	lea    (%r15,%r12,8),%r13
    b9b6:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    b9bb:	48 89 14 24          	mov    %rdx,(%rsp)
    b9bf:	e8 0c 69 ff ff       	callq  22d0 <free@plt>
    b9c4:	49 8d 46 ff          	lea    -0x1(%r14),%rax
    b9c8:	4c 89 7b 18          	mov    %r15,0x18(%rbx)
    b9cc:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    b9d1:	48 89 03             	mov    %rax,(%rbx)
    b9d4:	48 8b 14 24          	mov    (%rsp),%rdx
    b9d8:	4c 89 73 10          	mov    %r14,0x10(%rbx)
    b9dc:	e9 ce fd ff ff       	jmpq   b7af <queue_push+0x3f>
    b9e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b9e8:	4c 89 ea             	mov    %r13,%rdx
    b9eb:	48 f7 da             	neg    %rdx
    b9ee:	49 8d 0c d7          	lea    (%r15,%rdx,8),%rcx
    b9f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b9f8:	48 8b 14 c7          	mov    (%rdi,%rax,8),%rdx
    b9fc:	48 89 54 c1 f8       	mov    %rdx,-0x8(%rcx,%rax,8)
    ba01:	48 83 c0 01          	add    $0x1,%rax
    ba05:	49 39 c4             	cmp    %rax,%r12
    ba08:	75 ee                	jne    b9f8 <queue_push+0x288>
    ba0a:	49 83 ec 01          	sub    $0x1,%r12
    ba0e:	e9 18 ff ff ff       	jmpq   b92b <queue_push+0x1bb>
    ba13:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ba18:	31 c0                	xor    %eax,%eax
    ba1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ba20:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    ba24:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    ba28:	48 83 c0 01          	add    $0x1,%rax
    ba2c:	48 39 c5             	cmp    %rax,%rbp
    ba2f:	75 ef                	jne    ba20 <queue_push+0x2b0>
    ba31:	e9 74 ff ff ff       	jmpq   b9aa <queue_push+0x23a>
    ba36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ba3d:	00 00 00 
    ba40:	4c 89 ea             	mov    %r13,%rdx
    ba43:	48 f7 da             	neg    %rdx
    ba46:	49 8d 0c d7          	lea    (%r15,%rdx,8),%rcx
    ba4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ba50:	48 8b 14 c7          	mov    (%rdi,%rax,8),%rdx
    ba54:	48 89 54 c1 f8       	mov    %rdx,-0x8(%rcx,%rax,8)
    ba59:	48 83 c0 01          	add    $0x1,%rax
    ba5d:	48 39 e8             	cmp    %rbp,%rax
    ba60:	75 ee                	jne    ba50 <queue_push+0x2e0>
    ba62:	48 8d 68 ff          	lea    -0x1(%rax),%rbp
    ba66:	e9 20 fe ff ff       	jmpq   b88b <queue_push+0x11b>
    ba6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ba70:	4d 89 fd             	mov    %r15,%r13
    ba73:	ba 01 00 00 00       	mov    $0x1,%edx
    ba78:	e9 39 ff ff ff       	jmpq   b9b6 <queue_push+0x246>
    ba7d:	0f 1f 00             	nopl   (%rax)
    ba80:	4d 89 fd             	mov    %r15,%r13
    ba83:	ba 01 00 00 00       	mov    $0x1,%edx
    ba88:	45 31 e4             	xor    %r12d,%r12d
    ba8b:	e9 a7 fe ff ff       	jmpq   b937 <queue_push+0x1c7>
    ba90:	48 8d 0d e1 e2 00 00 	lea    0xe2e1(%rip),%rcx        # 19d78 <__PRETTY_FUNCTION__.4435>
    ba97:	ba 22 01 00 00       	mov    $0x122,%edx
    ba9c:	48 8d 35 95 e2 00 00 	lea    0xe295(%rip),%rsi        # 19d38 <mag01.2566+0x38>
    baa3:	48 8d 3d 9d e2 00 00 	lea    0xe29d(%rip),%rdi        # 19d47 <mag01.2566+0x47>
    baaa:	e8 f1 68 ff ff       	callq  23a0 <__assert_fail@plt>
    baaf:	31 c0                	xor    %eax,%eax
    bab1:	e9 06 fd ff ff       	jmpq   b7bc <queue_push+0x4c>
    bab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    babd:	00 00 00 

000000000000bac0 <Pqueue_push>:
    bac0:	f3 0f 1e fa          	endbr64 
    bac4:	41 57                	push   %r15
    bac6:	41 56                	push   %r14
    bac8:	41 55                	push   %r13
    baca:	41 54                	push   %r12
    bacc:	55                   	push   %rbp
    bacd:	53                   	push   %rbx
    bace:	48 83 ec 18          	sub    $0x18,%rsp
    bad2:	4c 8b 2f             	mov    (%rdi),%r13
    bad5:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    bad9:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    badd:	49 39 ed             	cmp    %rbp,%r13
    bae0:	0f 84 fa 02 00 00    	je     bde0 <Pqueue_push+0x320>
    bae6:	48 8d 45 01          	lea    0x1(%rbp),%rax
    baea:	48 89 fb             	mov    %rdi,%rbx
    baed:	48 99                	cqto   
    baef:	49 f7 fc             	idiv   %r12
    baf2:	49 39 d5             	cmp    %rdx,%r13
    baf5:	74 29                	je     bb20 <Pqueue_push+0x60>
    baf7:	48 8b 47 18          	mov    0x18(%rdi),%rax
    bafb:	4c 8d 2c e8          	lea    (%rax,%rbp,8),%r13
    baff:	49 89 75 00          	mov    %rsi,0x0(%r13)
    bb03:	b8 01 00 00 00       	mov    $0x1,%eax
    bb08:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    bb0c:	48 83 c4 18          	add    $0x18,%rsp
    bb10:	5b                   	pop    %rbx
    bb11:	5d                   	pop    %rbp
    bb12:	41 5c                	pop    %r12
    bb14:	41 5d                	pop    %r13
    bb16:	41 5e                	pop    %r14
    bb18:	41 5f                	pop    %r15
    bb1a:	c3                   	retq   
    bb1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bb20:	4c 89 e7             	mov    %r12,%rdi
    bb23:	48 89 34 24          	mov    %rsi,(%rsp)
    bb27:	4f 8d 34 24          	lea    (%r12,%r12,1),%r14
    bb2b:	48 c1 e7 04          	shl    $0x4,%rdi
    bb2f:	e8 1c 69 ff ff       	callq  2450 <malloc@plt>
    bb34:	49 89 c7             	mov    %rax,%r15
    bb37:	48 85 c0             	test   %rax,%rax
    bb3a:	0f 84 bf 02 00 00    	je     bdff <Pqueue_push+0x33f>
    bb40:	49 39 ed             	cmp    %rbp,%r13
    bb43:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    bb47:	48 8b 34 24          	mov    (%rsp),%rsi
    bb4b:	49 8d 45 01          	lea    0x1(%r13),%rax
    bb4f:	0f 8d 9b 00 00 00    	jge    bbf0 <Pqueue_push+0x130>
    bb55:	48 39 c5             	cmp    %rax,%rbp
    bb58:	0f 8e 62 02 00 00    	jle    bdc0 <Pqueue_push+0x300>
    bb5e:	4a 8d 14 ed 18 00 00 	lea    0x18(,%r13,8),%rdx
    bb65:	00 
    bb66:	49 8d 4f 10          	lea    0x10(%r15),%rcx
    bb6a:	4c 8d 44 17 f0       	lea    -0x10(%rdi,%rdx,1),%r8
    bb6f:	49 39 c8             	cmp    %rcx,%r8
    bb72:	0f 93 c1             	setae  %cl
    bb75:	48 01 fa             	add    %rdi,%rdx
    bb78:	49 39 d7             	cmp    %rdx,%r15
    bb7b:	0f 93 c2             	setae  %dl
    bb7e:	08 d1                	or     %dl,%cl
    bb80:	0f 84 0a 02 00 00    	je     bd90 <Pqueue_push+0x2d0>
    bb86:	48 8d 55 fe          	lea    -0x2(%rbp),%rdx
    bb8a:	4c 29 ea             	sub    %r13,%rdx
    bb8d:	48 83 fa 03          	cmp    $0x3,%rdx
    bb91:	0f 86 f9 01 00 00    	jbe    bd90 <Pqueue_push+0x2d0>
    bb97:	48 83 ed 01          	sub    $0x1,%rbp
    bb9b:	31 d2                	xor    %edx,%edx
    bb9d:	49 89 e9             	mov    %rbp,%r9
    bba0:	4d 29 e9             	sub    %r13,%r9
    bba3:	4c 89 c9             	mov    %r9,%rcx
    bba6:	48 d1 e9             	shr    %rcx
    bba9:	48 c1 e1 04          	shl    $0x4,%rcx
    bbad:	0f 1f 00             	nopl   (%rax)
    bbb0:	f3 41 0f 6f 04 10    	movdqu (%r8,%rdx,1),%xmm0
    bbb6:	41 0f 11 04 17       	movups %xmm0,(%r15,%rdx,1)
    bbbb:	48 83 c2 10          	add    $0x10,%rdx
    bbbf:	48 39 ca             	cmp    %rcx,%rdx
    bbc2:	75 ec                	jne    bbb0 <Pqueue_push+0xf0>
    bbc4:	4c 89 ca             	mov    %r9,%rdx
    bbc7:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    bbcb:	48 01 d0             	add    %rdx,%rax
    bbce:	49 39 d1             	cmp    %rdx,%r9
    bbd1:	74 08                	je     bbdb <Pqueue_push+0x11b>
    bbd3:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    bbd7:	49 89 04 d7          	mov    %rax,(%r15,%rdx,8)
    bbdb:	4c 29 ed             	sub    %r13,%rbp
    bbde:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    bbe2:	4d 8d 2c ef          	lea    (%r15,%rbp,8),%r13
    bbe6:	e9 1b 01 00 00       	jmpq   bd06 <Pqueue_push+0x246>
    bbeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bbf0:	49 39 c4             	cmp    %rax,%r12
    bbf3:	0f 8e d7 01 00 00    	jle    bdd0 <Pqueue_push+0x310>
    bbf9:	4a 8d 14 ed 18 00 00 	lea    0x18(,%r13,8),%rdx
    bc00:	00 
    bc01:	4c 8d 44 17 f0       	lea    -0x10(%rdi,%rdx,1),%r8
    bc06:	48 01 fa             	add    %rdi,%rdx
    bc09:	49 39 d7             	cmp    %rdx,%r15
    bc0c:	49 8d 57 10          	lea    0x10(%r15),%rdx
    bc10:	0f 93 c1             	setae  %cl
    bc13:	49 39 d0             	cmp    %rdx,%r8
    bc16:	0f 93 c2             	setae  %dl
    bc19:	08 d1                	or     %dl,%cl
    bc1b:	0f 84 17 01 00 00    	je     bd38 <Pqueue_push+0x278>
    bc21:	49 8d 54 24 fe       	lea    -0x2(%r12),%rdx
    bc26:	4c 29 ea             	sub    %r13,%rdx
    bc29:	48 83 fa 03          	cmp    $0x3,%rdx
    bc2d:	0f 86 05 01 00 00    	jbe    bd38 <Pqueue_push+0x278>
    bc33:	49 83 ec 01          	sub    $0x1,%r12
    bc37:	31 d2                	xor    %edx,%edx
    bc39:	4d 89 e1             	mov    %r12,%r9
    bc3c:	4d 29 e9             	sub    %r13,%r9
    bc3f:	4c 89 c9             	mov    %r9,%rcx
    bc42:	48 d1 e9             	shr    %rcx
    bc45:	48 c1 e1 04          	shl    $0x4,%rcx
    bc49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bc50:	f3 41 0f 6f 0c 10    	movdqu (%r8,%rdx,1),%xmm1
    bc56:	41 0f 11 0c 17       	movups %xmm1,(%r15,%rdx,1)
    bc5b:	48 83 c2 10          	add    $0x10,%rdx
    bc5f:	48 39 d1             	cmp    %rdx,%rcx
    bc62:	75 ec                	jne    bc50 <Pqueue_push+0x190>
    bc64:	4c 89 ca             	mov    %r9,%rdx
    bc67:	48 83 e2 fe          	and    $0xfffffffffffffffe,%rdx
    bc6b:	48 01 d0             	add    %rdx,%rax
    bc6e:	49 39 d1             	cmp    %rdx,%r9
    bc71:	74 08                	je     bc7b <Pqueue_push+0x1bb>
    bc73:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    bc77:	49 89 04 d7          	mov    %rax,(%r15,%rdx,8)
    bc7b:	4d 29 ec             	sub    %r13,%r12
    bc7e:	4f 8d 2c e7          	lea    (%r15,%r12,8),%r13
    bc82:	49 8d 54 24 01       	lea    0x1(%r12),%rdx
    bc87:	48 85 ed             	test   %rbp,%rbp
    bc8a:	7e 7a                	jle    bd06 <Pqueue_push+0x246>
    bc8c:	48 8d 47 10          	lea    0x10(%rdi),%rax
    bc90:	4b 8d 14 e7          	lea    (%r15,%r12,8),%rdx
    bc94:	48 39 c2             	cmp    %rax,%rdx
    bc97:	4b 8d 44 e7 10       	lea    0x10(%r15,%r12,8),%rax
    bc9c:	0f 93 c1             	setae  %cl
    bc9f:	48 39 c7             	cmp    %rax,%rdi
    bca2:	0f 93 c0             	setae  %al
    bca5:	08 c1                	or     %al,%cl
    bca7:	0f 84 bb 00 00 00    	je     bd68 <Pqueue_push+0x2a8>
    bcad:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    bcb1:	48 83 f8 03          	cmp    $0x3,%rax
    bcb5:	0f 86 ad 00 00 00    	jbe    bd68 <Pqueue_push+0x2a8>
    bcbb:	48 89 e9             	mov    %rbp,%rcx
    bcbe:	31 c0                	xor    %eax,%eax
    bcc0:	48 d1 e9             	shr    %rcx
    bcc3:	48 c1 e1 04          	shl    $0x4,%rcx
    bcc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bcce:	00 00 
    bcd0:	f3 0f 6f 14 07       	movdqu (%rdi,%rax,1),%xmm2
    bcd5:	0f 11 14 02          	movups %xmm2,(%rdx,%rax,1)
    bcd9:	48 83 c0 10          	add    $0x10,%rax
    bcdd:	48 39 c8             	cmp    %rcx,%rax
    bce0:	75 ee                	jne    bcd0 <Pqueue_push+0x210>
    bce2:	48 89 e8             	mov    %rbp,%rax
    bce5:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    bce9:	4a 8d 14 20          	lea    (%rax,%r12,1),%rdx
    bced:	48 39 c5             	cmp    %rax,%rbp
    bcf0:	74 08                	je     bcfa <Pqueue_push+0x23a>
    bcf2:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    bcf6:	49 89 04 d7          	mov    %rax,(%r15,%rdx,8)
    bcfa:	49 01 ec             	add    %rbp,%r12
    bcfd:	49 8d 54 24 01       	lea    0x1(%r12),%rdx
    bd02:	4f 8d 2c e7          	lea    (%r15,%r12,8),%r13
    bd06:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    bd0b:	48 89 14 24          	mov    %rdx,(%rsp)
    bd0f:	e8 bc 65 ff ff       	callq  22d0 <free@plt>
    bd14:	49 8d 46 ff          	lea    -0x1(%r14),%rax
    bd18:	4c 89 7b 18          	mov    %r15,0x18(%rbx)
    bd1c:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    bd21:	48 89 03             	mov    %rax,(%rbx)
    bd24:	48 8b 14 24          	mov    (%rsp),%rdx
    bd28:	4c 89 73 10          	mov    %r14,0x10(%rbx)
    bd2c:	e9 ce fd ff ff       	jmpq   baff <Pqueue_push+0x3f>
    bd31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bd38:	4c 89 ea             	mov    %r13,%rdx
    bd3b:	48 f7 da             	neg    %rdx
    bd3e:	49 8d 0c d7          	lea    (%r15,%rdx,8),%rcx
    bd42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bd48:	48 8b 14 c7          	mov    (%rdi,%rax,8),%rdx
    bd4c:	48 89 54 c1 f8       	mov    %rdx,-0x8(%rcx,%rax,8)
    bd51:	48 83 c0 01          	add    $0x1,%rax
    bd55:	49 39 c4             	cmp    %rax,%r12
    bd58:	75 ee                	jne    bd48 <Pqueue_push+0x288>
    bd5a:	49 83 ec 01          	sub    $0x1,%r12
    bd5e:	e9 18 ff ff ff       	jmpq   bc7b <Pqueue_push+0x1bb>
    bd63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bd68:	31 c0                	xor    %eax,%eax
    bd6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bd70:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    bd74:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    bd78:	48 83 c0 01          	add    $0x1,%rax
    bd7c:	48 39 c5             	cmp    %rax,%rbp
    bd7f:	75 ef                	jne    bd70 <Pqueue_push+0x2b0>
    bd81:	e9 74 ff ff ff       	jmpq   bcfa <Pqueue_push+0x23a>
    bd86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    bd8d:	00 00 00 
    bd90:	4c 89 ea             	mov    %r13,%rdx
    bd93:	48 f7 da             	neg    %rdx
    bd96:	49 8d 0c d7          	lea    (%r15,%rdx,8),%rcx
    bd9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bda0:	48 8b 14 c7          	mov    (%rdi,%rax,8),%rdx
    bda4:	48 89 54 c1 f8       	mov    %rdx,-0x8(%rcx,%rax,8)
    bda9:	48 83 c0 01          	add    $0x1,%rax
    bdad:	48 39 e8             	cmp    %rbp,%rax
    bdb0:	75 ee                	jne    bda0 <Pqueue_push+0x2e0>
    bdb2:	48 8d 68 ff          	lea    -0x1(%rax),%rbp
    bdb6:	e9 20 fe ff ff       	jmpq   bbdb <Pqueue_push+0x11b>
    bdbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bdc0:	4d 89 fd             	mov    %r15,%r13
    bdc3:	ba 01 00 00 00       	mov    $0x1,%edx
    bdc8:	e9 39 ff ff ff       	jmpq   bd06 <Pqueue_push+0x246>
    bdcd:	0f 1f 00             	nopl   (%rax)
    bdd0:	4d 89 fd             	mov    %r15,%r13
    bdd3:	ba 01 00 00 00       	mov    $0x1,%edx
    bdd8:	45 31 e4             	xor    %r12d,%r12d
    bddb:	e9 a7 fe ff ff       	jmpq   bc87 <Pqueue_push+0x1c7>
    bde0:	48 8d 0d 81 df 00 00 	lea    0xdf81(%rip),%rcx        # 19d68 <__PRETTY_FUNCTION__.4459>
    bde7:	ba 59 01 00 00       	mov    $0x159,%edx
    bdec:	48 8d 35 45 df 00 00 	lea    0xdf45(%rip),%rsi        # 19d38 <mag01.2566+0x38>
    bdf3:	48 8d 3d 4d df 00 00 	lea    0xdf4d(%rip),%rdi        # 19d47 <mag01.2566+0x47>
    bdfa:	e8 a1 65 ff ff       	callq  23a0 <__assert_fail@plt>
    bdff:	31 c0                	xor    %eax,%eax
    be01:	e9 06 fd ff ff       	jmpq   bb0c <Pqueue_push+0x4c>
    be06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    be0d:	00 00 00 

000000000000be10 <TMqueue_push>:
    be10:	f3 0f 1e fa          	endbr64 
    be14:	41 57                	push   %r15
    be16:	41 56                	push   %r14
    be18:	41 55                	push   %r13
    be1a:	41 54                	push   %r12
    be1c:	55                   	push   %rbp
    be1d:	48 89 fd             	mov    %rdi,%rbp
    be20:	53                   	push   %rbx
    be21:	4c 8d 6d 08          	lea    0x8(%rbp),%r13
    be25:	4c 8d 7d 10          	lea    0x10(%rbp),%r15
    be29:	48 83 ec 48          	sub    $0x48,%rsp
    be2d:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    be32:	e8 49 2f 00 00       	callq  ed80 <stm_load>
    be37:	4c 89 ef             	mov    %r13,%rdi
    be3a:	49 89 c6             	mov    %rax,%r14
    be3d:	e8 3e 2f 00 00       	callq  ed80 <stm_load>
    be42:	4c 89 ff             	mov    %r15,%rdi
    be45:	48 89 c3             	mov    %rax,%rbx
    be48:	e8 33 2f 00 00       	callq  ed80 <stm_load>
    be4d:	49 39 de             	cmp    %rbx,%r14
    be50:	0f 84 5d 02 00 00    	je     c0b3 <TMqueue_push+0x2a3>
    be56:	49 89 c4             	mov    %rax,%r12
    be59:	48 8d 43 01          	lea    0x1(%rbx),%rax
    be5d:	48 99                	cqto   
    be5f:	49 f7 fc             	idiv   %r12
    be62:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    be67:	49 39 d6             	cmp    %rdx,%r14
    be6a:	74 54                	je     bec0 <TMqueue_push+0xb0>
    be6c:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    be73:	00 
    be74:	4c 8d 75 18          	lea    0x18(%rbp),%r14
    be78:	49 89 d4             	mov    %rdx,%r12
    be7b:	48 89 04 24          	mov    %rax,(%rsp)
    be7f:	4c 89 f7             	mov    %r14,%rdi
    be82:	e8 d9 51 00 00       	callq  11060 <stm_load_ptr>
    be87:	48 8b 3c 24          	mov    (%rsp),%rdi
    be8b:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    be90:	48 01 c7             	add    %rax,%rdi
    be93:	e8 b8 83 00 00       	callq  14250 <stm_store_ptr>
    be98:	4c 89 e6             	mov    %r12,%rsi
    be9b:	4c 89 ef             	mov    %r13,%rdi
    be9e:	e8 9d 34 00 00       	callq  f340 <stm_store>
    bea3:	b8 01 00 00 00       	mov    $0x1,%eax
    bea8:	48 83 c4 48          	add    $0x48,%rsp
    beac:	5b                   	pop    %rbx
    bead:	5d                   	pop    %rbp
    beae:	41 5c                	pop    %r12
    beb0:	41 5d                	pop    %r13
    beb2:	41 5e                	pop    %r14
    beb4:	41 5f                	pop    %r15
    beb6:	c3                   	retq   
    beb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bebe:	00 00 
    bec0:	4c 89 e7             	mov    %r12,%rdi
    bec3:	4b 8d 04 24          	lea    (%r12,%r12,1),%rax
    bec7:	48 c1 e7 04          	shl    $0x4,%rdi
    becb:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    bed0:	e8 7b c1 00 00       	callq  18050 <stm_malloc>
    bed5:	48 89 c1             	mov    %rax,%rcx
    bed8:	31 c0                	xor    %eax,%eax
    beda:	48 89 4c 24 28       	mov    %rcx,0x28(%rsp)
    bedf:	48 85 c9             	test   %rcx,%rcx
    bee2:	74 c4                	je     bea8 <TMqueue_push+0x98>
    bee4:	4c 8d 75 18          	lea    0x18(%rbp),%r14
    bee8:	4c 89 f7             	mov    %r14,%rdi
    beeb:	e8 70 51 00 00       	callq  11060 <stm_load_ptr>
    bef0:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    bef5:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    befa:	48 89 c7             	mov    %rax,%rdi
    befd:	48 8d 46 01          	lea    0x1(%rsi),%rax
    bf01:	48 39 f3             	cmp    %rsi,%rbx
    bf04:	0f 8e 9e 00 00 00    	jle    bfa8 <TMqueue_push+0x198>
    bf0a:	48 39 c3             	cmp    %rax,%rbx
    bf0d:	0f 8e 8d 01 00 00    	jle    c0a0 <TMqueue_push+0x290>
    bf13:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    bf17:	48 8d 04 df          	lea    (%rdi,%rbx,8),%rax
    bf1b:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
    bf20:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bf25:	0f 1f 00             	nopl   (%rax)
    bf28:	48 89 d7             	mov    %rdx,%rdi
    bf2b:	48 89 14 24          	mov    %rdx,(%rsp)
    bf2f:	49 83 c4 08          	add    $0x8,%r12
    bf33:	e8 28 51 00 00       	callq  11060 <stm_load_ptr>
    bf38:	48 8b 14 24          	mov    (%rsp),%rdx
    bf3c:	49 89 44 24 f8       	mov    %rax,-0x8(%r12)
    bf41:	48 83 c2 08          	add    $0x8,%rdx
    bf45:	48 39 54 24 08       	cmp    %rdx,0x8(%rsp)
    bf4a:	75 dc                	jne    bf28 <TMqueue_push+0x118>
    bf4c:	48 83 eb 01          	sub    $0x1,%rbx
    bf50:	48 2b 5c 24 18       	sub    0x18(%rsp),%rbx
    bf55:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    bf5c:	00 
    bf5d:	4c 8d 63 01          	lea    0x1(%rbx),%r12
    bf61:	48 89 04 24          	mov    %rax,(%rsp)
    bf65:	48 8b 7c 24 30       	mov    0x30(%rsp),%rdi
    bf6a:	be 08 00 00 00       	mov    $0x8,%esi
    bf6f:	e8 fc c5 00 00       	callq  18570 <stm_free>
    bf74:	48 8b 74 24 28       	mov    0x28(%rsp),%rsi
    bf79:	4c 89 f7             	mov    %r14,%rdi
    bf7c:	e8 cf 82 00 00       	callq  14250 <stm_store_ptr>
    bf81:	48 8b 5c 24 38       	mov    0x38(%rsp),%rbx
    bf86:	48 89 ef             	mov    %rbp,%rdi
    bf89:	48 8d 73 ff          	lea    -0x1(%rbx),%rsi
    bf8d:	e8 ae 33 00 00       	callq  f340 <stm_store>
    bf92:	48 89 de             	mov    %rbx,%rsi
    bf95:	4c 89 ff             	mov    %r15,%rdi
    bf98:	e8 a3 33 00 00       	callq  f340 <stm_store>
    bf9d:	e9 dd fe ff ff       	jmpq   be7f <TMqueue_push+0x6f>
    bfa2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bfa8:	49 39 c4             	cmp    %rax,%r12
    bfab:	0f 8e cf 00 00 00    	jle    c080 <TMqueue_push+0x270>
    bfb1:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    bfb5:	4a 8d 04 e7          	lea    (%rdi,%r12,8),%rax
    bfb9:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    bfbe:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    bfc3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    bfc8:	48 89 d7             	mov    %rdx,%rdi
    bfcb:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    bfd0:	48 89 14 24          	mov    %rdx,(%rsp)
    bfd4:	e8 87 50 00 00       	callq  11060 <stm_load_ptr>
    bfd9:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    bfde:	48 8b 14 24          	mov    (%rsp),%rdx
    bfe2:	48 89 01             	mov    %rax,(%rcx)
    bfe5:	48 83 c2 08          	add    $0x8,%rdx
    bfe9:	48 83 c1 08          	add    $0x8,%rcx
    bfed:	48 3b 54 24 20       	cmp    0x20(%rsp),%rdx
    bff2:	75 d4                	jne    bfc8 <TMqueue_push+0x1b8>
    bff4:	49 83 ec 01          	sub    $0x1,%r12
    bff8:	4c 2b 64 24 18       	sub    0x18(%rsp),%r12
    bffd:	4a 8d 0c e5 00 00 00 	lea    0x0(,%r12,8),%rcx
    c004:	00 
    c005:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)
    c00a:	4d 8d 64 24 01       	lea    0x1(%r12),%r12
    c00f:	48 89 0c 24          	mov    %rcx,(%rsp)
    c013:	48 85 db             	test   %rbx,%rbx
    c016:	0f 8e 49 ff ff ff    	jle    bf65 <TMqueue_push+0x155>
    c01c:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
    c021:	48 8b 4c 24 28       	mov    0x28(%rsp),%rcx
    c026:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    c02b:	48 89 c2             	mov    %rax,%rdx
    c02e:	48 8d 04 d8          	lea    (%rax,%rbx,8),%rax
    c032:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c037:	4c 8d 24 f1          	lea    (%rcx,%rsi,8),%r12
    c03b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c040:	48 89 d7             	mov    %rdx,%rdi
    c043:	48 89 14 24          	mov    %rdx,(%rsp)
    c047:	49 83 c4 08          	add    $0x8,%r12
    c04b:	e8 10 50 00 00       	callq  11060 <stm_load_ptr>
    c050:	48 8b 14 24          	mov    (%rsp),%rdx
    c054:	49 89 44 24 f8       	mov    %rax,-0x8(%r12)
    c059:	48 83 c2 08          	add    $0x8,%rdx
    c05d:	48 39 54 24 08       	cmp    %rdx,0x8(%rsp)
    c062:	75 dc                	jne    c040 <TMqueue_push+0x230>
    c064:	48 03 5c 24 18       	add    0x18(%rsp),%rbx
    c069:	48 8d 04 dd 00 00 00 	lea    0x0(,%rbx,8),%rax
    c070:	00 
    c071:	4c 8d 63 01          	lea    0x1(%rbx),%r12
    c075:	48 89 04 24          	mov    %rax,(%rsp)
    c079:	e9 e7 fe ff ff       	jmpq   bf65 <TMqueue_push+0x155>
    c07e:	66 90                	xchg   %ax,%ax
    c080:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    c087:	00 
    c088:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    c08e:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    c095:	00 00 
    c097:	e9 77 ff ff ff       	jmpq   c013 <TMqueue_push+0x203>
    c09c:	0f 1f 40 00          	nopl   0x0(%rax)
    c0a0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    c0a7:	00 
    c0a8:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    c0ae:	e9 b2 fe ff ff       	jmpq   bf65 <TMqueue_push+0x155>
    c0b3:	48 8d 0d 9e dc 00 00 	lea    0xdc9e(%rip),%rcx        # 19d58 <__PRETTY_FUNCTION__.4483>
    c0ba:	ba 91 01 00 00       	mov    $0x191,%edx
    c0bf:	48 8d 35 72 dc 00 00 	lea    0xdc72(%rip),%rsi        # 19d38 <mag01.2566+0x38>
    c0c6:	48 8d 3d 7a dc 00 00 	lea    0xdc7a(%rip),%rdi        # 19d47 <mag01.2566+0x47>
    c0cd:	e8 ce 62 ff ff       	callq  23a0 <__assert_fail@plt>
    c0d2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    c0d9:	00 00 00 00 
    c0dd:	0f 1f 00             	nopl   (%rax)

000000000000c0e0 <queue_pop>:
    c0e0:	f3 0f 1e fa          	endbr64 
    c0e4:	48 8b 07             	mov    (%rdi),%rax
    c0e7:	48 83 c0 01          	add    $0x1,%rax
    c0eb:	48 99                	cqto   
    c0ed:	48 f7 7f 10          	idivq  0x10(%rdi)
    c0f1:	48 39 57 08          	cmp    %rdx,0x8(%rdi)
    c0f5:	74 11                	je     c108 <queue_pop+0x28>
    c0f7:	48 8b 47 18          	mov    0x18(%rdi),%rax
    c0fb:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    c0ff:	48 89 17             	mov    %rdx,(%rdi)
    c102:	c3                   	retq   
    c103:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c108:	31 c0                	xor    %eax,%eax
    c10a:	c3                   	retq   
    c10b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000c110 <TMqueue_pop>:
    c110:	f3 0f 1e fa          	endbr64 
    c114:	41 55                	push   %r13
    c116:	41 54                	push   %r12
    c118:	55                   	push   %rbp
    c119:	48 89 fd             	mov    %rdi,%rbp
    c11c:	53                   	push   %rbx
    c11d:	48 83 ec 08          	sub    $0x8,%rsp
    c121:	e8 5a 2c 00 00       	callq  ed80 <stm_load>
    c126:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    c12a:	48 89 c3             	mov    %rax,%rbx
    c12d:	e8 4e 2c 00 00       	callq  ed80 <stm_load>
    c132:	48 8d 7d 10          	lea    0x10(%rbp),%rdi
    c136:	49 89 c4             	mov    %rax,%r12
    c139:	e8 42 2c 00 00       	callq  ed80 <stm_load>
    c13e:	49 89 c0             	mov    %rax,%r8
    c141:	48 8d 43 01          	lea    0x1(%rbx),%rax
    c145:	48 99                	cqto   
    c147:	49 f7 f8             	idiv   %r8
    c14a:	49 39 d4             	cmp    %rdx,%r12
    c14d:	74 31                	je     c180 <TMqueue_pop+0x70>
    c14f:	48 8d 7d 18          	lea    0x18(%rbp),%rdi
    c153:	49 89 d5             	mov    %rdx,%r13
    c156:	e8 05 4f 00 00       	callq  11060 <stm_load_ptr>
    c15b:	4a 8d 3c e8          	lea    (%rax,%r13,8),%rdi
    c15f:	e8 fc 4e 00 00       	callq  11060 <stm_load_ptr>
    c164:	4c 89 ee             	mov    %r13,%rsi
    c167:	48 89 ef             	mov    %rbp,%rdi
    c16a:	49 89 c4             	mov    %rax,%r12
    c16d:	e8 ce 31 00 00       	callq  f340 <stm_store>
    c172:	48 83 c4 08          	add    $0x8,%rsp
    c176:	4c 89 e0             	mov    %r12,%rax
    c179:	5b                   	pop    %rbx
    c17a:	5d                   	pop    %rbp
    c17b:	41 5c                	pop    %r12
    c17d:	41 5d                	pop    %r13
    c17f:	c3                   	retq   
    c180:	48 83 c4 08          	add    $0x8,%rsp
    c184:	45 31 e4             	xor    %r12d,%r12d
    c187:	5b                   	pop    %rbx
    c188:	4c 89 e0             	mov    %r12,%rax
    c18b:	5d                   	pop    %rbp
    c18c:	41 5c                	pop    %r12
    c18e:	41 5d                	pop    %r13
    c190:	c3                   	retq   
    c191:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c198:	00 00 00 
    c19b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000c1a0 <random_alloc>:
    c1a0:	f3 0f 1e fa          	endbr64 
    c1a4:	41 54                	push   %r12
    c1a6:	bf 90 13 00 00       	mov    $0x1390,%edi
    c1ab:	e8 a0 62 ff ff       	callq  2450 <malloc@plt>
    c1b0:	49 89 c4             	mov    %rax,%r12
    c1b3:	48 85 c0             	test   %rax,%rax
    c1b6:	74 1d                	je     c1d5 <random_alloc+0x35>
    c1b8:	48 8d b0 88 13 00 00 	lea    0x1388(%rax),%rsi
    c1bf:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c1c3:	31 d2                	xor    %edx,%edx
    c1c5:	48 c7 80 88 13 00 00 	movq   $0x270,0x1388(%rax)
    c1cc:	70 02 00 00 
    c1d0:	e8 eb ed ff ff       	callq  afc0 <init_genrand>
    c1d5:	4c 89 e0             	mov    %r12,%rax
    c1d8:	41 5c                	pop    %r12
    c1da:	c3                   	retq   
    c1db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000c1e0 <Prandom_alloc>:
    c1e0:	f3 0f 1e fa          	endbr64 
    c1e4:	41 54                	push   %r12
    c1e6:	bf 90 13 00 00       	mov    $0x1390,%edi
    c1eb:	e8 60 62 ff ff       	callq  2450 <malloc@plt>
    c1f0:	49 89 c4             	mov    %rax,%r12
    c1f3:	48 85 c0             	test   %rax,%rax
    c1f6:	74 1d                	je     c215 <Prandom_alloc+0x35>
    c1f8:	48 8d b0 88 13 00 00 	lea    0x1388(%rax),%rsi
    c1ff:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c203:	31 d2                	xor    %edx,%edx
    c205:	48 c7 80 88 13 00 00 	movq   $0x270,0x1388(%rax)
    c20c:	70 02 00 00 
    c210:	e8 ab ed ff ff       	callq  afc0 <init_genrand>
    c215:	4c 89 e0             	mov    %r12,%rax
    c218:	41 5c                	pop    %r12
    c21a:	c3                   	retq   
    c21b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000c220 <random_free>:
    c220:	f3 0f 1e fa          	endbr64 
    c224:	e9 a7 60 ff ff       	jmpq   22d0 <free@plt>
    c229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c230 <Prandom_free>:
    c230:	f3 0f 1e fa          	endbr64 
    c234:	e9 97 60 ff ff       	jmpq   22d0 <free@plt>
    c239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c240 <random_seed>:
    c240:	f3 0f 1e fa          	endbr64 
    c244:	48 89 f2             	mov    %rsi,%rdx
    c247:	48 8d b7 88 13 00 00 	lea    0x1388(%rdi),%rsi
    c24e:	48 83 c7 08          	add    $0x8,%rdi
    c252:	e9 69 ed ff ff       	jmpq   afc0 <init_genrand>
    c257:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c25e:	00 00 

000000000000c260 <random_generate>:
    c260:	f3 0f 1e fa          	endbr64 
    c264:	48 8d b7 88 13 00 00 	lea    0x1388(%rdi),%rsi
    c26b:	48 83 c7 08          	add    $0x8,%rdi
    c26f:	e9 cc ee ff ff       	jmpq   b140 <genrand_int32>
    c274:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c27b:	00 00 00 
    c27e:	66 90                	xchg   %ax,%ax

000000000000c280 <thread_startup>:
    c280:	f3 0f 1e fa          	endbr64 
    c284:	41 57                	push   %r15
    c286:	41 56                	push   %r14
    c288:	41 55                	push   %r13
    c28a:	41 54                	push   %r12
    c28c:	55                   	push   %rbp
    c28d:	53                   	push   %rbx
    c28e:	48 83 ec 08          	sub    $0x8,%rsp
    c292:	48 83 3d e6 3e 01 00 	cmpq   $0x0,0x13ee6(%rip)        # 20180 <global_barrierPtr>
    c299:	00 
    c29a:	48 89 3d 87 3d 01 00 	mov    %rdi,0x13d87(%rip)        # 20028 <global_numThread>
    c2a1:	48 c7 05 74 3e 01 00 	movq   $0x0,0x13e74(%rip)        # 20120 <global_doShutdown>
    c2a8:	00 00 00 00 
    c2ac:	0f 85 db 01 00 00    	jne    c48d <thread_startup+0x20d>
    c2b2:	48 89 fd             	mov    %rdi,%rbp
    c2b5:	48 85 ff             	test   %rdi,%rdi
    c2b8:	0f 8e b3 02 00 00    	jle    c571 <thread_startup+0x2f1>
    c2be:	4c 8d 6f ff          	lea    -0x1(%rdi),%r13
    c2c2:	4d 89 ec             	mov    %r13,%r12
    c2c5:	49 21 fc             	and    %rdi,%r12
    c2c8:	0f 85 84 02 00 00    	jne    c552 <thread_startup+0x2d2>
    c2ce:	48 8d 04 ff          	lea    (%rdi,%rdi,8),%rax
    c2d2:	4c 8d 34 47          	lea    (%rdi,%rax,2),%r14
    c2d6:	49 c1 e6 03          	shl    $0x3,%r14
    c2da:	4c 89 f7             	mov    %r14,%rdi
    c2dd:	e8 6e 61 ff ff       	callq  2450 <malloc@plt>
    c2e2:	48 89 c3             	mov    %rax,%rbx
    c2e5:	48 85 c0             	test   %rax,%rax
    c2e8:	0f 84 3a 02 00 00    	je     c528 <thread_startup+0x2a8>
    c2ee:	48 89 a8 90 00 00 00 	mov    %rbp,0x90(%rax)
    c2f5:	49 01 c6             	add    %rax,%r14
    c2f8:	48 89 05 81 3e 01 00 	mov    %rax,0x13e81(%rip)        # 20180 <global_barrierPtr>
    c2ff:	90                   	nop
    c300:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
    c307:	00 00 00 00 
    c30b:	48 89 df             	mov    %rbx,%rdi
    c30e:	31 f6                	xor    %esi,%esi
    c310:	e8 4b 62 ff ff       	callq  2560 <pthread_mutex_init@plt>
    c315:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    c319:	31 f6                	xor    %esi,%esi
    c31b:	e8 00 61 ff ff       	callq  2420 <pthread_cond_init@plt>
    c320:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
    c324:	31 f6                	xor    %esi,%esi
    c326:	48 81 c3 98 00 00 00 	add    $0x98,%rbx
    c32d:	e8 ee 60 ff ff       	callq  2420 <pthread_cond_init@plt>
    c332:	4c 39 f3             	cmp    %r14,%rbx
    c335:	75 c9                	jne    c300 <thread_startup+0x80>
    c337:	31 f6                	xor    %esi,%esi
    c339:	48 8d 3d 48 3e 01 00 	lea    0x13e48(%rip),%rdi        # 20188 <global_threadId>
    c340:	e8 5b 61 ff ff       	callq  24a0 <pthread_key_create@plt>
    c345:	48 83 3d 2b 3e 01 00 	cmpq   $0x0,0x13e2b(%rip)        # 20178 <global_threadIds>
    c34c:	00 
    c34d:	0f 85 b6 01 00 00    	jne    c509 <thread_startup+0x289>
    c353:	4c 8d 3c ed 00 00 00 	lea    0x0(,%rbp,8),%r15
    c35a:	00 
    c35b:	4c 89 ff             	mov    %r15,%rdi
    c35e:	e8 ed 60 ff ff       	callq  2450 <malloc@plt>
    c363:	48 89 05 0e 3e 01 00 	mov    %rax,0x13e0e(%rip)        # 20178 <global_threadIds>
    c36a:	49 89 c6             	mov    %rax,%r14
    c36d:	48 85 c0             	test   %rax,%rax
    c370:	0f 84 74 01 00 00    	je     c4ea <thread_startup+0x26a>
    c376:	49 83 fd 02          	cmp    $0x2,%r13
    c37a:	76 46                	jbe    c3c2 <thread_startup+0x142>
    c37c:	48 89 ea             	mov    %rbp,%rdx
    c37f:	66 0f 6f 05 49 d6 00 	movdqa 0xd649(%rip),%xmm0        # 199d0 <__PRETTY_FUNCTION__.5826+0x28>
    c386:	00 
    c387:	66 0f 6f 15 51 d6 00 	movdqa 0xd651(%rip),%xmm2        # 199e0 <__PRETTY_FUNCTION__.5826+0x38>
    c38e:	00 
    c38f:	48 d1 ea             	shr    %rdx
    c392:	48 c1 e2 04          	shl    $0x4,%rdx
    c396:	48 01 c2             	add    %rax,%rdx
    c399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c3a0:	66 0f 6f c8          	movdqa %xmm0,%xmm1
    c3a4:	48 83 c0 10          	add    $0x10,%rax
    c3a8:	66 0f d4 c2          	paddq  %xmm2,%xmm0
    c3ac:	0f 11 48 f0          	movups %xmm1,-0x10(%rax)
    c3b0:	48 39 d0             	cmp    %rdx,%rax
    c3b3:	75 eb                	jne    c3a0 <thread_startup+0x120>
    c3b5:	49 89 ec             	mov    %rbp,%r12
    c3b8:	49 83 e4 fe          	and    $0xfffffffffffffffe,%r12
    c3bc:	40 f6 c5 01          	test   $0x1,%bpl
    c3c0:	74 29                	je     c3eb <thread_startup+0x16b>
    c3c2:	49 8d 44 24 01       	lea    0x1(%r12),%rax
    c3c7:	4f 89 24 e6          	mov    %r12,(%r14,%r12,8)
    c3cb:	4a 8d 14 e5 00 00 00 	lea    0x0(,%r12,8),%rdx
    c3d2:	00 
    c3d3:	48 39 c5             	cmp    %rax,%rbp
    c3d6:	7e 13                	jle    c3eb <thread_startup+0x16b>
    c3d8:	49 83 c4 02          	add    $0x2,%r12
    c3dc:	49 89 44 16 08       	mov    %rax,0x8(%r14,%rdx,1)
    c3e1:	4c 39 e5             	cmp    %r12,%rbp
    c3e4:	7e 05                	jle    c3eb <thread_startup+0x16b>
    c3e6:	4d 89 64 16 10       	mov    %r12,0x10(%r14,%rdx,1)
    c3eb:	48 83 3d 45 3d 01 00 	cmpq   $0x0,0x13d45(%rip)        # 20138 <global_threads>
    c3f2:	00 
    c3f3:	0f 85 d2 00 00 00    	jne    c4cb <thread_startup+0x24b>
    c3f9:	4c 89 ff             	mov    %r15,%rdi
    c3fc:	e8 4f 60 ff ff       	callq  2450 <malloc@plt>
    c401:	48 89 05 30 3d 01 00 	mov    %rax,0x13d30(%rip)        # 20138 <global_threads>
    c408:	49 89 c4             	mov    %rax,%r12
    c40b:	48 85 c0             	test   %rax,%rax
    c40e:	0f 84 98 00 00 00    	je     c4ac <thread_startup+0x22c>
    c414:	48 8d 3d 25 3d 01 00 	lea    0x13d25(%rip),%rdi        # 20140 <global_threadAttr>
    c41b:	e8 b0 5f ff ff       	callq  23d0 <pthread_attr_init@plt>
    c420:	48 8d 3d 19 3d 01 00 	lea    0x13d19(%rip),%rdi        # 20140 <global_threadAttr>
    c427:	48 be 00 00 00 00 04 	movabs $0x400000000,%rsi
    c42e:	00 00 00 
    c431:	e8 3a 60 ff ff       	callq  2470 <pthread_attr_setstacksize@plt>
    c436:	48 83 fd 01          	cmp    $0x1,%rbp
    c43a:	74 42                	je     c47e <thread_startup+0x1fe>
    c43c:	bb 08 00 00 00       	mov    $0x8,%ebx
    c441:	48 8d 2d d8 03 00 00 	lea    0x3d8(%rip),%rbp        # c820 <threadWait>
    c448:	eb 14                	jmp    c45e <thread_startup+0x1de>
    c44a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c450:	4c 8b 35 21 3d 01 00 	mov    0x13d21(%rip),%r14        # 20178 <global_threadIds>
    c457:	4c 8b 25 da 3c 01 00 	mov    0x13cda(%rip),%r12        # 20138 <global_threads>
    c45e:	49 8d 0c 1e          	lea    (%r14,%rbx,1),%rcx
    c462:	49 8d 3c 1c          	lea    (%r12,%rbx,1),%rdi
    c466:	48 89 ea             	mov    %rbp,%rdx
    c469:	48 83 c3 08          	add    $0x8,%rbx
    c46d:	48 8d 35 cc 3c 01 00 	lea    0x13ccc(%rip),%rsi        # 20140 <global_threadAttr>
    c474:	e8 87 5e ff ff       	callq  2300 <pthread_create@plt>
    c479:	49 39 df             	cmp    %rbx,%r15
    c47c:	75 d2                	jne    c450 <thread_startup+0x1d0>
    c47e:	48 83 c4 08          	add    $0x8,%rsp
    c482:	5b                   	pop    %rbx
    c483:	5d                   	pop    %rbp
    c484:	41 5c                	pop    %r12
    c486:	41 5d                	pop    %r13
    c488:	41 5e                	pop    %r14
    c48a:	41 5f                	pop    %r15
    c48c:	c3                   	retq   
    c48d:	48 8d 0d d4 d9 00 00 	lea    0xd9d4(%rip),%rcx        # 19e68 <__PRETTY_FUNCTION__.3713>
    c494:	ba 83 00 00 00       	mov    $0x83,%edx
    c499:	48 8d 35 e3 d8 00 00 	lea    0xd8e3(%rip),%rsi        # 19d83 <__PRETTY_FUNCTION__.4435+0xb>
    c4a0:	48 8d 3d ec d8 00 00 	lea    0xd8ec(%rip),%rdi        # 19d93 <__PRETTY_FUNCTION__.4435+0x1b>
    c4a7:	e8 f4 5e ff ff       	callq  23a0 <__assert_fail@plt>
    c4ac:	48 8d 0d b5 d9 00 00 	lea    0xd9b5(%rip),%rcx        # 19e68 <__PRETTY_FUNCTION__.3713>
    c4b3:	ba 94 00 00 00       	mov    $0x94,%edx
    c4b8:	48 8d 35 c4 d8 00 00 	lea    0xd8c4(%rip),%rsi        # 19d83 <__PRETTY_FUNCTION__.4435+0xb>
    c4bf:	48 8d 3d 36 d9 00 00 	lea    0xd936(%rip),%rdi        # 19dfc <__PRETTY_FUNCTION__.4435+0x84>
    c4c6:	e8 d5 5e ff ff       	callq  23a0 <__assert_fail@plt>
    c4cb:	48 8d 0d 96 d9 00 00 	lea    0xd996(%rip),%rcx        # 19e68 <__PRETTY_FUNCTION__.3713>
    c4d2:	ba 92 00 00 00       	mov    $0x92,%edx
    c4d7:	48 8d 35 a5 d8 00 00 	lea    0xd8a5(%rip),%rsi        # 19d83 <__PRETTY_FUNCTION__.4435+0xb>
    c4de:	48 8d 3d 00 d9 00 00 	lea    0xd900(%rip),%rdi        # 19de5 <__PRETTY_FUNCTION__.4435+0x6d>
    c4e5:	e8 b6 5e ff ff       	callq  23a0 <__assert_fail@plt>
    c4ea:	48 8d 0d 77 d9 00 00 	lea    0xd977(%rip),%rcx        # 19e68 <__PRETTY_FUNCTION__.3713>
    c4f1:	ba 8c 00 00 00       	mov    $0x8c,%edx
    c4f6:	48 8d 35 86 d8 00 00 	lea    0xd886(%rip),%rsi        # 19d83 <__PRETTY_FUNCTION__.4435+0xb>
    c4fd:	48 8d 3d d0 d8 00 00 	lea    0xd8d0(%rip),%rdi        # 19dd4 <__PRETTY_FUNCTION__.4435+0x5c>
    c504:	e8 97 5e ff ff       	callq  23a0 <__assert_fail@plt>
    c509:	48 8d 0d 58 d9 00 00 	lea    0xd958(%rip),%rcx        # 19e68 <__PRETTY_FUNCTION__.3713>
    c510:	ba 8a 00 00 00       	mov    $0x8a,%edx
    c515:	48 8d 35 67 d8 00 00 	lea    0xd867(%rip),%rsi        # 19d83 <__PRETTY_FUNCTION__.4435+0xb>
    c51c:	48 8d 3d 98 d8 00 00 	lea    0xd898(%rip),%rdi        # 19dbb <__PRETTY_FUNCTION__.4435+0x43>
    c523:	e8 78 5e ff ff       	callq  23a0 <__assert_fail@plt>
    c528:	48 8d 0d 39 d9 00 00 	lea    0xd939(%rip),%rcx        # 19e68 <__PRETTY_FUNCTION__.3713>
    c52f:	ba 85 00 00 00       	mov    $0x85,%edx
    c534:	48 8d 35 48 d8 00 00 	lea    0xd848(%rip),%rsi        # 19d83 <__PRETTY_FUNCTION__.4435+0xb>
    c53b:	48 c7 05 3a 3c 01 00 	movq   $0x0,0x13c3a(%rip)        # 20180 <global_barrierPtr>
    c542:	00 00 00 00 
    c546:	48 8d 3d be d8 00 00 	lea    0xd8be(%rip),%rdi        # 19e0b <__PRETTY_FUNCTION__.4435+0x93>
    c54d:	e8 4e 5e ff ff       	callq  23a0 <__assert_fail@plt>
    c552:	48 8d 0d f7 d8 00 00 	lea    0xd8f7(%rip),%rcx        # 19e50 <__PRETTY_FUNCTION__.3738>
    c559:	ba e4 00 00 00       	mov    $0xe4,%edx
    c55e:	48 8d 35 1e d8 00 00 	lea    0xd81e(%rip),%rsi        # 19d83 <__PRETTY_FUNCTION__.4435+0xb>
    c565:	48 8d 3d b4 d8 00 00 	lea    0xd8b4(%rip),%rdi        # 19e20 <__PRETTY_FUNCTION__.4435+0xa8>
    c56c:	e8 2f 5e ff ff       	callq  23a0 <__assert_fail@plt>
    c571:	48 8d 0d d8 d8 00 00 	lea    0xd8d8(%rip),%rcx        # 19e50 <__PRETTY_FUNCTION__.3738>
    c578:	ba e3 00 00 00       	mov    $0xe3,%edx
    c57d:	48 8d 35 ff d7 00 00 	lea    0xd7ff(%rip),%rsi        # 19d83 <__PRETTY_FUNCTION__.4435+0xb>
    c584:	48 8d 3d 22 d8 00 00 	lea    0xd822(%rip),%rdi        # 19dad <__PRETTY_FUNCTION__.4435+0x35>
    c58b:	e8 10 5e ff ff       	callq  23a0 <__assert_fail@plt>

000000000000c590 <thread_barrier_alloc>:
    c590:	f3 0f 1e fa          	endbr64 
    c594:	53                   	push   %rbx
    c595:	48 85 ff             	test   %rdi,%rdi
    c598:	7e 2b                	jle    c5c5 <thread_barrier_alloc+0x35>
    c59a:	48 8d 47 ff          	lea    -0x1(%rdi),%rax
    c59e:	48 89 fb             	mov    %rdi,%rbx
    c5a1:	48 85 f8             	test   %rdi,%rax
    c5a4:	75 3e                	jne    c5e4 <thread_barrier_alloc+0x54>
    c5a6:	48 8d 04 ff          	lea    (%rdi,%rdi,8),%rax
    c5aa:	48 8d 3c 47          	lea    (%rdi,%rax,2),%rdi
    c5ae:	48 c1 e7 03          	shl    $0x3,%rdi
    c5b2:	e8 99 5e ff ff       	callq  2450 <malloc@plt>
    c5b7:	48 85 c0             	test   %rax,%rax
    c5ba:	74 07                	je     c5c3 <thread_barrier_alloc+0x33>
    c5bc:	48 89 98 90 00 00 00 	mov    %rbx,0x90(%rax)
    c5c3:	5b                   	pop    %rbx
    c5c4:	c3                   	retq   
    c5c5:	48 8d 0d 84 d8 00 00 	lea    0xd884(%rip),%rcx        # 19e50 <__PRETTY_FUNCTION__.3738>
    c5cc:	ba e3 00 00 00       	mov    $0xe3,%edx
    c5d1:	48 8d 35 ab d7 00 00 	lea    0xd7ab(%rip),%rsi        # 19d83 <__PRETTY_FUNCTION__.4435+0xb>
    c5d8:	48 8d 3d ce d7 00 00 	lea    0xd7ce(%rip),%rdi        # 19dad <__PRETTY_FUNCTION__.4435+0x35>
    c5df:	e8 bc 5d ff ff       	callq  23a0 <__assert_fail@plt>
    c5e4:	48 8d 0d 65 d8 00 00 	lea    0xd865(%rip),%rcx        # 19e50 <__PRETTY_FUNCTION__.3738>
    c5eb:	ba e4 00 00 00       	mov    $0xe4,%edx
    c5f0:	48 8d 35 8c d7 00 00 	lea    0xd78c(%rip),%rsi        # 19d83 <__PRETTY_FUNCTION__.4435+0xb>
    c5f7:	48 8d 3d 22 d8 00 00 	lea    0xd822(%rip),%rdi        # 19e20 <__PRETTY_FUNCTION__.4435+0xa8>
    c5fe:	e8 9d 5d ff ff       	callq  23a0 <__assert_fail@plt>
    c603:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    c60a:	00 00 00 00 
    c60e:	66 90                	xchg   %ax,%ax

000000000000c610 <thread_barrier_free>:
    c610:	f3 0f 1e fa          	endbr64 
    c614:	e9 b7 5c ff ff       	jmpq   22d0 <free@plt>
    c619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c620 <thread_barrier_init>:
    c620:	f3 0f 1e fa          	endbr64 
    c624:	48 8b 87 90 00 00 00 	mov    0x90(%rdi),%rax
    c62b:	48 85 c0             	test   %rax,%rax
    c62e:	7e 60                	jle    c690 <thread_barrier_init+0x70>
    c630:	55                   	push   %rbp
    c631:	48 8d 14 c0          	lea    (%rax,%rax,8),%rdx
    c635:	53                   	push   %rbx
    c636:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    c63a:	48 89 fb             	mov    %rdi,%rbx
    c63d:	48 8d 2c c7          	lea    (%rdi,%rax,8),%rbp
    c641:	48 83 ec 08          	sub    $0x8,%rsp
    c645:	0f 1f 00             	nopl   (%rax)
    c648:	48 c7 83 88 00 00 00 	movq   $0x0,0x88(%rbx)
    c64f:	00 00 00 00 
    c653:	48 89 df             	mov    %rbx,%rdi
    c656:	31 f6                	xor    %esi,%esi
    c658:	e8 03 5f ff ff       	callq  2560 <pthread_mutex_init@plt>
    c65d:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    c661:	31 f6                	xor    %esi,%esi
    c663:	e8 b8 5d ff ff       	callq  2420 <pthread_cond_init@plt>
    c668:	48 8d 7b 58          	lea    0x58(%rbx),%rdi
    c66c:	31 f6                	xor    %esi,%esi
    c66e:	48 81 c3 98 00 00 00 	add    $0x98,%rbx
    c675:	e8 a6 5d ff ff       	callq  2420 <pthread_cond_init@plt>
    c67a:	48 39 eb             	cmp    %rbp,%rbx
    c67d:	75 c9                	jne    c648 <thread_barrier_init+0x28>
    c67f:	48 83 c4 08          	add    $0x8,%rsp
    c683:	5b                   	pop    %rbx
    c684:	5d                   	pop    %rbp
    c685:	c3                   	retq   
    c686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c68d:	00 00 00 
    c690:	c3                   	retq   
    c691:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    c698:	00 00 00 00 
    c69c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c6a0 <thread_barrier>:
    c6a0:	f3 0f 1e fa          	endbr64 
    c6a4:	41 57                	push   %r15
    c6a6:	41 56                	push   %r14
    c6a8:	41 55                	push   %r13
    c6aa:	41 54                	push   %r12
    c6ac:	55                   	push   %rbp
    c6ad:	53                   	push   %rbx
    c6ae:	48 83 ec 18          	sub    $0x18,%rsp
    c6b2:	4c 8b af 90 00 00 00 	mov    0x90(%rdi),%r13
    c6b9:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    c6be:	49 83 fd 01          	cmp    $0x1,%r13
    c6c2:	0f 8e e9 00 00 00    	jle    c7b1 <thread_barrier+0x111>
    c6c8:	49 89 ff             	mov    %rdi,%r15
    c6cb:	45 31 e4             	xor    %r12d,%r12d
    c6ce:	bd 02 00 00 00       	mov    $0x2,%ebp
    c6d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c6d8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c6dd:	48 99                	cqto   
    c6df:	48 f7 fd             	idiv   %rbp
    c6e2:	4c 01 e0             	add    %r12,%rax
    c6e5:	48 8d 0c c0          	lea    (%rax,%rax,8),%rcx
    c6e9:	48 8d 04 48          	lea    (%rax,%rcx,2),%rax
    c6ed:	4d 8d 34 c7          	lea    (%r15,%rax,8),%r14
    c6f1:	4c 89 f7             	mov    %r14,%rdi
    c6f4:	48 85 d2             	test   %rdx,%rdx
    c6f7:	0f 85 c3 00 00 00    	jne    c7c0 <thread_barrier+0x120>
    c6fd:	e8 6e 5e ff ff       	callq  2570 <pthread_mutex_lock@plt>
    c702:	49 8b 86 88 00 00 00 	mov    0x88(%r14),%rax
    c709:	49 8d 5e 28          	lea    0x28(%r14),%rbx
    c70d:	48 83 c0 01          	add    $0x1,%rax
    c711:	49 89 86 88 00 00 00 	mov    %rax,0x88(%r14)
    c718:	48 83 f8 01          	cmp    $0x1,%rax
    c71c:	7f 17                	jg     c735 <thread_barrier+0x95>
    c71e:	66 90                	xchg   %ax,%ax
    c720:	4c 89 f6             	mov    %r14,%rsi
    c723:	48 89 df             	mov    %rbx,%rdi
    c726:	e8 25 5c ff ff       	callq  2350 <pthread_cond_wait@plt>
    c72b:	49 83 be 88 00 00 00 	cmpq   $0x1,0x88(%r14)
    c732:	01 
    c733:	7e eb                	jle    c720 <thread_barrier+0x80>
    c735:	4c 89 f7             	mov    %r14,%rdi
    c738:	e8 03 5d ff ff       	callq  2440 <pthread_mutex_unlock@plt>
    c73d:	4c 89 e8             	mov    %r13,%rax
    c740:	48 99                	cqto   
    c742:	48 f7 fd             	idiv   %rbp
    c745:	48 01 ed             	add    %rbp,%rbp
    c748:	49 01 c4             	add    %rax,%r12
    c74b:	49 39 ed             	cmp    %rbp,%r13
    c74e:	7d 88                	jge    c6d8 <thread_barrier+0x38>
    c750:	48 89 eb             	mov    %rbp,%rbx
    c753:	48 d1 fb             	sar    %rbx
    c756:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    c75d:	00 00 00 
    c760:	4c 89 e8             	mov    %r13,%rax
    c763:	48 99                	cqto   
    c765:	48 f7 fb             	idiv   %rbx
    c768:	49 29 c4             	sub    %rax,%r12
    c76b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c770:	48 99                	cqto   
    c772:	48 f7 fb             	idiv   %rbx
    c775:	48 d1 fb             	sar    %rbx
    c778:	4c 01 e0             	add    %r12,%rax
    c77b:	48 8d 14 c0          	lea    (%rax,%rax,8),%rdx
    c77f:	48 8d 04 50          	lea    (%rax,%rdx,2),%rax
    c783:	49 8d 2c c7          	lea    (%r15,%rax,8),%rbp
    c787:	48 89 ef             	mov    %rbp,%rdi
    c78a:	e8 e1 5d ff ff       	callq  2570 <pthread_mutex_lock@plt>
    c78f:	48 8d 7d 58          	lea    0x58(%rbp),%rdi
    c793:	48 c7 85 88 00 00 00 	movq   $0x0,0x88(%rbp)
    c79a:	00 00 00 00 
    c79e:	e8 3d 5c ff ff       	callq  23e0 <pthread_cond_signal@plt>
    c7a3:	48 89 ef             	mov    %rbp,%rdi
    c7a6:	e8 95 5c ff ff       	callq  2440 <pthread_mutex_unlock@plt>
    c7ab:	48 83 fb 01          	cmp    $0x1,%rbx
    c7af:	75 af                	jne    c760 <thread_barrier+0xc0>
    c7b1:	48 83 c4 18          	add    $0x18,%rsp
    c7b5:	5b                   	pop    %rbx
    c7b6:	5d                   	pop    %rbp
    c7b7:	41 5c                	pop    %r12
    c7b9:	41 5d                	pop    %r13
    c7bb:	41 5e                	pop    %r14
    c7bd:	41 5f                	pop    %r15
    c7bf:	c3                   	retq   
    c7c0:	e8 ab 5d ff ff       	callq  2570 <pthread_mutex_lock@plt>
    c7c5:	49 8b 86 88 00 00 00 	mov    0x88(%r14),%rax
    c7cc:	48 83 c0 01          	add    $0x1,%rax
    c7d0:	49 89 86 88 00 00 00 	mov    %rax,0x88(%r14)
    c7d7:	48 83 f8 02          	cmp    $0x2,%rax
    c7db:	74 34                	je     c811 <thread_barrier+0x171>
    c7dd:	49 8d 5e 58          	lea    0x58(%r14),%rbx
    c7e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c7e8:	4c 89 f6             	mov    %r14,%rsi
    c7eb:	48 89 df             	mov    %rbx,%rdi
    c7ee:	e8 5d 5b ff ff       	callq  2350 <pthread_cond_wait@plt>
    c7f3:	85 c0                	test   %eax,%eax
    c7f5:	75 f1                	jne    c7e8 <thread_barrier+0x148>
    c7f7:	4c 89 f7             	mov    %r14,%rdi
    c7fa:	48 89 eb             	mov    %rbp,%rbx
    c7fd:	e8 3e 5c ff ff       	callq  2440 <pthread_mutex_unlock@plt>
    c802:	48 d1 fb             	sar    %rbx
    c805:	48 83 fd 02          	cmp    $0x2,%rbp
    c809:	0f 85 51 ff ff ff    	jne    c760 <thread_barrier+0xc0>
    c80f:	eb a0                	jmp    c7b1 <thread_barrier+0x111>
    c811:	49 8d 7e 28          	lea    0x28(%r14),%rdi
    c815:	e8 c6 5b ff ff       	callq  23e0 <pthread_cond_signal@plt>
    c81a:	eb c1                	jmp    c7dd <thread_barrier+0x13d>
    c81c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c820 <threadWait>:
    c820:	f3 0f 1e fa          	endbr64 
    c824:	53                   	push   %rbx
    c825:	48 8b 1f             	mov    (%rdi),%rbx
    c828:	8b 3d 5a 39 01 00    	mov    0x1395a(%rip),%edi        # 20188 <global_threadId>
    c82e:	48 89 de             	mov    %rbx,%rsi
    c831:	e8 3a 5b ff ff       	callq  2370 <pthread_setspecific@plt>
    c836:	48 85 db             	test   %rbx,%rbx
    c839:	75 21                	jne    c85c <threadWait+0x3c>
    c83b:	eb 3c                	jmp    c879 <threadWait+0x59>
    c83d:	0f 1f 00             	nopl   (%rax)
    c840:	48 8b 3d e1 38 01 00 	mov    0x138e1(%rip),%rdi        # 20128 <global_argPtr>
    c847:	ff 15 e3 38 01 00    	callq  *0x138e3(%rip)        # 20130 <global_funcPtr>
    c84d:	48 8b 3d 2c 39 01 00 	mov    0x1392c(%rip),%rdi        # 20180 <global_barrierPtr>
    c854:	48 89 de             	mov    %rbx,%rsi
    c857:	e8 44 fe ff ff       	callq  c6a0 <thread_barrier>
    c85c:	48 8b 3d 1d 39 01 00 	mov    0x1391d(%rip),%rdi        # 20180 <global_barrierPtr>
    c863:	48 89 de             	mov    %rbx,%rsi
    c866:	e8 35 fe ff ff       	callq  c6a0 <thread_barrier>
    c86b:	48 8b 05 ae 38 01 00 	mov    0x138ae(%rip),%rax        # 20120 <global_doShutdown>
    c872:	48 85 c0             	test   %rax,%rax
    c875:	74 c9                	je     c840 <threadWait+0x20>
    c877:	5b                   	pop    %rbx
    c878:	c3                   	retq   
    c879:	48 8b 3d 00 39 01 00 	mov    0x13900(%rip),%rdi        # 20180 <global_barrierPtr>
    c880:	31 f6                	xor    %esi,%esi
    c882:	e8 19 fe ff ff       	callq  c6a0 <thread_barrier>
    c887:	48 8b 05 92 38 01 00 	mov    0x13892(%rip),%rax        # 20120 <global_doShutdown>
    c88e:	48 85 c0             	test   %rax,%rax
    c891:	75 e4                	jne    c877 <threadWait+0x57>
    c893:	48 8b 3d 8e 38 01 00 	mov    0x1388e(%rip),%rdi        # 20128 <global_argPtr>
    c89a:	ff 15 90 38 01 00    	callq  *0x13890(%rip)        # 20130 <global_funcPtr>
    c8a0:	48 8b 3d d9 38 01 00 	mov    0x138d9(%rip),%rdi        # 20180 <global_barrierPtr>
    c8a7:	31 f6                	xor    %esi,%esi
    c8a9:	5b                   	pop    %rbx
    c8aa:	e9 f1 fd ff ff       	jmpq   c6a0 <thread_barrier>
    c8af:	90                   	nop

000000000000c8b0 <thread_shutdown>:
    c8b0:	f3 0f 1e fa          	endbr64 
    c8b4:	55                   	push   %rbp
    c8b5:	31 f6                	xor    %esi,%esi
    c8b7:	53                   	push   %rbx
    c8b8:	48 83 ec 08          	sub    $0x8,%rsp
    c8bc:	48 8b 3d bd 38 01 00 	mov    0x138bd(%rip),%rdi        # 20180 <global_barrierPtr>
    c8c3:	48 c7 05 52 38 01 00 	movq   $0x1,0x13852(%rip)        # 20120 <global_doShutdown>
    c8ca:	01 00 00 00 
    c8ce:	e8 cd fd ff ff       	callq  c6a0 <thread_barrier>
    c8d3:	48 8b 2d 4e 37 01 00 	mov    0x1374e(%rip),%rbp        # 20028 <global_numThread>
    c8da:	48 83 fd 01          	cmp    $0x1,%rbp
    c8de:	7e 23                	jle    c903 <thread_shutdown+0x53>
    c8e0:	bb 01 00 00 00       	mov    $0x1,%ebx
    c8e5:	0f 1f 00             	nopl   (%rax)
    c8e8:	48 8b 05 49 38 01 00 	mov    0x13849(%rip),%rax        # 20138 <global_threads>
    c8ef:	31 f6                	xor    %esi,%esi
    c8f1:	48 8b 3c d8          	mov    (%rax,%rbx,8),%rdi
    c8f5:	48 83 c3 01          	add    $0x1,%rbx
    c8f9:	e8 f2 5b ff ff       	callq  24f0 <pthread_join@plt>
    c8fe:	48 39 dd             	cmp    %rbx,%rbp
    c901:	75 e5                	jne    c8e8 <thread_shutdown+0x38>
    c903:	48 8b 3d 76 38 01 00 	mov    0x13876(%rip),%rdi        # 20180 <global_barrierPtr>
    c90a:	e8 c1 59 ff ff       	callq  22d0 <free@plt>
    c90f:	48 8b 3d 62 38 01 00 	mov    0x13862(%rip),%rdi        # 20178 <global_threadIds>
    c916:	48 c7 05 5f 38 01 00 	movq   $0x0,0x1385f(%rip)        # 20180 <global_barrierPtr>
    c91d:	00 00 00 00 
    c921:	e8 aa 59 ff ff       	callq  22d0 <free@plt>
    c926:	48 8b 3d 0b 38 01 00 	mov    0x1380b(%rip),%rdi        # 20138 <global_threads>
    c92d:	48 c7 05 40 38 01 00 	movq   $0x0,0x13840(%rip)        # 20178 <global_threadIds>
    c934:	00 00 00 00 
    c938:	e8 93 59 ff ff       	callq  22d0 <free@plt>
    c93d:	48 c7 05 f0 37 01 00 	movq   $0x0,0x137f0(%rip)        # 20138 <global_threads>
    c944:	00 00 00 00 
    c948:	48 c7 05 d5 36 01 00 	movq   $0x1,0x136d5(%rip)        # 20028 <global_numThread>
    c94f:	01 00 00 00 
    c953:	48 83 c4 08          	add    $0x8,%rsp
    c957:	5b                   	pop    %rbx
    c958:	5d                   	pop    %rbp
    c959:	c3                   	retq   
    c95a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000c960 <thread_start>:
    c960:	f3 0f 1e fa          	endbr64 
    c964:	48 83 ec 08          	sub    $0x8,%rsp
    c968:	48 89 3d c1 37 01 00 	mov    %rdi,0x137c1(%rip)        # 20130 <global_funcPtr>
    c96f:	8b 3d 13 38 01 00    	mov    0x13813(%rip),%edi        # 20188 <global_threadId>
    c975:	48 89 35 ac 37 01 00 	mov    %rsi,0x137ac(%rip)        # 20128 <global_argPtr>
    c97c:	31 f6                	xor    %esi,%esi
    c97e:	e8 ed 59 ff ff       	callq  2370 <pthread_setspecific@plt>
    c983:	48 8b 3d f6 37 01 00 	mov    0x137f6(%rip),%rdi        # 20180 <global_barrierPtr>
    c98a:	31 f6                	xor    %esi,%esi
    c98c:	e8 0f fd ff ff       	callq  c6a0 <thread_barrier>
    c991:	48 8b 05 88 37 01 00 	mov    0x13788(%rip),%rax        # 20120 <global_doShutdown>
    c998:	48 85 c0             	test   %rax,%rax
    c99b:	75 1f                	jne    c9bc <thread_start+0x5c>
    c99d:	48 8b 3d 84 37 01 00 	mov    0x13784(%rip),%rdi        # 20128 <global_argPtr>
    c9a4:	ff 15 86 37 01 00    	callq  *0x13786(%rip)        # 20130 <global_funcPtr>
    c9aa:	48 8b 3d cf 37 01 00 	mov    0x137cf(%rip),%rdi        # 20180 <global_barrierPtr>
    c9b1:	31 f6                	xor    %esi,%esi
    c9b3:	48 83 c4 08          	add    $0x8,%rsp
    c9b7:	e9 e4 fc ff ff       	jmpq   c6a0 <thread_barrier>
    c9bc:	58                   	pop    %rax
    c9bd:	c3                   	retq   
    c9be:	66 90                	xchg   %ax,%ax

000000000000c9c0 <thread_getId>:
    c9c0:	f3 0f 1e fa          	endbr64 
    c9c4:	8b 3d be 37 01 00    	mov    0x137be(%rip),%edi        # 20188 <global_threadId>
    c9ca:	e9 61 5a ff ff       	jmpq   2430 <pthread_getspecific@plt>
    c9cf:	90                   	nop

000000000000c9d0 <thread_getNumThread>:
    c9d0:	f3 0f 1e fa          	endbr64 
    c9d4:	48 8b 05 4d 36 01 00 	mov    0x1364d(%rip),%rax        # 20028 <global_numThread>
    c9db:	c3                   	retq   
    c9dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c9e0 <thread_barrier_wait>:
    c9e0:	f3 0f 1e fa          	endbr64 
    c9e4:	48 83 ec 08          	sub    $0x8,%rsp
    c9e8:	8b 3d 9a 37 01 00    	mov    0x1379a(%rip),%edi        # 20188 <global_threadId>
    c9ee:	e8 3d 5a ff ff       	callq  2430 <pthread_getspecific@plt>
    c9f3:	48 8b 3d 86 37 01 00 	mov    0x13786(%rip),%rdi        # 20180 <global_barrierPtr>
    c9fa:	48 83 c4 08          	add    $0x8,%rsp
    c9fe:	48 89 c6             	mov    %rax,%rsi
    ca01:	e9 9a fc ff ff       	jmpq   c6a0 <thread_barrier>
    ca06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ca0d:	00 00 00 

000000000000ca10 <vector_alloc>:
    ca10:	f3 0f 1e fa          	endbr64 
    ca14:	41 54                	push   %r12
    ca16:	53                   	push   %rbx
    ca17:	bb 01 00 00 00       	mov    $0x1,%ebx
    ca1c:	48 83 ec 08          	sub    $0x8,%rsp
    ca20:	48 85 ff             	test   %rdi,%rdi
    ca23:	48 0f 4f df          	cmovg  %rdi,%rbx
    ca27:	bf 18 00 00 00       	mov    $0x18,%edi
    ca2c:	e8 1f 5a ff ff       	callq  2450 <malloc@plt>
    ca31:	48 85 c0             	test   %rax,%rax
    ca34:	74 30                	je     ca66 <vector_alloc+0x56>
    ca36:	48 89 58 08          	mov    %rbx,0x8(%rax)
    ca3a:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
    ca41:	00 
    ca42:	49 89 c4             	mov    %rax,%r12
    ca45:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ca4c:	e8 ff 59 ff ff       	callq  2450 <malloc@plt>
    ca51:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    ca56:	48 85 c0             	test   %rax,%rax
    ca59:	74 0b                	je     ca66 <vector_alloc+0x56>
    ca5b:	48 83 c4 08          	add    $0x8,%rsp
    ca5f:	4c 89 e0             	mov    %r12,%rax
    ca62:	5b                   	pop    %rbx
    ca63:	41 5c                	pop    %r12
    ca65:	c3                   	retq   
    ca66:	45 31 e4             	xor    %r12d,%r12d
    ca69:	eb f0                	jmp    ca5b <vector_alloc+0x4b>
    ca6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000ca70 <Pvector_alloc>:
    ca70:	f3 0f 1e fa          	endbr64 
    ca74:	41 54                	push   %r12
    ca76:	53                   	push   %rbx
    ca77:	bb 01 00 00 00       	mov    $0x1,%ebx
    ca7c:	48 83 ec 08          	sub    $0x8,%rsp
    ca80:	48 85 ff             	test   %rdi,%rdi
    ca83:	48 0f 4f df          	cmovg  %rdi,%rbx
    ca87:	bf 18 00 00 00       	mov    $0x18,%edi
    ca8c:	e8 bf 59 ff ff       	callq  2450 <malloc@plt>
    ca91:	48 85 c0             	test   %rax,%rax
    ca94:	74 30                	je     cac6 <Pvector_alloc+0x56>
    ca96:	48 89 58 08          	mov    %rbx,0x8(%rax)
    ca9a:	48 8d 3c dd 00 00 00 	lea    0x0(,%rbx,8),%rdi
    caa1:	00 
    caa2:	49 89 c4             	mov    %rax,%r12
    caa5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    caac:	e8 9f 59 ff ff       	callq  2450 <malloc@plt>
    cab1:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    cab6:	48 85 c0             	test   %rax,%rax
    cab9:	74 0b                	je     cac6 <Pvector_alloc+0x56>
    cabb:	48 83 c4 08          	add    $0x8,%rsp
    cabf:	4c 89 e0             	mov    %r12,%rax
    cac2:	5b                   	pop    %rbx
    cac3:	41 5c                	pop    %r12
    cac5:	c3                   	retq   
    cac6:	45 31 e4             	xor    %r12d,%r12d
    cac9:	eb f0                	jmp    cabb <Pvector_alloc+0x4b>
    cacb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000cad0 <vector_free>:
    cad0:	f3 0f 1e fa          	endbr64 
    cad4:	55                   	push   %rbp
    cad5:	48 89 fd             	mov    %rdi,%rbp
    cad8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    cadc:	e8 ef 57 ff ff       	callq  22d0 <free@plt>
    cae1:	48 89 ef             	mov    %rbp,%rdi
    cae4:	5d                   	pop    %rbp
    cae5:	e9 e6 57 ff ff       	jmpq   22d0 <free@plt>
    caea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000caf0 <Pvector_free>:
    caf0:	f3 0f 1e fa          	endbr64 
    caf4:	55                   	push   %rbp
    caf5:	48 89 fd             	mov    %rdi,%rbp
    caf8:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    cafc:	e8 cf 57 ff ff       	callq  22d0 <free@plt>
    cb01:	48 89 ef             	mov    %rbp,%rdi
    cb04:	5d                   	pop    %rbp
    cb05:	e9 c6 57 ff ff       	jmpq   22d0 <free@plt>
    cb0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000cb10 <vector_at>:
    cb10:	f3 0f 1e fa          	endbr64 
    cb14:	48 85 f6             	test   %rsi,%rsi
    cb17:	78 17                	js     cb30 <vector_at+0x20>
    cb19:	48 39 37             	cmp    %rsi,(%rdi)
    cb1c:	7e 12                	jle    cb30 <vector_at+0x20>
    cb1e:	48 8b 47 10          	mov    0x10(%rdi),%rax
    cb22:	48 8b 04 f0          	mov    (%rax,%rsi,8),%rax
    cb26:	c3                   	retq   
    cb27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cb2e:	00 00 
    cb30:	31 c0                	xor    %eax,%eax
    cb32:	c3                   	retq   
    cb33:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    cb3a:	00 00 00 00 
    cb3e:	66 90                	xchg   %ax,%ax

000000000000cb40 <vector_pushBack>:
    cb40:	f3 0f 1e fa          	endbr64 
    cb44:	41 56                	push   %r14
    cb46:	41 55                	push   %r13
    cb48:	49 89 f5             	mov    %rsi,%r13
    cb4b:	41 54                	push   %r12
    cb4d:	55                   	push   %rbp
    cb4e:	53                   	push   %rbx
    cb4f:	48 89 fb             	mov    %rdi,%rbx
    cb52:	48 8b 2f             	mov    (%rdi),%rbp
    cb55:	48 3b 6f 08          	cmp    0x8(%rdi),%rbp
    cb59:	74 25                	je     cb80 <vector_pushBack+0x40>
    cb5b:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    cb5f:	48 8d 45 01          	lea    0x1(%rbp),%rax
    cb63:	48 89 03             	mov    %rax,(%rbx)
    cb66:	b8 01 00 00 00       	mov    $0x1,%eax
    cb6b:	4d 89 2c ec          	mov    %r13,(%r12,%rbp,8)
    cb6f:	5b                   	pop    %rbx
    cb70:	5d                   	pop    %rbp
    cb71:	41 5c                	pop    %r12
    cb73:	41 5d                	pop    %r13
    cb75:	41 5e                	pop    %r14
    cb77:	c3                   	retq   
    cb78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cb7f:	00 
    cb80:	48 89 ef             	mov    %rbp,%rdi
    cb83:	4c 8d 74 2d 00       	lea    0x0(%rbp,%rbp,1),%r14
    cb88:	48 c1 e7 04          	shl    $0x4,%rdi
    cb8c:	e8 bf 58 ff ff       	callq  2450 <malloc@plt>
    cb91:	49 89 c4             	mov    %rax,%r12
    cb94:	48 85 c0             	test   %rax,%rax
    cb97:	0f 84 8e 00 00 00    	je     cc2b <vector_pushBack+0xeb>
    cb9d:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    cba1:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    cba5:	48 85 ed             	test   %rbp,%rbp
    cba8:	7e 4d                	jle    cbf7 <vector_pushBack+0xb7>
    cbaa:	48 8d 40 0f          	lea    0xf(%rax),%rax
    cbae:	48 29 f8             	sub    %rdi,%rax
    cbb1:	48 83 f8 1e          	cmp    $0x1e,%rax
    cbb5:	76 59                	jbe    cc10 <vector_pushBack+0xd0>
    cbb7:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    cbbb:	48 83 f8 03          	cmp    $0x3,%rax
    cbbf:	76 4f                	jbe    cc10 <vector_pushBack+0xd0>
    cbc1:	48 89 ea             	mov    %rbp,%rdx
    cbc4:	31 c0                	xor    %eax,%eax
    cbc6:	48 d1 ea             	shr    %rdx
    cbc9:	48 c1 e2 04          	shl    $0x4,%rdx
    cbcd:	0f 1f 00             	nopl   (%rax)
    cbd0:	f3 0f 6f 04 07       	movdqu (%rdi,%rax,1),%xmm0
    cbd5:	41 0f 11 04 04       	movups %xmm0,(%r12,%rax,1)
    cbda:	48 83 c0 10          	add    $0x10,%rax
    cbde:	48 39 d0             	cmp    %rdx,%rax
    cbe1:	75 ed                	jne    cbd0 <vector_pushBack+0x90>
    cbe3:	48 89 e8             	mov    %rbp,%rax
    cbe6:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    cbea:	83 e5 01             	and    $0x1,%ebp
    cbed:	74 08                	je     cbf7 <vector_pushBack+0xb7>
    cbef:	48 8b 14 c7          	mov    (%rdi,%rax,8),%rdx
    cbf3:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    cbf7:	e8 d4 56 ff ff       	callq  22d0 <free@plt>
    cbfc:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    cc00:	48 8b 2b             	mov    (%rbx),%rbp
    cc03:	e9 57 ff ff ff       	jmpq   cb5f <vector_pushBack+0x1f>
    cc08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cc0f:	00 
    cc10:	31 c0                	xor    %eax,%eax
    cc12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cc18:	48 8b 14 c7          	mov    (%rdi,%rax,8),%rdx
    cc1c:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    cc20:	48 83 c0 01          	add    $0x1,%rax
    cc24:	48 39 c5             	cmp    %rax,%rbp
    cc27:	75 ef                	jne    cc18 <vector_pushBack+0xd8>
    cc29:	eb cc                	jmp    cbf7 <vector_pushBack+0xb7>
    cc2b:	31 c0                	xor    %eax,%eax
    cc2d:	e9 3d ff ff ff       	jmpq   cb6f <vector_pushBack+0x2f>
    cc32:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    cc39:	00 00 00 00 
    cc3d:	0f 1f 00             	nopl   (%rax)

000000000000cc40 <Pvector_pushBack>:
    cc40:	f3 0f 1e fa          	endbr64 
    cc44:	41 56                	push   %r14
    cc46:	41 55                	push   %r13
    cc48:	49 89 f5             	mov    %rsi,%r13
    cc4b:	41 54                	push   %r12
    cc4d:	55                   	push   %rbp
    cc4e:	53                   	push   %rbx
    cc4f:	48 89 fb             	mov    %rdi,%rbx
    cc52:	48 8b 2f             	mov    (%rdi),%rbp
    cc55:	48 3b 6f 08          	cmp    0x8(%rdi),%rbp
    cc59:	74 25                	je     cc80 <Pvector_pushBack+0x40>
    cc5b:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    cc5f:	48 8d 45 01          	lea    0x1(%rbp),%rax
    cc63:	48 89 03             	mov    %rax,(%rbx)
    cc66:	b8 01 00 00 00       	mov    $0x1,%eax
    cc6b:	4d 89 2c ec          	mov    %r13,(%r12,%rbp,8)
    cc6f:	5b                   	pop    %rbx
    cc70:	5d                   	pop    %rbp
    cc71:	41 5c                	pop    %r12
    cc73:	41 5d                	pop    %r13
    cc75:	41 5e                	pop    %r14
    cc77:	c3                   	retq   
    cc78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cc7f:	00 
    cc80:	48 89 ef             	mov    %rbp,%rdi
    cc83:	4c 8d 74 2d 00       	lea    0x0(%rbp,%rbp,1),%r14
    cc88:	48 c1 e7 04          	shl    $0x4,%rdi
    cc8c:	e8 bf 57 ff ff       	callq  2450 <malloc@plt>
    cc91:	49 89 c4             	mov    %rax,%r12
    cc94:	48 85 c0             	test   %rax,%rax
    cc97:	0f 84 8e 00 00 00    	je     cd2b <Pvector_pushBack+0xeb>
    cc9d:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    cca1:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    cca5:	48 85 ed             	test   %rbp,%rbp
    cca8:	7e 4d                	jle    ccf7 <Pvector_pushBack+0xb7>
    ccaa:	48 8d 40 0f          	lea    0xf(%rax),%rax
    ccae:	48 29 f8             	sub    %rdi,%rax
    ccb1:	48 83 f8 1e          	cmp    $0x1e,%rax
    ccb5:	76 59                	jbe    cd10 <Pvector_pushBack+0xd0>
    ccb7:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    ccbb:	48 83 f8 03          	cmp    $0x3,%rax
    ccbf:	76 4f                	jbe    cd10 <Pvector_pushBack+0xd0>
    ccc1:	48 89 ea             	mov    %rbp,%rdx
    ccc4:	31 c0                	xor    %eax,%eax
    ccc6:	48 d1 ea             	shr    %rdx
    ccc9:	48 c1 e2 04          	shl    $0x4,%rdx
    cccd:	0f 1f 00             	nopl   (%rax)
    ccd0:	f3 0f 6f 04 07       	movdqu (%rdi,%rax,1),%xmm0
    ccd5:	41 0f 11 04 04       	movups %xmm0,(%r12,%rax,1)
    ccda:	48 83 c0 10          	add    $0x10,%rax
    ccde:	48 39 d0             	cmp    %rdx,%rax
    cce1:	75 ed                	jne    ccd0 <Pvector_pushBack+0x90>
    cce3:	48 89 e8             	mov    %rbp,%rax
    cce6:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    ccea:	83 e5 01             	and    $0x1,%ebp
    cced:	74 08                	je     ccf7 <Pvector_pushBack+0xb7>
    ccef:	48 8b 14 c7          	mov    (%rdi,%rax,8),%rdx
    ccf3:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    ccf7:	e8 d4 55 ff ff       	callq  22d0 <free@plt>
    ccfc:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    cd00:	48 8b 2b             	mov    (%rbx),%rbp
    cd03:	e9 57 ff ff ff       	jmpq   cc5f <Pvector_pushBack+0x1f>
    cd08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cd0f:	00 
    cd10:	31 c0                	xor    %eax,%eax
    cd12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cd18:	48 8b 14 c7          	mov    (%rdi,%rax,8),%rdx
    cd1c:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    cd20:	48 83 c0 01          	add    $0x1,%rax
    cd24:	48 39 c5             	cmp    %rax,%rbp
    cd27:	75 ef                	jne    cd18 <Pvector_pushBack+0xd8>
    cd29:	eb cc                	jmp    ccf7 <Pvector_pushBack+0xb7>
    cd2b:	31 c0                	xor    %eax,%eax
    cd2d:	e9 3d ff ff ff       	jmpq   cc6f <Pvector_pushBack+0x2f>
    cd32:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    cd39:	00 00 00 00 
    cd3d:	0f 1f 00             	nopl   (%rax)

000000000000cd40 <vector_popBack>:
    cd40:	f3 0f 1e fa          	endbr64 
    cd44:	48 8b 07             	mov    (%rdi),%rax
    cd47:	48 85 c0             	test   %rax,%rax
    cd4a:	7e 14                	jle    cd60 <vector_popBack+0x20>
    cd4c:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    cd50:	48 83 e8 01          	sub    $0x1,%rax
    cd54:	48 89 07             	mov    %rax,(%rdi)
    cd57:	48 8b 04 c2          	mov    (%rdx,%rax,8),%rax
    cd5b:	c3                   	retq   
    cd5c:	0f 1f 40 00          	nopl   0x0(%rax)
    cd60:	31 c0                	xor    %eax,%eax
    cd62:	c3                   	retq   
    cd63:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    cd6a:	00 00 00 00 
    cd6e:	66 90                	xchg   %ax,%ax

000000000000cd70 <vector_getSize>:
    cd70:	f3 0f 1e fa          	endbr64 
    cd74:	48 8b 07             	mov    (%rdi),%rax
    cd77:	c3                   	retq   
    cd78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    cd7f:	00 

000000000000cd80 <vector_clear>:
    cd80:	f3 0f 1e fa          	endbr64 
    cd84:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    cd8b:	c3                   	retq   
    cd8c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000cd90 <vector_sort>:
    cd90:	f3 0f 1e fa          	endbr64 
    cd94:	4c 8b 47 10          	mov    0x10(%rdi),%r8
    cd98:	48 89 f1             	mov    %rsi,%rcx
    cd9b:	48 8b 37             	mov    (%rdi),%rsi
    cd9e:	ba 08 00 00 00       	mov    $0x8,%edx
    cda3:	4c 89 c7             	mov    %r8,%rdi
    cda6:	e9 85 55 ff ff       	jmpq   2330 <qsort@plt>
    cdab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000cdb0 <vector_copy>:
    cdb0:	f3 0f 1e fa          	endbr64 
    cdb4:	41 56                	push   %r14
    cdb6:	41 55                	push   %r13
    cdb8:	41 54                	push   %r12
    cdba:	55                   	push   %rbp
    cdbb:	48 89 f5             	mov    %rsi,%rbp
    cdbe:	53                   	push   %rbx
    cdbf:	48 89 fb             	mov    %rdi,%rbx
    cdc2:	4c 8b 26             	mov    (%rsi),%r12
    cdc5:	4c 39 67 08          	cmp    %r12,0x8(%rdi)
    cdc9:	7c 2d                	jl     cdf8 <vector_copy+0x48>
    cdcb:	4c 8b 6f 10          	mov    0x10(%rdi),%r13
    cdcf:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    cdd3:	4a 8d 14 e5 00 00 00 	lea    0x0(,%r12,8),%rdx
    cdda:	00 
    cddb:	4c 89 ef             	mov    %r13,%rdi
    cdde:	e8 2d 56 ff ff       	callq  2410 <memcpy@plt>
    cde3:	4c 89 23             	mov    %r12,(%rbx)
    cde6:	b8 01 00 00 00       	mov    $0x1,%eax
    cdeb:	5b                   	pop    %rbx
    cdec:	5d                   	pop    %rbp
    cded:	41 5c                	pop    %r12
    cdef:	41 5d                	pop    %r13
    cdf1:	41 5e                	pop    %r14
    cdf3:	c3                   	retq   
    cdf4:	0f 1f 40 00          	nopl   0x0(%rax)
    cdf8:	4c 8b 76 08          	mov    0x8(%rsi),%r14
    cdfc:	4a 8d 3c f5 00 00 00 	lea    0x0(,%r14,8),%rdi
    ce03:	00 
    ce04:	e8 47 56 ff ff       	callq  2450 <malloc@plt>
    ce09:	49 89 c5             	mov    %rax,%r13
    ce0c:	48 85 c0             	test   %rax,%rax
    ce0f:	74 13                	je     ce24 <vector_copy+0x74>
    ce11:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    ce15:	e8 b6 54 ff ff       	callq  22d0 <free@plt>
    ce1a:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    ce1e:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    ce22:	eb ab                	jmp    cdcf <vector_copy+0x1f>
    ce24:	31 c0                	xor    %eax,%eax
    ce26:	eb c3                	jmp    cdeb <vector_copy+0x3b>
    ce28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ce2f:	00 

000000000000ce30 <Pvector_copy>:
    ce30:	f3 0f 1e fa          	endbr64 
    ce34:	41 56                	push   %r14
    ce36:	41 55                	push   %r13
    ce38:	41 54                	push   %r12
    ce3a:	55                   	push   %rbp
    ce3b:	48 89 f5             	mov    %rsi,%rbp
    ce3e:	53                   	push   %rbx
    ce3f:	48 89 fb             	mov    %rdi,%rbx
    ce42:	4c 8b 26             	mov    (%rsi),%r12
    ce45:	4c 39 67 08          	cmp    %r12,0x8(%rdi)
    ce49:	7c 2d                	jl     ce78 <Pvector_copy+0x48>
    ce4b:	4c 8b 6f 10          	mov    0x10(%rdi),%r13
    ce4f:	48 8b 75 10          	mov    0x10(%rbp),%rsi
    ce53:	4a 8d 14 e5 00 00 00 	lea    0x0(,%r12,8),%rdx
    ce5a:	00 
    ce5b:	4c 89 ef             	mov    %r13,%rdi
    ce5e:	e8 ad 55 ff ff       	callq  2410 <memcpy@plt>
    ce63:	4c 89 23             	mov    %r12,(%rbx)
    ce66:	b8 01 00 00 00       	mov    $0x1,%eax
    ce6b:	5b                   	pop    %rbx
    ce6c:	5d                   	pop    %rbp
    ce6d:	41 5c                	pop    %r12
    ce6f:	41 5d                	pop    %r13
    ce71:	41 5e                	pop    %r14
    ce73:	c3                   	retq   
    ce74:	0f 1f 40 00          	nopl   0x0(%rax)
    ce78:	4c 8b 76 08          	mov    0x8(%rsi),%r14
    ce7c:	4a 8d 3c f5 00 00 00 	lea    0x0(,%r14,8),%rdi
    ce83:	00 
    ce84:	e8 c7 55 ff ff       	callq  2450 <malloc@plt>
    ce89:	49 89 c5             	mov    %rax,%r13
    ce8c:	48 85 c0             	test   %rax,%rax
    ce8f:	74 13                	je     cea4 <Pvector_copy+0x74>
    ce91:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    ce95:	e8 36 54 ff ff       	callq  22d0 <free@plt>
    ce9a:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    ce9e:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    cea2:	eb ab                	jmp    ce4f <Pvector_copy+0x1f>
    cea4:	31 c0                	xor    %eax,%eax
    cea6:	eb c3                	jmp    ce6b <Pvector_copy+0x3b>
    cea8:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ceaf:	00 00 00 
    ceb2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ceb9:	00 00 00 
    cebc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000cec0 <rollover_clock>:
    cec0:	f3 0f 1e fa          	endbr64 
    cec4:	48 83 ec 08          	sub    $0x8,%rsp
    cec8:	48 8d 3d a8 cf 00 00 	lea    0xcfa8(%rip),%rdi        # 19e77 <__PRETTY_FUNCTION__.3713+0xf>
    cecf:	e8 4c 54 ff ff       	callq  2320 <puts@plt>
    ced4:	31 ff                	xor    %edi,%edi
    ced6:	e8 85 55 ff ff       	callq  2460 <fflush@plt>
    cedb:	ba 00 00 80 00       	mov    $0x800000,%edx
    cee0:	31 f6                	xor    %esi,%esi
    cee2:	48 8d 3d d7 32 01 00 	lea    0x132d7(%rip),%rdi        # 201c0 <_tinystm>
    cee9:	48 c7 05 4c 33 81 00 	movq   $0x0,0x81334c(%rip)        # 820240 <_tinystm+0x800080>
    cef0:	00 00 00 00 
    cef4:	e8 b7 54 ff ff       	callq  23b0 <memset@plt>
    cef9:	48 83 c4 08          	add    $0x8,%rsp
    cefd:	e9 7e ad 00 00       	jmpq   17c80 <gc_reset>
    cf02:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    cf09:	00 00 00 00 
    cf0d:	0f 1f 00             	nopl   (%rax)

000000000000cf10 <stm_get_clock>:
    cf10:	f3 0f 1e fa          	endbr64 
    cf14:	48 8b 05 25 33 81 00 	mov    0x813325(%rip),%rax        # 820240 <_tinystm+0x800080>
    cf1b:	c3                   	retq   
    cf1c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000cf20 <stm_allocate_rs_entries>:
    cf20:	55                   	push   %rbp
    cf21:	41 89 f1             	mov    %esi,%r9d
    cf24:	89 f5                	mov    %esi,%ebp
    cf26:	53                   	push   %rbx
    cf27:	48 89 fa             	mov    %rdi,%rdx
    cf2a:	31 c0                	xor    %eax,%eax
    cf2c:	48 83 ec 18          	sub    $0x18,%rsp
    cf30:	48 8b 8f d8 00 00 00 	mov    0xd8(%rdi),%rcx
    cf37:	4c 8b 87 e0 00 00 00 	mov    0xe0(%rdi),%r8
    cf3e:	48 89 fb             	mov    %rdi,%rbx
    cf41:	48 8d 35 f8 d0 00 00 	lea    0xd0f8(%rip),%rsi        # 1a040 <__PRETTY_FUNCTION__.3713+0x1d8>
    cf48:	bf 01 00 00 00       	mov    $0x1,%edi
    cf4d:	e8 3e 55 ff ff       	callq  2490 <__printf_chk@plt>
    cf52:	31 ff                	xor    %edi,%edi
    cf54:	e8 07 55 ff ff       	callq  2460 <fflush@plt>
    cf59:	85 ed                	test   %ebp,%ebp
    cf5b:	74 33                	je     cf90 <stm_allocate_rs_entries+0x70>
    cf5d:	8b 83 f4 00 00 00    	mov    0xf4(%rbx),%eax
    cf63:	48 8b bb e8 00 00 00 	mov    0xe8(%rbx),%rdi
    cf6a:	8d 34 00             	lea    (%rax,%rax,1),%esi
    cf6d:	89 b3 f4 00 00 00    	mov    %esi,0xf4(%rbx)
    cf73:	48 c1 e6 04          	shl    $0x4,%rsi
    cf77:	e8 04 55 ff ff       	callq  2480 <realloc@plt>
    cf7c:	48 85 c0             	test   %rax,%rax
    cf7f:	74 6f                	je     cff0 <stm_allocate_rs_entries+0xd0>
    cf81:	48 89 83 e8 00 00 00 	mov    %rax,0xe8(%rbx)
    cf88:	48 83 c4 18          	add    $0x18,%rsp
    cf8c:	5b                   	pop    %rbx
    cf8d:	5d                   	pop    %rbp
    cf8e:	c3                   	retq   
    cf8f:	90                   	nop
    cf90:	8b 93 f4 00 00 00    	mov    0xf4(%rbx),%edx
    cf96:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    cf9b:	48 c1 e2 04          	shl    $0x4,%rdx
    cf9f:	be 40 00 00 00       	mov    $0x40,%esi
    cfa4:	e8 97 55 ff ff       	callq  2540 <posix_memalign@plt>
    cfa9:	85 c0                	test   %eax,%eax
    cfab:	75 13                	jne    cfc0 <stm_allocate_rs_entries+0xa0>
    cfad:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    cfb2:	48 85 c0             	test   %rax,%rax
    cfb5:	75 ca                	jne    cf81 <stm_allocate_rs_entries+0x61>
    cfb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cfbe:	00 00 
    cfc0:	48 8b 0d 39 31 01 00 	mov    0x13139(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    cfc7:	48 8d 3d a2 d0 00 00 	lea    0xd0a2(%rip),%rdi        # 1a070 <__PRETTY_FUNCTION__.3713+0x208>
    cfce:	ba 20 00 00 00       	mov    $0x20,%edx
    cfd3:	be 01 00 00 00       	mov    $0x1,%esi
    cfd8:	e8 43 55 ff ff       	callq  2520 <fwrite@plt>
    cfdd:	bf 01 00 00 00       	mov    $0x1,%edi
    cfe2:	e8 29 55 ff ff       	callq  2510 <exit@plt>
    cfe7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cfee:	00 00 
    cff0:	48 8d 3d 95 ce 00 00 	lea    0xce95(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
    cff7:	e8 e4 54 ff ff       	callq  24e0 <perror@plt>
    cffc:	bf 01 00 00 00       	mov    $0x1,%edi
    d001:	e8 0a 55 ff ff       	callq  2510 <exit@plt>
    d006:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d00d:	00 00 00 

000000000000d010 <stm_allocate_ws_entries>:
    d010:	41 56                	push   %r14
    d012:	41 55                	push   %r13
    d014:	41 54                	push   %r12
    d016:	55                   	push   %rbp
    d017:	53                   	push   %rbx
    d018:	48 89 fb             	mov    %rdi,%rbx
    d01b:	48 83 ec 10          	sub    $0x10,%rsp
    d01f:	4c 8b 87 e0 00 00 00 	mov    0xe0(%rdi),%r8
    d026:	48 8b 8f d8 00 00 00 	mov    0xd8(%rdi),%rcx
    d02d:	85 f6                	test   %esi,%esi
    d02f:	0f 84 a3 00 00 00    	je     d0d8 <stm_allocate_ws_entries+0xc8>
    d035:	48 89 fa             	mov    %rdi,%rdx
    d038:	44 8b af 04 01 00 00 	mov    0x104(%rdi),%r13d
    d03f:	48 8d 35 52 d0 00 00 	lea    0xd052(%rip),%rsi        # 1a098 <__PRETTY_FUNCTION__.3713+0x230>
    d046:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    d04c:	bf 01 00 00 00       	mov    $0x1,%edi
    d051:	31 c0                	xor    %eax,%eax
    d053:	e8 38 54 ff ff       	callq  2490 <__printf_chk@plt>
    d058:	31 ff                	xor    %edi,%edi
    d05a:	e8 01 54 ff ff       	callq  2460 <fflush@plt>
    d05f:	8b 83 04 01 00 00    	mov    0x104(%rbx),%eax
    d065:	48 89 e7             	mov    %rsp,%rdi
    d068:	8d 14 00             	lea    (%rax,%rax,1),%edx
    d06b:	89 93 04 01 00 00    	mov    %edx,0x104(%rbx)
    d071:	49 89 d4             	mov    %rdx,%r12
    d074:	be 40 00 00 00       	mov    $0x40,%esi
    d079:	48 c1 e2 06          	shl    $0x6,%rdx
    d07d:	4c 8b b3 f8 00 00 00 	mov    0xf8(%rbx),%r14
    d084:	44 89 ed             	mov    %r13d,%ebp
    d087:	e8 b4 54 ff ff       	callq  2540 <posix_memalign@plt>
    d08c:	85 c0                	test   %eax,%eax
    d08e:	0f 85 dc 00 00 00    	jne    d170 <stm_allocate_ws_entries+0x160>
    d094:	48 8b 3c 24          	mov    (%rsp),%rdi
    d098:	48 85 ff             	test   %rdi,%rdi
    d09b:	0f 84 cf 00 00 00    	je     d170 <stm_allocate_ws_entries+0x160>
    d0a1:	48 89 bb f8 00 00 00 	mov    %rdi,0xf8(%rbx)
    d0a8:	44 89 e2             	mov    %r12d,%edx
    d0ab:	d1 ea                	shr    %edx
    d0ad:	4c 89 f6             	mov    %r14,%rsi
    d0b0:	48 c1 e2 06          	shl    $0x6,%rdx
    d0b4:	e8 57 53 ff ff       	callq  2410 <memcpy@plt>
    d0b9:	48 8b 35 80 31 81 00 	mov    0x813180(%rip),%rsi        # 820240 <_tinystm+0x800080>
    d0c0:	4c 89 f7             	mov    %r14,%rdi
    d0c3:	e8 28 a9 00 00       	callq  179f0 <gc_free>
    d0c8:	44 8b a3 04 01 00 00 	mov    0x104(%rbx),%r12d
    d0cf:	eb 5d                	jmp    d12e <stm_allocate_ws_entries+0x11e>
    d0d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d0d8:	48 89 fa             	mov    %rdi,%rdx
    d0db:	45 31 c9             	xor    %r9d,%r9d
    d0de:	48 8d 35 b3 cf 00 00 	lea    0xcfb3(%rip),%rsi        # 1a098 <__PRETTY_FUNCTION__.3713+0x230>
    d0e5:	bf 01 00 00 00       	mov    $0x1,%edi
    d0ea:	31 c0                	xor    %eax,%eax
    d0ec:	e8 9f 53 ff ff       	callq  2490 <__printf_chk@plt>
    d0f1:	31 ff                	xor    %edi,%edi
    d0f3:	e8 68 53 ff ff       	callq  2460 <fflush@plt>
    d0f8:	8b 93 04 01 00 00    	mov    0x104(%rbx),%edx
    d0fe:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    d103:	49 89 d4             	mov    %rdx,%r12
    d106:	be 40 00 00 00       	mov    $0x40,%esi
    d10b:	48 c1 e2 06          	shl    $0x6,%rdx
    d10f:	e8 2c 54 ff ff       	callq  2540 <posix_memalign@plt>
    d114:	89 c5                	mov    %eax,%ebp
    d116:	85 c0                	test   %eax,%eax
    d118:	75 56                	jne    d170 <stm_allocate_ws_entries+0x160>
    d11a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    d11f:	48 85 c0             	test   %rax,%rax
    d122:	74 4c                	je     d170 <stm_allocate_ws_entries+0x160>
    d124:	48 89 83 f8 00 00 00 	mov    %rax,0xf8(%rbx)
    d12b:	45 31 ed             	xor    %r13d,%r13d
    d12e:	48 63 c5             	movslq %ebp,%rax
    d131:	48 c1 e0 06          	shl    $0x6,%rax
    d135:	45 39 ec             	cmp    %r13d,%r12d
    d138:	76 20                	jbe    d15a <stm_allocate_ws_entries+0x14a>
    d13a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d140:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
    d147:	ff c5                	inc    %ebp
    d149:	48 89 5c 02 28       	mov    %rbx,0x28(%rdx,%rax,1)
    d14e:	48 83 c0 40          	add    $0x40,%rax
    d152:	39 ab 04 01 00 00    	cmp    %ebp,0x104(%rbx)
    d158:	77 e6                	ja     d140 <stm_allocate_ws_entries+0x130>
    d15a:	48 83 c4 10          	add    $0x10,%rsp
    d15e:	5b                   	pop    %rbx
    d15f:	5d                   	pop    %rbp
    d160:	41 5c                	pop    %r12
    d162:	41 5d                	pop    %r13
    d164:	41 5e                	pop    %r14
    d166:	c3                   	retq   
    d167:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d16e:	00 00 
    d170:	48 8b 0d 89 2f 01 00 	mov    0x12f89(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    d177:	48 8d 3d f2 ce 00 00 	lea    0xcef2(%rip),%rdi        # 1a070 <__PRETTY_FUNCTION__.3713+0x208>
    d17e:	ba 20 00 00 00       	mov    $0x20,%edx
    d183:	be 01 00 00 00       	mov    $0x1,%esi
    d188:	e8 93 53 ff ff       	callq  2520 <fwrite@plt>
    d18d:	bf 01 00 00 00       	mov    $0x1,%edi
    d192:	e8 79 53 ff ff       	callq  2510 <exit@plt>
    d197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d19e:	00 00 

000000000000d1a0 <stm_quiesce_barrier.isra.0.constprop.0>:
    d1a0:	53                   	push   %rbx
    d1a1:	48 8d 3d ec cc 00 00 	lea    0xccec(%rip),%rdi        # 19e94 <__PRETTY_FUNCTION__.3713+0x2c>
    d1a8:	e8 73 51 ff ff       	callq  2320 <puts@plt>
    d1ad:	31 ff                	xor    %edi,%edi
    d1af:	e8 ac 52 ff ff       	callq  2460 <fflush@plt>
    d1b4:	48 8d 3d fd 34 81 00 	lea    0x8134fd(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    d1bb:	e8 b0 53 ff ff       	callq  2570 <pthread_mutex_lock@plt>
    d1c0:	48 8b 05 e1 34 81 00 	mov    0x8134e1(%rip),%rax        # 8206a8 <_tinystm+0x8004e8>
    d1c7:	48 ff c8             	dec    %rax
    d1ca:	48 89 05 d7 34 81 00 	mov    %rax,0x8134d7(%rip)        # 8206a8 <_tinystm+0x8004e8>
    d1d1:	48 8b 05 c8 34 81 00 	mov    0x8134c8(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
    d1d8:	48 85 c0             	test   %rax,%rax
    d1db:	75 0b                	jne    d1e8 <stm_quiesce_barrier.isra.0.constprop.0+0x48>
    d1dd:	48 c7 05 b8 34 81 00 	movq   $0x1,0x8134b8(%rip)        # 8206a0 <_tinystm+0x8004e0>
    d1e4:	01 00 00 00 
    d1e8:	48 8b 05 b1 34 81 00 	mov    0x8134b1(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
    d1ef:	48 85 c0             	test   %rax,%rax
    d1f2:	0f 84 90 00 00 00    	je     d288 <stm_quiesce_barrier.isra.0.constprop.0+0xe8>
    d1f8:	48 8d 1d b9 34 81 00 	lea    0x8134b9(%rip),%rbx        # 8206b8 <_tinystm+0x8004f8>
    d1ff:	eb 60                	jmp    d261 <stm_quiesce_barrier.isra.0.constprop.0+0xc1>
    d201:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d208:	48 8d 3d 68 cc 00 00 	lea    0xcc68(%rip),%rdi        # 19e77 <__PRETTY_FUNCTION__.3713+0xf>
    d20f:	e8 0c 51 ff ff       	callq  2320 <puts@plt>
    d214:	31 ff                	xor    %edi,%edi
    d216:	e8 45 52 ff ff       	callq  2460 <fflush@plt>
    d21b:	ba 00 00 80 00       	mov    $0x800000,%edx
    d220:	31 f6                	xor    %esi,%esi
    d222:	48 8d 3d 97 2f 01 00 	lea    0x12f97(%rip),%rdi        # 201c0 <_tinystm>
    d229:	48 c7 05 0c 30 81 00 	movq   $0x0,0x81300c(%rip)        # 820240 <_tinystm+0x800080>
    d230:	00 00 00 00 
    d234:	e8 77 51 ff ff       	callq  23b0 <memset@plt>
    d239:	e8 42 aa 00 00       	callq  17c80 <gc_reset>
    d23e:	48 8d 3d 9b 34 81 00 	lea    0x81349b(%rip),%rdi        # 8206e0 <_tinystm+0x800520>
    d245:	48 c7 05 50 34 81 00 	movq   $0x0,0x813450(%rip)        # 8206a0 <_tinystm+0x8004e0>
    d24c:	00 00 00 00 
    d250:	e8 bb 50 ff ff       	callq  2310 <pthread_cond_broadcast@plt>
    d255:	48 8b 05 44 34 81 00 	mov    0x813444(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
    d25c:	48 85 c0             	test   %rax,%rax
    d25f:	74 27                	je     d288 <stm_quiesce_barrier.isra.0.constprop.0+0xe8>
    d261:	48 8b 05 40 34 81 00 	mov    0x813440(%rip),%rax        # 8206a8 <_tinystm+0x8004e8>
    d268:	48 85 c0             	test   %rax,%rax
    d26b:	74 9b                	je     d208 <stm_quiesce_barrier.isra.0.constprop.0+0x68>
    d26d:	48 89 de             	mov    %rbx,%rsi
    d270:	48 8d 3d 69 34 81 00 	lea    0x813469(%rip),%rdi        # 8206e0 <_tinystm+0x800520>
    d277:	e8 d4 50 ff ff       	callq  2350 <pthread_cond_wait@plt>
    d27c:	48 8b 05 1d 34 81 00 	mov    0x81341d(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
    d283:	48 85 c0             	test   %rax,%rax
    d286:	75 d9                	jne    d261 <stm_quiesce_barrier.isra.0.constprop.0+0xc1>
    d288:	48 8b 05 19 34 81 00 	mov    0x813419(%rip),%rax        # 8206a8 <_tinystm+0x8004e8>
    d28f:	48 8d 3d 22 34 81 00 	lea    0x813422(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    d296:	48 ff c0             	inc    %rax
    d299:	5b                   	pop    %rbx
    d29a:	48 89 05 07 34 81 00 	mov    %rax,0x813407(%rip)        # 8206a8 <_tinystm+0x8004e8>
    d2a1:	e9 9a 51 ff ff       	jmpq   2440 <pthread_mutex_unlock@plt>
    d2a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d2ad:	00 00 00 

000000000000d2b0 <stm_init>:
    d2b0:	f3 0f 1e fa          	endbr64 
    d2b4:	48 83 ec 08          	sub    $0x8,%rsp
    d2b8:	48 8d 3d ef cb 00 00 	lea    0xcbef(%rip),%rdi        # 19eae <__PRETTY_FUNCTION__.3713+0x46>
    d2bf:	e8 5c 50 ff ff       	callq  2320 <puts@plt>
    d2c4:	31 ff                	xor    %edi,%edi
    d2c6:	e8 95 51 ff ff       	callq  2460 <fflush@plt>
    d2cb:	8b 05 bf 33 81 00    	mov    0x8133bf(%rip),%eax        # 820690 <_tinystm+0x8004d0>
    d2d1:	85 c0                	test   %eax,%eax
    d2d3:	74 0b                	je     d2e0 <stm_init+0x30>
    d2d5:	48 83 c4 08          	add    $0x8,%rsp
    d2d9:	c3                   	retq   
    d2da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d2e0:	ba 08 00 00 00       	mov    $0x8,%edx
    d2e5:	48 8d 35 d1 cb 00 00 	lea    0xcbd1(%rip),%rsi        # 19ebd <__PRETTY_FUNCTION__.3713+0x55>
    d2ec:	bf 01 00 00 00       	mov    $0x1,%edi
    d2f1:	31 c0                	xor    %eax,%eax
    d2f3:	e8 98 51 ff ff       	callq  2490 <__printf_chk@plt>
    d2f8:	31 ff                	xor    %edi,%edi
    d2fa:	e8 61 51 ff ff       	callq  2460 <fflush@plt>
    d2ff:	48 ba ff df ff ff ff 	movabs $0xfffffffffffdfff,%rdx
    d306:	ff ff 0f 
    d309:	48 8d 35 bf cb 00 00 	lea    0xcbbf(%rip),%rsi        # 19ecf <__PRETTY_FUNCTION__.3713+0x67>
    d310:	bf 01 00 00 00       	mov    $0x1,%edi
    d315:	31 c0                	xor    %eax,%eax
    d317:	e8 74 51 ff ff       	callq  2490 <__printf_chk@plt>
    d31c:	31 ff                	xor    %edi,%edi
    d31e:	e8 3d 51 ff ff       	callq  2460 <fflush@plt>
    d323:	48 8d 3d e6 fb ff ff 	lea    -0x41a(%rip),%rdi        # cf10 <stm_get_clock>
    d32a:	e8 21 a2 00 00       	callq  17550 <gc_init>
    d32f:	31 f6                	xor    %esi,%esi
    d331:	ba 00 00 80 00       	mov    $0x800000,%edx
    d336:	48 8d 3d 83 2e 01 00 	lea    0x12e83(%rip),%rdi        # 201c0 <_tinystm>
    d33d:	e8 6e 50 ff ff       	callq  23b0 <memset@plt>
    d342:	48 8d 3d 9a cb 00 00 	lea    0xcb9a(%rip),%rdi        # 19ee3 <__PRETTY_FUNCTION__.3713+0x7b>
    d349:	48 c7 05 ec 2e 81 00 	movq   $0x0,0x812eec(%rip)        # 820240 <_tinystm+0x800080>
    d350:	00 00 00 00 
    d354:	e8 c7 4f ff ff       	callq  2320 <puts@plt>
    d359:	31 ff                	xor    %edi,%edi
    d35b:	e8 00 51 ff ff       	callq  2460 <fflush@plt>
    d360:	31 f6                	xor    %esi,%esi
    d362:	48 8d 3d 4f 33 81 00 	lea    0x81334f(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    d369:	e8 f2 51 ff ff       	callq  2560 <pthread_mutex_init@plt>
    d36e:	85 c0                	test   %eax,%eax
    d370:	75 5c                	jne    d3ce <stm_init+0x11e>
    d372:	31 f6                	xor    %esi,%esi
    d374:	48 8d 3d 65 33 81 00 	lea    0x813365(%rip),%rdi        # 8206e0 <_tinystm+0x800520>
    d37b:	e8 a0 50 ff ff       	callq  2420 <pthread_cond_init@plt>
    d380:	85 c0                	test   %eax,%eax
    d382:	75 71                	jne    d3f5 <stm_init+0x145>
    d384:	48 c7 05 11 33 81 00 	movq   $0x0,0x813311(%rip)        # 8206a0 <_tinystm+0x8004e0>
    d38b:	00 00 00 00 
    d38f:	48 c7 05 16 33 81 00 	movq   $0x0,0x813316(%rip)        # 8206b0 <_tinystm+0x8004f0>
    d396:	00 00 00 00 
    d39a:	48 c7 05 03 33 81 00 	movq   $0x0,0x813303(%rip)        # 8206a8 <_tinystm+0x8004e8>
    d3a1:	00 00 00 00 
    d3a5:	64 48 c7 04 25 f8 ff 	movq   $0x0,%fs:0xfffffffffffffff8
    d3ac:	ff ff 00 00 00 00 
    d3b2:	64 48 c7 04 25 f0 ff 	movq   $0x0,%fs:0xfffffffffffffff0
    d3b9:	ff ff 00 00 00 00 
    d3bf:	c7 05 c7 32 81 00 01 	movl   $0x1,0x8132c7(%rip)        # 820690 <_tinystm+0x8004d0>
    d3c6:	00 00 00 
    d3c9:	48 83 c4 08          	add    $0x8,%rsp
    d3cd:	c3                   	retq   
    d3ce:	48 8b 0d 2b 2d 01 00 	mov    0x12d2b(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    d3d5:	48 8d 3d 1e cb 00 00 	lea    0xcb1e(%rip),%rdi        # 19efa <__PRETTY_FUNCTION__.3713+0x92>
    d3dc:	ba 15 00 00 00       	mov    $0x15,%edx
    d3e1:	be 01 00 00 00       	mov    $0x1,%esi
    d3e6:	e8 35 51 ff ff       	callq  2520 <fwrite@plt>
    d3eb:	bf 01 00 00 00       	mov    $0x1,%edi
    d3f0:	e8 1b 51 ff ff       	callq  2510 <exit@plt>
    d3f5:	48 8b 0d 04 2d 01 00 	mov    0x12d04(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    d3fc:	48 8d 3d c5 cc 00 00 	lea    0xccc5(%rip),%rdi        # 1a0c8 <__PRETTY_FUNCTION__.3713+0x260>
    d403:	ba 22 00 00 00       	mov    $0x22,%edx
    d408:	be 01 00 00 00       	mov    $0x1,%esi
    d40d:	e8 0e 51 ff ff       	callq  2520 <fwrite@plt>
    d412:	bf 01 00 00 00       	mov    $0x1,%edi
    d417:	e8 f4 50 ff ff       	callq  2510 <exit@plt>
    d41c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000d420 <stm_exit>:
    d420:	f3 0f 1e fa          	endbr64 
    d424:	48 83 ec 08          	sub    $0x8,%rsp
    d428:	48 8d 3d e1 ca 00 00 	lea    0xcae1(%rip),%rdi        # 19f10 <__PRETTY_FUNCTION__.3713+0xa8>
    d42f:	e8 ec 4e ff ff       	callq  2320 <puts@plt>
    d434:	31 ff                	xor    %edi,%edi
    d436:	e8 25 50 ff ff       	callq  2460 <fflush@plt>
    d43b:	8b 05 4f 32 81 00    	mov    0x81324f(%rip),%eax        # 820690 <_tinystm+0x8004d0>
    d441:	85 c0                	test   %eax,%eax
    d443:	74 54                	je     d499 <stm_exit+0x79>
    d445:	64 48 c7 04 25 f8 ff 	movq   $0x0,%fs:0xfffffffffffffff8
    d44c:	ff ff 00 00 00 00 
    d452:	64 48 c7 04 25 f0 ff 	movq   $0x0,%fs:0xfffffffffffffff0
    d459:	ff ff 00 00 00 00 
    d45f:	48 8d 3d b9 ca 00 00 	lea    0xcab9(%rip),%rdi        # 19f1f <__PRETTY_FUNCTION__.3713+0xb7>
    d466:	e8 b5 4e ff ff       	callq  2320 <puts@plt>
    d46b:	31 ff                	xor    %edi,%edi
    d46d:	e8 ee 4f ff ff       	callq  2460 <fflush@plt>
    d472:	48 8d 3d 67 32 81 00 	lea    0x813267(%rip),%rdi        # 8206e0 <_tinystm+0x800520>
    d479:	e8 52 50 ff ff       	callq  24d0 <pthread_cond_destroy@plt>
    d47e:	48 8d 3d 33 32 81 00 	lea    0x813233(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    d485:	e8 f6 4e ff ff       	callq  2380 <pthread_mutex_destroy@plt>
    d48a:	e8 71 a1 00 00       	callq  17600 <gc_exit>
    d48f:	c7 05 f7 31 81 00 00 	movl   $0x0,0x8131f7(%rip)        # 820690 <_tinystm+0x8004d0>
    d496:	00 00 00 
    d499:	48 83 c4 08          	add    $0x8,%rsp
    d49d:	c3                   	retq   
    d49e:	66 90                	xchg   %ax,%ax

000000000000d4a0 <stm_init_thread>:
    d4a0:	f3 0f 1e fa          	endbr64 
    d4a4:	41 54                	push   %r12
    d4a6:	48 8d 3d 89 ca 00 00 	lea    0xca89(%rip),%rdi        # 19f36 <__PRETTY_FUNCTION__.3713+0xce>
    d4ad:	55                   	push   %rbp
    d4ae:	53                   	push   %rbx
    d4af:	48 83 ec 10          	sub    $0x10,%rsp
    d4b3:	e8 68 4e ff ff       	callq  2320 <puts@plt>
    d4b8:	31 ff                	xor    %edi,%edi
    d4ba:	e8 a1 4f ff ff       	callq  2460 <fflush@plt>
    d4bf:	64 4c 8b 24 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%r12
    d4c6:	ff ff 
    d4c8:	4d 85 e4             	test   %r12,%r12
    d4cb:	74 13                	je     d4e0 <stm_init_thread+0x40>
    d4cd:	48 83 c4 10          	add    $0x10,%rsp
    d4d1:	5b                   	pop    %rbx
    d4d2:	5d                   	pop    %rbp
    d4d3:	4c 89 e0             	mov    %r12,%rax
    d4d6:	41 5c                	pop    %r12
    d4d8:	c3                   	retq   
    d4d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d4e0:	e8 1b a2 00 00       	callq  17700 <gc_init_thread>
    d4e5:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    d4ea:	ba 60 01 00 00       	mov    $0x160,%edx
    d4ef:	be 40 00 00 00       	mov    $0x40,%esi
    d4f4:	e8 47 50 ff ff       	callq  2540 <posix_memalign@plt>
    d4f9:	85 c0                	test   %eax,%eax
    d4fb:	0f 85 4f 01 00 00    	jne    d650 <stm_init_thread+0x1b0>
    d501:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    d506:	4d 85 e4             	test   %r12,%r12
    d509:	0f 84 41 01 00 00    	je     d650 <stm_init_thread+0x1b0>
    d50f:	48 bb 00 00 00 00 00 	movabs $0x100000000000,%rbx
    d516:	10 00 00 
    d519:	41 c7 84 24 c8 00 00 	movl   $0x0,0xc8(%r12)
    d520:	00 00 00 00 00 
    d525:	49 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%r12)
    d52c:	00 00 00 00 00 
    d531:	49 89 9c 24 f0 00 00 	mov    %rbx,0xf0(%r12)
    d538:	00 
    d539:	31 f6                	xor    %esi,%esi
    d53b:	4c 89 e7             	mov    %r12,%rdi
    d53e:	e8 dd f9 ff ff       	callq  cf20 <stm_allocate_rs_entries>
    d543:	49 89 9c 24 00 01 00 	mov    %rbx,0x100(%r12)
    d54a:	00 
    d54b:	41 c7 84 24 08 01 00 	movl   $0x0,0x108(%r12)
    d552:	00 00 00 00 00 
    d557:	31 f6                	xor    %esi,%esi
    d559:	4c 89 e7             	mov    %r12,%rdi
    d55c:	e8 af fa ff ff       	callq  d010 <stm_allocate_ws_entries>
    d561:	41 c7 84 24 14 01 00 	movl   $0x0,0x114(%r12)
    d568:	00 00 00 00 00 
    d56d:	49 c7 84 24 48 01 00 	movq   $0x0,0x148(%r12)
    d574:	00 00 00 00 00 
    d579:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    d57d:	c4 c1 78 11 84 24 18 	vmovups %xmm0,0x118(%r12)
    d584:	01 00 00 
    d587:	c4 c1 78 11 84 24 28 	vmovups %xmm0,0x128(%r12)
    d58e:	01 00 00 
    d591:	c4 c1 78 11 84 24 38 	vmovups %xmm0,0x138(%r12)
    d598:	01 00 00 
    d59b:	e8 20 4f ff ff       	callq  24c0 <pthread_self@plt>
    d5a0:	41 80 a4 24 10 01 00 	andb   $0xf0,0x110(%r12)
    d5a7:	00 f0 
    d5a9:	49 89 84 24 58 01 00 	mov    %rax,0x158(%r12)
    d5b0:	00 
    d5b1:	64 4c 89 24 25 f8 ff 	mov    %r12,%fs:0xfffffffffffffff8
    d5b8:	ff ff 
    d5ba:	4c 89 e2             	mov    %r12,%rdx
    d5bd:	48 8d 35 2c cb 00 00 	lea    0xcb2c(%rip),%rsi        # 1a0f0 <__PRETTY_FUNCTION__.3713+0x288>
    d5c4:	bf 01 00 00 00       	mov    $0x1,%edi
    d5c9:	31 c0                	xor    %eax,%eax
    d5cb:	e8 c0 4e ff ff       	callq  2490 <__printf_chk@plt>
    d5d0:	31 ff                	xor    %edi,%edi
    d5d2:	e8 89 4e ff ff       	callq  2460 <fflush@plt>
    d5d7:	48 8d 3d da 30 81 00 	lea    0x8130da(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    d5de:	e8 8d 4f ff ff       	callq  2570 <pthread_mutex_lock@plt>
    d5e3:	48 8b 05 c6 30 81 00 	mov    0x8130c6(%rip),%rax        # 8206b0 <_tinystm+0x8004f0>
    d5ea:	48 8d 3d c7 30 81 00 	lea    0x8130c7(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    d5f1:	49 89 84 24 50 01 00 	mov    %rax,0x150(%r12)
    d5f8:	00 
    d5f9:	48 8b 05 a8 30 81 00 	mov    0x8130a8(%rip),%rax        # 8206a8 <_tinystm+0x8004e8>
    d600:	4c 89 25 a9 30 81 00 	mov    %r12,0x8130a9(%rip)        # 8206b0 <_tinystm+0x8004f0>
    d607:	48 ff c0             	inc    %rax
    d60a:	48 89 05 97 30 81 00 	mov    %rax,0x813097(%rip)        # 8206a8 <_tinystm+0x8004e8>
    d611:	e8 2a 4e ff ff       	callq  2440 <pthread_mutex_unlock@plt>
    d616:	8b 05 a8 2d 81 00    	mov    0x812da8(%rip),%eax        # 8203c4 <_tinystm+0x800204>
    d61c:	85 c0                	test   %eax,%eax
    d61e:	0f 84 a9 fe ff ff    	je     d4cd <stm_init_thread+0x2d>
    d624:	48 8d 1d 9d 2d 81 00 	lea    0x812d9d(%rip),%rbx        # 8203c8 <_tinystm+0x800208>
    d62b:	31 ed                	xor    %ebp,%ebp
    d62d:	0f 1f 00             	nopl   (%rax)
    d630:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    d634:	ff c5                	inc    %ebp
    d636:	ff 13                	callq  *(%rbx)
    d638:	48 83 c3 10          	add    $0x10,%rbx
    d63c:	3b 2d 82 2d 81 00    	cmp    0x812d82(%rip),%ebp        # 8203c4 <_tinystm+0x800204>
    d642:	72 ec                	jb     d630 <stm_init_thread+0x190>
    d644:	48 83 c4 10          	add    $0x10,%rsp
    d648:	5b                   	pop    %rbx
    d649:	5d                   	pop    %rbp
    d64a:	4c 89 e0             	mov    %r12,%rax
    d64d:	41 5c                	pop    %r12
    d64f:	c3                   	retq   
    d650:	48 8b 0d a9 2a 01 00 	mov    0x12aa9(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    d657:	48 8d 3d 12 ca 00 00 	lea    0xca12(%rip),%rdi        # 1a070 <__PRETTY_FUNCTION__.3713+0x208>
    d65e:	ba 20 00 00 00       	mov    $0x20,%edx
    d663:	be 01 00 00 00       	mov    $0x1,%esi
    d668:	e8 b3 4e ff ff       	callq  2520 <fwrite@plt>
    d66d:	bf 01 00 00 00       	mov    $0x1,%edi
    d672:	e8 99 4e ff ff       	callq  2510 <exit@plt>
    d677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d67e:	00 00 

000000000000d680 <stm_exit_thread>:
    d680:	f3 0f 1e fa          	endbr64 
    d684:	41 54                	push   %r12
    d686:	48 8d 35 8b ca 00 00 	lea    0xca8b(%rip),%rsi        # 1a118 <__PRETTY_FUNCTION__.3713+0x2b0>
    d68d:	bf 01 00 00 00       	mov    $0x1,%edi
    d692:	55                   	push   %rbp
    d693:	31 c0                	xor    %eax,%eax
    d695:	53                   	push   %rbx
    d696:	64 4c 8b 24 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%r12
    d69d:	ff ff 
    d69f:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
    d6a6:	00 
    d6a7:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
    d6ae:	00 
    d6af:	4c 89 e2             	mov    %r12,%rdx
    d6b2:	e8 d9 4d ff ff       	callq  2490 <__printf_chk@plt>
    d6b7:	31 ff                	xor    %edi,%edi
    d6b9:	e8 a2 4d ff ff       	callq  2460 <fflush@plt>
    d6be:	8b 05 74 2d 81 00    	mov    0x812d74(%rip),%eax        # 820438 <_tinystm+0x800278>
    d6c4:	85 c0                	test   %eax,%eax
    d6c6:	74 24                	je     d6ec <stm_exit_thread+0x6c>
    d6c8:	48 8d 1d 71 2d 81 00 	lea    0x812d71(%rip),%rbx        # 820440 <_tinystm+0x800280>
    d6cf:	31 ed                	xor    %ebp,%ebp
    d6d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d6d8:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    d6dc:	ff c5                	inc    %ebp
    d6de:	ff 13                	callq  *(%rbx)
    d6e0:	48 83 c3 10          	add    $0x10,%rbx
    d6e4:	3b 2d 4e 2d 81 00    	cmp    0x812d4e(%rip),%ebp        # 820438 <_tinystm+0x800278>
    d6ea:	72 ec                	jb     d6d8 <stm_exit_thread+0x58>
    d6ec:	4c 89 e2             	mov    %r12,%rdx
    d6ef:	48 8d 35 4a ca 00 00 	lea    0xca4a(%rip),%rsi        # 1a140 <__PRETTY_FUNCTION__.3713+0x2d8>
    d6f6:	bf 01 00 00 00       	mov    $0x1,%edi
    d6fb:	31 c0                	xor    %eax,%eax
    d6fd:	e8 8e 4d ff ff       	callq  2490 <__printf_chk@plt>
    d702:	31 ff                	xor    %edi,%edi
    d704:	e8 57 4d ff ff       	callq  2460 <fflush@plt>
    d709:	48 8d 3d a8 2f 81 00 	lea    0x812fa8(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    d710:	e8 5b 4e ff ff       	callq  2570 <pthread_mutex_lock@plt>
    d715:	48 8b 05 94 2f 81 00 	mov    0x812f94(%rip),%rax        # 8206b0 <_tinystm+0x8004f0>
    d71c:	4c 39 e0             	cmp    %r12,%rax
    d71f:	0f 84 ab 00 00 00    	je     d7d0 <stm_exit_thread+0x150>
    d725:	0f 1f 00             	nopl   (%rax)
    d728:	48 89 c2             	mov    %rax,%rdx
    d72b:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    d732:	4c 39 e0             	cmp    %r12,%rax
    d735:	75 f1                	jne    d728 <stm_exit_thread+0xa8>
    d737:	49 8b 84 24 50 01 00 	mov    0x150(%r12),%rax
    d73e:	00 
    d73f:	48 89 82 50 01 00 00 	mov    %rax,0x150(%rdx)
    d746:	48 8b 05 5b 2f 81 00 	mov    0x812f5b(%rip),%rax        # 8206a8 <_tinystm+0x8004e8>
    d74d:	48 ff c8             	dec    %rax
    d750:	48 89 05 51 2f 81 00 	mov    %rax,0x812f51(%rip)        # 8206a8 <_tinystm+0x8004e8>
    d757:	48 8b 05 42 2f 81 00 	mov    0x812f42(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
    d75e:	48 85 c0             	test   %rax,%rax
    d761:	75 5d                	jne    d7c0 <stm_exit_thread+0x140>
    d763:	48 8d 3d 4e 2f 81 00 	lea    0x812f4e(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    d76a:	e8 d1 4c ff ff       	callq  2440 <pthread_mutex_unlock@plt>
    d76f:	48 8b 2d ca 2a 81 00 	mov    0x812aca(%rip),%rbp        # 820240 <_tinystm+0x800080>
    d776:	49 8b bc 24 e8 00 00 	mov    0xe8(%r12),%rdi
    d77d:	00 
    d77e:	48 89 ee             	mov    %rbp,%rsi
    d781:	e8 6a a2 00 00       	callq  179f0 <gc_free>
    d786:	49 8b bc 24 f8 00 00 	mov    0xf8(%r12),%rdi
    d78d:	00 
    d78e:	48 89 ee             	mov    %rbp,%rsi
    d791:	e8 5a a2 00 00       	callq  179f0 <gc_free>
    d796:	48 89 ee             	mov    %rbp,%rsi
    d799:	4c 89 e7             	mov    %r12,%rdi
    d79c:	e8 4f a2 00 00       	callq  179f0 <gc_free>
    d7a1:	e8 4a a0 00 00       	callq  177f0 <gc_exit_thread>
    d7a6:	64 48 c7 04 25 f8 ff 	movq   $0x0,%fs:0xfffffffffffffff8
    d7ad:	ff ff 00 00 00 00 
    d7b3:	5b                   	pop    %rbx
    d7b4:	5d                   	pop    %rbp
    d7b5:	41 5c                	pop    %r12
    d7b7:	c3                   	retq   
    d7b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d7bf:	00 
    d7c0:	48 8d 3d 19 2f 81 00 	lea    0x812f19(%rip),%rdi        # 8206e0 <_tinystm+0x800520>
    d7c7:	e8 14 4c ff ff       	callq  23e0 <pthread_cond_signal@plt>
    d7cc:	eb 95                	jmp    d763 <stm_exit_thread+0xe3>
    d7ce:	66 90                	xchg   %ax,%ax
    d7d0:	49 8b 84 24 50 01 00 	mov    0x150(%r12),%rax
    d7d7:	00 
    d7d8:	48 89 05 d1 2e 81 00 	mov    %rax,0x812ed1(%rip)        # 8206b0 <_tinystm+0x8004f0>
    d7df:	e9 62 ff ff ff       	jmpq   d746 <stm_exit_thread+0xc6>
    d7e4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d7eb:	00 00 00 00 
    d7ef:	90                   	nop

000000000000d7f0 <stm_exit_thread_tx>:
    d7f0:	f3 0f 1e fa          	endbr64 
    d7f4:	41 54                	push   %r12
    d7f6:	48 89 fa             	mov    %rdi,%rdx
    d7f9:	48 8d 35 18 c9 00 00 	lea    0xc918(%rip),%rsi        # 1a118 <__PRETTY_FUNCTION__.3713+0x2b0>
    d800:	55                   	push   %rbp
    d801:	31 c0                	xor    %eax,%eax
    d803:	48 89 fd             	mov    %rdi,%rbp
    d806:	53                   	push   %rbx
    d807:	48 8b 8f d8 00 00 00 	mov    0xd8(%rdi),%rcx
    d80e:	4c 8b 87 e0 00 00 00 	mov    0xe0(%rdi),%r8
    d815:	bf 01 00 00 00       	mov    $0x1,%edi
    d81a:	e8 71 4c ff ff       	callq  2490 <__printf_chk@plt>
    d81f:	31 ff                	xor    %edi,%edi
    d821:	e8 3a 4c ff ff       	callq  2460 <fflush@plt>
    d826:	8b 05 0c 2c 81 00    	mov    0x812c0c(%rip),%eax        # 820438 <_tinystm+0x800278>
    d82c:	85 c0                	test   %eax,%eax
    d82e:	74 26                	je     d856 <stm_exit_thread_tx+0x66>
    d830:	48 8d 1d 09 2c 81 00 	lea    0x812c09(%rip),%rbx        # 820440 <_tinystm+0x800280>
    d837:	45 31 e4             	xor    %r12d,%r12d
    d83a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d840:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    d844:	41 ff c4             	inc    %r12d
    d847:	ff 13                	callq  *(%rbx)
    d849:	48 83 c3 10          	add    $0x10,%rbx
    d84d:	44 3b 25 e4 2b 81 00 	cmp    0x812be4(%rip),%r12d        # 820438 <_tinystm+0x800278>
    d854:	72 ea                	jb     d840 <stm_exit_thread_tx+0x50>
    d856:	48 89 ea             	mov    %rbp,%rdx
    d859:	48 8d 35 e0 c8 00 00 	lea    0xc8e0(%rip),%rsi        # 1a140 <__PRETTY_FUNCTION__.3713+0x2d8>
    d860:	bf 01 00 00 00       	mov    $0x1,%edi
    d865:	31 c0                	xor    %eax,%eax
    d867:	e8 24 4c ff ff       	callq  2490 <__printf_chk@plt>
    d86c:	31 ff                	xor    %edi,%edi
    d86e:	e8 ed 4b ff ff       	callq  2460 <fflush@plt>
    d873:	48 8d 3d 3e 2e 81 00 	lea    0x812e3e(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    d87a:	e8 f1 4c ff ff       	callq  2570 <pthread_mutex_lock@plt>
    d87f:	48 8b 05 2a 2e 81 00 	mov    0x812e2a(%rip),%rax        # 8206b0 <_tinystm+0x8004f0>
    d886:	48 39 c5             	cmp    %rax,%rbp
    d889:	0f 84 a1 00 00 00    	je     d930 <stm_exit_thread_tx+0x140>
    d88f:	90                   	nop
    d890:	48 89 c2             	mov    %rax,%rdx
    d893:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    d89a:	48 39 c5             	cmp    %rax,%rbp
    d89d:	75 f1                	jne    d890 <stm_exit_thread_tx+0xa0>
    d89f:	48 8b 85 50 01 00 00 	mov    0x150(%rbp),%rax
    d8a6:	48 89 82 50 01 00 00 	mov    %rax,0x150(%rdx)
    d8ad:	48 8b 05 f4 2d 81 00 	mov    0x812df4(%rip),%rax        # 8206a8 <_tinystm+0x8004e8>
    d8b4:	48 ff c8             	dec    %rax
    d8b7:	48 89 05 ea 2d 81 00 	mov    %rax,0x812dea(%rip)        # 8206a8 <_tinystm+0x8004e8>
    d8be:	48 8b 05 db 2d 81 00 	mov    0x812ddb(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
    d8c5:	48 85 c0             	test   %rax,%rax
    d8c8:	75 56                	jne    d920 <stm_exit_thread_tx+0x130>
    d8ca:	48 8d 3d e7 2d 81 00 	lea    0x812de7(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    d8d1:	e8 6a 4b ff ff       	callq  2440 <pthread_mutex_unlock@plt>
    d8d6:	4c 8b 25 63 29 81 00 	mov    0x812963(%rip),%r12        # 820240 <_tinystm+0x800080>
    d8dd:	48 8b bd e8 00 00 00 	mov    0xe8(%rbp),%rdi
    d8e4:	4c 89 e6             	mov    %r12,%rsi
    d8e7:	e8 04 a1 00 00       	callq  179f0 <gc_free>
    d8ec:	48 8b bd f8 00 00 00 	mov    0xf8(%rbp),%rdi
    d8f3:	4c 89 e6             	mov    %r12,%rsi
    d8f6:	e8 f5 a0 00 00       	callq  179f0 <gc_free>
    d8fb:	4c 89 e6             	mov    %r12,%rsi
    d8fe:	48 89 ef             	mov    %rbp,%rdi
    d901:	e8 ea a0 00 00       	callq  179f0 <gc_free>
    d906:	e8 e5 9e 00 00       	callq  177f0 <gc_exit_thread>
    d90b:	64 48 c7 04 25 f8 ff 	movq   $0x0,%fs:0xfffffffffffffff8
    d912:	ff ff 00 00 00 00 
    d918:	5b                   	pop    %rbx
    d919:	5d                   	pop    %rbp
    d91a:	41 5c                	pop    %r12
    d91c:	c3                   	retq   
    d91d:	0f 1f 00             	nopl   (%rax)
    d920:	48 8d 3d b9 2d 81 00 	lea    0x812db9(%rip),%rdi        # 8206e0 <_tinystm+0x800520>
    d927:	e8 b4 4a ff ff       	callq  23e0 <pthread_cond_signal@plt>
    d92c:	eb 9c                	jmp    d8ca <stm_exit_thread_tx+0xda>
    d92e:	66 90                	xchg   %ax,%ax
    d930:	48 8b 85 50 01 00 00 	mov    0x150(%rbp),%rax
    d937:	48 89 05 72 2d 81 00 	mov    %rax,0x812d72(%rip)        # 8206b0 <_tinystm+0x8004f0>
    d93e:	e9 6a ff ff ff       	jmpq   d8ad <stm_exit_thread_tx+0xbd>
    d943:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    d94a:	00 00 00 00 
    d94e:	66 90                	xchg   %ax,%ax

000000000000d950 <stm_active>:
    d950:	f3 0f 1e fa          	endbr64 
    d954:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    d95b:	ff ff 
    d95d:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
    d964:	83 e0 01             	and    $0x1,%eax
    d967:	c3                   	retq   
    d968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d96f:	00 

000000000000d970 <stm_active_tx>:
    d970:	f3 0f 1e fa          	endbr64 
    d974:	48 8b 87 d0 00 00 00 	mov    0xd0(%rdi),%rax
    d97b:	83 e0 01             	and    $0x1,%eax
    d97e:	c3                   	retq   
    d97f:	90                   	nop

000000000000d980 <stm_aborted>:
    d980:	f3 0f 1e fa          	endbr64 
    d984:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    d98b:	ff ff 
    d98d:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
    d994:	48 83 f8 04          	cmp    $0x4,%rax
    d998:	0f 94 c0             	sete   %al
    d99b:	0f b6 c0             	movzbl %al,%eax
    d99e:	c3                   	retq   
    d99f:	90                   	nop

000000000000d9a0 <stm_aborted_tx>:
    d9a0:	f3 0f 1e fa          	endbr64 
    d9a4:	48 8b 87 d0 00 00 00 	mov    0xd0(%rdi),%rax
    d9ab:	48 83 f8 04          	cmp    $0x4,%rax
    d9af:	0f 94 c0             	sete   %al
    d9b2:	0f b6 c0             	movzbl %al,%eax
    d9b5:	c3                   	retq   
    d9b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    d9bd:	00 00 00 

000000000000d9c0 <stm_irrevocable>:
    d9c0:	f3 0f 1e fa          	endbr64 
    d9c4:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    d9cb:	ff ff 
    d9cd:	0f b6 80 10 01 00 00 	movzbl 0x110(%rax),%eax
    d9d4:	83 e0 07             	and    $0x7,%eax
    d9d7:	3c 03                	cmp    $0x3,%al
    d9d9:	0f 94 c0             	sete   %al
    d9dc:	0f b6 c0             	movzbl %al,%eax
    d9df:	c3                   	retq   

000000000000d9e0 <stm_irrevocable_tx>:
    d9e0:	f3 0f 1e fa          	endbr64 
    d9e4:	0f b6 87 10 01 00 00 	movzbl 0x110(%rdi),%eax
    d9eb:	83 e0 07             	and    $0x7,%eax
    d9ee:	3c 03                	cmp    $0x3,%al
    d9f0:	0f 94 c0             	sete   %al
    d9f3:	0f b6 c0             	movzbl %al,%eax
    d9f6:	c3                   	retq   
    d9f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    d9fe:	00 00 

000000000000da00 <stm_killed>:
    da00:	f3 0f 1e fa          	endbr64 
    da04:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    da0b:	ff ff 
    da0d:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
    da14:	48 83 f8 07          	cmp    $0x7,%rax
    da18:	0f 94 c0             	sete   %al
    da1b:	0f b6 c0             	movzbl %al,%eax
    da1e:	c3                   	retq   
    da1f:	90                   	nop

000000000000da20 <stm_killed_tx>:
    da20:	f3 0f 1e fa          	endbr64 
    da24:	48 8b 87 d0 00 00 00 	mov    0xd0(%rdi),%rax
    da2b:	48 83 f8 07          	cmp    $0x7,%rax
    da2f:	0f 94 c0             	sete   %al
    da32:	0f b6 c0             	movzbl %al,%eax
    da35:	c3                   	retq   
    da36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    da3d:	00 00 00 

000000000000da40 <stm_get_env>:
    da40:	f3 0f 1e fa          	endbr64 
    da44:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    da4b:	ff ff 
    da4d:	8b 90 14 01 00 00    	mov    0x114(%rax),%edx
    da53:	85 d2                	test   %edx,%edx
    da55:	ba 00 00 00 00       	mov    $0x0,%edx
    da5a:	48 0f 45 c2          	cmovne %rdx,%rax
    da5e:	c3                   	retq   
    da5f:	90                   	nop

000000000000da60 <stm_get_env_tx>:
    da60:	f3 0f 1e fa          	endbr64 
    da64:	8b 87 14 01 00 00    	mov    0x114(%rdi),%eax
    da6a:	85 c0                	test   %eax,%eax
    da6c:	b8 00 00 00 00       	mov    $0x0,%eax
    da71:	48 0f 44 c7          	cmove  %rdi,%rax
    da75:	c3                   	retq   
    da76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    da7d:	00 00 00 

000000000000da80 <stm_get_attributes>:
    da80:	f3 0f 1e fa          	endbr64 
    da84:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    da8b:	ff ff 
    da8d:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax
    da93:	c3                   	retq   
    da94:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    da9b:	00 00 00 00 
    da9f:	90                   	nop

000000000000daa0 <stm_get_attributes_tx>:
    daa0:	f3 0f 1e fa          	endbr64 
    daa4:	8b 87 c8 00 00 00    	mov    0xc8(%rdi),%eax
    daaa:	c3                   	retq   
    daab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000dab0 <stm_get_stats>:
    dab0:	f3 0f 1e fa          	endbr64 
    dab4:	49 89 f0             	mov    %rsi,%r8
    dab7:	b9 0e 00 00 00       	mov    $0xe,%ecx
    dabc:	48 8d 35 89 c4 00 00 	lea    0xc489(%rip),%rsi        # 19f4c <__PRETTY_FUNCTION__.3713+0xe4>
    dac3:	48 89 f8             	mov    %rdi,%rax
    dac6:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    dac8:	64 4c 8b 0c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%r9
    dacf:	ff ff 
    dad1:	0f 97 c2             	seta   %dl
    dad4:	80 da 00             	sbb    $0x0,%dl
    dad7:	84 d2                	test   %dl,%dl
    dad9:	0f 84 91 00 00 00    	je     db70 <stm_get_stats+0xc0>
    dadf:	b9 0f 00 00 00       	mov    $0xf,%ecx
    dae4:	48 8d 35 6f c4 00 00 	lea    0xc46f(%rip),%rsi        # 19f5a <__PRETTY_FUNCTION__.3713+0xf2>
    daeb:	48 89 c7             	mov    %rax,%rdi
    daee:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    daf0:	0f 97 c2             	seta   %dl
    daf3:	80 da 00             	sbb    $0x0,%dl
    daf6:	84 d2                	test   %dl,%dl
    daf8:	74 5e                	je     db58 <stm_get_stats+0xa8>
    dafa:	b9 14 00 00 00       	mov    $0x14,%ecx
    daff:	48 8d 35 63 c4 00 00 	lea    0xc463(%rip),%rsi        # 19f69 <__PRETTY_FUNCTION__.3713+0x101>
    db06:	48 89 c7             	mov    %rax,%rdi
    db09:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    db0b:	0f 97 c2             	seta   %dl
    db0e:	80 da 00             	sbb    $0x0,%dl
    db11:	84 d2                	test   %dl,%dl
    db13:	0f 84 8f 00 00 00    	je     dba8 <stm_get_stats+0xf8>
    db19:	b9 15 00 00 00       	mov    $0x15,%ecx
    db1e:	48 8d 35 58 c4 00 00 	lea    0xc458(%rip),%rsi        # 19f7d <__PRETTY_FUNCTION__.3713+0x115>
    db25:	48 89 c7             	mov    %rax,%rdi
    db28:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    db2a:	0f 97 c2             	seta   %dl
    db2d:	80 da 00             	sbb    $0x0,%dl
    db30:	84 d2                	test   %dl,%dl
    db32:	74 4c                	je     db80 <stm_get_stats+0xd0>
    db34:	48 89 c7             	mov    %rax,%rdi
    db37:	b9 0a 00 00 00       	mov    $0xa,%ecx
    db3c:	48 8d 35 4f c4 00 00 	lea    0xc44f(%rip),%rsi        # 19f92 <__PRETTY_FUNCTION__.3713+0x12a>
    db43:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    db45:	0f 97 c2             	seta   %dl
    db48:	80 da 00             	sbb    $0x0,%dl
    db4b:	31 c0                	xor    %eax,%eax
    db4d:	84 d2                	test   %dl,%dl
    db4f:	74 3f                	je     db90 <stm_get_stats+0xe0>
    db51:	c3                   	retq   
    db52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    db58:	41 8b 81 04 01 00 00 	mov    0x104(%r9),%eax
    db5f:	41 89 00             	mov    %eax,(%r8)
    db62:	b8 01 00 00 00       	mov    $0x1,%eax
    db67:	c3                   	retq   
    db68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    db6f:	00 
    db70:	41 8b 81 f4 00 00 00 	mov    0xf4(%r9),%eax
    db77:	41 89 00             	mov    %eax,(%r8)
    db7a:	b8 01 00 00 00       	mov    $0x1,%eax
    db7f:	c3                   	retq   
    db80:	41 8b 81 00 01 00 00 	mov    0x100(%r9),%eax
    db87:	41 89 00             	mov    %eax,(%r8)
    db8a:	b8 01 00 00 00       	mov    $0x1,%eax
    db8f:	c3                   	retq   
    db90:	41 0f b6 81 ca 00 00 	movzbl 0xca(%r9),%eax
    db97:	00 
    db98:	83 e0 01             	and    $0x1,%eax
    db9b:	41 89 00             	mov    %eax,(%r8)
    db9e:	b8 01 00 00 00       	mov    $0x1,%eax
    dba3:	c3                   	retq   
    dba4:	0f 1f 40 00          	nopl   0x0(%rax)
    dba8:	41 8b 81 f0 00 00 00 	mov    0xf0(%r9),%eax
    dbaf:	41 89 00             	mov    %eax,(%r8)
    dbb2:	b8 01 00 00 00       	mov    $0x1,%eax
    dbb7:	c3                   	retq   
    dbb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    dbbf:	00 

000000000000dbc0 <stm_get_stats_tx>:
    dbc0:	f3 0f 1e fa          	endbr64 
    dbc4:	48 89 f0             	mov    %rsi,%rax
    dbc7:	b9 0e 00 00 00       	mov    $0xe,%ecx
    dbcc:	49 89 f8             	mov    %rdi,%r8
    dbcf:	48 8d 35 76 c3 00 00 	lea    0xc376(%rip),%rsi        # 19f4c <__PRETTY_FUNCTION__.3713+0xe4>
    dbd6:	48 89 c7             	mov    %rax,%rdi
    dbd9:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    dbdb:	0f 97 c1             	seta   %cl
    dbde:	80 d9 00             	sbb    $0x0,%cl
    dbe1:	84 c9                	test   %cl,%cl
    dbe3:	0f 84 87 00 00 00    	je     dc70 <stm_get_stats_tx+0xb0>
    dbe9:	b9 0f 00 00 00       	mov    $0xf,%ecx
    dbee:	48 8d 35 65 c3 00 00 	lea    0xc365(%rip),%rsi        # 19f5a <__PRETTY_FUNCTION__.3713+0xf2>
    dbf5:	48 89 c7             	mov    %rax,%rdi
    dbf8:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    dbfa:	0f 97 c1             	seta   %cl
    dbfd:	80 d9 00             	sbb    $0x0,%cl
    dc00:	84 c9                	test   %cl,%cl
    dc02:	74 5c                	je     dc60 <stm_get_stats_tx+0xa0>
    dc04:	b9 14 00 00 00       	mov    $0x14,%ecx
    dc09:	48 8d 35 59 c3 00 00 	lea    0xc359(%rip),%rsi        # 19f69 <__PRETTY_FUNCTION__.3713+0x101>
    dc10:	48 89 c7             	mov    %rax,%rdi
    dc13:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    dc15:	0f 97 c1             	seta   %cl
    dc18:	80 d9 00             	sbb    $0x0,%cl
    dc1b:	84 c9                	test   %cl,%cl
    dc1d:	0f 84 85 00 00 00    	je     dca8 <stm_get_stats_tx+0xe8>
    dc23:	b9 15 00 00 00       	mov    $0x15,%ecx
    dc28:	48 8d 35 4e c3 00 00 	lea    0xc34e(%rip),%rsi        # 19f7d <__PRETTY_FUNCTION__.3713+0x115>
    dc2f:	48 89 c7             	mov    %rax,%rdi
    dc32:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    dc34:	0f 97 c1             	seta   %cl
    dc37:	80 d9 00             	sbb    $0x0,%cl
    dc3a:	84 c9                	test   %cl,%cl
    dc3c:	74 42                	je     dc80 <stm_get_stats_tx+0xc0>
    dc3e:	b9 0a 00 00 00       	mov    $0xa,%ecx
    dc43:	48 89 c7             	mov    %rax,%rdi
    dc46:	48 8d 35 45 c3 00 00 	lea    0xc345(%rip),%rsi        # 19f92 <__PRETTY_FUNCTION__.3713+0x12a>
    dc4d:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    dc4f:	0f 97 c1             	seta   %cl
    dc52:	80 d9 00             	sbb    $0x0,%cl
    dc55:	31 c0                	xor    %eax,%eax
    dc57:	84 c9                	test   %cl,%cl
    dc59:	74 35                	je     dc90 <stm_get_stats_tx+0xd0>
    dc5b:	c3                   	retq   
    dc5c:	0f 1f 40 00          	nopl   0x0(%rax)
    dc60:	41 8b 80 04 01 00 00 	mov    0x104(%r8),%eax
    dc67:	89 02                	mov    %eax,(%rdx)
    dc69:	b8 01 00 00 00       	mov    $0x1,%eax
    dc6e:	c3                   	retq   
    dc6f:	90                   	nop
    dc70:	41 8b 80 f4 00 00 00 	mov    0xf4(%r8),%eax
    dc77:	89 02                	mov    %eax,(%rdx)
    dc79:	b8 01 00 00 00       	mov    $0x1,%eax
    dc7e:	c3                   	retq   
    dc7f:	90                   	nop
    dc80:	41 8b 80 00 01 00 00 	mov    0x100(%r8),%eax
    dc87:	89 02                	mov    %eax,(%rdx)
    dc89:	b8 01 00 00 00       	mov    $0x1,%eax
    dc8e:	c3                   	retq   
    dc8f:	90                   	nop
    dc90:	41 0f b6 80 ca 00 00 	movzbl 0xca(%r8),%eax
    dc97:	00 
    dc98:	83 e0 01             	and    $0x1,%eax
    dc9b:	89 02                	mov    %eax,(%rdx)
    dc9d:	b8 01 00 00 00       	mov    $0x1,%eax
    dca2:	c3                   	retq   
    dca3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    dca8:	41 8b 80 f0 00 00 00 	mov    0xf0(%r8),%eax
    dcaf:	89 02                	mov    %eax,(%rdx)
    dcb1:	b8 01 00 00 00       	mov    $0x1,%eax
    dcb6:	c3                   	retq   
    dcb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dcbe:	00 00 

000000000000dcc0 <stm_get_parameter>:
    dcc0:	f3 0f 1e fa          	endbr64 
    dcc4:	49 89 f0             	mov    %rsi,%r8
    dcc7:	b9 13 00 00 00       	mov    $0x13,%ecx
    dccc:	48 8d 35 c9 c2 00 00 	lea    0xc2c9(%rip),%rsi        # 19f9c <__PRETTY_FUNCTION__.3713+0x134>
    dcd3:	48 89 f8             	mov    %rdi,%rax
    dcd6:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    dcd8:	0f 97 c2             	seta   %dl
    dcdb:	80 da 00             	sbb    $0x0,%dl
    dcde:	84 d2                	test   %dl,%dl
    dce0:	74 6e                	je     dd50 <stm_get_parameter+0x90>
    dce2:	b9 07 00 00 00       	mov    $0x7,%ecx
    dce7:	48 8d 35 c9 c2 00 00 	lea    0xc2c9(%rip),%rsi        # 19fb7 <__PRETTY_FUNCTION__.3713+0x14f>
    dcee:	48 89 c7             	mov    %rax,%rdi
    dcf1:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    dcf3:	0f 97 c2             	seta   %dl
    dcf6:	80 da 00             	sbb    $0x0,%dl
    dcf9:	84 d2                	test   %dl,%dl
    dcfb:	74 43                	je     dd40 <stm_get_parameter+0x80>
    dcfd:	b9 14 00 00 00       	mov    $0x14,%ecx
    dd02:	48 8d 35 c6 c2 00 00 	lea    0xc2c6(%rip),%rsi        # 19fcf <__PRETTY_FUNCTION__.3713+0x167>
    dd09:	48 89 c7             	mov    %rax,%rdi
    dd0c:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    dd0e:	0f 97 c2             	seta   %dl
    dd11:	80 da 00             	sbb    $0x0,%dl
    dd14:	84 d2                	test   %dl,%dl
    dd16:	74 58                	je     dd70 <stm_get_parameter+0xb0>
    dd18:	48 89 c7             	mov    %rax,%rdi
    dd1b:	b9 0e 00 00 00       	mov    $0xe,%ecx
    dd20:	48 8d 35 bc c2 00 00 	lea    0xc2bc(%rip),%rsi        # 19fe3 <__PRETTY_FUNCTION__.3713+0x17b>
    dd27:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    dd29:	0f 97 c2             	seta   %dl
    dd2c:	80 da 00             	sbb    $0x0,%dl
    dd2f:	31 c0                	xor    %eax,%eax
    dd31:	84 d2                	test   %dl,%dl
    dd33:	74 2b                	je     dd60 <stm_get_parameter+0xa0>
    dd35:	c3                   	retq   
    dd36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    dd3d:	00 00 00 
    dd40:	48 8d 05 77 c2 00 00 	lea    0xc277(%rip),%rax        # 19fbe <__PRETTY_FUNCTION__.3713+0x156>
    dd47:	49 89 00             	mov    %rax,(%r8)
    dd4a:	b8 01 00 00 00       	mov    $0x1,%eax
    dd4f:	c3                   	retq   
    dd50:	48 8d 05 58 c2 00 00 	lea    0xc258(%rip),%rax        # 19faf <__PRETTY_FUNCTION__.3713+0x147>
    dd57:	49 89 00             	mov    %rax,(%r8)
    dd5a:	b8 01 00 00 00       	mov    $0x1,%eax
    dd5f:	c3                   	retq   
    dd60:	48 8d 05 01 c4 00 00 	lea    0xc401(%rip),%rax        # 1a168 <__PRETTY_FUNCTION__.3713+0x300>
    dd67:	49 89 00             	mov    %rax,(%r8)
    dd6a:	b8 01 00 00 00       	mov    $0x1,%eax
    dd6f:	c3                   	retq   
    dd70:	41 c7 00 00 10 00 00 	movl   $0x1000,(%r8)
    dd77:	b8 01 00 00 00       	mov    $0x1,%eax
    dd7c:	c3                   	retq   
    dd7d:	0f 1f 00             	nopl   (%rax)

000000000000dd80 <stm_set_parameter>:
    dd80:	f3 0f 1e fa          	endbr64 
    dd84:	31 c0                	xor    %eax,%eax
    dd86:	c3                   	retq   
    dd87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dd8e:	00 00 

000000000000dd90 <stm_create_specific>:
    dd90:	f3 0f 1e fa          	endbr64 
    dd94:	8b 05 26 26 81 00    	mov    0x812626(%rip),%eax        # 8203c0 <_tinystm+0x800200>
    dd9a:	83 f8 06             	cmp    $0x6,%eax
    dd9d:	77 0a                	ja     dda9 <stm_create_specific+0x19>
    dd9f:	8d 50 01             	lea    0x1(%rax),%edx
    dda2:	89 15 18 26 81 00    	mov    %edx,0x812618(%rip)        # 8203c0 <_tinystm+0x800200>
    dda8:	c3                   	retq   
    dda9:	48 83 ec 08          	sub    $0x8,%rsp
    ddad:	48 8b 0d 4c 23 01 00 	mov    0x1234c(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    ddb4:	ba 30 00 00 00       	mov    $0x30,%edx
    ddb9:	be 01 00 00 00       	mov    $0x1,%esi
    ddbe:	48 8d 3d 73 c5 00 00 	lea    0xc573(%rip),%rdi        # 1a338 <__PRETTY_FUNCTION__.3713+0x4d0>
    ddc5:	e8 56 47 ff ff       	callq  2520 <fwrite@plt>
    ddca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    ddcf:	48 83 c4 08          	add    $0x8,%rsp
    ddd3:	c3                   	retq   
    ddd4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    dddb:	00 00 00 00 
    dddf:	90                   	nop

000000000000dde0 <stm_set_specific>:
    dde0:	f3 0f 1e fa          	endbr64 
    dde4:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    ddeb:	ff ff 
    dded:	48 63 ff             	movslq %edi,%rdi
    ddf0:	48 8d 84 f8 18 01 00 	lea    0x118(%rax,%rdi,8),%rax
    ddf7:	00 
    ddf8:	48 89 30             	mov    %rsi,(%rax)
    ddfb:	c3                   	retq   
    ddfc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000de00 <stm_set_specific_tx>:
    de00:	f3 0f 1e fa          	endbr64 
    de04:	48 63 f6             	movslq %esi,%rsi
    de07:	48 8d 84 f7 18 01 00 	lea    0x118(%rdi,%rsi,8),%rax
    de0e:	00 
    de0f:	48 89 10             	mov    %rdx,(%rax)
    de12:	c3                   	retq   
    de13:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    de1a:	00 00 00 00 
    de1e:	66 90                	xchg   %ax,%ax

000000000000de20 <stm_get_specific>:
    de20:	f3 0f 1e fa          	endbr64 
    de24:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    de2b:	ff ff 
    de2d:	48 63 ff             	movslq %edi,%rdi
    de30:	48 8d 84 f8 18 01 00 	lea    0x118(%rax,%rdi,8),%rax
    de37:	00 
    de38:	48 8b 00             	mov    (%rax),%rax
    de3b:	c3                   	retq   
    de3c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000de40 <stm_get_specific_tx>:
    de40:	f3 0f 1e fa          	endbr64 
    de44:	48 63 f6             	movslq %esi,%rsi
    de47:	48 8d 84 f7 18 01 00 	lea    0x118(%rdi,%rsi,8),%rax
    de4e:	00 
    de4f:	48 8b 00             	mov    (%rax),%rax
    de52:	c3                   	retq   
    de53:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    de5a:	00 00 00 00 
    de5e:	66 90                	xchg   %ax,%ax

000000000000de60 <stm_register>:
    de60:	f3 0f 1e fa          	endbr64 
    de64:	48 83 ec 08          	sub    $0x8,%rsp
    de68:	48 85 ff             	test   %rdi,%rdi
    de6b:	74 0d                	je     de7a <stm_register+0x1a>
    de6d:	83 3d 50 25 81 00 06 	cmpl   $0x6,0x812550(%rip)        # 8203c4 <_tinystm+0x800204>
    de74:	0f 87 b6 01 00 00    	ja     e030 <stm_register+0x1d0>
    de7a:	48 85 f6             	test   %rsi,%rsi
    de7d:	74 0d                	je     de8c <stm_register+0x2c>
    de7f:	83 3d b2 25 81 00 06 	cmpl   $0x6,0x8125b2(%rip)        # 820438 <_tinystm+0x800278>
    de86:	0f 87 a4 01 00 00    	ja     e030 <stm_register+0x1d0>
    de8c:	48 85 d2             	test   %rdx,%rdx
    de8f:	74 0d                	je     de9e <stm_register+0x3e>
    de91:	83 3d 18 26 81 00 06 	cmpl   $0x6,0x812618(%rip)        # 8204b0 <_tinystm+0x8002f0>
    de98:	0f 87 92 01 00 00    	ja     e030 <stm_register+0x1d0>
    de9e:	48 85 c9             	test   %rcx,%rcx
    dea1:	74 0d                	je     deb0 <stm_register+0x50>
    dea3:	83 3d 7e 26 81 00 06 	cmpl   $0x6,0x81267e(%rip)        # 820528 <_tinystm+0x800368>
    deaa:	0f 87 80 01 00 00    	ja     e030 <stm_register+0x1d0>
    deb0:	4d 85 c0             	test   %r8,%r8
    deb3:	74 0d                	je     dec2 <stm_register+0x62>
    deb5:	83 3d e4 26 81 00 06 	cmpl   $0x6,0x8126e4(%rip)        # 8205a0 <_tinystm+0x8003e0>
    debc:	0f 87 6e 01 00 00    	ja     e030 <stm_register+0x1d0>
    dec2:	4d 85 c9             	test   %r9,%r9
    dec5:	74 0d                	je     ded4 <stm_register+0x74>
    dec7:	83 3d 4a 27 81 00 06 	cmpl   $0x6,0x81274a(%rip)        # 820618 <_tinystm+0x800458>
    dece:	0f 87 5c 01 00 00    	ja     e030 <stm_register+0x1d0>
    ded4:	48 85 ff             	test   %rdi,%rdi
    ded7:	74 34                	je     df0d <stm_register+0xad>
    ded9:	8b 05 e5 24 81 00    	mov    0x8124e5(%rip),%eax        # 8203c4 <_tinystm+0x800204>
    dedf:	4c 8d 15 da 22 01 00 	lea    0x122da(%rip),%r10        # 201c0 <_tinystm>
    dee6:	49 89 c3             	mov    %rax,%r11
    dee9:	48 05 20 00 08 00    	add    $0x80020,%rax
    deef:	48 c1 e0 04          	shl    $0x4,%rax
    def3:	4c 01 d0             	add    %r10,%rax
    def6:	48 89 78 08          	mov    %rdi,0x8(%rax)
    defa:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    deff:	41 ff c3             	inc    %r11d
    df02:	44 89 1d bb 24 81 00 	mov    %r11d,0x8124bb(%rip)        # 8203c4 <_tinystm+0x800204>
    df09:	48 89 78 10          	mov    %rdi,0x10(%rax)
    df0d:	48 85 f6             	test   %rsi,%rsi
    df10:	74 33                	je     df45 <stm_register+0xe5>
    df12:	8b 05 20 25 81 00    	mov    0x812520(%rip),%eax        # 820438 <_tinystm+0x800278>
    df18:	48 8d 3d a1 22 01 00 	lea    0x122a1(%rip),%rdi        # 201c0 <_tinystm>
    df1f:	49 89 c2             	mov    %rax,%r10
    df22:	48 05 28 00 08 00    	add    $0x80028,%rax
    df28:	48 c1 e0 04          	shl    $0x4,%rax
    df2c:	48 01 f8             	add    %rdi,%rax
    df2f:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    df34:	41 ff c2             	inc    %r10d
    df37:	48 89 30             	mov    %rsi,(%rax)
    df3a:	44 89 15 f7 24 81 00 	mov    %r10d,0x8124f7(%rip)        # 820438 <_tinystm+0x800278>
    df41:	48 89 78 08          	mov    %rdi,0x8(%rax)
    df45:	48 85 d2             	test   %rdx,%rdx
    df48:	74 32                	je     df7c <stm_register+0x11c>
    df4a:	8b 05 60 25 81 00    	mov    0x812560(%rip),%eax        # 8204b0 <_tinystm+0x8002f0>
    df50:	48 8d 35 69 22 01 00 	lea    0x12269(%rip),%rsi        # 201c0 <_tinystm>
    df57:	48 89 c7             	mov    %rax,%rdi
    df5a:	48 05 2c 00 08 00    	add    $0x8002c,%rax
    df60:	48 c1 e0 04          	shl    $0x4,%rax
    df64:	48 01 f0             	add    %rsi,%rax
    df67:	48 89 50 38          	mov    %rdx,0x38(%rax)
    df6b:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    df70:	ff c7                	inc    %edi
    df72:	89 3d 38 25 81 00    	mov    %edi,0x812538(%rip)        # 8204b0 <_tinystm+0x8002f0>
    df78:	48 89 50 40          	mov    %rdx,0x40(%rax)
    df7c:	48 85 c9             	test   %rcx,%rcx
    df7f:	74 32                	je     dfb3 <stm_register+0x153>
    df81:	8b 05 a1 25 81 00    	mov    0x8125a1(%rip),%eax        # 820528 <_tinystm+0x800368>
    df87:	48 8d 15 32 22 01 00 	lea    0x12232(%rip),%rdx        # 201c0 <_tinystm>
    df8e:	48 89 c6             	mov    %rax,%rsi
    df91:	48 05 34 00 08 00    	add    $0x80034,%rax
    df97:	48 c1 e0 04          	shl    $0x4,%rax
    df9b:	48 01 d0             	add    %rdx,%rax
    df9e:	48 89 48 30          	mov    %rcx,0x30(%rax)
    dfa2:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    dfa7:	ff c6                	inc    %esi
    dfa9:	89 35 79 25 81 00    	mov    %esi,0x812579(%rip)        # 820528 <_tinystm+0x800368>
    dfaf:	48 89 48 38          	mov    %rcx,0x38(%rax)
    dfb3:	4d 85 c0             	test   %r8,%r8
    dfb6:	74 32                	je     dfea <stm_register+0x18a>
    dfb8:	8b 05 e2 25 81 00    	mov    0x8125e2(%rip),%eax        # 8205a0 <_tinystm+0x8003e0>
    dfbe:	48 8d 15 fb 21 01 00 	lea    0x121fb(%rip),%rdx        # 201c0 <_tinystm>
    dfc5:	48 89 c1             	mov    %rax,%rcx
    dfc8:	ff c1                	inc    %ecx
    dfca:	48 05 3c 00 08 00    	add    $0x8003c,%rax
    dfd0:	89 0d ca 25 81 00    	mov    %ecx,0x8125ca(%rip)        # 8205a0 <_tinystm+0x8003e0>
    dfd6:	48 c1 e0 04          	shl    $0x4,%rax
    dfda:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    dfdf:	48 01 d0             	add    %rdx,%rax
    dfe2:	4c 89 40 28          	mov    %r8,0x28(%rax)
    dfe6:	48 89 48 30          	mov    %rcx,0x30(%rax)
    dfea:	b8 01 00 00 00       	mov    $0x1,%eax
    dfef:	4d 85 c9             	test   %r9,%r9
    dff2:	74 5b                	je     e04f <stm_register+0x1ef>
    dff4:	8b 15 1e 26 81 00    	mov    0x81261e(%rip),%edx        # 820618 <_tinystm+0x800458>
    dffa:	48 8d 0d bf 21 01 00 	lea    0x121bf(%rip),%rcx        # 201c0 <_tinystm>
    e001:	48 89 d6             	mov    %rdx,%rsi
    e004:	48 81 c2 44 00 08 00 	add    $0x80044,%rdx
    e00b:	48 c1 e2 04          	shl    $0x4,%rdx
    e00f:	48 01 ca             	add    %rcx,%rdx
    e012:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    e017:	ff c6                	inc    %esi
    e019:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
    e01d:	89 35 f5 25 81 00    	mov    %esi,0x8125f5(%rip)        # 820618 <_tinystm+0x800458>
    e023:	48 89 4a 28          	mov    %rcx,0x28(%rdx)
    e027:	48 83 c4 08          	add    $0x8,%rsp
    e02b:	c3                   	retq   
    e02c:	0f 1f 40 00          	nopl   0x0(%rax)
    e030:	48 8b 0d c9 20 01 00 	mov    0x120c9(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    e037:	ba 29 00 00 00       	mov    $0x29,%edx
    e03c:	be 01 00 00 00       	mov    $0x1,%esi
    e041:	48 8d 3d 28 c3 00 00 	lea    0xc328(%rip),%rdi        # 1a370 <__PRETTY_FUNCTION__.3713+0x508>
    e048:	e8 d3 44 ff ff       	callq  2520 <fwrite@plt>
    e04d:	31 c0                	xor    %eax,%eax
    e04f:	48 83 c4 08          	add    $0x8,%rsp
    e053:	c3                   	retq   
    e054:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e05b:	00 00 00 00 
    e05f:	90                   	nop

000000000000e060 <stm_unit_load>:
    e060:	f3 0f 1e fa          	endbr64 
    e064:	50                   	push   %rax
    e065:	58                   	pop    %rax
    e066:	48 8d 3d 33 c3 00 00 	lea    0xc333(%rip),%rdi        # 1a3a0 <__PRETTY_FUNCTION__.3713+0x538>
    e06d:	ba 20 00 00 00       	mov    $0x20,%edx
    e072:	be 01 00 00 00       	mov    $0x1,%esi
    e077:	48 83 ec 08          	sub    $0x8,%rsp
    e07b:	48 8b 0d 7e 20 01 00 	mov    0x1207e(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    e082:	e8 99 44 ff ff       	callq  2520 <fwrite@plt>
    e087:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    e08c:	e8 7f 44 ff ff       	callq  2510 <exit@plt>
    e091:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e098:	00 00 00 00 
    e09c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e0a0 <stm_unit_store>:
    e0a0:	f3 0f 1e fa          	endbr64 
    e0a4:	50                   	push   %rax
    e0a5:	58                   	pop    %rax
    e0a6:	48 8d 3d f3 c2 00 00 	lea    0xc2f3(%rip),%rdi        # 1a3a0 <__PRETTY_FUNCTION__.3713+0x538>
    e0ad:	ba 20 00 00 00       	mov    $0x20,%edx
    e0b2:	be 01 00 00 00       	mov    $0x1,%esi
    e0b7:	48 83 ec 08          	sub    $0x8,%rsp
    e0bb:	48 8b 0d 3e 20 01 00 	mov    0x1203e(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    e0c2:	e8 59 44 ff ff       	callq  2520 <fwrite@plt>
    e0c7:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    e0cc:	e8 3f 44 ff ff       	callq  2510 <exit@plt>
    e0d1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e0d8:	00 00 00 00 
    e0dc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e0e0 <stm_unit_store2>:
    e0e0:	f3 0f 1e fa          	endbr64 
    e0e4:	50                   	push   %rax
    e0e5:	58                   	pop    %rax
    e0e6:	48 8d 3d b3 c2 00 00 	lea    0xc2b3(%rip),%rdi        # 1a3a0 <__PRETTY_FUNCTION__.3713+0x538>
    e0ed:	ba 20 00 00 00       	mov    $0x20,%edx
    e0f2:	be 01 00 00 00       	mov    $0x1,%esi
    e0f7:	48 83 ec 08          	sub    $0x8,%rsp
    e0fb:	48 8b 0d fe 1f 01 00 	mov    0x11ffe(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    e102:	e8 19 44 ff ff       	callq  2520 <fwrite@plt>
    e107:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    e10c:	e8 ff 43 ff ff       	callq  2510 <exit@plt>
    e111:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e118:	00 00 00 00 
    e11c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e120 <stm_set_extension>:
    e120:	f3 0f 1e fa          	endbr64 
    e124:	50                   	push   %rax
    e125:	58                   	pop    %rax
    e126:	48 8d 3d 73 c2 00 00 	lea    0xc273(%rip),%rdi        # 1a3a0 <__PRETTY_FUNCTION__.3713+0x538>
    e12d:	ba 20 00 00 00       	mov    $0x20,%edx
    e132:	be 01 00 00 00       	mov    $0x1,%esi
    e137:	48 83 ec 08          	sub    $0x8,%rsp
    e13b:	48 8b 0d be 1f 01 00 	mov    0x11fbe(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    e142:	e8 d9 43 ff ff       	callq  2520 <fwrite@plt>
    e147:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    e14c:	e8 bf 43 ff ff       	callq  2510 <exit@plt>
    e151:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e158:	00 00 00 00 
    e15c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e160 <stm_set_extension_tx>:
    e160:	f3 0f 1e fa          	endbr64 
    e164:	50                   	push   %rax
    e165:	58                   	pop    %rax
    e166:	48 8d 3d 33 c2 00 00 	lea    0xc233(%rip),%rdi        # 1a3a0 <__PRETTY_FUNCTION__.3713+0x538>
    e16d:	ba 20 00 00 00       	mov    $0x20,%edx
    e172:	be 01 00 00 00       	mov    $0x1,%esi
    e177:	48 83 ec 08          	sub    $0x8,%rsp
    e17b:	48 8b 0d 7e 1f 01 00 	mov    0x11f7e(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
    e182:	e8 99 43 ff ff       	callq  2520 <fwrite@plt>
    e187:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    e18c:	e8 7f 43 ff ff       	callq  2510 <exit@plt>
    e191:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e198:	00 00 00 00 
    e19c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e1a0 <stm_current_tx>:
    e1a0:	f3 0f 1e fa          	endbr64 
    e1a4:	64 48 8b 04 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rax
    e1ab:	ff ff 
    e1ad:	c3                   	retq   
    e1ae:	66 90                	xchg   %ax,%ax

000000000000e1b0 <stm_get_thread_id>:
    e1b0:	f3 0f 1e fa          	endbr64 
    e1b4:	48 8b 87 58 01 00 00 	mov    0x158(%rdi),%rax
    e1bb:	48 89 06             	mov    %rax,(%rsi)
    e1be:	b8 01 00 00 00       	mov    $0x1,%eax
    e1c3:	c3                   	retq   
    e1c4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e1cb:	00 00 00 00 
    e1cf:	90                   	nop

000000000000e1d0 <stm_set_conflict_cb>:
    e1d0:	f3 0f 1e fa          	endbr64 
    e1d4:	48 89 3d 35 25 81 00 	mov    %rdi,0x812535(%rip)        # 820710 <_tinystm+0x800550>
    e1db:	b8 01 00 00 00       	mov    $0x1,%eax
    e1e0:	c3                   	retq   
    e1e1:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e1e8:	00 00 00 00 
    e1ec:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000e1f0 <stm_set_irrevocable_tx>:
    e1f0:	f3 0f 1e fa          	endbr64 
    e1f4:	55                   	push   %rbp
    e1f5:	48 89 fd             	mov    %rdi,%rbp
    e1f8:	53                   	push   %rbx
    e1f9:	89 f3                	mov    %esi,%ebx
    e1fb:	48 83 ec 08          	sub    $0x8,%rsp
    e1ff:	48 8b 87 d0 00 00 00 	mov    0xd0(%rdi),%rax
    e206:	83 fe ff             	cmp    $0xffffffff,%esi
    e209:	74 08                	je     e213 <stm_set_irrevocable_tx+0x23>
    e20b:	a8 01                	test   $0x1,%al
    e20d:	0f 84 bd 00 00 00    	je     e2d0 <stm_set_irrevocable_tx+0xe0>
    e213:	0f b6 95 10 01 00 00 	movzbl 0x110(%rbp),%edx
    e21a:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e220:	89 d1                	mov    %edx,%ecx
    e222:	89 d0                	mov    %edx,%eax
    e224:	83 e1 07             	and    $0x7,%ecx
    e227:	83 e0 0f             	and    $0xf,%eax
    e22a:	80 f9 03             	cmp    $0x3,%cl
    e22d:	74 50                	je     e27f <stm_set_irrevocable_tx+0x8f>
    e22f:	84 c0                	test   %al,%al
    e231:	75 5d                	jne    e290 <stm_set_irrevocable_tx+0xa0>
    e233:	83 fb 01             	cmp    $0x1,%ebx
    e236:	19 c0                	sbb    %eax,%eax
    e238:	83 e0 f8             	and    $0xfffffff8,%eax
    e23b:	83 c0 09             	add    $0x9,%eax
    e23e:	83 e0 0f             	and    $0xf,%eax
    e241:	83 e2 f0             	and    $0xfffffff0,%edx
    e244:	09 c2                	or     %eax,%edx
    e246:	88 95 10 01 00 00    	mov    %dl,0x110(%rbp)
    e24c:	48 8b 05 45 24 81 00 	mov    0x812445(%rip),%rax        # 820698 <_tinystm+0x8004d8>
    e253:	48 83 f8 01          	cmp    $0x1,%rax
    e257:	74 16                	je     e26f <stm_set_irrevocable_tx+0x7f>
    e259:	31 c0                	xor    %eax,%eax
    e25b:	ba 01 00 00 00       	mov    $0x1,%edx
    e260:	f0 48 0f b1 15 2f 24 	lock cmpxchg %rdx,0x81242f(%rip)        # 820698 <_tinystm+0x8004d8>
    e267:	81 00 
    e269:	0f 84 91 00 00 00    	je     e300 <stm_set_irrevocable_tx+0x110>
    e26f:	be 40 09 00 00       	mov    $0x940,%esi
    e274:	48 89 ef             	mov    %rbp,%rdi
    e277:	e8 84 02 00 00       	callq  e500 <stm_rollback>
    e27c:	45 31 c0             	xor    %r8d,%r8d
    e27f:	48 83 c4 08          	add    $0x8,%rsp
    e283:	5b                   	pop    %rbx
    e284:	44 89 c0             	mov    %r8d,%eax
    e287:	5d                   	pop    %rbp
    e288:	c3                   	retq   
    e289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e290:	80 f9 01             	cmp    $0x1,%cl
    e293:	0f 84 37 01 00 00    	je     e3d0 <stm_set_irrevocable_tx+0x1e0>
    e299:	a8 08                	test   $0x8,%al
    e29b:	0f 85 7a 01 00 00    	jne    e41b <stm_set_irrevocable_tx+0x22b>
    e2a1:	0f b6 95 10 01 00 00 	movzbl 0x110(%rbp),%edx
    e2a8:	ff c0                	inc    %eax
    e2aa:	83 e0 0f             	and    $0xf,%eax
    e2ad:	83 e2 f0             	and    $0xfffffff0,%edx
    e2b0:	09 d0                	or     %edx,%eax
    e2b2:	88 85 10 01 00 00    	mov    %al,0x110(%rbp)
    e2b8:	48 83 c4 08          	add    $0x8,%rsp
    e2bc:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    e2c2:	5b                   	pop    %rbx
    e2c3:	44 89 c0             	mov    %r8d,%eax
    e2c6:	5d                   	pop    %rbp
    e2c7:	c3                   	retq   
    e2c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e2cf:	00 
    e2d0:	83 fe 01             	cmp    $0x1,%esi
    e2d3:	19 c0                	sbb    %eax,%eax
    e2d5:	0f b6 97 10 01 00 00 	movzbl 0x110(%rdi),%edx
    e2dc:	83 e0 f8             	and    $0xfffffff8,%eax
    e2df:	83 c0 09             	add    $0x9,%eax
    e2e2:	83 e0 0f             	and    $0xf,%eax
    e2e5:	83 e2 f0             	and    $0xfffffff0,%edx
    e2e8:	09 d0                	or     %edx,%eax
    e2ea:	88 87 10 01 00 00    	mov    %al,0x110(%rdi)
    e2f0:	48 83 c4 08          	add    $0x8,%rsp
    e2f4:	45 31 c0             	xor    %r8d,%r8d
    e2f7:	5b                   	pop    %rbx
    e2f8:	44 89 c0             	mov    %r8d,%eax
    e2fb:	5d                   	pop    %rbp
    e2fc:	c3                   	retq   
    e2fd:	0f 1f 00             	nopl   (%rax)
    e300:	0f b6 85 10 01 00 00 	movzbl 0x110(%rbp),%eax
    e307:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
    e30e:	8d 50 01             	lea    0x1(%rax),%edx
    e311:	83 e2 0f             	and    $0xf,%edx
    e314:	83 e0 f0             	and    $0xfffffff0,%eax
    e317:	09 d0                	or     %edx,%eax
    e319:	88 85 10 01 00 00    	mov    %al,0x110(%rbp)
    e31f:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
    e326:	48 89 ea             	mov    %rbp,%rdx
    e329:	48 8d 35 98 c0 00 00 	lea    0xc098(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
    e330:	bf 01 00 00 00       	mov    $0x1,%edi
    e335:	31 c0                	xor    %eax,%eax
    e337:	e8 54 41 ff ff       	callq  2490 <__printf_chk@plt>
    e33c:	31 ff                	xor    %edi,%edi
    e33e:	e8 1d 41 ff ff       	callq  2460 <fflush@plt>
    e343:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    e349:	48 8b 95 e8 00 00 00 	mov    0xe8(%rbp),%rdx
    e350:	85 c0                	test   %eax,%eax
    e352:	0f 8e 5d 01 00 00    	jle    e4b5 <stm_set_irrevocable_tx+0x2c5>
    e358:	8d 78 ff             	lea    -0x1(%rax),%edi
    e35b:	48 ff c7             	inc    %rdi
    e35e:	48 c1 e7 04          	shl    $0x4,%rdi
    e362:	48 01 d7             	add    %rdx,%rdi
    e365:	eb 40                	jmp    e3a7 <stm_set_irrevocable_tx+0x1b7>
    e367:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e36e:	00 00 
    e370:	48 8b 8d f8 00 00 00 	mov    0xf8(%rbp),%rcx
    e377:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    e37b:	48 39 c8             	cmp    %rcx,%rax
    e37e:	0f 82 52 01 00 00    	jb     e4d6 <stm_set_irrevocable_tx+0x2e6>
    e384:	8b b5 00 01 00 00    	mov    0x100(%rbp),%esi
    e38a:	48 c1 e6 06          	shl    $0x6,%rsi
    e38e:	48 01 f1             	add    %rsi,%rcx
    e391:	48 39 c8             	cmp    %rcx,%rax
    e394:	0f 83 3c 01 00 00    	jae    e4d6 <stm_set_irrevocable_tx+0x2e6>
    e39a:	48 83 c2 10          	add    $0x10,%rdx
    e39e:	48 39 fa             	cmp    %rdi,%rdx
    e3a1:	0f 84 0e 01 00 00    	je     e4b5 <stm_set_irrevocable_tx+0x2c5>
    e3a7:	48 8b 42 08          	mov    0x8(%rdx),%rax
    e3ab:	48 8b 00             	mov    (%rax),%rax
    e3ae:	a8 01                	test   $0x1,%al
    e3b0:	75 be                	jne    e370 <stm_set_irrevocable_tx+0x180>
    e3b2:	48 c1 e8 04          	shr    $0x4,%rax
    e3b6:	48 3b 02             	cmp    (%rdx),%rax
    e3b9:	74 df                	je     e39a <stm_set_irrevocable_tx+0x1aa>
    e3bb:	be 40 07 00 00       	mov    $0x740,%esi
    e3c0:	48 89 ef             	mov    %rbp,%rdi
    e3c3:	e8 38 01 00 00       	callq  e500 <stm_rollback>
    e3c8:	45 31 c0             	xor    %r8d,%r8d
    e3cb:	e9 af fe ff ff       	jmpq   e27f <stm_set_irrevocable_tx+0x8f>
    e3d0:	31 c9                	xor    %ecx,%ecx
    e3d2:	ba 01 00 00 00       	mov    $0x1,%edx
    e3d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    e3de:	00 00 
    e3e0:	48 8b 05 b1 22 81 00 	mov    0x8122b1(%rip),%rax        # 820698 <_tinystm+0x8004d8>
    e3e7:	48 83 f8 01          	cmp    $0x1,%rax
    e3eb:	74 f3                	je     e3e0 <stm_set_irrevocable_tx+0x1f0>
    e3ed:	48 89 c8             	mov    %rcx,%rax
    e3f0:	f0 48 0f b1 15 9f 22 	lock cmpxchg %rdx,0x81229f(%rip)        # 820698 <_tinystm+0x8004d8>
    e3f7:	81 00 
    e3f9:	75 e5                	jne    e3e0 <stm_set_irrevocable_tx+0x1f0>
    e3fb:	0f b6 95 10 01 00 00 	movzbl 0x110(%rbp),%edx
    e402:	8d 42 01             	lea    0x1(%rdx),%eax
    e405:	83 e0 0f             	and    $0xf,%eax
    e408:	83 e2 f0             	and    $0xfffffff0,%edx
    e40b:	09 c2                	or     %eax,%edx
    e40d:	88 95 10 01 00 00    	mov    %dl,0x110(%rbp)
    e413:	a8 08                	test   $0x8,%al
    e415:	0f 84 86 fe ff ff    	je     e2a1 <stm_set_irrevocable_tx+0xb1>
    e41b:	b9 01 00 00 00       	mov    $0x1,%ecx
    e420:	48 89 ea             	mov    %rbp,%rdx
    e423:	48 8d 35 c7 bb 00 00 	lea    0xbbc7(%rip),%rsi        # 19ff1 <__PRETTY_FUNCTION__.3713+0x189>
    e42a:	bf 01 00 00 00       	mov    $0x1,%edi
    e42f:	31 c0                	xor    %eax,%eax
    e431:	e8 5a 40 ff ff       	callq  2490 <__printf_chk@plt>
    e436:	31 ff                	xor    %edi,%edi
    e438:	e8 23 40 ff ff       	callq  2460 <fflush@plt>
    e43d:	48 8b 85 d0 00 00 00 	mov    0xd0(%rbp),%rax
    e444:	48 8d 3d 6d 22 81 00 	lea    0x81226d(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    e44b:	a8 01                	test   $0x1,%al
    e44d:	74 5f                	je     e4ae <stm_set_irrevocable_tx+0x2be>
    e44f:	e8 2c 41 ff ff       	callq  2580 <pthread_mutex_trylock@plt>
    e454:	85 c0                	test   %eax,%eax
    e456:	0f 85 13 fe ff ff    	jne    e26f <stm_set_irrevocable_tx+0x7f>
    e45c:	48 c7 05 39 22 81 00 	movq   $0x2,0x812239(%rip)        # 8206a0 <_tinystm+0x8004e0>
    e463:	02 00 00 00 
    e467:	0f ae f0             	mfence 
    e46a:	48 8b 15 3f 22 81 00 	mov    0x81223f(%rip),%rdx        # 8206b0 <_tinystm+0x8004f0>
    e471:	48 85 d2             	test   %rdx,%rdx
    e474:	74 29                	je     e49f <stm_set_irrevocable_tx+0x2af>
    e476:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    e47d:	00 00 00 
    e480:	48 39 d5             	cmp    %rdx,%rbp
    e483:	74 0e                	je     e493 <stm_set_irrevocable_tx+0x2a3>
    e485:	0f 1f 00             	nopl   (%rax)
    e488:	48 8b 82 d0 00 00 00 	mov    0xd0(%rdx),%rax
    e48f:	a8 01                	test   $0x1,%al
    e491:	75 f5                	jne    e488 <stm_set_irrevocable_tx+0x298>
    e493:	48 8b 92 50 01 00 00 	mov    0x150(%rdx),%rdx
    e49a:	48 85 d2             	test   %rdx,%rdx
    e49d:	75 e1                	jne    e480 <stm_set_irrevocable_tx+0x290>
    e49f:	0f b6 85 10 01 00 00 	movzbl 0x110(%rbp),%eax
    e4a6:	83 e0 0f             	and    $0xf,%eax
    e4a9:	e9 f3 fd ff ff       	jmpq   e2a1 <stm_set_irrevocable_tx+0xb1>
    e4ae:	e8 bd 40 ff ff       	callq  2570 <pthread_mutex_lock@plt>
    e4b3:	eb a7                	jmp    e45c <stm_set_irrevocable_tx+0x26c>
    e4b5:	85 db                	test   %ebx,%ebx
    e4b7:	74 0e                	je     e4c7 <stm_set_irrevocable_tx+0x2d7>
    e4b9:	8b 85 00 01 00 00    	mov    0x100(%rbp),%eax
    e4bf:	85 c0                	test   %eax,%eax
    e4c1:	0f 85 a8 fd ff ff    	jne    e26f <stm_set_irrevocable_tx+0x7f>
    e4c7:	0f b6 85 10 01 00 00 	movzbl 0x110(%rbp),%eax
    e4ce:	83 e0 0f             	and    $0xf,%eax
    e4d1:	e9 c3 fd ff ff       	jmpq   e299 <stm_set_irrevocable_tx+0xa9>
    e4d6:	48 8b 15 33 22 81 00 	mov    0x812233(%rip),%rdx        # 820710 <_tinystm+0x800550>
    e4dd:	48 85 d2             	test   %rdx,%rdx
    e4e0:	0f 84 d5 fe ff ff    	je     e3bb <stm_set_irrevocable_tx+0x1cb>
    e4e6:	48 8b 70 28          	mov    0x28(%rax),%rsi
    e4ea:	48 89 ef             	mov    %rbp,%rdi
    e4ed:	ff d2                	callq  *%rdx
    e4ef:	e9 c7 fe ff ff       	jmpq   e3bb <stm_set_irrevocable_tx+0x1cb>
    e4f4:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    e4fb:	00 00 00 00 
    e4ff:	90                   	nop

000000000000e500 <stm_rollback>:
    e500:	41 55                	push   %r13
    e502:	48 89 fa             	mov    %rdi,%rdx
    e505:	41 89 f5             	mov    %esi,%r13d
    e508:	41 54                	push   %r12
    e50a:	48 8d 35 df be 00 00 	lea    0xbedf(%rip),%rsi        # 1a3f0 <__PRETTY_FUNCTION__.3713+0x588>
    e511:	49 89 fc             	mov    %rdi,%r12
    e514:	55                   	push   %rbp
    e515:	31 c0                	xor    %eax,%eax
    e517:	53                   	push   %rbx
    e518:	48 83 ec 08          	sub    $0x8,%rsp
    e51c:	48 8b 8f d8 00 00 00 	mov    0xd8(%rdi),%rcx
    e523:	4c 8b 87 e0 00 00 00 	mov    0xe0(%rdi),%r8
    e52a:	bf 01 00 00 00       	mov    $0x1,%edi
    e52f:	e8 5c 3f ff ff       	callq  2490 <__printf_chk@plt>
    e534:	31 ff                	xor    %edi,%edi
    e536:	e8 25 3f ff ff       	callq  2460 <fflush@plt>
    e53b:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
    e542:	00 
    e543:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
    e54a:	00 
    e54b:	4c 89 e2             	mov    %r12,%rdx
    e54e:	48 8d 35 bb be 00 00 	lea    0xbebb(%rip),%rsi        # 1a410 <__PRETTY_FUNCTION__.3713+0x5a8>
    e555:	bf 01 00 00 00       	mov    $0x1,%edi
    e55a:	31 c0                	xor    %eax,%eax
    e55c:	e8 2f 3f ff ff       	callq  2490 <__printf_chk@plt>
    e561:	31 ff                	xor    %edi,%edi
    e563:	e8 f8 3e ff ff       	callq  2460 <fflush@plt>
    e568:	41 8b 94 24 00 01 00 	mov    0x100(%r12),%edx
    e56f:	00 
    e570:	85 d2                	test   %edx,%edx
    e572:	7e 4a                	jle    e5be <stm_rollback+0xbe>
    e574:	ff ca                	dec    %edx
    e576:	49 8b 84 24 f8 00 00 	mov    0xf8(%r12),%rax
    e57d:	00 
    e57e:	48 ff c2             	inc    %rdx
    e581:	48 c1 e2 06          	shl    $0x6,%rdx
    e585:	48 01 c2             	add    %rax,%rdx
    e588:	eb 0f                	jmp    e599 <stm_rollback+0x99>
    e58a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e590:	48 83 c0 40          	add    $0x40,%rax
    e594:	48 39 d0             	cmp    %rdx,%rax
    e597:	74 22                	je     e5bb <stm_rollback+0xbb>
    e599:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
    e59e:	75 f0                	jne    e590 <stm_rollback+0x90>
    e5a0:	48 8b 70 20          	mov    0x20(%rax),%rsi
    e5a4:	b9 04 00 00 00       	mov    $0x4,%ecx
    e5a9:	c4 e2 f1 f7 48 18    	shlx   %rcx,0x18(%rax),%rcx
    e5af:	48 83 c0 40          	add    $0x40,%rax
    e5b3:	48 89 0e             	mov    %rcx,(%rsi)
    e5b6:	48 39 d0             	cmp    %rdx,%rax
    e5b9:	75 de                	jne    e599 <stm_rollback+0x99>
    e5bb:	0f ae f0             	mfence 
    e5be:	49 c7 84 24 d0 00 00 	movq   $0x4,0xd0(%r12)
    e5c5:	00 04 00 00 00 
    e5ca:	41 81 fd 40 0c 00 00 	cmp    $0xc40,%r13d
    e5d1:	74 6d                	je     e640 <stm_rollback+0x140>
    e5d3:	41 c7 84 24 14 01 00 	movl   $0x1,0x114(%r12)
    e5da:	00 01 00 00 00 
    e5df:	8b 05 33 20 81 00    	mov    0x812033(%rip),%eax        # 820618 <_tinystm+0x800458>
    e5e5:	85 c0                	test   %eax,%eax
    e5e7:	74 23                	je     e60c <stm_rollback+0x10c>
    e5e9:	48 8d 1d 30 20 81 00 	lea    0x812030(%rip),%rbx        # 820620 <_tinystm+0x800460>
    e5f0:	31 ed                	xor    %ebp,%ebp
    e5f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e5f8:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    e5fc:	ff c5                	inc    %ebp
    e5fe:	ff 13                	callq  *(%rbx)
    e600:	48 83 c3 10          	add    $0x10,%rbx
    e604:	39 2d 0e 20 81 00    	cmp    %ebp,0x81200e(%rip)        # 820618 <_tinystm+0x800458>
    e60a:	77 ec                	ja     e5f8 <stm_rollback+0xf8>
    e60c:	41 f6 84 24 ca 00 00 	testb  $0x4,0xca(%r12)
    e613:	00 04 
    e615:	75 0f                	jne    e626 <stm_rollback+0x126>
    e617:	44 89 e8             	mov    %r13d,%eax
    e61a:	25 20 01 00 00       	and    $0x120,%eax
    e61f:	3d 20 01 00 00       	cmp    $0x120,%eax
    e624:	75 29                	jne    e64f <stm_rollback+0x14f>
    e626:	41 c7 84 24 14 01 00 	movl   $0x0,0x114(%r12)
    e62d:	00 00 00 00 00 
    e632:	48 83 c4 08          	add    $0x8,%rsp
    e636:	5b                   	pop    %rbx
    e637:	5d                   	pop    %rbp
    e638:	41 5c                	pop    %r12
    e63a:	41 5d                	pop    %r13
    e63c:	c3                   	retq   
    e63d:	0f 1f 00             	nopl   (%rax)
    e640:	be 01 00 00 00       	mov    $0x1,%esi
    e645:	4c 89 e7             	mov    %r12,%rdi
    e648:	e8 c3 e9 ff ff       	callq  d010 <stm_allocate_ws_entries>
    e64d:	eb 84                	jmp    e5d3 <stm_rollback+0xd3>
    e64f:	41 c7 84 24 08 01 00 	movl   $0x0,0x108(%r12)
    e656:	00 00 00 00 00 
    e65b:	41 c7 84 24 00 01 00 	movl   $0x0,0x100(%r12)
    e662:	00 00 00 00 00 
    e667:	41 c7 84 24 f0 00 00 	movl   $0x0,0xf0(%r12)
    e66e:	00 00 00 00 00 
    e673:	48 bb fe df ff ff ff 	movabs $0xfffffffffffdffe,%rbx
    e67a:	ff ff 0f 
    e67d:	48 8b 3d bc 1b 81 00 	mov    0x811bbc(%rip),%rdi        # 820240 <_tinystm+0x800080>
    e684:	49 89 bc 24 e0 00 00 	mov    %rdi,0xe0(%r12)
    e68b:	00 
    e68c:	49 89 bc 24 d8 00 00 	mov    %rdi,0xd8(%r12)
    e693:	00 
    e694:	48 39 df             	cmp    %rbx,%rdi
    e697:	77 4c                	ja     e6e5 <stm_rollback+0x1e5>
    e699:	e8 c2 91 00 00       	callq  17860 <gc_set_epoch>
    e69e:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
    e6a5:	00 0f 
    e6a7:	75 7b                	jne    e724 <stm_rollback+0x224>
    e6a9:	49 c7 84 24 d0 00 00 	movq   $0x1,0xd0(%r12)
    e6b0:	00 01 00 00 00 
    e6b5:	48 8b 05 e4 1f 81 00 	mov    0x811fe4(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
    e6bc:	48 83 f8 02          	cmp    $0x2,%rax
    e6c0:	41 0f b6 84 24 10 01 	movzbl 0x110(%r12),%eax
    e6c7:	00 00 
    e6c9:	74 21                	je     e6ec <stm_rollback+0x1ec>
    e6cb:	83 e0 0f             	and    $0xf,%eax
    e6ce:	3c 0b                	cmp    $0xb,%al
    e6d0:	0f 94 c0             	sete   %al
    e6d3:	0f b6 c0             	movzbl %al,%eax
    e6d6:	ff c0                	inc    %eax
    e6d8:	44 09 e8             	or     %r13d,%eax
    e6db:	89 c6                	mov    %eax,%esi
    e6dd:	4c 89 e7             	mov    %r12,%rdi
    e6e0:	e8 cb 3d ff ff       	callq  24b0 <__longjmp_chk@plt>
    e6e5:	e8 b6 ea ff ff       	callq  d1a0 <stm_quiesce_barrier.isra.0.constprop.0>
    e6ea:	eb 91                	jmp    e67d <stm_rollback+0x17d>
    e6ec:	a8 08                	test   $0x8,%al
    e6ee:	75 db                	jne    e6cb <stm_rollback+0x1cb>
    e6f0:	49 8b 84 24 d0 00 00 	mov    0xd0(%r12),%rax
    e6f7:	00 
    e6f8:	49 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%r12)
    e6ff:	00 00 00 00 00 
    e704:	48 8b 15 95 1f 81 00 	mov    0x811f95(%rip),%rdx        # 8206a0 <_tinystm+0x8004e0>
    e70b:	48 83 fa 02          	cmp    $0x2,%rdx
    e70f:	74 f3                	je     e704 <stm_rollback+0x204>
    e711:	49 89 84 24 d0 00 00 	mov    %rax,0xd0(%r12)
    e718:	00 
    e719:	41 0f b6 84 24 10 01 	movzbl 0x110(%r12),%eax
    e720:	00 00 
    e722:	eb a7                	jmp    e6cb <stm_rollback+0x1cb>
    e724:	83 ce ff             	or     $0xffffffff,%esi
    e727:	4c 89 e7             	mov    %r12,%rdi
    e72a:	e8 c1 fa ff ff       	callq  e1f0 <stm_set_irrevocable_tx>
    e72f:	49 c7 84 24 d0 00 00 	movq   $0x9,0xd0(%r12)
    e736:	00 09 00 00 00 
    e73b:	e9 75 ff ff ff       	jmpq   e6b5 <stm_rollback+0x1b5>

000000000000e740 <stm_commit>:
    e740:	f3 0f 1e fa          	endbr64 
    e744:	41 55                	push   %r13
    e746:	48 8d 35 bc b8 00 00 	lea    0xb8bc(%rip),%rsi        # 1a009 <__PRETTY_FUNCTION__.3713+0x1a1>
    e74d:	bf 01 00 00 00       	mov    $0x1,%edi
    e752:	41 54                	push   %r12
    e754:	31 c0                	xor    %eax,%eax
    e756:	55                   	push   %rbp
    e757:	53                   	push   %rbx
    e758:	48 83 ec 08          	sub    $0x8,%rsp
    e75c:	64 48 8b 1c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rbx
    e763:	ff ff 
    e765:	48 8b 8b d8 00 00 00 	mov    0xd8(%rbx),%rcx
    e76c:	4c 8b 83 e0 00 00 00 	mov    0xe0(%rbx),%r8
    e773:	48 89 da             	mov    %rbx,%rdx
    e776:	e8 15 3d ff ff       	callq  2490 <__printf_chk@plt>
    e77b:	31 ff                	xor    %edi,%edi
    e77d:	e8 de 3c ff ff       	callq  2460 <fflush@plt>
    e782:	8b 83 14 01 00 00    	mov    0x114(%rbx),%eax
    e788:	8d 68 ff             	lea    -0x1(%rax),%ebp
    e78b:	89 ab 14 01 00 00    	mov    %ebp,0x114(%rbx)
    e791:	85 ed                	test   %ebp,%ebp
    e793:	0f 85 13 01 00 00    	jne    e8ac <stm_commit+0x16c>
    e799:	8b 0d 89 1d 81 00    	mov    0x811d89(%rip),%ecx        # 820528 <_tinystm+0x800368>
    e79f:	85 c9                	test   %ecx,%ecx
    e7a1:	0f 85 79 01 00 00    	jne    e920 <stm_commit+0x1e0>
    e7a7:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    e7ad:	85 d2                	test   %edx,%edx
    e7af:	0f 84 bb 00 00 00    	je     e870 <stm_commit+0x130>
    e7b5:	48 8b 8b d8 00 00 00 	mov    0xd8(%rbx),%rcx
    e7bc:	4c 8b 83 e0 00 00 00 	mov    0xe0(%rbx),%r8
    e7c3:	bf 01 00 00 00       	mov    $0x1,%edi
    e7c8:	31 c0                	xor    %eax,%eax
    e7ca:	48 89 da             	mov    %rbx,%rdx
    e7cd:	48 8d 35 64 bc 00 00 	lea    0xbc64(%rip),%rsi        # 1a438 <__PRETTY_FUNCTION__.3713+0x5d0>
    e7d4:	e8 b7 3c ff ff       	callq  2490 <__printf_chk@plt>
    e7d9:	31 ff                	xor    %edi,%edi
    e7db:	e8 80 3c ff ff       	callq  2460 <fflush@plt>
    e7e0:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    e7e7:	75 10                	jne    e7f9 <stm_commit+0xb9>
    e7e9:	48 8b 05 a8 1e 81 00 	mov    0x811ea8(%rip),%rax        # 820698 <_tinystm+0x8004d8>
    e7f0:	48 85 c0             	test   %rax,%rax
    e7f3:	0f 85 c7 00 00 00    	jne    e8c0 <stm_commit+0x180>
    e7f9:	b8 01 00 00 00       	mov    $0x1,%eax
    e7fe:	f0 48 0f c1 05 39 1a 	lock xadd %rax,0x811a39(%rip)        # 820240 <_tinystm+0x800080>
    e805:	81 00 
    e807:	4c 8d 60 01          	lea    0x1(%rax),%r12
    e80b:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    e812:	0f 85 c8 00 00 00    	jne    e8e0 <stm_commit+0x1a0>
    e818:	48 8b 8b d8 00 00 00 	mov    0xd8(%rbx),%rcx
    e81f:	48 39 c1             	cmp    %rax,%rcx
    e822:	0f 85 26 01 00 00    	jne    e94e <stm_commit+0x20e>
    e828:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    e82e:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    e835:	85 d2                	test   %edx,%edx
    e837:	7e 40                	jle    e879 <stm_commit+0x139>
    e839:	49 c1 e4 04          	shl    $0x4,%r12
    e83d:	eb 09                	jmp    e848 <stm_commit+0x108>
    e83f:	90                   	nop
    e840:	48 83 c0 40          	add    $0x40,%rax
    e844:	ff ca                	dec    %edx
    e846:	74 28                	je     e870 <stm_commit+0x130>
    e848:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    e84d:	74 0a                	je     e859 <stm_commit+0x119>
    e84f:	48 8b 08             	mov    (%rax),%rcx
    e852:	48 8b 70 08          	mov    0x8(%rax),%rsi
    e856:	48 89 31             	mov    %rsi,(%rcx)
    e859:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
    e85e:	75 e0                	jne    e840 <stm_commit+0x100>
    e860:	48 8b 48 20          	mov    0x20(%rax),%rcx
    e864:	4c 89 21             	mov    %r12,(%rcx)
    e867:	48 83 c0 40          	add    $0x40,%rax
    e86b:	ff ca                	dec    %edx
    e86d:	75 d9                	jne    e848 <stm_commit+0x108>
    e86f:	90                   	nop
    e870:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    e877:	75 7f                	jne    e8f8 <stm_commit+0x1b8>
    e879:	48 c7 83 d0 00 00 00 	movq   $0x2,0xd0(%rbx)
    e880:	02 00 00 00 
    e884:	8b 05 16 1d 81 00    	mov    0x811d16(%rip),%eax        # 8205a0 <_tinystm+0x8003e0>
    e88a:	85 c0                	test   %eax,%eax
    e88c:	74 1e                	je     e8ac <stm_commit+0x16c>
    e88e:	48 8d 1d 13 1d 81 00 	lea    0x811d13(%rip),%rbx        # 8205a8 <_tinystm+0x8003e8>
    e895:	0f 1f 00             	nopl   (%rax)
    e898:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    e89c:	ff c5                	inc    %ebp
    e89e:	ff 13                	callq  *(%rbx)
    e8a0:	48 83 c3 10          	add    $0x10,%rbx
    e8a4:	3b 2d f6 1c 81 00    	cmp    0x811cf6(%rip),%ebp        # 8205a0 <_tinystm+0x8003e0>
    e8aa:	72 ec                	jb     e898 <stm_commit+0x158>
    e8ac:	48 83 c4 08          	add    $0x8,%rsp
    e8b0:	5b                   	pop    %rbx
    e8b1:	5d                   	pop    %rbp
    e8b2:	41 5c                	pop    %r12
    e8b4:	b8 01 00 00 00       	mov    $0x1,%eax
    e8b9:	41 5d                	pop    %r13
    e8bb:	c3                   	retq   
    e8bc:	0f 1f 40 00          	nopl   0x0(%rax)
    e8c0:	be 40 09 00 00       	mov    $0x940,%esi
    e8c5:	48 89 df             	mov    %rbx,%rdi
    e8c8:	e8 33 fc ff ff       	callq  e500 <stm_rollback>
    e8cd:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    e8d4:	74 a3                	je     e879 <stm_commit+0x139>
    e8d6:	eb 20                	jmp    e8f8 <stm_commit+0x1b8>
    e8d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e8df:	00 
    e8e0:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    e8e6:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    e8ed:	85 d2                	test   %edx,%edx
    e8ef:	0f 8f 44 ff ff ff    	jg     e839 <stm_commit+0xf9>
    e8f5:	0f 1f 00             	nopl   (%rax)
    e8f8:	48 c7 05 95 1d 81 00 	movq   $0x0,0x811d95(%rip)        # 820698 <_tinystm+0x8004d8>
    e8ff:	00 00 00 00 
    e903:	f6 83 10 01 00 00 08 	testb  $0x8,0x110(%rbx)
    e90a:	0f 85 f3 00 00 00    	jne    ea03 <stm_commit+0x2c3>
    e910:	80 a3 10 01 00 00 f0 	andb   $0xf0,0x110(%rbx)
    e917:	e9 5d ff ff ff       	jmpq   e879 <stm_commit+0x139>
    e91c:	0f 1f 40 00          	nopl   0x0(%rax)
    e920:	4c 8d 25 09 1c 81 00 	lea    0x811c09(%rip),%r12        # 820530 <_tinystm+0x800370>
    e927:	45 31 ed             	xor    %r13d,%r13d
    e92a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e930:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    e935:	41 ff c5             	inc    %r13d
    e938:	41 ff 14 24          	callq  *(%r12)
    e93c:	49 83 c4 10          	add    $0x10,%r12
    e940:	44 3b 2d e1 1b 81 00 	cmp    0x811be1(%rip),%r13d        # 820528 <_tinystm+0x800368>
    e947:	72 e7                	jb     e930 <stm_commit+0x1f0>
    e949:	e9 59 fe ff ff       	jmpq   e7a7 <stm_commit+0x67>
    e94e:	4c 8b 83 e0 00 00 00 	mov    0xe0(%rbx),%r8
    e955:	48 89 da             	mov    %rbx,%rdx
    e958:	48 8d 35 69 ba 00 00 	lea    0xba69(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
    e95f:	bf 01 00 00 00       	mov    $0x1,%edi
    e964:	31 c0                	xor    %eax,%eax
    e966:	e8 25 3b ff ff       	callq  2490 <__printf_chk@plt>
    e96b:	31 ff                	xor    %edi,%edi
    e96d:	e8 ee 3a ff ff       	callq  2460 <fflush@plt>
    e972:	8b 83 f0 00 00 00    	mov    0xf0(%rbx),%eax
    e978:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    e97f:	85 c0                	test   %eax,%eax
    e981:	7e 66                	jle    e9e9 <stm_commit+0x2a9>
    e983:	8d 78 ff             	lea    -0x1(%rax),%edi
    e986:	48 ff c7             	inc    %rdi
    e989:	48 c1 e7 04          	shl    $0x4,%rdi
    e98d:	48 01 d7             	add    %rdx,%rdi
    e990:	eb 31                	jmp    e9c3 <stm_commit+0x283>
    e992:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    e998:	48 8b 8b f8 00 00 00 	mov    0xf8(%rbx),%rcx
    e99f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    e9a3:	48 39 c8             	cmp    %rcx,%rax
    e9a6:	72 77                	jb     ea1f <stm_commit+0x2df>
    e9a8:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    e9ae:	48 c1 e6 06          	shl    $0x6,%rsi
    e9b2:	48 01 f1             	add    %rsi,%rcx
    e9b5:	48 39 c8             	cmp    %rcx,%rax
    e9b8:	73 65                	jae    ea1f <stm_commit+0x2df>
    e9ba:	48 83 c2 10          	add    $0x10,%rdx
    e9be:	48 39 d7             	cmp    %rdx,%rdi
    e9c1:	74 26                	je     e9e9 <stm_commit+0x2a9>
    e9c3:	48 8b 42 08          	mov    0x8(%rdx),%rax
    e9c7:	48 8b 00             	mov    (%rax),%rax
    e9ca:	a8 01                	test   $0x1,%al
    e9cc:	75 ca                	jne    e998 <stm_commit+0x258>
    e9ce:	48 c1 e8 04          	shr    $0x4,%rax
    e9d2:	48 3b 02             	cmp    (%rdx),%rax
    e9d5:	74 e3                	je     e9ba <stm_commit+0x27a>
    e9d7:	be 40 07 00 00       	mov    $0x740,%esi
    e9dc:	48 89 df             	mov    %rbx,%rdi
    e9df:	e8 1c fb ff ff       	callq  e500 <stm_rollback>
    e9e4:	e9 87 fe ff ff       	jmpq   e870 <stm_commit+0x130>
    e9e9:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    e9ef:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    e9f6:	85 d2                	test   %edx,%edx
    e9f8:	0f 8f 3b fe ff ff    	jg     e839 <stm_commit+0xf9>
    e9fe:	e9 6d fe ff ff       	jmpq   e870 <stm_commit+0x130>
    ea03:	48 8d 3d ae 1c 81 00 	lea    0x811cae(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    ea0a:	48 c7 05 8b 1c 81 00 	movq   $0x0,0x811c8b(%rip)        # 8206a0 <_tinystm+0x8004e0>
    ea11:	00 00 00 00 
    ea15:	e8 26 3a ff ff       	callq  2440 <pthread_mutex_unlock@plt>
    ea1a:	e9 f1 fe ff ff       	jmpq   e910 <stm_commit+0x1d0>
    ea1f:	48 8b 15 ea 1c 81 00 	mov    0x811cea(%rip),%rdx        # 820710 <_tinystm+0x800550>
    ea26:	48 85 d2             	test   %rdx,%rdx
    ea29:	74 ac                	je     e9d7 <stm_commit+0x297>
    ea2b:	48 8b 70 28          	mov    0x28(%rax),%rsi
    ea2f:	48 89 df             	mov    %rbx,%rdi
    ea32:	ff d2                	callq  *%rdx
    ea34:	eb a1                	jmp    e9d7 <stm_commit+0x297>
    ea36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ea3d:	00 00 00 

000000000000ea40 <stm_commit_tx>:
    ea40:	f3 0f 1e fa          	endbr64 
    ea44:	41 55                	push   %r13
    ea46:	48 89 fa             	mov    %rdi,%rdx
    ea49:	48 8d 35 b9 b5 00 00 	lea    0xb5b9(%rip),%rsi        # 1a009 <__PRETTY_FUNCTION__.3713+0x1a1>
    ea50:	41 54                	push   %r12
    ea52:	31 c0                	xor    %eax,%eax
    ea54:	55                   	push   %rbp
    ea55:	53                   	push   %rbx
    ea56:	48 89 fb             	mov    %rdi,%rbx
    ea59:	48 83 ec 08          	sub    $0x8,%rsp
    ea5d:	48 8b 8f d8 00 00 00 	mov    0xd8(%rdi),%rcx
    ea64:	4c 8b 87 e0 00 00 00 	mov    0xe0(%rdi),%r8
    ea6b:	bf 01 00 00 00       	mov    $0x1,%edi
    ea70:	e8 1b 3a ff ff       	callq  2490 <__printf_chk@plt>
    ea75:	31 ff                	xor    %edi,%edi
    ea77:	e8 e4 39 ff ff       	callq  2460 <fflush@plt>
    ea7c:	8b 83 14 01 00 00    	mov    0x114(%rbx),%eax
    ea82:	8d 68 ff             	lea    -0x1(%rax),%ebp
    ea85:	89 ab 14 01 00 00    	mov    %ebp,0x114(%rbx)
    ea8b:	85 ed                	test   %ebp,%ebp
    ea8d:	0f 85 19 01 00 00    	jne    ebac <stm_commit_tx+0x16c>
    ea93:	8b 0d 8f 1a 81 00    	mov    0x811a8f(%rip),%ecx        # 820528 <_tinystm+0x800368>
    ea99:	85 c9                	test   %ecx,%ecx
    ea9b:	0f 85 7f 01 00 00    	jne    ec20 <stm_commit_tx+0x1e0>
    eaa1:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    eaa7:	85 d2                	test   %edx,%edx
    eaa9:	0f 84 c1 00 00 00    	je     eb70 <stm_commit_tx+0x130>
    eaaf:	48 8b 8b d8 00 00 00 	mov    0xd8(%rbx),%rcx
    eab6:	4c 8b 83 e0 00 00 00 	mov    0xe0(%rbx),%r8
    eabd:	bf 01 00 00 00       	mov    $0x1,%edi
    eac2:	31 c0                	xor    %eax,%eax
    eac4:	48 89 da             	mov    %rbx,%rdx
    eac7:	48 8d 35 6a b9 00 00 	lea    0xb96a(%rip),%rsi        # 1a438 <__PRETTY_FUNCTION__.3713+0x5d0>
    eace:	e8 bd 39 ff ff       	callq  2490 <__printf_chk@plt>
    ead3:	31 ff                	xor    %edi,%edi
    ead5:	e8 86 39 ff ff       	callq  2460 <fflush@plt>
    eada:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    eae1:	75 10                	jne    eaf3 <stm_commit_tx+0xb3>
    eae3:	48 8b 05 ae 1b 81 00 	mov    0x811bae(%rip),%rax        # 820698 <_tinystm+0x8004d8>
    eaea:	48 85 c0             	test   %rax,%rax
    eaed:	0f 85 cd 00 00 00    	jne    ebc0 <stm_commit_tx+0x180>
    eaf3:	b8 01 00 00 00       	mov    $0x1,%eax
    eaf8:	f0 48 0f c1 05 3f 17 	lock xadd %rax,0x81173f(%rip)        # 820240 <_tinystm+0x800080>
    eaff:	81 00 
    eb01:	4c 8d 60 01          	lea    0x1(%rax),%r12
    eb05:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    eb0c:	0f 85 ce 00 00 00    	jne    ebe0 <stm_commit_tx+0x1a0>
    eb12:	48 8b 8b d8 00 00 00 	mov    0xd8(%rbx),%rcx
    eb19:	48 39 c1             	cmp    %rax,%rcx
    eb1c:	0f 85 2c 01 00 00    	jne    ec4e <stm_commit_tx+0x20e>
    eb22:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    eb28:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    eb2f:	85 d2                	test   %edx,%edx
    eb31:	7e 46                	jle    eb79 <stm_commit_tx+0x139>
    eb33:	49 c1 e4 04          	shl    $0x4,%r12
    eb37:	eb 0f                	jmp    eb48 <stm_commit_tx+0x108>
    eb39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eb40:	48 83 c0 40          	add    $0x40,%rax
    eb44:	ff ca                	dec    %edx
    eb46:	74 28                	je     eb70 <stm_commit_tx+0x130>
    eb48:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    eb4d:	74 0a                	je     eb59 <stm_commit_tx+0x119>
    eb4f:	48 8b 08             	mov    (%rax),%rcx
    eb52:	48 8b 70 08          	mov    0x8(%rax),%rsi
    eb56:	48 89 31             	mov    %rsi,(%rcx)
    eb59:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
    eb5e:	75 e0                	jne    eb40 <stm_commit_tx+0x100>
    eb60:	48 8b 48 20          	mov    0x20(%rax),%rcx
    eb64:	4c 89 21             	mov    %r12,(%rcx)
    eb67:	48 83 c0 40          	add    $0x40,%rax
    eb6b:	ff ca                	dec    %edx
    eb6d:	75 d9                	jne    eb48 <stm_commit_tx+0x108>
    eb6f:	90                   	nop
    eb70:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    eb77:	75 7f                	jne    ebf8 <stm_commit_tx+0x1b8>
    eb79:	48 c7 83 d0 00 00 00 	movq   $0x2,0xd0(%rbx)
    eb80:	02 00 00 00 
    eb84:	8b 05 16 1a 81 00    	mov    0x811a16(%rip),%eax        # 8205a0 <_tinystm+0x8003e0>
    eb8a:	85 c0                	test   %eax,%eax
    eb8c:	74 1e                	je     ebac <stm_commit_tx+0x16c>
    eb8e:	48 8d 1d 13 1a 81 00 	lea    0x811a13(%rip),%rbx        # 8205a8 <_tinystm+0x8003e8>
    eb95:	0f 1f 00             	nopl   (%rax)
    eb98:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    eb9c:	ff c5                	inc    %ebp
    eb9e:	ff 13                	callq  *(%rbx)
    eba0:	48 83 c3 10          	add    $0x10,%rbx
    eba4:	3b 2d f6 19 81 00    	cmp    0x8119f6(%rip),%ebp        # 8205a0 <_tinystm+0x8003e0>
    ebaa:	72 ec                	jb     eb98 <stm_commit_tx+0x158>
    ebac:	48 83 c4 08          	add    $0x8,%rsp
    ebb0:	5b                   	pop    %rbx
    ebb1:	5d                   	pop    %rbp
    ebb2:	41 5c                	pop    %r12
    ebb4:	b8 01 00 00 00       	mov    $0x1,%eax
    ebb9:	41 5d                	pop    %r13
    ebbb:	c3                   	retq   
    ebbc:	0f 1f 40 00          	nopl   0x0(%rax)
    ebc0:	be 40 09 00 00       	mov    $0x940,%esi
    ebc5:	48 89 df             	mov    %rbx,%rdi
    ebc8:	e8 33 f9 ff ff       	callq  e500 <stm_rollback>
    ebcd:	f6 83 10 01 00 00 0f 	testb  $0xf,0x110(%rbx)
    ebd4:	74 a3                	je     eb79 <stm_commit_tx+0x139>
    ebd6:	eb 20                	jmp    ebf8 <stm_commit_tx+0x1b8>
    ebd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ebdf:	00 
    ebe0:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    ebe6:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    ebed:	85 d2                	test   %edx,%edx
    ebef:	0f 8f 3e ff ff ff    	jg     eb33 <stm_commit_tx+0xf3>
    ebf5:	0f 1f 00             	nopl   (%rax)
    ebf8:	48 c7 05 95 1a 81 00 	movq   $0x0,0x811a95(%rip)        # 820698 <_tinystm+0x8004d8>
    ebff:	00 00 00 00 
    ec03:	f6 83 10 01 00 00 08 	testb  $0x8,0x110(%rbx)
    ec0a:	0f 85 f3 00 00 00    	jne    ed03 <stm_commit_tx+0x2c3>
    ec10:	80 a3 10 01 00 00 f0 	andb   $0xf0,0x110(%rbx)
    ec17:	e9 5d ff ff ff       	jmpq   eb79 <stm_commit_tx+0x139>
    ec1c:	0f 1f 40 00          	nopl   0x0(%rax)
    ec20:	4c 8d 25 09 19 81 00 	lea    0x811909(%rip),%r12        # 820530 <_tinystm+0x800370>
    ec27:	45 31 ed             	xor    %r13d,%r13d
    ec2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ec30:	49 8b 7c 24 08       	mov    0x8(%r12),%rdi
    ec35:	41 ff c5             	inc    %r13d
    ec38:	41 ff 14 24          	callq  *(%r12)
    ec3c:	49 83 c4 10          	add    $0x10,%r12
    ec40:	44 3b 2d e1 18 81 00 	cmp    0x8118e1(%rip),%r13d        # 820528 <_tinystm+0x800368>
    ec47:	72 e7                	jb     ec30 <stm_commit_tx+0x1f0>
    ec49:	e9 53 fe ff ff       	jmpq   eaa1 <stm_commit_tx+0x61>
    ec4e:	4c 8b 83 e0 00 00 00 	mov    0xe0(%rbx),%r8
    ec55:	48 89 da             	mov    %rbx,%rdx
    ec58:	48 8d 35 69 b7 00 00 	lea    0xb769(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
    ec5f:	bf 01 00 00 00       	mov    $0x1,%edi
    ec64:	31 c0                	xor    %eax,%eax
    ec66:	e8 25 38 ff ff       	callq  2490 <__printf_chk@plt>
    ec6b:	31 ff                	xor    %edi,%edi
    ec6d:	e8 ee 37 ff ff       	callq  2460 <fflush@plt>
    ec72:	8b 83 f0 00 00 00    	mov    0xf0(%rbx),%eax
    ec78:	48 8b 93 e8 00 00 00 	mov    0xe8(%rbx),%rdx
    ec7f:	85 c0                	test   %eax,%eax
    ec81:	7e 66                	jle    ece9 <stm_commit_tx+0x2a9>
    ec83:	8d 78 ff             	lea    -0x1(%rax),%edi
    ec86:	48 ff c7             	inc    %rdi
    ec89:	48 c1 e7 04          	shl    $0x4,%rdi
    ec8d:	48 01 d7             	add    %rdx,%rdi
    ec90:	eb 31                	jmp    ecc3 <stm_commit_tx+0x283>
    ec92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ec98:	48 8b 8b f8 00 00 00 	mov    0xf8(%rbx),%rcx
    ec9f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    eca3:	48 39 c8             	cmp    %rcx,%rax
    eca6:	72 77                	jb     ed1f <stm_commit_tx+0x2df>
    eca8:	8b b3 00 01 00 00    	mov    0x100(%rbx),%esi
    ecae:	48 c1 e6 06          	shl    $0x6,%rsi
    ecb2:	48 01 f1             	add    %rsi,%rcx
    ecb5:	48 39 c8             	cmp    %rcx,%rax
    ecb8:	73 65                	jae    ed1f <stm_commit_tx+0x2df>
    ecba:	48 83 c2 10          	add    $0x10,%rdx
    ecbe:	48 39 d7             	cmp    %rdx,%rdi
    ecc1:	74 26                	je     ece9 <stm_commit_tx+0x2a9>
    ecc3:	48 8b 42 08          	mov    0x8(%rdx),%rax
    ecc7:	48 8b 00             	mov    (%rax),%rax
    ecca:	a8 01                	test   $0x1,%al
    eccc:	75 ca                	jne    ec98 <stm_commit_tx+0x258>
    ecce:	48 c1 e8 04          	shr    $0x4,%rax
    ecd2:	48 3b 02             	cmp    (%rdx),%rax
    ecd5:	74 e3                	je     ecba <stm_commit_tx+0x27a>
    ecd7:	be 40 07 00 00       	mov    $0x740,%esi
    ecdc:	48 89 df             	mov    %rbx,%rdi
    ecdf:	e8 1c f8 ff ff       	callq  e500 <stm_rollback>
    ece4:	e9 87 fe ff ff       	jmpq   eb70 <stm_commit_tx+0x130>
    ece9:	8b 93 00 01 00 00    	mov    0x100(%rbx),%edx
    ecef:	48 8b 83 f8 00 00 00 	mov    0xf8(%rbx),%rax
    ecf6:	85 d2                	test   %edx,%edx
    ecf8:	0f 8f 35 fe ff ff    	jg     eb33 <stm_commit_tx+0xf3>
    ecfe:	e9 6d fe ff ff       	jmpq   eb70 <stm_commit_tx+0x130>
    ed03:	48 8d 3d ae 19 81 00 	lea    0x8119ae(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
    ed0a:	48 c7 05 8b 19 81 00 	movq   $0x0,0x81198b(%rip)        # 8206a0 <_tinystm+0x8004e0>
    ed11:	00 00 00 00 
    ed15:	e8 26 37 ff ff       	callq  2440 <pthread_mutex_unlock@plt>
    ed1a:	e9 f1 fe ff ff       	jmpq   ec10 <stm_commit_tx+0x1d0>
    ed1f:	48 8b 15 ea 19 81 00 	mov    0x8119ea(%rip),%rdx        # 820710 <_tinystm+0x800550>
    ed26:	48 85 d2             	test   %rdx,%rdx
    ed29:	74 ac                	je     ecd7 <stm_commit_tx+0x297>
    ed2b:	48 8b 70 28          	mov    0x28(%rax),%rsi
    ed2f:	48 89 df             	mov    %rbx,%rdi
    ed32:	ff d2                	callq  *%rdx
    ed34:	eb a1                	jmp    ecd7 <stm_commit_tx+0x297>
    ed36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    ed3d:	00 00 00 

000000000000ed40 <stm_abort>:
    ed40:	f3 0f 1e fa          	endbr64 
    ed44:	89 fe                	mov    %edi,%esi
    ed46:	64 48 8b 3c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rdi
    ed4d:	ff ff 
    ed4f:	83 ce 20             	or     $0x20,%esi
    ed52:	e9 a9 f7 ff ff       	jmpq   e500 <stm_rollback>
    ed57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ed5e:	00 00 

000000000000ed60 <stm_abort_tx>:
    ed60:	f3 0f 1e fa          	endbr64 
    ed64:	83 ce 20             	or     $0x20,%esi
    ed67:	e9 94 f7 ff ff       	jmpq   e500 <stm_rollback>
    ed6c:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    ed73:	00 00 00 00 
    ed77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ed7e:	00 00 

000000000000ed80 <stm_load>:
    ed80:	f3 0f 1e fa          	endbr64 
    ed84:	41 57                	push   %r15
    ed86:	48 8d 05 33 14 01 00 	lea    0x11433(%rip),%rax        # 201c0 <_tinystm>
    ed8d:	49 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%r15
    ed94:	ff ff 0f 
    ed97:	41 56                	push   %r14
    ed99:	41 55                	push   %r13
    ed9b:	41 54                	push   %r12
    ed9d:	49 89 fc             	mov    %rdi,%r12
    eda0:	55                   	push   %rbp
    eda1:	53                   	push   %rbx
    eda2:	48 89 fb             	mov    %rdi,%rbx
    eda5:	48 c1 eb 02          	shr    $0x2,%rbx
    eda9:	48 83 ec 18          	sub    $0x18,%rsp
    edad:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    edb3:	64 48 8b 2c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rbp
    edba:	ff ff 
    edbc:	48 01 c3             	add    %rax,%rbx
    edbf:	48 8b 03             	mov    (%rbx),%rax
    edc2:	a8 01                	test   $0x1,%al
    edc4:	0f 85 86 00 00 00    	jne    ee50 <stm_load+0xd0>
    edca:	4d 8b 2c 24          	mov    (%r12),%r13
    edce:	4c 8b 0b             	mov    (%rbx),%r9
    edd1:	4c 39 c8             	cmp    %r9,%rax
    edd4:	0f 85 ce 00 00 00    	jne    eea8 <stm_load+0x128>
    edda:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    ede1:	75 52                	jne    ee35 <stm_load+0xb5>
    ede3:	0f b6 85 ca 00 00 00 	movzbl 0xca(%rbp),%eax
    edea:	4d 89 ce             	mov    %r9,%r14
    eded:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
    edf4:	49 c1 ee 04          	shr    $0x4,%r14
    edf8:	83 e0 01             	and    $0x1,%eax
    edfb:	4d 39 c6             	cmp    %r8,%r14
    edfe:	0f 87 ac 00 00 00    	ja     eeb0 <stm_load+0x130>
    ee04:	84 c0                	test   %al,%al
    ee06:	75 2d                	jne    ee35 <stm_load+0xb5>
    ee08:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    ee0e:	3b 85 f4 00 00 00    	cmp    0xf4(%rbp),%eax
    ee14:	0f 84 e6 00 00 00    	je     ef00 <stm_load+0x180>
    ee1a:	8d 50 01             	lea    0x1(%rax),%edx
    ee1d:	48 c1 e0 04          	shl    $0x4,%rax
    ee21:	48 03 85 e8 00 00 00 	add    0xe8(%rbp),%rax
    ee28:	89 95 f0 00 00 00    	mov    %edx,0xf0(%rbp)
    ee2e:	4c 89 30             	mov    %r14,(%rax)
    ee31:	48 89 58 08          	mov    %rbx,0x8(%rax)
    ee35:	48 83 c4 18          	add    $0x18,%rsp
    ee39:	5b                   	pop    %rbx
    ee3a:	5d                   	pop    %rbp
    ee3b:	41 5c                	pop    %r12
    ee3d:	4c 89 e8             	mov    %r13,%rax
    ee40:	41 5d                	pop    %r13
    ee42:	41 5e                	pop    %r14
    ee44:	41 5f                	pop    %r15
    ee46:	c3                   	retq   
    ee47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    ee4e:	00 00 
    ee50:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
    ee57:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    ee5b:	48 39 d0             	cmp    %rdx,%rax
    ee5e:	0f 82 74 01 00 00    	jb     efd8 <stm_load+0x258>
    ee64:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    ee6a:	48 c1 e1 06          	shl    $0x6,%rcx
    ee6e:	48 01 ca             	add    %rcx,%rdx
    ee71:	48 39 d0             	cmp    %rdx,%rax
    ee74:	72 17                	jb     ee8d <stm_load+0x10d>
    ee76:	e9 5d 01 00 00       	jmpq   efd8 <stm_load+0x258>
    ee7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ee80:	48 8b 40 30          	mov    0x30(%rax),%rax
    ee84:	48 85 c0             	test   %rax,%rax
    ee87:	0f 84 93 00 00 00    	je     ef20 <stm_load+0x1a0>
    ee8d:	4c 3b 20             	cmp    (%rax),%r12
    ee90:	75 ee                	jne    ee80 <stm_load+0x100>
    ee92:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    ee97:	0f 84 83 00 00 00    	je     ef20 <stm_load+0x1a0>
    ee9d:	4c 8b 68 08          	mov    0x8(%rax),%r13
    eea1:	eb 92                	jmp    ee35 <stm_load+0xb5>
    eea3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    eea8:	4c 89 c8             	mov    %r9,%rax
    eeab:	e9 12 ff ff ff       	jmpq   edc2 <stm_load+0x42>
    eeb0:	4c 89 0c 24          	mov    %r9,(%rsp)
    eeb4:	84 c0                	test   %al,%al
    eeb6:	75 33                	jne    eeeb <stm_load+0x16b>
    eeb8:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
    eebf:	48 89 ea             	mov    %rbp,%rdx
    eec2:	48 8d 35 97 b5 00 00 	lea    0xb597(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
    eec9:	bf 01 00 00 00       	mov    $0x1,%edi
    eece:	e8 bd 35 ff ff       	callq  2490 <__printf_chk@plt>
    eed3:	31 ff                	xor    %edi,%edi
    eed5:	e8 86 35 ff ff       	callq  2460 <fflush@plt>
    eeda:	4c 8b 15 5f 13 81 00 	mov    0x81135f(%rip),%r10        # 820240 <_tinystm+0x800080>
    eee1:	4d 39 fa             	cmp    %r15,%r10
    eee4:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    eee9:	76 45                	jbe    ef30 <stm_load+0x1b0>
    eeeb:	be 40 05 00 00       	mov    $0x540,%esi
    eef0:	48 89 ef             	mov    %rbp,%rdi
    eef3:	e8 08 f6 ff ff       	callq  e500 <stm_rollback>
    eef8:	45 31 ed             	xor    %r13d,%r13d
    eefb:	e9 35 ff ff ff       	jmpq   ee35 <stm_load+0xb5>
    ef00:	be 01 00 00 00       	mov    $0x1,%esi
    ef05:	48 89 ef             	mov    %rbp,%rdi
    ef08:	e8 13 e0 ff ff       	callq  cf20 <stm_allocate_rs_entries>
    ef0d:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    ef13:	e9 02 ff ff ff       	jmpq   ee1a <stm_load+0x9a>
    ef18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ef1f:	00 
    ef20:	4d 8b 2c 24          	mov    (%r12),%r13
    ef24:	e9 0c ff ff ff       	jmpq   ee35 <stm_load+0xb5>
    ef29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ef30:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
    ef37:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
    ef3e:	48 89 ea             	mov    %rbp,%rdx
    ef41:	48 8d 35 80 b4 00 00 	lea    0xb480(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
    ef48:	bf 01 00 00 00       	mov    $0x1,%edi
    ef4d:	31 c0                	xor    %eax,%eax
    ef4f:	e8 3c 35 ff ff       	callq  2490 <__printf_chk@plt>
    ef54:	31 ff                	xor    %edi,%edi
    ef56:	e8 05 35 ff ff       	callq  2460 <fflush@plt>
    ef5b:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    ef61:	48 8b 95 e8 00 00 00 	mov    0xe8(%rbp),%rdx
    ef68:	85 c0                	test   %eax,%eax
    ef6a:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    ef6f:	4c 8b 0c 24          	mov    (%rsp),%r9
    ef73:	0f 8e b7 00 00 00    	jle    f030 <stm_load+0x2b0>
    ef79:	8d 70 ff             	lea    -0x1(%rax),%esi
    ef7c:	48 ff c6             	inc    %rsi
    ef7f:	48 c1 e6 04          	shl    $0x4,%rsi
    ef83:	48 01 d6             	add    %rdx,%rsi
    ef86:	eb 33                	jmp    efbb <stm_load+0x23b>
    ef88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ef8f:	00 
    ef90:	48 8b 8d f8 00 00 00 	mov    0xf8(%rbp),%rcx
    ef97:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    ef9b:	48 39 c8             	cmp    %rcx,%rax
    ef9e:	72 70                	jb     f010 <stm_load+0x290>
    efa0:	8b bd 00 01 00 00    	mov    0x100(%rbp),%edi
    efa6:	48 c1 e7 06          	shl    $0x6,%rdi
    efaa:	48 01 f9             	add    %rdi,%rcx
    efad:	48 39 c8             	cmp    %rcx,%rax
    efb0:	73 5e                	jae    f010 <stm_load+0x290>
    efb2:	48 83 c2 10          	add    $0x10,%rdx
    efb6:	48 39 d6             	cmp    %rdx,%rsi
    efb9:	74 75                	je     f030 <stm_load+0x2b0>
    efbb:	48 8b 42 08          	mov    0x8(%rdx),%rax
    efbf:	48 8b 00             	mov    (%rax),%rax
    efc2:	a8 01                	test   $0x1,%al
    efc4:	75 ca                	jne    ef90 <stm_load+0x210>
    efc6:	48 c1 e8 04          	shr    $0x4,%rax
    efca:	48 3b 02             	cmp    (%rdx),%rax
    efcd:	74 e3                	je     efb2 <stm_load+0x232>
    efcf:	e9 17 ff ff ff       	jmpq   eeeb <stm_load+0x16b>
    efd4:	0f 1f 40 00          	nopl   0x0(%rax)
    efd8:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    efdf:	0f 85 da fd ff ff    	jne    edbf <stm_load+0x3f>
    efe5:	48 8b 15 24 17 81 00 	mov    0x811724(%rip),%rdx        # 820710 <_tinystm+0x800550>
    efec:	48 85 d2             	test   %rdx,%rdx
    efef:	74 09                	je     effa <stm_load+0x27a>
    eff1:	48 8b 70 28          	mov    0x28(%rax),%rsi
    eff5:	48 89 ef             	mov    %rbp,%rdi
    eff8:	ff d2                	callq  *%rdx
    effa:	be 40 02 00 00       	mov    $0x240,%esi
    efff:	48 89 ef             	mov    %rbp,%rdi
    f002:	e8 f9 f4 ff ff       	callq  e500 <stm_rollback>
    f007:	45 31 ed             	xor    %r13d,%r13d
    f00a:	e9 26 fe ff ff       	jmpq   ee35 <stm_load+0xb5>
    f00f:	90                   	nop
    f010:	48 8b 15 f9 16 81 00 	mov    0x8116f9(%rip),%rdx        # 820710 <_tinystm+0x800550>
    f017:	48 85 d2             	test   %rdx,%rdx
    f01a:	0f 84 cb fe ff ff    	je     eeeb <stm_load+0x16b>
    f020:	48 8b 70 28          	mov    0x28(%rax),%rsi
    f024:	48 89 ef             	mov    %rbp,%rdi
    f027:	ff d2                	callq  *%rdx
    f029:	e9 bd fe ff ff       	jmpq   eeeb <stm_load+0x16b>
    f02e:	66 90                	xchg   %ax,%ax
    f030:	4c 89 95 e0 00 00 00 	mov    %r10,0xe0(%rbp)
    f037:	48 8b 03             	mov    (%rbx),%rax
    f03a:	49 39 c1             	cmp    %rax,%r9
    f03d:	0f 85 7f fd ff ff    	jne    edc2 <stm_load+0x42>
    f043:	0f b6 85 ca 00 00 00 	movzbl 0xca(%rbp),%eax
    f04a:	83 e0 01             	and    $0x1,%eax
    f04d:	e9 b2 fd ff ff       	jmpq   ee04 <stm_load+0x84>
    f052:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f059:	00 00 00 00 
    f05d:	0f 1f 00             	nopl   (%rax)

000000000000f060 <stm_load_tx>:
    f060:	f3 0f 1e fa          	endbr64 
    f064:	41 57                	push   %r15
    f066:	48 8d 05 53 11 01 00 	lea    0x11153(%rip),%rax        # 201c0 <_tinystm>
    f06d:	49 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%r15
    f074:	ff ff 0f 
    f077:	41 56                	push   %r14
    f079:	41 55                	push   %r13
    f07b:	41 54                	push   %r12
    f07d:	49 89 f4             	mov    %rsi,%r12
    f080:	55                   	push   %rbp
    f081:	48 89 fd             	mov    %rdi,%rbp
    f084:	53                   	push   %rbx
    f085:	48 89 f3             	mov    %rsi,%rbx
    f088:	48 c1 eb 02          	shr    $0x2,%rbx
    f08c:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
    f092:	48 83 ec 18          	sub    $0x18,%rsp
    f096:	48 01 c3             	add    %rax,%rbx
    f099:	48 8b 03             	mov    (%rbx),%rax
    f09c:	a8 01                	test   $0x1,%al
    f09e:	0f 85 84 00 00 00    	jne    f128 <stm_load_tx+0xc8>
    f0a4:	4d 8b 2c 24          	mov    (%r12),%r13
    f0a8:	4c 8b 0b             	mov    (%rbx),%r9
    f0ab:	4c 39 c8             	cmp    %r9,%rax
    f0ae:	0f 85 cc 00 00 00    	jne    f180 <stm_load_tx+0x120>
    f0b4:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    f0bb:	75 52                	jne    f10f <stm_load_tx+0xaf>
    f0bd:	0f b6 85 ca 00 00 00 	movzbl 0xca(%rbp),%eax
    f0c4:	4d 89 ce             	mov    %r9,%r14
    f0c7:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
    f0ce:	49 c1 ee 04          	shr    $0x4,%r14
    f0d2:	83 e0 01             	and    $0x1,%eax
    f0d5:	4d 39 c6             	cmp    %r8,%r14
    f0d8:	0f 87 b2 00 00 00    	ja     f190 <stm_load_tx+0x130>
    f0de:	84 c0                	test   %al,%al
    f0e0:	75 2d                	jne    f10f <stm_load_tx+0xaf>
    f0e2:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    f0e8:	3b 85 f4 00 00 00    	cmp    0xf4(%rbp),%eax
    f0ee:	0f 84 ec 00 00 00    	je     f1e0 <stm_load_tx+0x180>
    f0f4:	8d 50 01             	lea    0x1(%rax),%edx
    f0f7:	48 c1 e0 04          	shl    $0x4,%rax
    f0fb:	48 03 85 e8 00 00 00 	add    0xe8(%rbp),%rax
    f102:	89 95 f0 00 00 00    	mov    %edx,0xf0(%rbp)
    f108:	4c 89 30             	mov    %r14,(%rax)
    f10b:	48 89 58 08          	mov    %rbx,0x8(%rax)
    f10f:	48 83 c4 18          	add    $0x18,%rsp
    f113:	5b                   	pop    %rbx
    f114:	5d                   	pop    %rbp
    f115:	41 5c                	pop    %r12
    f117:	4c 89 e8             	mov    %r13,%rax
    f11a:	41 5d                	pop    %r13
    f11c:	41 5e                	pop    %r14
    f11e:	41 5f                	pop    %r15
    f120:	c3                   	retq   
    f121:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f128:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
    f12f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f133:	48 39 d0             	cmp    %rdx,%rax
    f136:	0f 82 7c 01 00 00    	jb     f2b8 <stm_load_tx+0x258>
    f13c:	8b 8d 00 01 00 00    	mov    0x100(%rbp),%ecx
    f142:	48 c1 e1 06          	shl    $0x6,%rcx
    f146:	48 01 ca             	add    %rcx,%rdx
    f149:	48 39 d0             	cmp    %rdx,%rax
    f14c:	72 17                	jb     f165 <stm_load_tx+0x105>
    f14e:	e9 65 01 00 00       	jmpq   f2b8 <stm_load_tx+0x258>
    f153:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f158:	48 8b 40 30          	mov    0x30(%rax),%rax
    f15c:	48 85 c0             	test   %rax,%rax
    f15f:	0f 84 9b 00 00 00    	je     f200 <stm_load_tx+0x1a0>
    f165:	4c 3b 20             	cmp    (%rax),%r12
    f168:	75 ee                	jne    f158 <stm_load_tx+0xf8>
    f16a:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
    f16f:	0f 84 8b 00 00 00    	je     f200 <stm_load_tx+0x1a0>
    f175:	4c 8b 68 08          	mov    0x8(%rax),%r13
    f179:	eb 94                	jmp    f10f <stm_load_tx+0xaf>
    f17b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f180:	4c 89 c8             	mov    %r9,%rax
    f183:	e9 14 ff ff ff       	jmpq   f09c <stm_load_tx+0x3c>
    f188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f18f:	00 
    f190:	4c 89 0c 24          	mov    %r9,(%rsp)
    f194:	84 c0                	test   %al,%al
    f196:	75 33                	jne    f1cb <stm_load_tx+0x16b>
    f198:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
    f19f:	48 89 ea             	mov    %rbp,%rdx
    f1a2:	48 8d 35 b7 b2 00 00 	lea    0xb2b7(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
    f1a9:	bf 01 00 00 00       	mov    $0x1,%edi
    f1ae:	e8 dd 32 ff ff       	callq  2490 <__printf_chk@plt>
    f1b3:	31 ff                	xor    %edi,%edi
    f1b5:	e8 a6 32 ff ff       	callq  2460 <fflush@plt>
    f1ba:	4c 8b 15 7f 10 81 00 	mov    0x81107f(%rip),%r10        # 820240 <_tinystm+0x800080>
    f1c1:	4d 39 fa             	cmp    %r15,%r10
    f1c4:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
    f1c9:	76 45                	jbe    f210 <stm_load_tx+0x1b0>
    f1cb:	be 40 05 00 00       	mov    $0x540,%esi
    f1d0:	48 89 ef             	mov    %rbp,%rdi
    f1d3:	e8 28 f3 ff ff       	callq  e500 <stm_rollback>
    f1d8:	45 31 ed             	xor    %r13d,%r13d
    f1db:	e9 2f ff ff ff       	jmpq   f10f <stm_load_tx+0xaf>
    f1e0:	be 01 00 00 00       	mov    $0x1,%esi
    f1e5:	48 89 ef             	mov    %rbp,%rdi
    f1e8:	e8 33 dd ff ff       	callq  cf20 <stm_allocate_rs_entries>
    f1ed:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    f1f3:	e9 fc fe ff ff       	jmpq   f0f4 <stm_load_tx+0x94>
    f1f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f1ff:	00 
    f200:	4d 8b 2c 24          	mov    (%r12),%r13
    f204:	e9 06 ff ff ff       	jmpq   f10f <stm_load_tx+0xaf>
    f209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f210:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
    f217:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
    f21e:	48 89 ea             	mov    %rbp,%rdx
    f221:	48 8d 35 a0 b1 00 00 	lea    0xb1a0(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
    f228:	bf 01 00 00 00       	mov    $0x1,%edi
    f22d:	31 c0                	xor    %eax,%eax
    f22f:	e8 5c 32 ff ff       	callq  2490 <__printf_chk@plt>
    f234:	31 ff                	xor    %edi,%edi
    f236:	e8 25 32 ff ff       	callq  2460 <fflush@plt>
    f23b:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    f241:	48 8b 95 e8 00 00 00 	mov    0xe8(%rbp),%rdx
    f248:	85 c0                	test   %eax,%eax
    f24a:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
    f24f:	4c 8b 0c 24          	mov    (%rsp),%r9
    f253:	0f 8e b7 00 00 00    	jle    f310 <stm_load_tx+0x2b0>
    f259:	8d 70 ff             	lea    -0x1(%rax),%esi
    f25c:	48 ff c6             	inc    %rsi
    f25f:	48 c1 e6 04          	shl    $0x4,%rsi
    f263:	48 01 d6             	add    %rdx,%rsi
    f266:	eb 33                	jmp    f29b <stm_load_tx+0x23b>
    f268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f26f:	00 
    f270:	48 8b 8d f8 00 00 00 	mov    0xf8(%rbp),%rcx
    f277:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f27b:	48 39 c8             	cmp    %rcx,%rax
    f27e:	72 70                	jb     f2f0 <stm_load_tx+0x290>
    f280:	8b bd 00 01 00 00    	mov    0x100(%rbp),%edi
    f286:	48 c1 e7 06          	shl    $0x6,%rdi
    f28a:	48 01 f9             	add    %rdi,%rcx
    f28d:	48 39 c8             	cmp    %rcx,%rax
    f290:	73 5e                	jae    f2f0 <stm_load_tx+0x290>
    f292:	48 83 c2 10          	add    $0x10,%rdx
    f296:	48 39 d6             	cmp    %rdx,%rsi
    f299:	74 75                	je     f310 <stm_load_tx+0x2b0>
    f29b:	48 8b 42 08          	mov    0x8(%rdx),%rax
    f29f:	48 8b 00             	mov    (%rax),%rax
    f2a2:	a8 01                	test   $0x1,%al
    f2a4:	75 ca                	jne    f270 <stm_load_tx+0x210>
    f2a6:	48 c1 e8 04          	shr    $0x4,%rax
    f2aa:	48 3b 02             	cmp    (%rdx),%rax
    f2ad:	74 e3                	je     f292 <stm_load_tx+0x232>
    f2af:	e9 17 ff ff ff       	jmpq   f1cb <stm_load_tx+0x16b>
    f2b4:	0f 1f 40 00          	nopl   0x0(%rax)
    f2b8:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    f2bf:	0f 85 d4 fd ff ff    	jne    f099 <stm_load_tx+0x39>
    f2c5:	48 8b 15 44 14 81 00 	mov    0x811444(%rip),%rdx        # 820710 <_tinystm+0x800550>
    f2cc:	48 85 d2             	test   %rdx,%rdx
    f2cf:	74 09                	je     f2da <stm_load_tx+0x27a>
    f2d1:	48 8b 70 28          	mov    0x28(%rax),%rsi
    f2d5:	48 89 ef             	mov    %rbp,%rdi
    f2d8:	ff d2                	callq  *%rdx
    f2da:	be 40 02 00 00       	mov    $0x240,%esi
    f2df:	48 89 ef             	mov    %rbp,%rdi
    f2e2:	e8 19 f2 ff ff       	callq  e500 <stm_rollback>
    f2e7:	45 31 ed             	xor    %r13d,%r13d
    f2ea:	e9 20 fe ff ff       	jmpq   f10f <stm_load_tx+0xaf>
    f2ef:	90                   	nop
    f2f0:	48 8b 15 19 14 81 00 	mov    0x811419(%rip),%rdx        # 820710 <_tinystm+0x800550>
    f2f7:	48 85 d2             	test   %rdx,%rdx
    f2fa:	0f 84 cb fe ff ff    	je     f1cb <stm_load_tx+0x16b>
    f300:	48 8b 70 28          	mov    0x28(%rax),%rsi
    f304:	48 89 ef             	mov    %rbp,%rdi
    f307:	ff d2                	callq  *%rdx
    f309:	e9 bd fe ff ff       	jmpq   f1cb <stm_load_tx+0x16b>
    f30e:	66 90                	xchg   %ax,%ax
    f310:	4c 89 95 e0 00 00 00 	mov    %r10,0xe0(%rbp)
    f317:	48 8b 03             	mov    (%rbx),%rax
    f31a:	49 39 c1             	cmp    %rax,%r9
    f31d:	0f 85 79 fd ff ff    	jne    f09c <stm_load_tx+0x3c>
    f323:	0f b6 85 ca 00 00 00 	movzbl 0xca(%rbp),%eax
    f32a:	83 e0 01             	and    $0x1,%eax
    f32d:	e9 ac fd ff ff       	jmpq   f0de <stm_load_tx+0x7e>
    f332:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f339:	00 00 00 00 
    f33d:	0f 1f 00             	nopl   (%rax)

000000000000f340 <stm_store>:
    f340:	f3 0f 1e fa          	endbr64 
    f344:	41 57                	push   %r15
    f346:	49 89 f9             	mov    %rdi,%r9
    f349:	49 c1 e9 02          	shr    $0x2,%r9
    f34d:	41 56                	push   %r14
    f34f:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
    f356:	48 8d 05 63 0e 01 00 	lea    0x10e63(%rip),%rax        # 201c0 <_tinystm>
    f35d:	41 55                	push   %r13
    f35f:	49 01 c1             	add    %rax,%r9
    f362:	49 89 f5             	mov    %rsi,%r13
    f365:	41 54                	push   %r12
    f367:	4c 8d 3d 1a b1 00 00 	lea    0xb11a(%rip),%r15        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
    f36e:	49 89 fc             	mov    %rdi,%r12
    f371:	55                   	push   %rbp
    f372:	53                   	push   %rbx
    f373:	48 83 ec 18          	sub    $0x18,%rsp
    f377:	64 48 8b 2c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rbp
    f37e:	ff ff 
    f380:	49 8b 19             	mov    (%r9),%rbx
    f383:	f6 c3 01             	test   $0x1,%bl
    f386:	0f 85 94 00 00 00    	jne    f420 <stm_store+0xe0>
    f38c:	49 89 de             	mov    %rbx,%r14
    f38f:	49 c1 ee 04          	shr    $0x4,%r14
    f393:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    f39a:	75 14                	jne    f3b0 <stm_store+0x70>
    f39c:	f3 0f 1e fa          	endbr64 
    f3a0:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
    f3a7:	4d 39 c6             	cmp    %r8,%r14
    f3aa:	0f 87 f0 00 00 00    	ja     f4a0 <stm_store+0x160>
    f3b0:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    f3b6:	3b 95 04 01 00 00    	cmp    0x104(%rbp),%edx
    f3bc:	0f 84 b6 00 00 00    	je     f478 <stm_store+0x138>
    f3c2:	48 c1 e2 06          	shl    $0x6,%rdx
    f3c6:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
    f3cd:	48 89 d1             	mov    %rdx,%rcx
    f3d0:	48 83 c9 01          	or     $0x1,%rcx
    f3d4:	48 89 d8             	mov    %rbx,%rax
    f3d7:	f0 49 0f b1 09       	lock cmpxchg %rcx,(%r9)
    f3dc:	75 a2                	jne    f380 <stm_store+0x40>
    f3de:	4c 89 22             	mov    %r12,(%rdx)
    f3e1:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    f3e8:	ff 
    f3e9:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
    f3ed:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    f3f1:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    f3f5:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f3fc:	00 
    f3fd:	ff 85 00 01 00 00    	incl   0x100(%rbp)
    f403:	ff 85 08 01 00 00    	incl   0x108(%rbp)
    f409:	48 83 c4 18          	add    $0x18,%rsp
    f40d:	5b                   	pop    %rbx
    f40e:	5d                   	pop    %rbp
    f40f:	41 5c                	pop    %r12
    f411:	41 5d                	pop    %r13
    f413:	41 5e                	pop    %r14
    f415:	41 5f                	pop    %r15
    f417:	c3                   	retq   
    f418:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f41f:	00 
    f420:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
    f427:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
    f42b:	48 39 d3             	cmp    %rdx,%rbx
    f42e:	0f 82 24 01 00 00    	jb     f558 <stm_store+0x218>
    f434:	8b 85 00 01 00 00    	mov    0x100(%rbp),%eax
    f43a:	48 89 c1             	mov    %rax,%rcx
    f43d:	48 c1 e0 06          	shl    $0x6,%rax
    f441:	48 01 c2             	add    %rax,%rdx
    f444:	48 39 d3             	cmp    %rdx,%rbx
    f447:	72 17                	jb     f460 <stm_store+0x120>
    f449:	e9 0a 01 00 00       	jmpq   f558 <stm_store+0x218>
    f44e:	66 90                	xchg   %ax,%ax
    f450:	48 8b 43 30          	mov    0x30(%rbx),%rax
    f454:	48 85 c0             	test   %rax,%rax
    f457:	0f 84 c3 00 00 00    	je     f520 <stm_store+0x1e0>
    f45d:	48 89 c3             	mov    %rax,%rbx
    f460:	4c 3b 23             	cmp    (%rbx),%r12
    f463:	75 eb                	jne    f450 <stm_store+0x110>
    f465:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
    f469:	48 c7 43 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rbx)
    f470:	ff 
    f471:	eb 96                	jmp    f409 <stm_store+0xc9>
    f473:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f478:	be 40 0c 00 00       	mov    $0xc40,%esi
    f47d:	48 89 ef             	mov    %rbp,%rdi
    f480:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    f485:	e8 76 f0 ff ff       	callq  e500 <stm_rollback>
    f48a:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    f490:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    f495:	e9 28 ff ff ff       	jmpq   f3c2 <stm_store+0x82>
    f49a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f4a0:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
    f4a7:	48 89 ea             	mov    %rbp,%rdx
    f4aa:	4c 89 fe             	mov    %r15,%rsi
    f4ad:	bf 01 00 00 00       	mov    $0x1,%edi
    f4b2:	31 c0                	xor    %eax,%eax
    f4b4:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    f4b9:	e8 d2 2f ff ff       	callq  2490 <__printf_chk@plt>
    f4be:	31 ff                	xor    %edi,%edi
    f4c0:	e8 9b 2f ff ff       	callq  2460 <fflush@plt>
    f4c5:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    f4cb:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
    f4d2:	85 d2                	test   %edx,%edx
    f4d4:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    f4d9:	0f 8e d1 fe ff ff    	jle    f3b0 <stm_store+0x70>
    f4df:	ff ca                	dec    %edx
    f4e1:	48 ff c2             	inc    %rdx
    f4e4:	48 c1 e2 04          	shl    $0x4,%rdx
    f4e8:	48 01 c2             	add    %rax,%rdx
    f4eb:	eb 10                	jmp    f4fd <stm_store+0x1bd>
    f4ed:	0f 1f 00             	nopl   (%rax)
    f4f0:	48 83 c0 10          	add    $0x10,%rax
    f4f4:	48 39 d0             	cmp    %rdx,%rax
    f4f7:	0f 84 b3 fe ff ff    	je     f3b0 <stm_store+0x70>
    f4fd:	4c 3b 48 08          	cmp    0x8(%rax),%r9
    f501:	75 ed                	jne    f4f0 <stm_store+0x1b0>
    f503:	be 40 06 00 00       	mov    $0x640,%esi
    f508:	48 83 c4 18          	add    $0x18,%rsp
    f50c:	5b                   	pop    %rbx
    f50d:	48 89 ef             	mov    %rbp,%rdi
    f510:	5d                   	pop    %rbp
    f511:	41 5c                	pop    %r12
    f513:	41 5d                	pop    %r13
    f515:	41 5e                	pop    %r14
    f517:	41 5f                	pop    %r15
    f519:	e9 e2 ef ff ff       	jmpq   e500 <stm_rollback>
    f51e:	66 90                	xchg   %ax,%ax
    f520:	4c 8b 73 18          	mov    0x18(%rbx),%r14
    f524:	3b 8d 04 01 00 00    	cmp    0x104(%rbp),%ecx
    f52a:	74 5c                	je     f588 <stm_store+0x248>
    f52c:	4c 89 22             	mov    %r12,(%rdx)
    f52f:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    f536:	ff 
    f537:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
    f53b:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    f53f:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    f543:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f54a:	00 
    f54b:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    f54f:	e9 a9 fe ff ff       	jmpq   f3fd <stm_store+0xbd>
    f554:	0f 1f 40 00          	nopl   0x0(%rax)
    f558:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    f55f:	0f 85 1b fe ff ff    	jne    f380 <stm_store+0x40>
    f565:	48 8b 05 a4 11 81 00 	mov    0x8111a4(%rip),%rax        # 820710 <_tinystm+0x800550>
    f56c:	48 85 c0             	test   %rax,%rax
    f56f:	74 09                	je     f57a <stm_store+0x23a>
    f571:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    f575:	48 89 ef             	mov    %rbp,%rdi
    f578:	ff d0                	callq  *%rax
    f57a:	be 40 04 00 00       	mov    $0x440,%esi
    f57f:	e9 84 ff ff ff       	jmpq   f508 <stm_store+0x1c8>
    f584:	0f 1f 40 00          	nopl   0x0(%rax)
    f588:	be 40 0c 00 00       	mov    $0xc40,%esi
    f58d:	48 89 ef             	mov    %rbp,%rdi
    f590:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    f595:	e8 66 ef ff ff       	callq  e500 <stm_rollback>
    f59a:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    f5a0:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    f5a5:	48 c1 e2 06          	shl    $0x6,%rdx
    f5a9:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
    f5b0:	e9 77 ff ff ff       	jmpq   f52c <stm_store+0x1ec>
    f5b5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f5bc:	00 00 00 00 

000000000000f5c0 <stm_store_tx>:
    f5c0:	f3 0f 1e fa          	endbr64 
    f5c4:	41 57                	push   %r15
    f5c6:	49 89 f1             	mov    %rsi,%r9
    f5c9:	49 c1 e9 02          	shr    $0x2,%r9
    f5cd:	41 56                	push   %r14
    f5cf:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
    f5d6:	48 8d 05 e3 0b 01 00 	lea    0x10be3(%rip),%rax        # 201c0 <_tinystm>
    f5dd:	41 55                	push   %r13
    f5df:	49 01 c1             	add    %rax,%r9
    f5e2:	49 89 d5             	mov    %rdx,%r13
    f5e5:	41 54                	push   %r12
    f5e7:	4c 8d 3d 9a ae 00 00 	lea    0xae9a(%rip),%r15        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
    f5ee:	49 89 f4             	mov    %rsi,%r12
    f5f1:	55                   	push   %rbp
    f5f2:	48 89 fd             	mov    %rdi,%rbp
    f5f5:	53                   	push   %rbx
    f5f6:	48 83 ec 18          	sub    $0x18,%rsp
    f5fa:	49 8b 19             	mov    (%r9),%rbx
    f5fd:	f6 c3 01             	test   $0x1,%bl
    f600:	0f 85 92 00 00 00    	jne    f698 <stm_store_tx+0xd8>
    f606:	49 89 de             	mov    %rbx,%r14
    f609:	49 c1 ee 04          	shr    $0x4,%r14
    f60d:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    f614:	75 14                	jne    f62a <stm_store_tx+0x6a>
    f616:	f3 0f 1e fa          	endbr64 
    f61a:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
    f621:	4d 39 c6             	cmp    %r8,%r14
    f624:	0f 87 f6 00 00 00    	ja     f720 <stm_store_tx+0x160>
    f62a:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    f630:	3b 95 04 01 00 00    	cmp    0x104(%rbp),%edx
    f636:	0f 84 bc 00 00 00    	je     f6f8 <stm_store_tx+0x138>
    f63c:	48 c1 e2 06          	shl    $0x6,%rdx
    f640:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
    f647:	48 89 d1             	mov    %rdx,%rcx
    f64a:	48 83 c9 01          	or     $0x1,%rcx
    f64e:	48 89 d8             	mov    %rbx,%rax
    f651:	f0 49 0f b1 09       	lock cmpxchg %rcx,(%r9)
    f656:	75 a2                	jne    f5fa <stm_store_tx+0x3a>
    f658:	4c 89 22             	mov    %r12,(%rdx)
    f65b:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    f662:	ff 
    f663:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
    f667:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    f66b:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    f66f:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f676:	00 
    f677:	ff 85 00 01 00 00    	incl   0x100(%rbp)
    f67d:	ff 85 08 01 00 00    	incl   0x108(%rbp)
    f683:	48 83 c4 18          	add    $0x18,%rsp
    f687:	5b                   	pop    %rbx
    f688:	5d                   	pop    %rbp
    f689:	41 5c                	pop    %r12
    f68b:	41 5d                	pop    %r13
    f68d:	41 5e                	pop    %r14
    f68f:	41 5f                	pop    %r15
    f691:	c3                   	retq   
    f692:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f698:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
    f69f:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
    f6a3:	48 39 d3             	cmp    %rdx,%rbx
    f6a6:	0f 82 2c 01 00 00    	jb     f7d8 <stm_store_tx+0x218>
    f6ac:	8b 85 00 01 00 00    	mov    0x100(%rbp),%eax
    f6b2:	48 89 c1             	mov    %rax,%rcx
    f6b5:	48 c1 e0 06          	shl    $0x6,%rax
    f6b9:	48 01 c2             	add    %rax,%rdx
    f6bc:	48 39 d3             	cmp    %rdx,%rbx
    f6bf:	72 1f                	jb     f6e0 <stm_store_tx+0x120>
    f6c1:	e9 12 01 00 00       	jmpq   f7d8 <stm_store_tx+0x218>
    f6c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    f6cd:	00 00 00 
    f6d0:	48 8b 43 30          	mov    0x30(%rbx),%rax
    f6d4:	48 85 c0             	test   %rax,%rax
    f6d7:	0f 84 c3 00 00 00    	je     f7a0 <stm_store_tx+0x1e0>
    f6dd:	48 89 c3             	mov    %rax,%rbx
    f6e0:	4c 3b 23             	cmp    (%rbx),%r12
    f6e3:	75 eb                	jne    f6d0 <stm_store_tx+0x110>
    f6e5:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
    f6e9:	48 c7 43 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rbx)
    f6f0:	ff 
    f6f1:	eb 90                	jmp    f683 <stm_store_tx+0xc3>
    f6f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f6f8:	be 40 0c 00 00       	mov    $0xc40,%esi
    f6fd:	48 89 ef             	mov    %rbp,%rdi
    f700:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    f705:	e8 f6 ed ff ff       	callq  e500 <stm_rollback>
    f70a:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    f710:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    f715:	e9 22 ff ff ff       	jmpq   f63c <stm_store_tx+0x7c>
    f71a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f720:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
    f727:	48 89 ea             	mov    %rbp,%rdx
    f72a:	4c 89 fe             	mov    %r15,%rsi
    f72d:	bf 01 00 00 00       	mov    $0x1,%edi
    f732:	31 c0                	xor    %eax,%eax
    f734:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    f739:	e8 52 2d ff ff       	callq  2490 <__printf_chk@plt>
    f73e:	31 ff                	xor    %edi,%edi
    f740:	e8 1b 2d ff ff       	callq  2460 <fflush@plt>
    f745:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    f74b:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
    f752:	85 d2                	test   %edx,%edx
    f754:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    f759:	0f 8e cb fe ff ff    	jle    f62a <stm_store_tx+0x6a>
    f75f:	ff ca                	dec    %edx
    f761:	48 ff c2             	inc    %rdx
    f764:	48 c1 e2 04          	shl    $0x4,%rdx
    f768:	48 01 c2             	add    %rax,%rdx
    f76b:	eb 10                	jmp    f77d <stm_store_tx+0x1bd>
    f76d:	0f 1f 00             	nopl   (%rax)
    f770:	48 83 c0 10          	add    $0x10,%rax
    f774:	48 39 d0             	cmp    %rdx,%rax
    f777:	0f 84 ad fe ff ff    	je     f62a <stm_store_tx+0x6a>
    f77d:	4c 3b 48 08          	cmp    0x8(%rax),%r9
    f781:	75 ed                	jne    f770 <stm_store_tx+0x1b0>
    f783:	be 40 06 00 00       	mov    $0x640,%esi
    f788:	48 83 c4 18          	add    $0x18,%rsp
    f78c:	5b                   	pop    %rbx
    f78d:	48 89 ef             	mov    %rbp,%rdi
    f790:	5d                   	pop    %rbp
    f791:	41 5c                	pop    %r12
    f793:	41 5d                	pop    %r13
    f795:	41 5e                	pop    %r14
    f797:	41 5f                	pop    %r15
    f799:	e9 62 ed ff ff       	jmpq   e500 <stm_rollback>
    f79e:	66 90                	xchg   %ax,%ax
    f7a0:	4c 8b 73 18          	mov    0x18(%rbx),%r14
    f7a4:	3b 8d 04 01 00 00    	cmp    0x104(%rbp),%ecx
    f7aa:	74 5c                	je     f808 <stm_store_tx+0x248>
    f7ac:	4c 89 22             	mov    %r12,(%rdx)
    f7af:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
    f7b6:	ff 
    f7b7:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
    f7bb:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
    f7bf:	4c 89 72 18          	mov    %r14,0x18(%rdx)
    f7c3:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f7ca:	00 
    f7cb:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    f7cf:	e9 a3 fe ff ff       	jmpq   f677 <stm_store_tx+0xb7>
    f7d4:	0f 1f 40 00          	nopl   0x0(%rax)
    f7d8:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    f7df:	0f 85 15 fe ff ff    	jne    f5fa <stm_store_tx+0x3a>
    f7e5:	48 8b 05 24 0f 81 00 	mov    0x810f24(%rip),%rax        # 820710 <_tinystm+0x800550>
    f7ec:	48 85 c0             	test   %rax,%rax
    f7ef:	74 09                	je     f7fa <stm_store_tx+0x23a>
    f7f1:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    f7f5:	48 89 ef             	mov    %rbp,%rdi
    f7f8:	ff d0                	callq  *%rax
    f7fa:	be 40 04 00 00       	mov    $0x440,%esi
    f7ff:	e9 84 ff ff ff       	jmpq   f788 <stm_store_tx+0x1c8>
    f804:	0f 1f 40 00          	nopl   0x0(%rax)
    f808:	be 40 0c 00 00       	mov    $0xc40,%esi
    f80d:	48 89 ef             	mov    %rbp,%rdi
    f810:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    f815:	e8 e6 ec ff ff       	callq  e500 <stm_rollback>
    f81a:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    f820:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    f825:	48 c1 e2 06          	shl    $0x6,%rdx
    f829:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
    f830:	e9 77 ff ff ff       	jmpq   f7ac <stm_store_tx+0x1ec>
    f835:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    f83c:	00 00 00 00 

000000000000f840 <stm_store2>:
    f840:	f3 0f 1e fa          	endbr64 
    f844:	41 57                	push   %r15
    f846:	49 89 f9             	mov    %rdi,%r9
    f849:	49 c1 e9 02          	shr    $0x2,%r9
    f84d:	41 56                	push   %r14
    f84f:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
    f856:	48 8d 05 63 09 01 00 	lea    0x10963(%rip),%rax        # 201c0 <_tinystm>
    f85d:	41 55                	push   %r13
    f85f:	49 89 f6             	mov    %rsi,%r14
    f862:	49 89 fd             	mov    %rdi,%r13
    f865:	41 54                	push   %r12
    f867:	49 01 c1             	add    %rax,%r9
    f86a:	49 89 d4             	mov    %rdx,%r12
    f86d:	55                   	push   %rbp
    f86e:	4c 8d 15 13 ac 00 00 	lea    0xac13(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
    f875:	53                   	push   %rbx
    f876:	48 83 ec 18          	sub    $0x18,%rsp
    f87a:	64 48 8b 2c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rbp
    f881:	ff ff 
    f883:	49 8b 19             	mov    (%r9),%rbx
    f886:	f6 c3 01             	test   $0x1,%bl
    f889:	0f 85 c9 00 00 00    	jne    f958 <stm_store2+0x118>
    f88f:	49 89 df             	mov    %rbx,%r15
    f892:	49 c1 ef 04          	shr    $0x4,%r15
    f896:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    f89d:	75 14                	jne    f8b3 <stm_store2+0x73>
    f89f:	f3 0f 1e fa          	endbr64 
    f8a3:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
    f8aa:	4d 39 c7             	cmp    %r8,%r15
    f8ad:	0f 87 55 01 00 00    	ja     fa08 <stm_store2+0x1c8>
    f8b3:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    f8b9:	3b 95 04 01 00 00    	cmp    0x104(%rbp),%edx
    f8bf:	0f 84 13 01 00 00    	je     f9d8 <stm_store2+0x198>
    f8c5:	48 c1 e2 06          	shl    $0x6,%rdx
    f8c9:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
    f8d0:	48 89 d1             	mov    %rdx,%rcx
    f8d3:	48 83 c9 01          	or     $0x1,%rcx
    f8d7:	48 89 d8             	mov    %rbx,%rax
    f8da:	f0 49 0f b1 09       	lock cmpxchg %rcx,(%r9)
    f8df:	75 a2                	jne    f883 <stm_store2+0x43>
    f8e1:	4c 89 2a             	mov    %r13,(%rdx)
    f8e4:	4c 89 62 10          	mov    %r12,0x10(%rdx)
    f8e8:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
    f8ec:	4d 85 e4             	test   %r12,%r12
    f8ef:	74 53                	je     f944 <stm_store2+0x104>
    f8f1:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    f8f5:	74 49                	je     f940 <stm_store2+0x100>
    f8f7:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    f8fb:	4c 89 f0             	mov    %r14,%rax
    f8fe:	48 31 c8             	xor    %rcx,%rax
    f901:	4c 21 e0             	and    %r12,%rax
    f904:	48 31 c8             	xor    %rcx,%rax
    f907:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f90b:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    f90f:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f916:	00 
    f917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f91e:	00 00 
    f920:	ff 85 00 01 00 00    	incl   0x100(%rbp)
    f926:	ff 85 08 01 00 00    	incl   0x108(%rbp)
    f92c:	48 83 c4 18          	add    $0x18,%rsp
    f930:	5b                   	pop    %rbx
    f931:	5d                   	pop    %rbp
    f932:	41 5c                	pop    %r12
    f934:	41 5d                	pop    %r13
    f936:	41 5e                	pop    %r14
    f938:	41 5f                	pop    %r15
    f93a:	c3                   	retq   
    f93b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    f940:	4c 89 72 08          	mov    %r14,0x8(%rdx)
    f944:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    f948:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f94f:	00 
    f950:	eb ce                	jmp    f920 <stm_store2+0xe0>
    f952:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f958:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
    f95f:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
    f963:	48 39 d3             	cmp    %rdx,%rbx
    f966:	0f 82 64 01 00 00    	jb     fad0 <stm_store2+0x290>
    f96c:	8b 85 00 01 00 00    	mov    0x100(%rbp),%eax
    f972:	48 89 c1             	mov    %rax,%rcx
    f975:	48 c1 e0 06          	shl    $0x6,%rax
    f979:	48 01 c2             	add    %rax,%rdx
    f97c:	48 39 d3             	cmp    %rdx,%rbx
    f97f:	0f 83 4b 01 00 00    	jae    fad0 <stm_store2+0x290>
    f985:	4d 85 e4             	test   %r12,%r12
    f988:	75 16                	jne    f9a0 <stm_store2+0x160>
    f98a:	eb a0                	jmp    f92c <stm_store2+0xec>
    f98c:	0f 1f 40 00          	nopl   0x0(%rax)
    f990:	48 8b 43 30          	mov    0x30(%rbx),%rax
    f994:	48 85 c0             	test   %rax,%rax
    f997:	0f 84 f3 00 00 00    	je     fa90 <stm_store2+0x250>
    f99d:	48 89 c3             	mov    %rax,%rbx
    f9a0:	4c 3b 2b             	cmp    (%rbx),%r13
    f9a3:	75 eb                	jne    f990 <stm_store2+0x150>
    f9a5:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    f9a9:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    f9ad:	74 16                	je     f9c5 <stm_store2+0x185>
    f9af:	48 85 d2             	test   %rdx,%rdx
    f9b2:	0f 84 48 01 00 00    	je     fb00 <stm_store2+0x2c0>
    f9b8:	48 8b 43 08          	mov    0x8(%rbx),%rax
    f9bc:	49 31 c6             	xor    %rax,%r14
    f9bf:	4d 21 e6             	and    %r12,%r14
    f9c2:	49 31 c6             	xor    %rax,%r14
    f9c5:	4c 09 e2             	or     %r12,%rdx
    f9c8:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    f9cc:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    f9d0:	e9 57 ff ff ff       	jmpq   f92c <stm_store2+0xec>
    f9d5:	0f 1f 00             	nopl   (%rax)
    f9d8:	be 40 0c 00 00       	mov    $0xc40,%esi
    f9dd:	48 89 ef             	mov    %rbp,%rdi
    f9e0:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    f9e5:	e8 16 eb ff ff       	callq  e500 <stm_rollback>
    f9ea:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    f9f0:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    f9f5:	4c 8d 15 8c aa 00 00 	lea    0xaa8c(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
    f9fc:	e9 c4 fe ff ff       	jmpq   f8c5 <stm_store2+0x85>
    fa01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fa08:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
    fa0f:	48 89 ea             	mov    %rbp,%rdx
    fa12:	4c 89 d6             	mov    %r10,%rsi
    fa15:	bf 01 00 00 00       	mov    $0x1,%edi
    fa1a:	31 c0                	xor    %eax,%eax
    fa1c:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    fa21:	e8 6a 2a ff ff       	callq  2490 <__printf_chk@plt>
    fa26:	31 ff                	xor    %edi,%edi
    fa28:	e8 33 2a ff ff       	callq  2460 <fflush@plt>
    fa2d:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    fa33:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
    fa3a:	85 d2                	test   %edx,%edx
    fa3c:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    fa41:	4c 8d 15 40 aa 00 00 	lea    0xaa40(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
    fa48:	0f 8e 65 fe ff ff    	jle    f8b3 <stm_store2+0x73>
    fa4e:	ff ca                	dec    %edx
    fa50:	48 ff c2             	inc    %rdx
    fa53:	48 c1 e2 04          	shl    $0x4,%rdx
    fa57:	48 01 c2             	add    %rax,%rdx
    fa5a:	eb 11                	jmp    fa6d <stm_store2+0x22d>
    fa5c:	0f 1f 40 00          	nopl   0x0(%rax)
    fa60:	48 83 c0 10          	add    $0x10,%rax
    fa64:	48 39 d0             	cmp    %rdx,%rax
    fa67:	0f 84 46 fe ff ff    	je     f8b3 <stm_store2+0x73>
    fa6d:	4c 3b 48 08          	cmp    0x8(%rax),%r9
    fa71:	75 ed                	jne    fa60 <stm_store2+0x220>
    fa73:	be 40 06 00 00       	mov    $0x640,%esi
    fa78:	48 83 c4 18          	add    $0x18,%rsp
    fa7c:	5b                   	pop    %rbx
    fa7d:	48 89 ef             	mov    %rbp,%rdi
    fa80:	5d                   	pop    %rbp
    fa81:	41 5c                	pop    %r12
    fa83:	41 5d                	pop    %r13
    fa85:	41 5e                	pop    %r14
    fa87:	41 5f                	pop    %r15
    fa89:	e9 72 ea ff ff       	jmpq   e500 <stm_rollback>
    fa8e:	66 90                	xchg   %ax,%ax
    fa90:	4c 8b 7b 18          	mov    0x18(%rbx),%r15
    fa94:	3b 8d 04 01 00 00    	cmp    0x104(%rbp),%ecx
    fa9a:	74 6d                	je     fb09 <stm_store2+0x2c9>
    fa9c:	4c 89 2a             	mov    %r13,(%rdx)
    fa9f:	4c 89 62 10          	mov    %r12,0x10(%rdx)
    faa3:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
    faa7:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    faab:	0f 85 85 00 00 00    	jne    fb36 <stm_store2+0x2f6>
    fab1:	4c 89 72 08          	mov    %r14,0x8(%rdx)
    fab5:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    fab9:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    fac0:	00 
    fac1:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    fac5:	e9 56 fe ff ff       	jmpq   f920 <stm_store2+0xe0>
    faca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fad0:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    fad7:	0f 85 a6 fd ff ff    	jne    f883 <stm_store2+0x43>
    fadd:	48 8b 05 2c 0c 81 00 	mov    0x810c2c(%rip),%rax        # 820710 <_tinystm+0x800550>
    fae4:	48 85 c0             	test   %rax,%rax
    fae7:	74 09                	je     faf2 <stm_store2+0x2b2>
    fae9:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    faed:	48 89 ef             	mov    %rbp,%rdi
    faf0:	ff d0                	callq  *%rax
    faf2:	be 40 04 00 00       	mov    $0x440,%esi
    faf7:	e9 7c ff ff ff       	jmpq   fa78 <stm_store2+0x238>
    fafc:	0f 1f 40 00          	nopl   0x0(%rax)
    fb00:	49 8b 45 00          	mov    0x0(%r13),%rax
    fb04:	e9 b3 fe ff ff       	jmpq   f9bc <stm_store2+0x17c>
    fb09:	be 40 0c 00 00       	mov    $0xc40,%esi
    fb0e:	48 89 ef             	mov    %rbp,%rdi
    fb11:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    fb16:	e8 e5 e9 ff ff       	callq  e500 <stm_rollback>
    fb1b:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    fb21:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    fb26:	48 c1 e2 06          	shl    $0x6,%rdx
    fb2a:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
    fb31:	e9 66 ff ff ff       	jmpq   fa9c <stm_store2+0x25c>
    fb36:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    fb3a:	4c 89 f0             	mov    %r14,%rax
    fb3d:	48 31 c8             	xor    %rcx,%rax
    fb40:	4c 21 e0             	and    %r12,%rax
    fb43:	48 31 c8             	xor    %rcx,%rax
    fb46:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fb4a:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    fb4e:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    fb55:	00 
    fb56:	e9 66 ff ff ff       	jmpq   fac1 <stm_store2+0x281>
    fb5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fb60 <stm_store2_tx>:
    fb60:	f3 0f 1e fa          	endbr64 
    fb64:	41 57                	push   %r15
    fb66:	49 89 f1             	mov    %rsi,%r9
    fb69:	49 c1 e9 02          	shr    $0x2,%r9
    fb6d:	41 56                	push   %r14
    fb6f:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
    fb76:	48 8d 05 43 06 01 00 	lea    0x10643(%rip),%rax        # 201c0 <_tinystm>
    fb7d:	41 55                	push   %r13
    fb7f:	49 89 d6             	mov    %rdx,%r14
    fb82:	49 89 f5             	mov    %rsi,%r13
    fb85:	41 54                	push   %r12
    fb87:	49 01 c1             	add    %rax,%r9
    fb8a:	49 89 cc             	mov    %rcx,%r12
    fb8d:	55                   	push   %rbp
    fb8e:	4c 8d 15 f3 a8 00 00 	lea    0xa8f3(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
    fb95:	48 89 fd             	mov    %rdi,%rbp
    fb98:	53                   	push   %rbx
    fb99:	48 83 ec 18          	sub    $0x18,%rsp
    fb9d:	49 8b 19             	mov    (%r9),%rbx
    fba0:	f6 c3 01             	test   $0x1,%bl
    fba3:	0f 85 c7 00 00 00    	jne    fc70 <stm_store2_tx+0x110>
    fba9:	49 89 df             	mov    %rbx,%r15
    fbac:	49 c1 ef 04          	shr    $0x4,%r15
    fbb0:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    fbb7:	75 14                	jne    fbcd <stm_store2_tx+0x6d>
    fbb9:	f3 0f 1e fa          	endbr64 
    fbbd:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
    fbc4:	4d 39 c7             	cmp    %r8,%r15
    fbc7:	0f 87 53 01 00 00    	ja     fd20 <stm_store2_tx+0x1c0>
    fbcd:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    fbd3:	3b 95 04 01 00 00    	cmp    0x104(%rbp),%edx
    fbd9:	0f 84 11 01 00 00    	je     fcf0 <stm_store2_tx+0x190>
    fbdf:	48 c1 e2 06          	shl    $0x6,%rdx
    fbe3:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
    fbea:	48 89 d1             	mov    %rdx,%rcx
    fbed:	48 83 c9 01          	or     $0x1,%rcx
    fbf1:	48 89 d8             	mov    %rbx,%rax
    fbf4:	f0 49 0f b1 09       	lock cmpxchg %rcx,(%r9)
    fbf9:	75 a2                	jne    fb9d <stm_store2_tx+0x3d>
    fbfb:	4c 89 2a             	mov    %r13,(%rdx)
    fbfe:	4c 89 62 10          	mov    %r12,0x10(%rdx)
    fc02:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
    fc06:	4d 85 e4             	test   %r12,%r12
    fc09:	74 51                	je     fc5c <stm_store2_tx+0xfc>
    fc0b:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    fc0f:	74 47                	je     fc58 <stm_store2_tx+0xf8>
    fc11:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    fc15:	4c 89 f0             	mov    %r14,%rax
    fc18:	48 31 c8             	xor    %rcx,%rax
    fc1b:	4c 21 e0             	and    %r12,%rax
    fc1e:	48 31 c8             	xor    %rcx,%rax
    fc21:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fc25:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    fc29:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    fc30:	00 
    fc31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fc38:	ff 85 00 01 00 00    	incl   0x100(%rbp)
    fc3e:	ff 85 08 01 00 00    	incl   0x108(%rbp)
    fc44:	48 83 c4 18          	add    $0x18,%rsp
    fc48:	5b                   	pop    %rbx
    fc49:	5d                   	pop    %rbp
    fc4a:	41 5c                	pop    %r12
    fc4c:	41 5d                	pop    %r13
    fc4e:	41 5e                	pop    %r14
    fc50:	41 5f                	pop    %r15
    fc52:	c3                   	retq   
    fc53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fc58:	4c 89 72 08          	mov    %r14,0x8(%rdx)
    fc5c:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    fc60:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    fc67:	00 
    fc68:	eb ce                	jmp    fc38 <stm_store2_tx+0xd8>
    fc6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fc70:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
    fc77:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
    fc7b:	48 39 d3             	cmp    %rdx,%rbx
    fc7e:	0f 82 6c 01 00 00    	jb     fdf0 <stm_store2_tx+0x290>
    fc84:	8b 85 00 01 00 00    	mov    0x100(%rbp),%eax
    fc8a:	48 89 c1             	mov    %rax,%rcx
    fc8d:	48 c1 e0 06          	shl    $0x6,%rax
    fc91:	48 01 c2             	add    %rax,%rdx
    fc94:	48 39 d3             	cmp    %rdx,%rbx
    fc97:	0f 83 53 01 00 00    	jae    fdf0 <stm_store2_tx+0x290>
    fc9d:	4d 85 e4             	test   %r12,%r12
    fca0:	75 16                	jne    fcb8 <stm_store2_tx+0x158>
    fca2:	eb a0                	jmp    fc44 <stm_store2_tx+0xe4>
    fca4:	0f 1f 40 00          	nopl   0x0(%rax)
    fca8:	48 8b 43 30          	mov    0x30(%rbx),%rax
    fcac:	48 85 c0             	test   %rax,%rax
    fcaf:	0f 84 fb 00 00 00    	je     fdb0 <stm_store2_tx+0x250>
    fcb5:	48 89 c3             	mov    %rax,%rbx
    fcb8:	4c 3b 2b             	cmp    (%rbx),%r13
    fcbb:	75 eb                	jne    fca8 <stm_store2_tx+0x148>
    fcbd:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    fcc1:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    fcc5:	74 16                	je     fcdd <stm_store2_tx+0x17d>
    fcc7:	48 85 c9             	test   %rcx,%rcx
    fcca:	0f 84 50 01 00 00    	je     fe20 <stm_store2_tx+0x2c0>
    fcd0:	48 8b 43 08          	mov    0x8(%rbx),%rax
    fcd4:	49 31 c6             	xor    %rax,%r14
    fcd7:	4d 21 e6             	and    %r12,%r14
    fcda:	49 31 c6             	xor    %rax,%r14
    fcdd:	4c 09 e1             	or     %r12,%rcx
    fce0:	4c 89 73 08          	mov    %r14,0x8(%rbx)
    fce4:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    fce8:	e9 57 ff ff ff       	jmpq   fc44 <stm_store2_tx+0xe4>
    fced:	0f 1f 00             	nopl   (%rax)
    fcf0:	be 40 0c 00 00       	mov    $0xc40,%esi
    fcf5:	48 89 ef             	mov    %rbp,%rdi
    fcf8:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    fcfd:	e8 fe e7 ff ff       	callq  e500 <stm_rollback>
    fd02:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    fd08:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    fd0d:	4c 8d 15 74 a7 00 00 	lea    0xa774(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
    fd14:	e9 c6 fe ff ff       	jmpq   fbdf <stm_store2_tx+0x7f>
    fd19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fd20:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
    fd27:	48 89 ea             	mov    %rbp,%rdx
    fd2a:	4c 89 d6             	mov    %r10,%rsi
    fd2d:	bf 01 00 00 00       	mov    $0x1,%edi
    fd32:	31 c0                	xor    %eax,%eax
    fd34:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    fd39:	e8 52 27 ff ff       	callq  2490 <__printf_chk@plt>
    fd3e:	31 ff                	xor    %edi,%edi
    fd40:	e8 1b 27 ff ff       	callq  2460 <fflush@plt>
    fd45:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
    fd4b:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
    fd52:	85 d2                	test   %edx,%edx
    fd54:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    fd59:	4c 8d 15 28 a7 00 00 	lea    0xa728(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
    fd60:	0f 8e 67 fe ff ff    	jle    fbcd <stm_store2_tx+0x6d>
    fd66:	ff ca                	dec    %edx
    fd68:	48 ff c2             	inc    %rdx
    fd6b:	48 c1 e2 04          	shl    $0x4,%rdx
    fd6f:	48 01 c2             	add    %rax,%rdx
    fd72:	eb 11                	jmp    fd85 <stm_store2_tx+0x225>
    fd74:	0f 1f 40 00          	nopl   0x0(%rax)
    fd78:	48 83 c0 10          	add    $0x10,%rax
    fd7c:	48 39 d0             	cmp    %rdx,%rax
    fd7f:	0f 84 48 fe ff ff    	je     fbcd <stm_store2_tx+0x6d>
    fd85:	4c 3b 48 08          	cmp    0x8(%rax),%r9
    fd89:	75 ed                	jne    fd78 <stm_store2_tx+0x218>
    fd8b:	be 40 06 00 00       	mov    $0x640,%esi
    fd90:	48 83 c4 18          	add    $0x18,%rsp
    fd94:	5b                   	pop    %rbx
    fd95:	48 89 ef             	mov    %rbp,%rdi
    fd98:	5d                   	pop    %rbp
    fd99:	41 5c                	pop    %r12
    fd9b:	41 5d                	pop    %r13
    fd9d:	41 5e                	pop    %r14
    fd9f:	41 5f                	pop    %r15
    fda1:	e9 5a e7 ff ff       	jmpq   e500 <stm_rollback>
    fda6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    fdad:	00 00 00 
    fdb0:	4c 8b 7b 18          	mov    0x18(%rbx),%r15
    fdb4:	3b 8d 04 01 00 00    	cmp    0x104(%rbp),%ecx
    fdba:	74 6d                	je     fe29 <stm_store2_tx+0x2c9>
    fdbc:	4c 89 2a             	mov    %r13,(%rdx)
    fdbf:	4c 89 62 10          	mov    %r12,0x10(%rdx)
    fdc3:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
    fdc7:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
    fdcb:	0f 85 85 00 00 00    	jne    fe56 <stm_store2_tx+0x2f6>
    fdd1:	4c 89 72 08          	mov    %r14,0x8(%rdx)
    fdd5:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    fdd9:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    fde0:	00 
    fde1:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    fde5:	e9 4e fe ff ff       	jmpq   fc38 <stm_store2_tx+0xd8>
    fdea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fdf0:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
    fdf7:	0f 85 a0 fd ff ff    	jne    fb9d <stm_store2_tx+0x3d>
    fdfd:	48 8b 05 0c 09 81 00 	mov    0x81090c(%rip),%rax        # 820710 <_tinystm+0x800550>
    fe04:	48 85 c0             	test   %rax,%rax
    fe07:	74 09                	je     fe12 <stm_store2_tx+0x2b2>
    fe09:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    fe0d:	48 89 ef             	mov    %rbp,%rdi
    fe10:	ff d0                	callq  *%rax
    fe12:	be 40 04 00 00       	mov    $0x440,%esi
    fe17:	e9 74 ff ff ff       	jmpq   fd90 <stm_store2_tx+0x230>
    fe1c:	0f 1f 40 00          	nopl   0x0(%rax)
    fe20:	49 8b 45 00          	mov    0x0(%r13),%rax
    fe24:	e9 ab fe ff ff       	jmpq   fcd4 <stm_store2_tx+0x174>
    fe29:	be 40 0c 00 00       	mov    $0xc40,%esi
    fe2e:	48 89 ef             	mov    %rbp,%rdi
    fe31:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    fe36:	e8 c5 e6 ff ff       	callq  e500 <stm_rollback>
    fe3b:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
    fe41:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
    fe46:	48 c1 e2 06          	shl    $0x6,%rdx
    fe4a:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
    fe51:	e9 66 ff ff ff       	jmpq   fdbc <stm_store2_tx+0x25c>
    fe56:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    fe5a:	4c 89 f0             	mov    %r14,%rax
    fe5d:	48 31 c8             	xor    %rcx,%rax
    fe60:	4c 21 e0             	and    %r12,%rax
    fe63:	48 31 c8             	xor    %rcx,%rax
    fe66:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fe6a:	4c 89 7a 18          	mov    %r15,0x18(%rdx)
    fe6e:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    fe75:	00 
    fe76:	e9 66 ff ff ff       	jmpq   fde1 <stm_store2_tx+0x281>
    fe7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000fe80 <stm_set_irrevocable>:
    fe80:	f3 0f 1e fa          	endbr64 
    fe84:	55                   	push   %rbp
    fe85:	53                   	push   %rbx
    fe86:	89 fb                	mov    %edi,%ebx
    fe88:	48 83 ec 08          	sub    $0x8,%rsp
    fe8c:	64 48 8b 2c 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%rbp
    fe93:	ff ff 
    fe95:	48 8b 85 d0 00 00 00 	mov    0xd0(%rbp),%rax
    fe9c:	83 ff ff             	cmp    $0xffffffff,%edi
    fe9f:	74 08                	je     fea9 <stm_set_irrevocable+0x29>
    fea1:	a8 01                	test   $0x1,%al
    fea3:	0f 84 b7 00 00 00    	je     ff60 <stm_set_irrevocable+0xe0>
    fea9:	0f b6 95 10 01 00 00 	movzbl 0x110(%rbp),%edx
    feb0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    feb6:	89 d1                	mov    %edx,%ecx
    feb8:	89 d0                	mov    %edx,%eax
    feba:	83 e1 07             	and    $0x7,%ecx
    febd:	83 e0 0f             	and    $0xf,%eax
    fec0:	80 f9 03             	cmp    $0x3,%cl
    fec3:	74 50                	je     ff15 <stm_set_irrevocable+0x95>
    fec5:	84 c0                	test   %al,%al
    fec7:	75 57                	jne    ff20 <stm_set_irrevocable+0xa0>
    fec9:	83 fb 01             	cmp    $0x1,%ebx
    fecc:	19 c0                	sbb    %eax,%eax
    fece:	83 e0 f8             	and    $0xfffffff8,%eax
    fed1:	83 c0 09             	add    $0x9,%eax
    fed4:	83 e0 0f             	and    $0xf,%eax
    fed7:	83 e2 f0             	and    $0xfffffff0,%edx
    feda:	09 c2                	or     %eax,%edx
    fedc:	88 95 10 01 00 00    	mov    %dl,0x110(%rbp)
    fee2:	48 8b 05 af 07 81 00 	mov    0x8107af(%rip),%rax        # 820698 <_tinystm+0x8004d8>
    fee9:	48 83 f8 01          	cmp    $0x1,%rax
    feed:	74 16                	je     ff05 <stm_set_irrevocable+0x85>
    feef:	31 c0                	xor    %eax,%eax
    fef1:	ba 01 00 00 00       	mov    $0x1,%edx
    fef6:	f0 48 0f b1 15 99 07 	lock cmpxchg %rdx,0x810799(%rip)        # 820698 <_tinystm+0x8004d8>
    fefd:	81 00 
    feff:	0f 84 8b 00 00 00    	je     ff90 <stm_set_irrevocable+0x110>
    ff05:	be 40 09 00 00       	mov    $0x940,%esi
    ff0a:	48 89 ef             	mov    %rbp,%rdi
    ff0d:	e8 ee e5 ff ff       	callq  e500 <stm_rollback>
    ff12:	45 31 c0             	xor    %r8d,%r8d
    ff15:	48 83 c4 08          	add    $0x8,%rsp
    ff19:	5b                   	pop    %rbx
    ff1a:	44 89 c0             	mov    %r8d,%eax
    ff1d:	5d                   	pop    %rbp
    ff1e:	c3                   	retq   
    ff1f:	90                   	nop
    ff20:	80 f9 01             	cmp    $0x1,%cl
    ff23:	0f 84 37 01 00 00    	je     10060 <stm_set_irrevocable+0x1e0>
    ff29:	a8 08                	test   $0x8,%al
    ff2b:	0f 85 7a 01 00 00    	jne    100ab <stm_set_irrevocable+0x22b>
    ff31:	0f b6 95 10 01 00 00 	movzbl 0x110(%rbp),%edx
    ff38:	ff c0                	inc    %eax
    ff3a:	83 e0 0f             	and    $0xf,%eax
    ff3d:	83 e2 f0             	and    $0xfffffff0,%edx
    ff40:	09 d0                	or     %edx,%eax
    ff42:	88 85 10 01 00 00    	mov    %al,0x110(%rbp)
    ff48:	48 83 c4 08          	add    $0x8,%rsp
    ff4c:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    ff52:	5b                   	pop    %rbx
    ff53:	44 89 c0             	mov    %r8d,%eax
    ff56:	5d                   	pop    %rbp
    ff57:	c3                   	retq   
    ff58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ff5f:	00 
    ff60:	83 ff 01             	cmp    $0x1,%edi
    ff63:	19 c0                	sbb    %eax,%eax
    ff65:	0f b6 95 10 01 00 00 	movzbl 0x110(%rbp),%edx
    ff6c:	83 e0 f8             	and    $0xfffffff8,%eax
    ff6f:	83 c0 09             	add    $0x9,%eax
    ff72:	83 e0 0f             	and    $0xf,%eax
    ff75:	83 e2 f0             	and    $0xfffffff0,%edx
    ff78:	09 d0                	or     %edx,%eax
    ff7a:	88 85 10 01 00 00    	mov    %al,0x110(%rbp)
    ff80:	48 83 c4 08          	add    $0x8,%rsp
    ff84:	45 31 c0             	xor    %r8d,%r8d
    ff87:	5b                   	pop    %rbx
    ff88:	44 89 c0             	mov    %r8d,%eax
    ff8b:	5d                   	pop    %rbp
    ff8c:	c3                   	retq   
    ff8d:	0f 1f 00             	nopl   (%rax)
    ff90:	0f b6 85 10 01 00 00 	movzbl 0x110(%rbp),%eax
    ff97:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
    ff9e:	8d 50 01             	lea    0x1(%rax),%edx
    ffa1:	83 e2 0f             	and    $0xf,%edx
    ffa4:	83 e0 f0             	and    $0xfffffff0,%eax
    ffa7:	09 d0                	or     %edx,%eax
    ffa9:	88 85 10 01 00 00    	mov    %al,0x110(%rbp)
    ffaf:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
    ffb6:	48 89 ea             	mov    %rbp,%rdx
    ffb9:	48 8d 35 08 a4 00 00 	lea    0xa408(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
    ffc0:	bf 01 00 00 00       	mov    $0x1,%edi
    ffc5:	31 c0                	xor    %eax,%eax
    ffc7:	e8 c4 24 ff ff       	callq  2490 <__printf_chk@plt>
    ffcc:	31 ff                	xor    %edi,%edi
    ffce:	e8 8d 24 ff ff       	callq  2460 <fflush@plt>
    ffd3:	8b 85 f0 00 00 00    	mov    0xf0(%rbp),%eax
    ffd9:	48 8b 95 e8 00 00 00 	mov    0xe8(%rbp),%rdx
    ffe0:	85 c0                	test   %eax,%eax
    ffe2:	0f 8e 5d 01 00 00    	jle    10145 <stm_set_irrevocable+0x2c5>
    ffe8:	8d 78 ff             	lea    -0x1(%rax),%edi
    ffeb:	48 ff c7             	inc    %rdi
    ffee:	48 c1 e7 04          	shl    $0x4,%rdi
    fff2:	48 01 d7             	add    %rdx,%rdi
    fff5:	eb 40                	jmp    10037 <stm_set_irrevocable+0x1b7>
    fff7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fffe:	00 00 
   10000:	48 8b 8d f8 00 00 00 	mov    0xf8(%rbp),%rcx
   10007:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1000b:	48 39 c8             	cmp    %rcx,%rax
   1000e:	0f 82 52 01 00 00    	jb     10166 <stm_set_irrevocable+0x2e6>
   10014:	8b b5 00 01 00 00    	mov    0x100(%rbp),%esi
   1001a:	48 c1 e6 06          	shl    $0x6,%rsi
   1001e:	48 01 f1             	add    %rsi,%rcx
   10021:	48 39 c8             	cmp    %rcx,%rax
   10024:	0f 83 3c 01 00 00    	jae    10166 <stm_set_irrevocable+0x2e6>
   1002a:	48 83 c2 10          	add    $0x10,%rdx
   1002e:	48 39 fa             	cmp    %rdi,%rdx
   10031:	0f 84 0e 01 00 00    	je     10145 <stm_set_irrevocable+0x2c5>
   10037:	48 8b 42 08          	mov    0x8(%rdx),%rax
   1003b:	48 8b 00             	mov    (%rax),%rax
   1003e:	a8 01                	test   $0x1,%al
   10040:	75 be                	jne    10000 <stm_set_irrevocable+0x180>
   10042:	48 c1 e8 04          	shr    $0x4,%rax
   10046:	48 3b 02             	cmp    (%rdx),%rax
   10049:	74 df                	je     1002a <stm_set_irrevocable+0x1aa>
   1004b:	be 40 07 00 00       	mov    $0x740,%esi
   10050:	48 89 ef             	mov    %rbp,%rdi
   10053:	e8 a8 e4 ff ff       	callq  e500 <stm_rollback>
   10058:	45 31 c0             	xor    %r8d,%r8d
   1005b:	e9 b5 fe ff ff       	jmpq   ff15 <stm_set_irrevocable+0x95>
   10060:	31 c9                	xor    %ecx,%ecx
   10062:	ba 01 00 00 00       	mov    $0x1,%edx
   10067:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1006e:	00 00 
   10070:	48 8b 05 21 06 81 00 	mov    0x810621(%rip),%rax        # 820698 <_tinystm+0x8004d8>
   10077:	48 83 f8 01          	cmp    $0x1,%rax
   1007b:	74 f3                	je     10070 <stm_set_irrevocable+0x1f0>
   1007d:	48 89 c8             	mov    %rcx,%rax
   10080:	f0 48 0f b1 15 0f 06 	lock cmpxchg %rdx,0x81060f(%rip)        # 820698 <_tinystm+0x8004d8>
   10087:	81 00 
   10089:	75 e5                	jne    10070 <stm_set_irrevocable+0x1f0>
   1008b:	0f b6 95 10 01 00 00 	movzbl 0x110(%rbp),%edx
   10092:	8d 42 01             	lea    0x1(%rdx),%eax
   10095:	83 e0 0f             	and    $0xf,%eax
   10098:	83 e2 f0             	and    $0xfffffff0,%edx
   1009b:	09 c2                	or     %eax,%edx
   1009d:	88 95 10 01 00 00    	mov    %dl,0x110(%rbp)
   100a3:	a8 08                	test   $0x8,%al
   100a5:	0f 84 86 fe ff ff    	je     ff31 <stm_set_irrevocable+0xb1>
   100ab:	b9 01 00 00 00       	mov    $0x1,%ecx
   100b0:	48 89 ea             	mov    %rbp,%rdx
   100b3:	48 8d 35 37 9f 00 00 	lea    0x9f37(%rip),%rsi        # 19ff1 <__PRETTY_FUNCTION__.3713+0x189>
   100ba:	bf 01 00 00 00       	mov    $0x1,%edi
   100bf:	31 c0                	xor    %eax,%eax
   100c1:	e8 ca 23 ff ff       	callq  2490 <__printf_chk@plt>
   100c6:	31 ff                	xor    %edi,%edi
   100c8:	e8 93 23 ff ff       	callq  2460 <fflush@plt>
   100cd:	48 8b 85 d0 00 00 00 	mov    0xd0(%rbp),%rax
   100d4:	48 8d 3d dd 05 81 00 	lea    0x8105dd(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
   100db:	a8 01                	test   $0x1,%al
   100dd:	74 5f                	je     1013e <stm_set_irrevocable+0x2be>
   100df:	e8 9c 24 ff ff       	callq  2580 <pthread_mutex_trylock@plt>
   100e4:	85 c0                	test   %eax,%eax
   100e6:	0f 85 19 fe ff ff    	jne    ff05 <stm_set_irrevocable+0x85>
   100ec:	48 c7 05 a9 05 81 00 	movq   $0x2,0x8105a9(%rip)        # 8206a0 <_tinystm+0x8004e0>
   100f3:	02 00 00 00 
   100f7:	0f ae f0             	mfence 
   100fa:	48 8b 15 af 05 81 00 	mov    0x8105af(%rip),%rdx        # 8206b0 <_tinystm+0x8004f0>
   10101:	48 85 d2             	test   %rdx,%rdx
   10104:	74 29                	je     1012f <stm_set_irrevocable+0x2af>
   10106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1010d:	00 00 00 
   10110:	48 39 d5             	cmp    %rdx,%rbp
   10113:	74 0e                	je     10123 <stm_set_irrevocable+0x2a3>
   10115:	0f 1f 00             	nopl   (%rax)
   10118:	48 8b 82 d0 00 00 00 	mov    0xd0(%rdx),%rax
   1011f:	a8 01                	test   $0x1,%al
   10121:	75 f5                	jne    10118 <stm_set_irrevocable+0x298>
   10123:	48 8b 92 50 01 00 00 	mov    0x150(%rdx),%rdx
   1012a:	48 85 d2             	test   %rdx,%rdx
   1012d:	75 e1                	jne    10110 <stm_set_irrevocable+0x290>
   1012f:	0f b6 85 10 01 00 00 	movzbl 0x110(%rbp),%eax
   10136:	83 e0 0f             	and    $0xf,%eax
   10139:	e9 f3 fd ff ff       	jmpq   ff31 <stm_set_irrevocable+0xb1>
   1013e:	e8 2d 24 ff ff       	callq  2570 <pthread_mutex_lock@plt>
   10143:	eb a7                	jmp    100ec <stm_set_irrevocable+0x26c>
   10145:	85 db                	test   %ebx,%ebx
   10147:	74 0e                	je     10157 <stm_set_irrevocable+0x2d7>
   10149:	8b 85 00 01 00 00    	mov    0x100(%rbp),%eax
   1014f:	85 c0                	test   %eax,%eax
   10151:	0f 85 ae fd ff ff    	jne    ff05 <stm_set_irrevocable+0x85>
   10157:	0f b6 85 10 01 00 00 	movzbl 0x110(%rbp),%eax
   1015e:	83 e0 0f             	and    $0xf,%eax
   10161:	e9 c3 fd ff ff       	jmpq   ff29 <stm_set_irrevocable+0xa9>
   10166:	48 8b 15 a3 05 81 00 	mov    0x8105a3(%rip),%rdx        # 820710 <_tinystm+0x800550>
   1016d:	48 85 d2             	test   %rdx,%rdx
   10170:	0f 84 d5 fe ff ff    	je     1004b <stm_set_irrevocable+0x1cb>
   10176:	48 8b 70 28          	mov    0x28(%rax),%rsi
   1017a:	48 89 ef             	mov    %rbp,%rdi
   1017d:	ff d2                	callq  *%rdx
   1017f:	e9 c7 fe ff ff       	jmpq   1004b <stm_set_irrevocable+0x1cb>
   10184:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1018b:	00 00 00 00 
   1018f:	90                   	nop

0000000000010190 <stm_start>:
   10190:	f3 0f 1e fa          	endbr64 
   10194:	41 54                	push   %r12
   10196:	48 8d 35 89 9e 00 00 	lea    0x9e89(%rip),%rsi        # 1a026 <__PRETTY_FUNCTION__.3713+0x1be>
   1019d:	31 c0                	xor    %eax,%eax
   1019f:	55                   	push   %rbp
   101a0:	53                   	push   %rbx
   101a1:	89 fb                	mov    %edi,%ebx
   101a3:	bf 01 00 00 00       	mov    $0x1,%edi
   101a8:	64 4c 8b 24 25 f8 ff 	mov    %fs:0xfffffffffffffff8,%r12
   101af:	ff ff 
   101b1:	4c 89 e2             	mov    %r12,%rdx
   101b4:	e8 d7 22 ff ff       	callq  2490 <__printf_chk@plt>
   101b9:	31 ff                	xor    %edi,%edi
   101bb:	e8 a0 22 ff ff       	callq  2460 <fflush@plt>
   101c0:	41 8b 84 24 14 01 00 	mov    0x114(%r12),%eax
   101c7:	00 
   101c8:	8d 68 01             	lea    0x1(%rax),%ebp
   101cb:	41 89 ac 24 14 01 00 	mov    %ebp,0x114(%r12)
   101d2:	00 
   101d3:	85 c0                	test   %eax,%eax
   101d5:	0f 85 bd 00 00 00    	jne    10298 <stm_start+0x108>
   101db:	41 89 9c 24 c8 00 00 	mov    %ebx,0xc8(%r12)
   101e2:	00 
   101e3:	41 c7 84 24 08 01 00 	movl   $0x0,0x108(%r12)
   101ea:	00 00 00 00 00 
   101ef:	41 c7 84 24 00 01 00 	movl   $0x0,0x100(%r12)
   101f6:	00 00 00 00 00 
   101fb:	41 c7 84 24 f0 00 00 	movl   $0x0,0xf0(%r12)
   10202:	00 00 00 00 00 
   10207:	48 8b 3d 32 00 81 00 	mov    0x810032(%rip),%rdi        # 820240 <_tinystm+0x800080>
   1020e:	48 b8 fe df ff ff ff 	movabs $0xfffffffffffdffe,%rax
   10215:	ff ff 0f 
   10218:	49 89 bc 24 e0 00 00 	mov    %rdi,0xe0(%r12)
   1021f:	00 
   10220:	49 89 bc 24 d8 00 00 	mov    %rdi,0xd8(%r12)
   10227:	00 
   10228:	48 39 c7             	cmp    %rax,%rdi
   1022b:	77 73                	ja     102a0 <stm_start+0x110>
   1022d:	e8 2e 76 00 00       	callq  17860 <gc_set_epoch>
   10232:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   10239:	00 0f 
   1023b:	0f 85 8f 00 00 00    	jne    102d0 <stm_start+0x140>
   10241:	49 c7 84 24 d0 00 00 	movq   $0x1,0xd0(%r12)
   10248:	00 01 00 00 00 
   1024d:	48 8b 05 4c 04 81 00 	mov    0x81044c(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
   10254:	48 83 f8 02          	cmp    $0x2,%rax
   10258:	0f 84 92 00 00 00    	je     102f0 <stm_start+0x160>
   1025e:	8b 05 4c 02 81 00    	mov    0x81024c(%rip),%eax        # 8204b0 <_tinystm+0x8002f0>
   10264:	85 c0                	test   %eax,%eax
   10266:	74 24                	je     1028c <stm_start+0xfc>
   10268:	48 8d 1d 49 02 81 00 	lea    0x810249(%rip),%rbx        # 8204b8 <_tinystm+0x8002f8>
   1026f:	eb 09                	jmp    1027a <stm_start+0xea>
   10271:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10278:	ff c5                	inc    %ebp
   1027a:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   1027e:	ff 13                	callq  *(%rbx)
   10280:	48 83 c3 10          	add    $0x10,%rbx
   10284:	3b 2d 26 02 81 00    	cmp    0x810226(%rip),%ebp        # 8204b0 <_tinystm+0x8002f0>
   1028a:	72 ec                	jb     10278 <stm_start+0xe8>
   1028c:	5b                   	pop    %rbx
   1028d:	5d                   	pop    %rbp
   1028e:	4c 89 e0             	mov    %r12,%rax
   10291:	41 5c                	pop    %r12
   10293:	c3                   	retq   
   10294:	0f 1f 40 00          	nopl   0x0(%rax)
   10298:	5b                   	pop    %rbx
   10299:	5d                   	pop    %rbp
   1029a:	31 c0                	xor    %eax,%eax
   1029c:	41 5c                	pop    %r12
   1029e:	c3                   	retq   
   1029f:	90                   	nop
   102a0:	48 89 c3             	mov    %rax,%rbx
   102a3:	e8 f8 ce ff ff       	callq  d1a0 <stm_quiesce_barrier.isra.0.constprop.0>
   102a8:	48 8b 3d 91 ff 80 00 	mov    0x80ff91(%rip),%rdi        # 820240 <_tinystm+0x800080>
   102af:	49 89 bc 24 e0 00 00 	mov    %rdi,0xe0(%r12)
   102b6:	00 
   102b7:	49 89 bc 24 d8 00 00 	mov    %rdi,0xd8(%r12)
   102be:	00 
   102bf:	48 39 df             	cmp    %rbx,%rdi
   102c2:	0f 86 65 ff ff ff    	jbe    1022d <stm_start+0x9d>
   102c8:	eb d9                	jmp    102a3 <stm_start+0x113>
   102ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   102d0:	be ff ff ff ff       	mov    $0xffffffff,%esi
   102d5:	4c 89 e7             	mov    %r12,%rdi
   102d8:	e8 13 df ff ff       	callq  e1f0 <stm_set_irrevocable_tx>
   102dd:	49 c7 84 24 d0 00 00 	movq   $0x9,0xd0(%r12)
   102e4:	00 09 00 00 00 
   102e9:	e9 5f ff ff ff       	jmpq   1024d <stm_start+0xbd>
   102ee:	66 90                	xchg   %ax,%ax
   102f0:	41 f6 84 24 10 01 00 	testb  $0x8,0x110(%r12)
   102f7:	00 08 
   102f9:	0f 85 5f ff ff ff    	jne    1025e <stm_start+0xce>
   102ff:	49 8b 94 24 d0 00 00 	mov    0xd0(%r12),%rdx
   10306:	00 
   10307:	49 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%r12)
   1030e:	00 00 00 00 00 
   10313:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10318:	48 8b 05 81 03 81 00 	mov    0x810381(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
   1031f:	48 83 f8 02          	cmp    $0x2,%rax
   10323:	74 f3                	je     10318 <stm_start+0x188>
   10325:	49 89 94 24 d0 00 00 	mov    %rdx,0xd0(%r12)
   1032c:	00 
   1032d:	e9 2c ff ff ff       	jmpq   1025e <stm_start+0xce>
   10332:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10339:	00 00 00 00 
   1033d:	0f 1f 00             	nopl   (%rax)

0000000000010340 <stm_start_tx>:
   10340:	f3 0f 1e fa          	endbr64 
   10344:	41 54                	push   %r12
   10346:	48 89 fa             	mov    %rdi,%rdx
   10349:	49 89 fc             	mov    %rdi,%r12
   1034c:	55                   	push   %rbp
   1034d:	bf 01 00 00 00       	mov    $0x1,%edi
   10352:	31 c0                	xor    %eax,%eax
   10354:	53                   	push   %rbx
   10355:	89 f3                	mov    %esi,%ebx
   10357:	48 8d 35 c8 9c 00 00 	lea    0x9cc8(%rip),%rsi        # 1a026 <__PRETTY_FUNCTION__.3713+0x1be>
   1035e:	e8 2d 21 ff ff       	callq  2490 <__printf_chk@plt>
   10363:	31 ff                	xor    %edi,%edi
   10365:	e8 f6 20 ff ff       	callq  2460 <fflush@plt>
   1036a:	41 8b 84 24 14 01 00 	mov    0x114(%r12),%eax
   10371:	00 
   10372:	8d 68 01             	lea    0x1(%rax),%ebp
   10375:	41 89 ac 24 14 01 00 	mov    %ebp,0x114(%r12)
   1037c:	00 
   1037d:	85 c0                	test   %eax,%eax
   1037f:	0f 85 bb 00 00 00    	jne    10440 <stm_start_tx+0x100>
   10385:	41 89 9c 24 c8 00 00 	mov    %ebx,0xc8(%r12)
   1038c:	00 
   1038d:	41 c7 84 24 08 01 00 	movl   $0x0,0x108(%r12)
   10394:	00 00 00 00 00 
   10399:	41 c7 84 24 00 01 00 	movl   $0x0,0x100(%r12)
   103a0:	00 00 00 00 00 
   103a5:	41 c7 84 24 f0 00 00 	movl   $0x0,0xf0(%r12)
   103ac:	00 00 00 00 00 
   103b1:	48 8b 3d 88 fe 80 00 	mov    0x80fe88(%rip),%rdi        # 820240 <_tinystm+0x800080>
   103b8:	48 b8 fe df ff ff ff 	movabs $0xfffffffffffdffe,%rax
   103bf:	ff ff 0f 
   103c2:	49 89 bc 24 e0 00 00 	mov    %rdi,0xe0(%r12)
   103c9:	00 
   103ca:	49 89 bc 24 d8 00 00 	mov    %rdi,0xd8(%r12)
   103d1:	00 
   103d2:	48 39 c7             	cmp    %rax,%rdi
   103d5:	77 79                	ja     10450 <stm_start_tx+0x110>
   103d7:	e8 84 74 00 00       	callq  17860 <gc_set_epoch>
   103dc:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   103e3:	00 0f 
   103e5:	0f 85 95 00 00 00    	jne    10480 <stm_start_tx+0x140>
   103eb:	49 c7 84 24 d0 00 00 	movq   $0x1,0xd0(%r12)
   103f2:	00 01 00 00 00 
   103f7:	48 8b 05 a2 02 81 00 	mov    0x8102a2(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
   103fe:	48 83 f8 02          	cmp    $0x2,%rax
   10402:	0f 84 98 00 00 00    	je     104a0 <stm_start_tx+0x160>
   10408:	8b 05 a2 00 81 00    	mov    0x8100a2(%rip),%eax        # 8204b0 <_tinystm+0x8002f0>
   1040e:	85 c0                	test   %eax,%eax
   10410:	74 22                	je     10434 <stm_start_tx+0xf4>
   10412:	48 8d 1d 9f 00 81 00 	lea    0x81009f(%rip),%rbx        # 8204b8 <_tinystm+0x8002f8>
   10419:	eb 07                	jmp    10422 <stm_start_tx+0xe2>
   1041b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10420:	ff c5                	inc    %ebp
   10422:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   10426:	ff 13                	callq  *(%rbx)
   10428:	48 83 c3 10          	add    $0x10,%rbx
   1042c:	3b 2d 7e 00 81 00    	cmp    0x81007e(%rip),%ebp        # 8204b0 <_tinystm+0x8002f0>
   10432:	72 ec                	jb     10420 <stm_start_tx+0xe0>
   10434:	5b                   	pop    %rbx
   10435:	5d                   	pop    %rbp
   10436:	4c 89 e0             	mov    %r12,%rax
   10439:	41 5c                	pop    %r12
   1043b:	c3                   	retq   
   1043c:	0f 1f 40 00          	nopl   0x0(%rax)
   10440:	5b                   	pop    %rbx
   10441:	5d                   	pop    %rbp
   10442:	31 c0                	xor    %eax,%eax
   10444:	41 5c                	pop    %r12
   10446:	c3                   	retq   
   10447:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1044e:	00 00 
   10450:	48 89 c3             	mov    %rax,%rbx
   10453:	e8 48 cd ff ff       	callq  d1a0 <stm_quiesce_barrier.isra.0.constprop.0>
   10458:	48 8b 3d e1 fd 80 00 	mov    0x80fde1(%rip),%rdi        # 820240 <_tinystm+0x800080>
   1045f:	49 89 bc 24 e0 00 00 	mov    %rdi,0xe0(%r12)
   10466:	00 
   10467:	49 89 bc 24 d8 00 00 	mov    %rdi,0xd8(%r12)
   1046e:	00 
   1046f:	48 39 df             	cmp    %rbx,%rdi
   10472:	0f 86 5f ff ff ff    	jbe    103d7 <stm_start_tx+0x97>
   10478:	eb d9                	jmp    10453 <stm_start_tx+0x113>
   1047a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10480:	be ff ff ff ff       	mov    $0xffffffff,%esi
   10485:	4c 89 e7             	mov    %r12,%rdi
   10488:	e8 63 dd ff ff       	callq  e1f0 <stm_set_irrevocable_tx>
   1048d:	49 c7 84 24 d0 00 00 	movq   $0x9,0xd0(%r12)
   10494:	00 09 00 00 00 
   10499:	e9 59 ff ff ff       	jmpq   103f7 <stm_start_tx+0xb7>
   1049e:	66 90                	xchg   %ax,%ax
   104a0:	41 f6 84 24 10 01 00 	testb  $0x8,0x110(%r12)
   104a7:	00 08 
   104a9:	0f 85 59 ff ff ff    	jne    10408 <stm_start_tx+0xc8>
   104af:	49 8b 94 24 d0 00 00 	mov    0xd0(%r12),%rdx
   104b6:	00 
   104b7:	49 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%r12)
   104be:	00 00 00 00 00 
   104c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   104c8:	48 8b 05 d1 01 81 00 	mov    0x8101d1(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
   104cf:	48 83 f8 02          	cmp    $0x2,%rax
   104d3:	74 f3                	je     104c8 <stm_start_tx+0x188>
   104d5:	49 89 94 24 d0 00 00 	mov    %rdx,0xd0(%r12)
   104dc:	00 
   104dd:	e9 26 ff ff ff       	jmpq   10408 <stm_start_tx+0xc8>
   104e2:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   104e9:	00 00 00 00 
   104ed:	0f 1f 00             	nopl   (%rax)

00000000000104f0 <stm_inc_clock>:
   104f0:	f3 0f 1e fa          	endbr64 
   104f4:	b8 01 00 00 00       	mov    $0x1,%eax
   104f9:	f0 48 0f c1 05 3e fd 	lock xadd %rax,0x80fd3e(%rip)        # 820240 <_tinystm+0x800080>
   10500:	80 00 
   10502:	c3                   	retq   
   10503:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1050a:	00 00 00 
   1050d:	0f 1f 00             	nopl   (%rax)

0000000000010510 <rollover_clock>:
   10510:	f3 0f 1e fa          	endbr64 
   10514:	48 83 ec 08          	sub    $0x8,%rsp
   10518:	48 8d 3d 58 99 00 00 	lea    0x9958(%rip),%rdi        # 19e77 <__PRETTY_FUNCTION__.3713+0xf>
   1051f:	e8 fc 1d ff ff       	callq  2320 <puts@plt>
   10524:	31 ff                	xor    %edi,%edi
   10526:	e8 35 1f ff ff       	callq  2460 <fflush@plt>
   1052b:	ba 00 00 80 00       	mov    $0x800000,%edx
   10530:	31 f6                	xor    %esi,%esi
   10532:	48 8d 3d 87 fc 00 00 	lea    0xfc87(%rip),%rdi        # 201c0 <_tinystm>
   10539:	48 c7 05 fc fc 80 00 	movq   $0x0,0x80fcfc(%rip)        # 820240 <_tinystm+0x800080>
   10540:	00 00 00 00 
   10544:	e8 67 1e ff ff       	callq  23b0 <memset@plt>
   10549:	48 83 c4 08          	add    $0x8,%rsp
   1054d:	e9 2e 77 00 00       	jmpq   17c80 <gc_reset>
   10552:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   10559:	00 00 00 00 
   1055d:	0f 1f 00             	nopl   (%rax)

0000000000010560 <stm_allocate_ws_entries.constprop.0>:
   10560:	41 55                	push   %r13
   10562:	48 89 fa             	mov    %rdi,%rdx
   10565:	48 8d 35 2c 9b 00 00 	lea    0x9b2c(%rip),%rsi        # 1a098 <__PRETTY_FUNCTION__.3713+0x230>
   1056c:	41 54                	push   %r12
   1056e:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   10574:	31 c0                	xor    %eax,%eax
   10576:	55                   	push   %rbp
   10577:	53                   	push   %rbx
   10578:	48 89 fb             	mov    %rdi,%rbx
   1057b:	48 83 ec 18          	sub    $0x18,%rsp
   1057f:	48 8b 8f d8 00 00 00 	mov    0xd8(%rdi),%rcx
   10586:	4c 8b 87 e0 00 00 00 	mov    0xe0(%rdi),%r8
   1058d:	8b af 04 01 00 00    	mov    0x104(%rdi),%ebp
   10593:	bf 01 00 00 00       	mov    $0x1,%edi
   10598:	e8 f3 1e ff ff       	callq  2490 <__printf_chk@plt>
   1059d:	31 ff                	xor    %edi,%edi
   1059f:	e8 bc 1e ff ff       	callq  2460 <fflush@plt>
   105a4:	8b 83 04 01 00 00    	mov    0x104(%rbx),%eax
   105aa:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   105af:	8d 14 00             	lea    (%rax,%rax,1),%edx
   105b2:	89 93 04 01 00 00    	mov    %edx,0x104(%rbx)
   105b8:	49 89 d4             	mov    %rdx,%r12
   105bb:	be 40 00 00 00       	mov    $0x40,%esi
   105c0:	48 c1 e2 06          	shl    $0x6,%rdx
   105c4:	4c 8b ab f8 00 00 00 	mov    0xf8(%rbx),%r13
   105cb:	e8 70 1f ff ff       	callq  2540 <posix_memalign@plt>
   105d0:	85 c0                	test   %eax,%eax
   105d2:	74 2c                	je     10600 <stm_allocate_ws_entries.constprop.0+0xa0>
   105d4:	48 8b 0d 25 fb 00 00 	mov    0xfb25(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
   105db:	48 8d 3d 8e 9a 00 00 	lea    0x9a8e(%rip),%rdi        # 1a070 <__PRETTY_FUNCTION__.3713+0x208>
   105e2:	ba 20 00 00 00       	mov    $0x20,%edx
   105e7:	be 01 00 00 00       	mov    $0x1,%esi
   105ec:	e8 2f 1f ff ff       	callq  2520 <fwrite@plt>
   105f1:	bf 01 00 00 00       	mov    $0x1,%edi
   105f6:	e8 15 1f ff ff       	callq  2510 <exit@plt>
   105fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10600:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   10605:	48 85 ff             	test   %rdi,%rdi
   10608:	74 ca                	je     105d4 <stm_allocate_ws_entries.constprop.0+0x74>
   1060a:	48 89 bb f8 00 00 00 	mov    %rdi,0xf8(%rbx)
   10611:	44 89 e2             	mov    %r12d,%edx
   10614:	d1 ea                	shr    %edx
   10616:	4c 89 ee             	mov    %r13,%rsi
   10619:	48 c1 e2 06          	shl    $0x6,%rdx
   1061d:	e8 ee 1d ff ff       	callq  2410 <memcpy@plt>
   10622:	48 8b 35 17 fc 80 00 	mov    0x80fc17(%rip),%rsi        # 820240 <_tinystm+0x800080>
   10629:	4c 89 ef             	mov    %r13,%rdi
   1062c:	e8 bf 73 00 00       	callq  179f0 <gc_free>
   10631:	3b ab 04 01 00 00    	cmp    0x104(%rbx),%ebp
   10637:	73 21                	jae    1065a <stm_allocate_ws_entries.constprop.0+0xfa>
   10639:	48 63 c5             	movslq %ebp,%rax
   1063c:	48 c1 e0 06          	shl    $0x6,%rax
   10640:	48 8b 93 f8 00 00 00 	mov    0xf8(%rbx),%rdx
   10647:	ff c5                	inc    %ebp
   10649:	48 89 5c 02 28       	mov    %rbx,0x28(%rdx,%rax,1)
   1064e:	48 83 c0 40          	add    $0x40,%rax
   10652:	3b ab 04 01 00 00    	cmp    0x104(%rbx),%ebp
   10658:	72 e6                	jb     10640 <stm_allocate_ws_entries.constprop.0+0xe0>
   1065a:	48 83 c4 18          	add    $0x18,%rsp
   1065e:	5b                   	pop    %rbx
   1065f:	5d                   	pop    %rbp
   10660:	41 5c                	pop    %r12
   10662:	41 5d                	pop    %r13
   10664:	c3                   	retq   
   10665:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1066c:	00 00 00 00 

0000000000010670 <stm_allocate_rs_entries.constprop.0>:
   10670:	53                   	push   %rbx
   10671:	48 89 fa             	mov    %rdi,%rdx
   10674:	48 89 fb             	mov    %rdi,%rbx
   10677:	48 8b 8f d8 00 00 00 	mov    0xd8(%rdi),%rcx
   1067e:	4c 8b 87 e0 00 00 00 	mov    0xe0(%rdi),%r8
   10685:	48 8d 35 b4 99 00 00 	lea    0x99b4(%rip),%rsi        # 1a040 <__PRETTY_FUNCTION__.3713+0x1d8>
   1068c:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   10692:	bf 01 00 00 00       	mov    $0x1,%edi
   10697:	31 c0                	xor    %eax,%eax
   10699:	e8 f2 1d ff ff       	callq  2490 <__printf_chk@plt>
   1069e:	31 ff                	xor    %edi,%edi
   106a0:	e8 bb 1d ff ff       	callq  2460 <fflush@plt>
   106a5:	8b 83 f4 00 00 00    	mov    0xf4(%rbx),%eax
   106ab:	48 8b bb e8 00 00 00 	mov    0xe8(%rbx),%rdi
   106b2:	8d 34 00             	lea    (%rax,%rax,1),%esi
   106b5:	89 b3 f4 00 00 00    	mov    %esi,0xf4(%rbx)
   106bb:	48 c1 e6 04          	shl    $0x4,%rsi
   106bf:	e8 bc 1d ff ff       	callq  2480 <realloc@plt>
   106c4:	48 85 c0             	test   %rax,%rax
   106c7:	74 0f                	je     106d8 <stm_allocate_rs_entries.constprop.0+0x68>
   106c9:	48 89 83 e8 00 00 00 	mov    %rax,0xe8(%rbx)
   106d0:	5b                   	pop    %rbx
   106d1:	c3                   	retq   
   106d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   106d8:	48 8d 3d ad 97 00 00 	lea    0x97ad(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
   106df:	e8 fc 1d ff ff       	callq  24e0 <perror@plt>
   106e4:	bf 01 00 00 00       	mov    $0x1,%edi
   106e9:	e8 22 1e ff ff       	callq  2510 <exit@plt>
   106ee:	66 90                	xchg   %ax,%ax

00000000000106f0 <stm_quiesce_barrier.isra.0.constprop.0>:
   106f0:	53                   	push   %rbx
   106f1:	48 8d 3d 9c 97 00 00 	lea    0x979c(%rip),%rdi        # 19e94 <__PRETTY_FUNCTION__.3713+0x2c>
   106f8:	e8 23 1c ff ff       	callq  2320 <puts@plt>
   106fd:	31 ff                	xor    %edi,%edi
   106ff:	e8 5c 1d ff ff       	callq  2460 <fflush@plt>
   10704:	48 8d 3d ad ff 80 00 	lea    0x80ffad(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
   1070b:	e8 60 1e ff ff       	callq  2570 <pthread_mutex_lock@plt>
   10710:	48 8b 05 91 ff 80 00 	mov    0x80ff91(%rip),%rax        # 8206a8 <_tinystm+0x8004e8>
   10717:	48 ff c8             	dec    %rax
   1071a:	48 89 05 87 ff 80 00 	mov    %rax,0x80ff87(%rip)        # 8206a8 <_tinystm+0x8004e8>
   10721:	48 8b 05 78 ff 80 00 	mov    0x80ff78(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
   10728:	48 85 c0             	test   %rax,%rax
   1072b:	75 0b                	jne    10738 <stm_quiesce_barrier.isra.0.constprop.0+0x48>
   1072d:	48 c7 05 68 ff 80 00 	movq   $0x1,0x80ff68(%rip)        # 8206a0 <_tinystm+0x8004e0>
   10734:	01 00 00 00 
   10738:	48 8b 05 61 ff 80 00 	mov    0x80ff61(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
   1073f:	48 85 c0             	test   %rax,%rax
   10742:	0f 84 90 00 00 00    	je     107d8 <stm_quiesce_barrier.isra.0.constprop.0+0xe8>
   10748:	48 8d 1d 69 ff 80 00 	lea    0x80ff69(%rip),%rbx        # 8206b8 <_tinystm+0x8004f8>
   1074f:	eb 60                	jmp    107b1 <stm_quiesce_barrier.isra.0.constprop.0+0xc1>
   10751:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10758:	48 8d 3d 18 97 00 00 	lea    0x9718(%rip),%rdi        # 19e77 <__PRETTY_FUNCTION__.3713+0xf>
   1075f:	e8 bc 1b ff ff       	callq  2320 <puts@plt>
   10764:	31 ff                	xor    %edi,%edi
   10766:	e8 f5 1c ff ff       	callq  2460 <fflush@plt>
   1076b:	ba 00 00 80 00       	mov    $0x800000,%edx
   10770:	31 f6                	xor    %esi,%esi
   10772:	48 8d 3d 47 fa 00 00 	lea    0xfa47(%rip),%rdi        # 201c0 <_tinystm>
   10779:	48 c7 05 bc fa 80 00 	movq   $0x0,0x80fabc(%rip)        # 820240 <_tinystm+0x800080>
   10780:	00 00 00 00 
   10784:	e8 27 1c ff ff       	callq  23b0 <memset@plt>
   10789:	e8 f2 74 00 00       	callq  17c80 <gc_reset>
   1078e:	48 8d 3d 4b ff 80 00 	lea    0x80ff4b(%rip),%rdi        # 8206e0 <_tinystm+0x800520>
   10795:	48 c7 05 00 ff 80 00 	movq   $0x0,0x80ff00(%rip)        # 8206a0 <_tinystm+0x8004e0>
   1079c:	00 00 00 00 
   107a0:	e8 6b 1b ff ff       	callq  2310 <pthread_cond_broadcast@plt>
   107a5:	48 8b 05 f4 fe 80 00 	mov    0x80fef4(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
   107ac:	48 85 c0             	test   %rax,%rax
   107af:	74 27                	je     107d8 <stm_quiesce_barrier.isra.0.constprop.0+0xe8>
   107b1:	48 8b 05 f0 fe 80 00 	mov    0x80fef0(%rip),%rax        # 8206a8 <_tinystm+0x8004e8>
   107b8:	48 85 c0             	test   %rax,%rax
   107bb:	74 9b                	je     10758 <stm_quiesce_barrier.isra.0.constprop.0+0x68>
   107bd:	48 89 de             	mov    %rbx,%rsi
   107c0:	48 8d 3d 19 ff 80 00 	lea    0x80ff19(%rip),%rdi        # 8206e0 <_tinystm+0x800520>
   107c7:	e8 84 1b ff ff       	callq  2350 <pthread_cond_wait@plt>
   107cc:	48 8b 05 cd fe 80 00 	mov    0x80fecd(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
   107d3:	48 85 c0             	test   %rax,%rax
   107d6:	75 d9                	jne    107b1 <stm_quiesce_barrier.isra.0.constprop.0+0xc1>
   107d8:	48 8b 05 c9 fe 80 00 	mov    0x80fec9(%rip),%rax        # 8206a8 <_tinystm+0x8004e8>
   107df:	48 8d 3d d2 fe 80 00 	lea    0x80fed2(%rip),%rdi        # 8206b8 <_tinystm+0x8004f8>
   107e6:	48 ff c0             	inc    %rax
   107e9:	5b                   	pop    %rbx
   107ea:	48 89 05 b7 fe 80 00 	mov    %rax,0x80feb7(%rip)        # 8206a8 <_tinystm+0x8004e8>
   107f1:	e9 4a 1c ff ff       	jmpq   2440 <pthread_mutex_unlock@plt>
   107f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   107fd:	00 00 00 

0000000000010800 <stm_rollback>:
   10800:	41 55                	push   %r13
   10802:	48 89 fa             	mov    %rdi,%rdx
   10805:	41 89 f5             	mov    %esi,%r13d
   10808:	41 54                	push   %r12
   1080a:	48 8d 35 df 9b 00 00 	lea    0x9bdf(%rip),%rsi        # 1a3f0 <__PRETTY_FUNCTION__.3713+0x588>
   10811:	49 89 fc             	mov    %rdi,%r12
   10814:	55                   	push   %rbp
   10815:	31 c0                	xor    %eax,%eax
   10817:	53                   	push   %rbx
   10818:	48 83 ec 08          	sub    $0x8,%rsp
   1081c:	48 8b 8f d8 00 00 00 	mov    0xd8(%rdi),%rcx
   10823:	4c 8b 87 e0 00 00 00 	mov    0xe0(%rdi),%r8
   1082a:	bf 01 00 00 00       	mov    $0x1,%edi
   1082f:	e8 5c 1c ff ff       	callq  2490 <__printf_chk@plt>
   10834:	31 ff                	xor    %edi,%edi
   10836:	e8 25 1c ff ff       	callq  2460 <fflush@plt>
   1083b:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   10842:	00 
   10843:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   1084a:	00 
   1084b:	4c 89 e2             	mov    %r12,%rdx
   1084e:	48 8d 35 bb 9b 00 00 	lea    0x9bbb(%rip),%rsi        # 1a410 <__PRETTY_FUNCTION__.3713+0x5a8>
   10855:	bf 01 00 00 00       	mov    $0x1,%edi
   1085a:	31 c0                	xor    %eax,%eax
   1085c:	e8 2f 1c ff ff       	callq  2490 <__printf_chk@plt>
   10861:	31 ff                	xor    %edi,%edi
   10863:	e8 f8 1b ff ff       	callq  2460 <fflush@plt>
   10868:	41 8b 94 24 00 01 00 	mov    0x100(%r12),%edx
   1086f:	00 
   10870:	85 d2                	test   %edx,%edx
   10872:	7e 4a                	jle    108be <stm_rollback+0xbe>
   10874:	ff ca                	dec    %edx
   10876:	49 8b 84 24 f8 00 00 	mov    0xf8(%r12),%rax
   1087d:	00 
   1087e:	48 ff c2             	inc    %rdx
   10881:	48 c1 e2 06          	shl    $0x6,%rdx
   10885:	48 01 c2             	add    %rax,%rdx
   10888:	eb 0f                	jmp    10899 <stm_rollback+0x99>
   1088a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10890:	48 83 c0 40          	add    $0x40,%rax
   10894:	48 39 d0             	cmp    %rdx,%rax
   10897:	74 22                	je     108bb <stm_rollback+0xbb>
   10899:	48 83 78 30 00       	cmpq   $0x0,0x30(%rax)
   1089e:	75 f0                	jne    10890 <stm_rollback+0x90>
   108a0:	48 8b 70 20          	mov    0x20(%rax),%rsi
   108a4:	b9 04 00 00 00       	mov    $0x4,%ecx
   108a9:	c4 e2 f1 f7 48 18    	shlx   %rcx,0x18(%rax),%rcx
   108af:	48 83 c0 40          	add    $0x40,%rax
   108b3:	48 89 0e             	mov    %rcx,(%rsi)
   108b6:	48 39 d0             	cmp    %rdx,%rax
   108b9:	75 de                	jne    10899 <stm_rollback+0x99>
   108bb:	0f ae f0             	mfence 
   108be:	49 c7 84 24 d0 00 00 	movq   $0x4,0xd0(%r12)
   108c5:	00 04 00 00 00 
   108ca:	41 81 fd 40 0c 00 00 	cmp    $0xc40,%r13d
   108d1:	0f 84 09 01 00 00    	je     109e0 <stm_rollback+0x1e0>
   108d7:	41 c7 84 24 14 01 00 	movl   $0x1,0x114(%r12)
   108de:	00 01 00 00 00 
   108e3:	8b 05 2f fd 80 00    	mov    0x80fd2f(%rip),%eax        # 820618 <_tinystm+0x800458>
   108e9:	85 c0                	test   %eax,%eax
   108eb:	74 27                	je     10914 <stm_rollback+0x114>
   108ed:	48 8d 1d 2c fd 80 00 	lea    0x80fd2c(%rip),%rbx        # 820620 <_tinystm+0x800460>
   108f4:	31 ed                	xor    %ebp,%ebp
   108f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   108fd:	00 00 00 
   10900:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   10904:	ff c5                	inc    %ebp
   10906:	ff 13                	callq  *(%rbx)
   10908:	48 83 c3 10          	add    $0x10,%rbx
   1090c:	39 2d 06 fd 80 00    	cmp    %ebp,0x80fd06(%rip)        # 820618 <_tinystm+0x800458>
   10912:	77 ec                	ja     10900 <stm_rollback+0x100>
   10914:	41 f6 84 24 ca 00 00 	testb  $0x4,0xca(%r12)
   1091b:	00 04 
   1091d:	0f 85 9d 00 00 00    	jne    109c0 <stm_rollback+0x1c0>
   10923:	41 c7 84 24 08 01 00 	movl   $0x0,0x108(%r12)
   1092a:	00 00 00 00 00 
   1092f:	41 c7 84 24 00 01 00 	movl   $0x0,0x100(%r12)
   10936:	00 00 00 00 00 
   1093b:	41 c7 84 24 f0 00 00 	movl   $0x0,0xf0(%r12)
   10942:	00 00 00 00 00 
   10947:	48 bb fe df ff ff ff 	movabs $0xfffffffffffdffe,%rbx
   1094e:	ff ff 0f 
   10951:	48 8b 3d e8 f8 80 00 	mov    0x80f8e8(%rip),%rdi        # 820240 <_tinystm+0x800080>
   10958:	49 89 bc 24 e0 00 00 	mov    %rdi,0xe0(%r12)
   1095f:	00 
   10960:	49 89 bc 24 d8 00 00 	mov    %rdi,0xd8(%r12)
   10967:	00 
   10968:	48 39 df             	cmp    %rbx,%rdi
   1096b:	0f 87 7c 00 00 00    	ja     109ed <stm_rollback+0x1ed>
   10971:	e8 ea 6e 00 00       	callq  17860 <gc_set_epoch>
   10976:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   1097d:	00 0f 
   1097f:	75 76                	jne    109f7 <stm_rollback+0x1f7>
   10981:	49 c7 84 24 d0 00 00 	movq   $0x1,0xd0(%r12)
   10988:	00 01 00 00 00 
   1098d:	48 8b 05 0c fd 80 00 	mov    0x80fd0c(%rip),%rax        # 8206a0 <_tinystm+0x8004e0>
   10994:	48 83 f8 02          	cmp    $0x2,%rax
   10998:	41 0f b6 84 24 10 01 	movzbl 0x110(%r12),%eax
   1099f:	00 00 
   109a1:	74 70                	je     10a13 <stm_rollback+0x213>
   109a3:	83 e0 0f             	and    $0xf,%eax
   109a6:	3c 0b                	cmp    $0xb,%al
   109a8:	0f 94 c0             	sete   %al
   109ab:	0f b6 c0             	movzbl %al,%eax
   109ae:	ff c0                	inc    %eax
   109b0:	44 09 e8             	or     %r13d,%eax
   109b3:	89 c6                	mov    %eax,%esi
   109b5:	4c 89 e7             	mov    %r12,%rdi
   109b8:	e8 f3 1a ff ff       	callq  24b0 <__longjmp_chk@plt>
   109bd:	0f 1f 00             	nopl   (%rax)
   109c0:	41 c7 84 24 14 01 00 	movl   $0x0,0x114(%r12)
   109c7:	00 00 00 00 00 
   109cc:	48 83 c4 08          	add    $0x8,%rsp
   109d0:	5b                   	pop    %rbx
   109d1:	5d                   	pop    %rbp
   109d2:	41 5c                	pop    %r12
   109d4:	41 5d                	pop    %r13
   109d6:	c3                   	retq   
   109d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   109de:	00 00 
   109e0:	4c 89 e7             	mov    %r12,%rdi
   109e3:	e8 78 fb ff ff       	callq  10560 <stm_allocate_ws_entries.constprop.0>
   109e8:	e9 ea fe ff ff       	jmpq   108d7 <stm_rollback+0xd7>
   109ed:	e8 fe fc ff ff       	callq  106f0 <stm_quiesce_barrier.isra.0.constprop.0>
   109f2:	e9 5a ff ff ff       	jmpq   10951 <stm_rollback+0x151>
   109f7:	83 ce ff             	or     $0xffffffff,%esi
   109fa:	4c 89 e7             	mov    %r12,%rdi
   109fd:	e8 ee d7 ff ff       	callq  e1f0 <stm_set_irrevocable_tx>
   10a02:	49 c7 84 24 d0 00 00 	movq   $0x9,0xd0(%r12)
   10a09:	00 09 00 00 00 
   10a0e:	e9 7a ff ff ff       	jmpq   1098d <stm_rollback+0x18d>
   10a13:	a8 08                	test   $0x8,%al
   10a15:	75 8c                	jne    109a3 <stm_rollback+0x1a3>
   10a17:	49 8b 84 24 d0 00 00 	mov    0xd0(%r12),%rax
   10a1e:	00 
   10a1f:	49 c7 84 24 d0 00 00 	movq   $0x0,0xd0(%r12)
   10a26:	00 00 00 00 00 
   10a2b:	48 8b 15 6e fc 80 00 	mov    0x80fc6e(%rip),%rdx        # 8206a0 <_tinystm+0x8004e0>
   10a32:	48 83 fa 02          	cmp    $0x2,%rdx
   10a36:	74 f3                	je     10a2b <stm_rollback+0x22b>
   10a38:	49 89 84 24 d0 00 00 	mov    %rax,0xd0(%r12)
   10a3f:	00 
   10a40:	41 0f b6 84 24 10 01 	movzbl 0x110(%r12),%eax
   10a47:	00 00 
   10a49:	e9 55 ff ff ff       	jmpq   109a3 <stm_rollback+0x1a3>
   10a4e:	66 90                	xchg   %ax,%ax

0000000000010a50 <stm_load_u8>:
   10a50:	f3 0f 1e fa          	endbr64 
   10a54:	41 57                	push   %r15
   10a56:	49 89 ff             	mov    %rdi,%r15
   10a59:	49 83 e7 f8          	and    $0xfffffffffffffff8,%r15
   10a5d:	41 56                	push   %r14
   10a5f:	41 55                	push   %r13
   10a61:	41 54                	push   %r12
   10a63:	55                   	push   %rbp
   10a64:	48 89 fd             	mov    %rdi,%rbp
   10a67:	48 c1 ed 02          	shr    $0x2,%rbp
   10a6b:	53                   	push   %rbx
   10a6c:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
   10a72:	48 89 fb             	mov    %rdi,%rbx
   10a75:	48 83 ec 28          	sub    $0x28,%rsp
   10a79:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   10a80:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   10a84:	48 8d 05 35 f7 00 00 	lea    0xf735(%rip),%rax        # 201c0 <_tinystm>
   10a8b:	48 01 c5             	add    %rax,%rbp
   10a8e:	48 8b 45 00          	mov    0x0(%rbp),%rax
   10a92:	a8 01                	test   $0x1,%al
   10a94:	0f 85 96 00 00 00    	jne    10b30 <stm_load_u8+0xe0>
   10a9a:	4d 8b 2f             	mov    (%r15),%r13
   10a9d:	4c 8b 55 00          	mov    0x0(%rbp),%r10
   10aa1:	4c 39 d0             	cmp    %r10,%rax
   10aa4:	0f 85 de 00 00 00    	jne    10b88 <stm_load_u8+0x138>
   10aaa:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   10ab1:	00 0f 
   10ab3:	75 5c                	jne    10b11 <stm_load_u8+0xc1>
   10ab5:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   10abc:	00 00 
   10abe:	4d 89 d6             	mov    %r10,%r14
   10ac1:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   10ac8:	00 
   10ac9:	49 c1 ee 04          	shr    $0x4,%r14
   10acd:	83 e0 01             	and    $0x1,%eax
   10ad0:	4d 39 c6             	cmp    %r8,%r14
   10ad3:	0f 87 b7 00 00 00    	ja     10b90 <stm_load_u8+0x140>
   10ad9:	84 c0                	test   %al,%al
   10adb:	75 34                	jne    10b11 <stm_load_u8+0xc1>
   10add:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   10ae4:	00 
   10ae5:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
   10aec:	00 
   10aed:	0f 84 fd 00 00 00    	je     10bf0 <stm_load_u8+0x1a0>
   10af3:	8d 50 01             	lea    0x1(%rax),%edx
   10af6:	48 c1 e0 04          	shl    $0x4,%rax
   10afa:	49 03 84 24 e8 00 00 	add    0xe8(%r12),%rax
   10b01:	00 
   10b02:	41 89 94 24 f0 00 00 	mov    %edx,0xf0(%r12)
   10b09:	00 
   10b0a:	4c 89 30             	mov    %r14,(%rax)
   10b0d:	48 89 68 08          	mov    %rbp,0x8(%rax)
   10b11:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   10b16:	83 e3 07             	and    $0x7,%ebx
   10b19:	0f b6 44 1c 18       	movzbl 0x18(%rsp,%rbx,1),%eax
   10b1e:	48 83 c4 28          	add    $0x28,%rsp
   10b22:	5b                   	pop    %rbx
   10b23:	5d                   	pop    %rbp
   10b24:	41 5c                	pop    %r12
   10b26:	41 5d                	pop    %r13
   10b28:	41 5e                	pop    %r14
   10b2a:	41 5f                	pop    %r15
   10b2c:	c3                   	retq   
   10b2d:	0f 1f 00             	nopl   (%rax)
   10b30:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   10b37:	00 
   10b38:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   10b3c:	48 39 d0             	cmp    %rdx,%rax
   10b3f:	0f 82 7b 01 00 00    	jb     10cc0 <stm_load_u8+0x270>
   10b45:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   10b4c:	00 
   10b4d:	48 c1 e1 06          	shl    $0x6,%rcx
   10b51:	48 01 ca             	add    %rcx,%rdx
   10b54:	48 39 d0             	cmp    %rdx,%rax
   10b57:	72 14                	jb     10b6d <stm_load_u8+0x11d>
   10b59:	e9 62 01 00 00       	jmpq   10cc0 <stm_load_u8+0x270>
   10b5e:	66 90                	xchg   %ax,%ax
   10b60:	48 8b 40 30          	mov    0x30(%rax),%rax
   10b64:	48 85 c0             	test   %rax,%rax
   10b67:	0f 84 9b 00 00 00    	je     10c08 <stm_load_u8+0x1b8>
   10b6d:	4c 3b 38             	cmp    (%rax),%r15
   10b70:	75 ee                	jne    10b60 <stm_load_u8+0x110>
   10b72:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   10b77:	0f 84 8b 00 00 00    	je     10c08 <stm_load_u8+0x1b8>
   10b7d:	4c 8b 68 08          	mov    0x8(%rax),%r13
   10b81:	eb 8e                	jmp    10b11 <stm_load_u8+0xc1>
   10b83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10b88:	4c 89 d0             	mov    %r10,%rax
   10b8b:	e9 02 ff ff ff       	jmpq   10a92 <stm_load_u8+0x42>
   10b90:	4c 89 14 24          	mov    %r10,(%rsp)
   10b94:	84 c0                	test   %al,%al
   10b96:	75 3e                	jne    10bd6 <stm_load_u8+0x186>
   10b98:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   10b9f:	00 
   10ba0:	4c 89 e2             	mov    %r12,%rdx
   10ba3:	48 8d 35 b6 98 00 00 	lea    0x98b6(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   10baa:	bf 01 00 00 00       	mov    $0x1,%edi
   10baf:	e8 dc 18 ff ff       	callq  2490 <__printf_chk@plt>
   10bb4:	31 ff                	xor    %edi,%edi
   10bb6:	e8 a5 18 ff ff       	callq  2460 <fflush@plt>
   10bbb:	4c 8b 1d 7e f6 80 00 	mov    0x80f67e(%rip),%r11        # 820240 <_tinystm+0x800080>
   10bc2:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
   10bc9:	ff ff 0f 
   10bcc:	4d 39 cb             	cmp    %r9,%r11
   10bcf:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   10bd4:	76 3a                	jbe    10c10 <stm_load_u8+0x1c0>
   10bd6:	be 40 05 00 00       	mov    $0x540,%esi
   10bdb:	4c 89 e7             	mov    %r12,%rdi
   10bde:	e8 1d fc ff ff       	callq  10800 <stm_rollback>
   10be3:	45 31 ed             	xor    %r13d,%r13d
   10be6:	e9 26 ff ff ff       	jmpq   10b11 <stm_load_u8+0xc1>
   10beb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10bf0:	4c 89 e7             	mov    %r12,%rdi
   10bf3:	e8 78 fa ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   10bf8:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   10bff:	00 
   10c00:	e9 ee fe ff ff       	jmpq   10af3 <stm_load_u8+0xa3>
   10c05:	0f 1f 00             	nopl   (%rax)
   10c08:	4d 8b 2f             	mov    (%r15),%r13
   10c0b:	e9 01 ff ff ff       	jmpq   10b11 <stm_load_u8+0xc1>
   10c10:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   10c17:	00 
   10c18:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   10c1f:	00 
   10c20:	4c 89 e2             	mov    %r12,%rdx
   10c23:	48 8d 35 9e 97 00 00 	lea    0x979e(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   10c2a:	bf 01 00 00 00       	mov    $0x1,%edi
   10c2f:	31 c0                	xor    %eax,%eax
   10c31:	e8 5a 18 ff ff       	callq  2490 <__printf_chk@plt>
   10c36:	31 ff                	xor    %edi,%edi
   10c38:	e8 23 18 ff ff       	callq  2460 <fflush@plt>
   10c3d:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   10c44:	00 
   10c45:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   10c4c:	00 
   10c4d:	85 c0                	test   %eax,%eax
   10c4f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   10c54:	4c 8b 14 24          	mov    (%rsp),%r10
   10c58:	0f 8e c2 00 00 00    	jle    10d20 <stm_load_u8+0x2d0>
   10c5e:	8d 70 ff             	lea    -0x1(%rax),%esi
   10c61:	48 ff c6             	inc    %rsi
   10c64:	48 c1 e6 04          	shl    $0x4,%rsi
   10c68:	48 01 d6             	add    %rdx,%rsi
   10c6b:	eb 35                	jmp    10ca2 <stm_load_u8+0x252>
   10c6d:	0f 1f 00             	nopl   (%rax)
   10c70:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   10c77:	00 
   10c78:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   10c7c:	48 39 c8             	cmp    %rcx,%rax
   10c7f:	72 7f                	jb     10d00 <stm_load_u8+0x2b0>
   10c81:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   10c88:	00 
   10c89:	48 c1 e7 06          	shl    $0x6,%rdi
   10c8d:	48 01 f9             	add    %rdi,%rcx
   10c90:	48 39 c8             	cmp    %rcx,%rax
   10c93:	73 6b                	jae    10d00 <stm_load_u8+0x2b0>
   10c95:	48 83 c2 10          	add    $0x10,%rdx
   10c99:	48 39 d6             	cmp    %rdx,%rsi
   10c9c:	0f 84 7e 00 00 00    	je     10d20 <stm_load_u8+0x2d0>
   10ca2:	48 8b 42 08          	mov    0x8(%rdx),%rax
   10ca6:	48 8b 00             	mov    (%rax),%rax
   10ca9:	a8 01                	test   $0x1,%al
   10cab:	75 c3                	jne    10c70 <stm_load_u8+0x220>
   10cad:	48 c1 e8 04          	shr    $0x4,%rax
   10cb1:	48 3b 02             	cmp    (%rdx),%rax
   10cb4:	74 df                	je     10c95 <stm_load_u8+0x245>
   10cb6:	e9 1b ff ff ff       	jmpq   10bd6 <stm_load_u8+0x186>
   10cbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10cc0:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   10cc7:	00 0f 
   10cc9:	0f 85 bf fd ff ff    	jne    10a8e <stm_load_u8+0x3e>
   10ccf:	48 8b 15 3a fa 80 00 	mov    0x80fa3a(%rip),%rdx        # 820710 <_tinystm+0x800550>
   10cd6:	48 85 d2             	test   %rdx,%rdx
   10cd9:	74 09                	je     10ce4 <stm_load_u8+0x294>
   10cdb:	48 8b 70 28          	mov    0x28(%rax),%rsi
   10cdf:	4c 89 e7             	mov    %r12,%rdi
   10ce2:	ff d2                	callq  *%rdx
   10ce4:	be 40 02 00 00       	mov    $0x240,%esi
   10ce9:	4c 89 e7             	mov    %r12,%rdi
   10cec:	e8 0f fb ff ff       	callq  10800 <stm_rollback>
   10cf1:	45 31 ed             	xor    %r13d,%r13d
   10cf4:	e9 18 fe ff ff       	jmpq   10b11 <stm_load_u8+0xc1>
   10cf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10d00:	48 8b 15 09 fa 80 00 	mov    0x80fa09(%rip),%rdx        # 820710 <_tinystm+0x800550>
   10d07:	48 85 d2             	test   %rdx,%rdx
   10d0a:	0f 84 c6 fe ff ff    	je     10bd6 <stm_load_u8+0x186>
   10d10:	48 8b 70 28          	mov    0x28(%rax),%rsi
   10d14:	4c 89 e7             	mov    %r12,%rdi
   10d17:	ff d2                	callq  *%rdx
   10d19:	e9 b8 fe ff ff       	jmpq   10bd6 <stm_load_u8+0x186>
   10d1e:	66 90                	xchg   %ax,%ax
   10d20:	4d 89 9c 24 e0 00 00 	mov    %r11,0xe0(%r12)
   10d27:	00 
   10d28:	48 8b 45 00          	mov    0x0(%rbp),%rax
   10d2c:	49 39 c2             	cmp    %rax,%r10
   10d2f:	0f 85 5d fd ff ff    	jne    10a92 <stm_load_u8+0x42>
   10d35:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   10d3c:	00 00 
   10d3e:	83 e0 01             	and    $0x1,%eax
   10d41:	e9 93 fd ff ff       	jmpq   10ad9 <stm_load_u8+0x89>
   10d46:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   10d4d:	00 00 00 

0000000000010d50 <stm_load_char>:
   10d50:	f3 0f 1e fa          	endbr64 
   10d54:	41 57                	push   %r15
   10d56:	49 89 ff             	mov    %rdi,%r15
   10d59:	49 83 e7 f8          	and    $0xfffffffffffffff8,%r15
   10d5d:	41 56                	push   %r14
   10d5f:	41 55                	push   %r13
   10d61:	41 54                	push   %r12
   10d63:	55                   	push   %rbp
   10d64:	48 89 fd             	mov    %rdi,%rbp
   10d67:	48 c1 ed 02          	shr    $0x2,%rbp
   10d6b:	53                   	push   %rbx
   10d6c:	81 e5 f8 ff 7f 00    	and    $0x7ffff8,%ebp
   10d72:	48 89 fb             	mov    %rdi,%rbx
   10d75:	48 83 ec 28          	sub    $0x28,%rsp
   10d79:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   10d80:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   10d84:	48 8d 05 35 f4 00 00 	lea    0xf435(%rip),%rax        # 201c0 <_tinystm>
   10d8b:	48 01 c5             	add    %rax,%rbp
   10d8e:	48 8b 45 00          	mov    0x0(%rbp),%rax
   10d92:	a8 01                	test   $0x1,%al
   10d94:	0f 85 96 00 00 00    	jne    10e30 <stm_load_char+0xe0>
   10d9a:	4d 8b 2f             	mov    (%r15),%r13
   10d9d:	4c 8b 55 00          	mov    0x0(%rbp),%r10
   10da1:	4c 39 d0             	cmp    %r10,%rax
   10da4:	0f 85 de 00 00 00    	jne    10e88 <stm_load_char+0x138>
   10daa:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   10db1:	00 0f 
   10db3:	75 5c                	jne    10e11 <stm_load_char+0xc1>
   10db5:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   10dbc:	00 00 
   10dbe:	4d 89 d6             	mov    %r10,%r14
   10dc1:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   10dc8:	00 
   10dc9:	49 c1 ee 04          	shr    $0x4,%r14
   10dcd:	83 e0 01             	and    $0x1,%eax
   10dd0:	4d 39 c6             	cmp    %r8,%r14
   10dd3:	0f 87 b7 00 00 00    	ja     10e90 <stm_load_char+0x140>
   10dd9:	84 c0                	test   %al,%al
   10ddb:	75 34                	jne    10e11 <stm_load_char+0xc1>
   10ddd:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   10de4:	00 
   10de5:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
   10dec:	00 
   10ded:	0f 84 fd 00 00 00    	je     10ef0 <stm_load_char+0x1a0>
   10df3:	8d 50 01             	lea    0x1(%rax),%edx
   10df6:	48 c1 e0 04          	shl    $0x4,%rax
   10dfa:	49 03 84 24 e8 00 00 	add    0xe8(%r12),%rax
   10e01:	00 
   10e02:	41 89 94 24 f0 00 00 	mov    %edx,0xf0(%r12)
   10e09:	00 
   10e0a:	4c 89 30             	mov    %r14,(%rax)
   10e0d:	48 89 68 08          	mov    %rbp,0x8(%rax)
   10e11:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   10e16:	83 e3 07             	and    $0x7,%ebx
   10e19:	0f b6 44 1c 18       	movzbl 0x18(%rsp,%rbx,1),%eax
   10e1e:	48 83 c4 28          	add    $0x28,%rsp
   10e22:	5b                   	pop    %rbx
   10e23:	5d                   	pop    %rbp
   10e24:	41 5c                	pop    %r12
   10e26:	41 5d                	pop    %r13
   10e28:	41 5e                	pop    %r14
   10e2a:	41 5f                	pop    %r15
   10e2c:	c3                   	retq   
   10e2d:	0f 1f 00             	nopl   (%rax)
   10e30:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   10e37:	00 
   10e38:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   10e3c:	48 39 d0             	cmp    %rdx,%rax
   10e3f:	0f 82 7b 01 00 00    	jb     10fc0 <stm_load_char+0x270>
   10e45:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   10e4c:	00 
   10e4d:	48 c1 e1 06          	shl    $0x6,%rcx
   10e51:	48 01 ca             	add    %rcx,%rdx
   10e54:	48 39 d0             	cmp    %rdx,%rax
   10e57:	72 14                	jb     10e6d <stm_load_char+0x11d>
   10e59:	e9 62 01 00 00       	jmpq   10fc0 <stm_load_char+0x270>
   10e5e:	66 90                	xchg   %ax,%ax
   10e60:	48 8b 40 30          	mov    0x30(%rax),%rax
   10e64:	48 85 c0             	test   %rax,%rax
   10e67:	0f 84 9b 00 00 00    	je     10f08 <stm_load_char+0x1b8>
   10e6d:	4c 3b 38             	cmp    (%rax),%r15
   10e70:	75 ee                	jne    10e60 <stm_load_char+0x110>
   10e72:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   10e77:	0f 84 8b 00 00 00    	je     10f08 <stm_load_char+0x1b8>
   10e7d:	4c 8b 68 08          	mov    0x8(%rax),%r13
   10e81:	eb 8e                	jmp    10e11 <stm_load_char+0xc1>
   10e83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10e88:	4c 89 d0             	mov    %r10,%rax
   10e8b:	e9 02 ff ff ff       	jmpq   10d92 <stm_load_char+0x42>
   10e90:	4c 89 14 24          	mov    %r10,(%rsp)
   10e94:	84 c0                	test   %al,%al
   10e96:	75 3e                	jne    10ed6 <stm_load_char+0x186>
   10e98:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   10e9f:	00 
   10ea0:	4c 89 e2             	mov    %r12,%rdx
   10ea3:	48 8d 35 b6 95 00 00 	lea    0x95b6(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   10eaa:	bf 01 00 00 00       	mov    $0x1,%edi
   10eaf:	e8 dc 15 ff ff       	callq  2490 <__printf_chk@plt>
   10eb4:	31 ff                	xor    %edi,%edi
   10eb6:	e8 a5 15 ff ff       	callq  2460 <fflush@plt>
   10ebb:	4c 8b 1d 7e f3 80 00 	mov    0x80f37e(%rip),%r11        # 820240 <_tinystm+0x800080>
   10ec2:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
   10ec9:	ff ff 0f 
   10ecc:	4d 39 cb             	cmp    %r9,%r11
   10ecf:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   10ed4:	76 3a                	jbe    10f10 <stm_load_char+0x1c0>
   10ed6:	be 40 05 00 00       	mov    $0x540,%esi
   10edb:	4c 89 e7             	mov    %r12,%rdi
   10ede:	e8 1d f9 ff ff       	callq  10800 <stm_rollback>
   10ee3:	45 31 ed             	xor    %r13d,%r13d
   10ee6:	e9 26 ff ff ff       	jmpq   10e11 <stm_load_char+0xc1>
   10eeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10ef0:	4c 89 e7             	mov    %r12,%rdi
   10ef3:	e8 78 f7 ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   10ef8:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   10eff:	00 
   10f00:	e9 ee fe ff ff       	jmpq   10df3 <stm_load_char+0xa3>
   10f05:	0f 1f 00             	nopl   (%rax)
   10f08:	4d 8b 2f             	mov    (%r15),%r13
   10f0b:	e9 01 ff ff ff       	jmpq   10e11 <stm_load_char+0xc1>
   10f10:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   10f17:	00 
   10f18:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   10f1f:	00 
   10f20:	4c 89 e2             	mov    %r12,%rdx
   10f23:	48 8d 35 9e 94 00 00 	lea    0x949e(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   10f2a:	bf 01 00 00 00       	mov    $0x1,%edi
   10f2f:	31 c0                	xor    %eax,%eax
   10f31:	e8 5a 15 ff ff       	callq  2490 <__printf_chk@plt>
   10f36:	31 ff                	xor    %edi,%edi
   10f38:	e8 23 15 ff ff       	callq  2460 <fflush@plt>
   10f3d:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   10f44:	00 
   10f45:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   10f4c:	00 
   10f4d:	85 c0                	test   %eax,%eax
   10f4f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   10f54:	4c 8b 14 24          	mov    (%rsp),%r10
   10f58:	0f 8e c2 00 00 00    	jle    11020 <stm_load_char+0x2d0>
   10f5e:	8d 70 ff             	lea    -0x1(%rax),%esi
   10f61:	48 ff c6             	inc    %rsi
   10f64:	48 c1 e6 04          	shl    $0x4,%rsi
   10f68:	48 01 d6             	add    %rdx,%rsi
   10f6b:	eb 35                	jmp    10fa2 <stm_load_char+0x252>
   10f6d:	0f 1f 00             	nopl   (%rax)
   10f70:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   10f77:	00 
   10f78:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   10f7c:	48 39 c8             	cmp    %rcx,%rax
   10f7f:	72 7f                	jb     11000 <stm_load_char+0x2b0>
   10f81:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   10f88:	00 
   10f89:	48 c1 e7 06          	shl    $0x6,%rdi
   10f8d:	48 01 f9             	add    %rdi,%rcx
   10f90:	48 39 c8             	cmp    %rcx,%rax
   10f93:	73 6b                	jae    11000 <stm_load_char+0x2b0>
   10f95:	48 83 c2 10          	add    $0x10,%rdx
   10f99:	48 39 d6             	cmp    %rdx,%rsi
   10f9c:	0f 84 7e 00 00 00    	je     11020 <stm_load_char+0x2d0>
   10fa2:	48 8b 42 08          	mov    0x8(%rdx),%rax
   10fa6:	48 8b 00             	mov    (%rax),%rax
   10fa9:	a8 01                	test   $0x1,%al
   10fab:	75 c3                	jne    10f70 <stm_load_char+0x220>
   10fad:	48 c1 e8 04          	shr    $0x4,%rax
   10fb1:	48 3b 02             	cmp    (%rdx),%rax
   10fb4:	74 df                	je     10f95 <stm_load_char+0x245>
   10fb6:	e9 1b ff ff ff       	jmpq   10ed6 <stm_load_char+0x186>
   10fbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10fc0:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   10fc7:	00 0f 
   10fc9:	0f 85 bf fd ff ff    	jne    10d8e <stm_load_char+0x3e>
   10fcf:	48 8b 15 3a f7 80 00 	mov    0x80f73a(%rip),%rdx        # 820710 <_tinystm+0x800550>
   10fd6:	48 85 d2             	test   %rdx,%rdx
   10fd9:	74 09                	je     10fe4 <stm_load_char+0x294>
   10fdb:	48 8b 70 28          	mov    0x28(%rax),%rsi
   10fdf:	4c 89 e7             	mov    %r12,%rdi
   10fe2:	ff d2                	callq  *%rdx
   10fe4:	be 40 02 00 00       	mov    $0x240,%esi
   10fe9:	4c 89 e7             	mov    %r12,%rdi
   10fec:	e8 0f f8 ff ff       	callq  10800 <stm_rollback>
   10ff1:	45 31 ed             	xor    %r13d,%r13d
   10ff4:	e9 18 fe ff ff       	jmpq   10e11 <stm_load_char+0xc1>
   10ff9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11000:	48 8b 15 09 f7 80 00 	mov    0x80f709(%rip),%rdx        # 820710 <_tinystm+0x800550>
   11007:	48 85 d2             	test   %rdx,%rdx
   1100a:	0f 84 c6 fe ff ff    	je     10ed6 <stm_load_char+0x186>
   11010:	48 8b 70 28          	mov    0x28(%rax),%rsi
   11014:	4c 89 e7             	mov    %r12,%rdi
   11017:	ff d2                	callq  *%rdx
   11019:	e9 b8 fe ff ff       	jmpq   10ed6 <stm_load_char+0x186>
   1101e:	66 90                	xchg   %ax,%ax
   11020:	4d 89 9c 24 e0 00 00 	mov    %r11,0xe0(%r12)
   11027:	00 
   11028:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1102c:	49 39 c2             	cmp    %rax,%r10
   1102f:	0f 85 5d fd ff ff    	jne    10d92 <stm_load_char+0x42>
   11035:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   1103c:	00 00 
   1103e:	83 e0 01             	and    $0x1,%eax
   11041:	e9 93 fd ff ff       	jmpq   10dd9 <stm_load_char+0x89>
   11046:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1104d:	00 00 00 

0000000000011050 <stm_load_uchar>:
   11050:	f3 0f 1e fa          	endbr64 
   11054:	e9 f7 f9 ff ff       	jmpq   10a50 <stm_load_u8>
   11059:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000011060 <stm_load_ptr>:
   11060:	f3 0f 1e fa          	endbr64 
   11064:	41 57                	push   %r15
   11066:	49 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%r15
   1106d:	ff ff 0f 
   11070:	41 56                	push   %r14
   11072:	41 55                	push   %r13
   11074:	41 54                	push   %r12
   11076:	55                   	push   %rbp
   11077:	48 89 fd             	mov    %rdi,%rbp
   1107a:	53                   	push   %rbx
   1107b:	48 89 fb             	mov    %rdi,%rbx
   1107e:	48 c1 eb 02          	shr    $0x2,%rbx
   11082:	48 83 ec 18          	sub    $0x18,%rsp
   11086:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   1108d:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   11093:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   11097:	48 8d 05 22 f1 00 00 	lea    0xf122(%rip),%rax        # 201c0 <_tinystm>
   1109e:	48 01 c3             	add    %rax,%rbx
   110a1:	48 8b 03             	mov    (%rbx),%rax
   110a4:	a8 01                	test   $0x1,%al
   110a6:	0f 85 94 00 00 00    	jne    11140 <stm_load_ptr+0xe0>
   110ac:	4c 8b 75 00          	mov    0x0(%rbp),%r14
   110b0:	4c 8b 0b             	mov    (%rbx),%r9
   110b3:	4c 39 c8             	cmp    %r9,%rax
   110b6:	0f 85 dc 00 00 00    	jne    11198 <stm_load_ptr+0x138>
   110bc:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   110c3:	00 0f 
   110c5:	0f 85 d5 00 00 00    	jne    111a0 <stm_load_ptr+0x140>
   110cb:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
   110d2:	00 00 
   110d4:	4d 89 cd             	mov    %r9,%r13
   110d7:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   110de:	00 
   110df:	49 c1 ed 04          	shr    $0x4,%r13
   110e3:	83 e2 01             	and    $0x1,%edx
   110e6:	4d 39 c5             	cmp    %r8,%r13
   110e9:	0f 87 b9 00 00 00    	ja     111a8 <stm_load_ptr+0x148>
   110ef:	4c 89 f0             	mov    %r14,%rax
   110f2:	84 d2                	test   %dl,%dl
   110f4:	75 34                	jne    1112a <stm_load_ptr+0xca>
   110f6:	41 8b 94 24 f0 00 00 	mov    0xf0(%r12),%edx
   110fd:	00 
   110fe:	41 3b 94 24 f4 00 00 	cmp    0xf4(%r12),%edx
   11105:	00 
   11106:	0f 84 f4 00 00 00    	je     11200 <stm_load_ptr+0x1a0>
   1110c:	8d 4a 01             	lea    0x1(%rdx),%ecx
   1110f:	48 c1 e2 04          	shl    $0x4,%rdx
   11113:	49 03 94 24 e8 00 00 	add    0xe8(%r12),%rdx
   1111a:	00 
   1111b:	41 89 8c 24 f0 00 00 	mov    %ecx,0xf0(%r12)
   11122:	00 
   11123:	4c 89 2a             	mov    %r13,(%rdx)
   11126:	48 89 5a 08          	mov    %rbx,0x8(%rdx)
   1112a:	48 83 c4 18          	add    $0x18,%rsp
   1112e:	5b                   	pop    %rbx
   1112f:	5d                   	pop    %rbp
   11130:	41 5c                	pop    %r12
   11132:	41 5d                	pop    %r13
   11134:	41 5e                	pop    %r14
   11136:	41 5f                	pop    %r15
   11138:	c3                   	retq   
   11139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11140:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   11147:	00 
   11148:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1114c:	48 39 d0             	cmp    %rdx,%rax
   1114f:	0f 82 8b 01 00 00    	jb     112e0 <stm_load_ptr+0x280>
   11155:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   1115c:	00 
   1115d:	48 c1 e1 06          	shl    $0x6,%rcx
   11161:	48 01 ca             	add    %rcx,%rdx
   11164:	48 39 d0             	cmp    %rdx,%rax
   11167:	72 14                	jb     1117d <stm_load_ptr+0x11d>
   11169:	e9 72 01 00 00       	jmpq   112e0 <stm_load_ptr+0x280>
   1116e:	66 90                	xchg   %ax,%ax
   11170:	48 8b 40 30          	mov    0x30(%rax),%rax
   11174:	48 85 c0             	test   %rax,%rax
   11177:	0f 84 a3 00 00 00    	je     11220 <stm_load_ptr+0x1c0>
   1117d:	48 3b 28             	cmp    (%rax),%rbp
   11180:	75 ee                	jne    11170 <stm_load_ptr+0x110>
   11182:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   11187:	0f 84 93 00 00 00    	je     11220 <stm_load_ptr+0x1c0>
   1118d:	48 8b 40 08          	mov    0x8(%rax),%rax
   11191:	eb 97                	jmp    1112a <stm_load_ptr+0xca>
   11193:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11198:	4c 89 c8             	mov    %r9,%rax
   1119b:	e9 04 ff ff ff       	jmpq   110a4 <stm_load_ptr+0x44>
   111a0:	4c 89 f0             	mov    %r14,%rax
   111a3:	eb 85                	jmp    1112a <stm_load_ptr+0xca>
   111a5:	0f 1f 00             	nopl   (%rax)
   111a8:	4c 89 0c 24          	mov    %r9,(%rsp)
   111ac:	84 d2                	test   %dl,%dl
   111ae:	75 36                	jne    111e6 <stm_load_ptr+0x186>
   111b0:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   111b7:	00 
   111b8:	4c 89 e2             	mov    %r12,%rdx
   111bb:	48 8d 35 9e 92 00 00 	lea    0x929e(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   111c2:	bf 01 00 00 00       	mov    $0x1,%edi
   111c7:	31 c0                	xor    %eax,%eax
   111c9:	e8 c2 12 ff ff       	callq  2490 <__printf_chk@plt>
   111ce:	31 ff                	xor    %edi,%edi
   111d0:	e8 8b 12 ff ff       	callq  2460 <fflush@plt>
   111d5:	4c 8b 15 64 f0 80 00 	mov    0x80f064(%rip),%r10        # 820240 <_tinystm+0x800080>
   111dc:	4d 39 fa             	cmp    %r15,%r10
   111df:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   111e4:	76 4a                	jbe    11230 <stm_load_ptr+0x1d0>
   111e6:	be 40 05 00 00       	mov    $0x540,%esi
   111eb:	4c 89 e7             	mov    %r12,%rdi
   111ee:	e8 0d f6 ff ff       	callq  10800 <stm_rollback>
   111f3:	31 c0                	xor    %eax,%eax
   111f5:	e9 30 ff ff ff       	jmpq   1112a <stm_load_ptr+0xca>
   111fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11200:	4c 89 e7             	mov    %r12,%rdi
   11203:	4c 89 34 24          	mov    %r14,(%rsp)
   11207:	e8 64 f4 ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   1120c:	41 8b 94 24 f0 00 00 	mov    0xf0(%r12),%edx
   11213:	00 
   11214:	48 8b 04 24          	mov    (%rsp),%rax
   11218:	e9 ef fe ff ff       	jmpq   1110c <stm_load_ptr+0xac>
   1121d:	0f 1f 00             	nopl   (%rax)
   11220:	48 8b 45 00          	mov    0x0(%rbp),%rax
   11224:	e9 01 ff ff ff       	jmpq   1112a <stm_load_ptr+0xca>
   11229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11230:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   11237:	00 
   11238:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   1123f:	00 
   11240:	4c 89 e2             	mov    %r12,%rdx
   11243:	48 8d 35 7e 91 00 00 	lea    0x917e(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   1124a:	bf 01 00 00 00       	mov    $0x1,%edi
   1124f:	31 c0                	xor    %eax,%eax
   11251:	e8 3a 12 ff ff       	callq  2490 <__printf_chk@plt>
   11256:	31 ff                	xor    %edi,%edi
   11258:	e8 03 12 ff ff       	callq  2460 <fflush@plt>
   1125d:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   11264:	00 
   11265:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   1126c:	00 
   1126d:	85 c0                	test   %eax,%eax
   1126f:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   11274:	4c 8b 0c 24          	mov    (%rsp),%r9
   11278:	0f 8e c2 00 00 00    	jle    11340 <stm_load_ptr+0x2e0>
   1127e:	8d 70 ff             	lea    -0x1(%rax),%esi
   11281:	48 ff c6             	inc    %rsi
   11284:	48 c1 e6 04          	shl    $0x4,%rsi
   11288:	48 01 d6             	add    %rdx,%rsi
   1128b:	eb 35                	jmp    112c2 <stm_load_ptr+0x262>
   1128d:	0f 1f 00             	nopl   (%rax)
   11290:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   11297:	00 
   11298:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1129c:	48 39 c8             	cmp    %rcx,%rax
   1129f:	72 7f                	jb     11320 <stm_load_ptr+0x2c0>
   112a1:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   112a8:	00 
   112a9:	48 c1 e7 06          	shl    $0x6,%rdi
   112ad:	48 01 f9             	add    %rdi,%rcx
   112b0:	48 39 c8             	cmp    %rcx,%rax
   112b3:	73 6b                	jae    11320 <stm_load_ptr+0x2c0>
   112b5:	48 83 c2 10          	add    $0x10,%rdx
   112b9:	48 39 f2             	cmp    %rsi,%rdx
   112bc:	0f 84 7e 00 00 00    	je     11340 <stm_load_ptr+0x2e0>
   112c2:	48 8b 42 08          	mov    0x8(%rdx),%rax
   112c6:	48 8b 00             	mov    (%rax),%rax
   112c9:	a8 01                	test   $0x1,%al
   112cb:	75 c3                	jne    11290 <stm_load_ptr+0x230>
   112cd:	48 c1 e8 04          	shr    $0x4,%rax
   112d1:	48 3b 02             	cmp    (%rdx),%rax
   112d4:	74 df                	je     112b5 <stm_load_ptr+0x255>
   112d6:	e9 0b ff ff ff       	jmpq   111e6 <stm_load_ptr+0x186>
   112db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   112e0:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   112e7:	00 0f 
   112e9:	0f 85 b2 fd ff ff    	jne    110a1 <stm_load_ptr+0x41>
   112ef:	48 8b 15 1a f4 80 00 	mov    0x80f41a(%rip),%rdx        # 820710 <_tinystm+0x800550>
   112f6:	48 85 d2             	test   %rdx,%rdx
   112f9:	74 09                	je     11304 <stm_load_ptr+0x2a4>
   112fb:	48 8b 70 28          	mov    0x28(%rax),%rsi
   112ff:	4c 89 e7             	mov    %r12,%rdi
   11302:	ff d2                	callq  *%rdx
   11304:	be 40 02 00 00       	mov    $0x240,%esi
   11309:	4c 89 e7             	mov    %r12,%rdi
   1130c:	e8 ef f4 ff ff       	callq  10800 <stm_rollback>
   11311:	31 c0                	xor    %eax,%eax
   11313:	e9 12 fe ff ff       	jmpq   1112a <stm_load_ptr+0xca>
   11318:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1131f:	00 
   11320:	48 8b 15 e9 f3 80 00 	mov    0x80f3e9(%rip),%rdx        # 820710 <_tinystm+0x800550>
   11327:	48 85 d2             	test   %rdx,%rdx
   1132a:	0f 84 b6 fe ff ff    	je     111e6 <stm_load_ptr+0x186>
   11330:	48 8b 70 28          	mov    0x28(%rax),%rsi
   11334:	4c 89 e7             	mov    %r12,%rdi
   11337:	ff d2                	callq  *%rdx
   11339:	e9 a8 fe ff ff       	jmpq   111e6 <stm_load_ptr+0x186>
   1133e:	66 90                	xchg   %ax,%ax
   11340:	4d 89 94 24 e0 00 00 	mov    %r10,0xe0(%r12)
   11347:	00 
   11348:	48 8b 03             	mov    (%rbx),%rax
   1134b:	49 39 c1             	cmp    %rax,%r9
   1134e:	0f 85 50 fd ff ff    	jne    110a4 <stm_load_ptr+0x44>
   11354:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
   1135b:	00 00 
   1135d:	83 e2 01             	and    $0x1,%edx
   11360:	e9 8a fd ff ff       	jmpq   110ef <stm_load_ptr+0x8f>
   11365:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1136c:	00 00 00 00 

0000000000011370 <stm_load_bytes>:
   11370:	f3 0f 1e fa          	endbr64 
   11374:	41 57                	push   %r15
   11376:	41 56                	push   %r14
   11378:	41 55                	push   %r13
   1137a:	41 54                	push   %r12
   1137c:	55                   	push   %rbp
   1137d:	53                   	push   %rbx
   1137e:	48 83 ec 58          	sub    $0x58,%rsp
   11382:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   11387:	48 85 d2             	test   %rdx,%rdx
   1138a:	0f 84 c8 01 00 00    	je     11558 <stm_load_bytes+0x1e8>
   11390:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   11397:	89 fb                	mov    %edi,%ebx
   11399:	49 89 d5             	mov    %rdx,%r13
   1139c:	48 89 f5             	mov    %rsi,%rbp
   1139f:	64 48 8b 10          	mov    %fs:(%rax),%rdx
   113a3:	83 e3 07             	and    $0x7,%ebx
   113a6:	0f 85 c4 01 00 00    	jne    11570 <stm_load_bytes+0x200>
   113ac:	4c 8d 1d 0d ee 00 00 	lea    0xee0d(%rip),%r11        # 201c0 <_tinystm>
   113b3:	49 89 f2             	mov    %rsi,%r10
   113b6:	49 83 fd 07          	cmp    $0x7,%r13
   113ba:	0f 86 7c 02 00 00    	jbe    1163c <stm_load_bytes+0x2cc>
   113c0:	49 8d 45 f8          	lea    -0x8(%r13),%rax
   113c4:	48 c1 e8 03          	shr    $0x3,%rax
   113c8:	48 8d 04 c5 08 00 00 	lea    0x8(,%rax,8),%rax
   113cf:	00 
   113d0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
   113d5:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   113da:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
   113df:	4c 8d 54 05 00       	lea    0x0(%rbp,%rax,1),%r10
   113e4:	e9 87 00 00 00       	jmpq   11470 <stm_load_bytes+0x100>
   113e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   113f0:	4d 8b 34 24          	mov    (%r12),%r14
   113f4:	4c 8b 2b             	mov    (%rbx),%r13
   113f7:	4c 39 e8             	cmp    %r13,%rax
   113fa:	0f 85 e0 02 00 00    	jne    116e0 <stm_load_bytes+0x370>
   11400:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   11407:	75 52                	jne    1145b <stm_load_bytes+0xeb>
   11409:	0f b6 82 ca 00 00 00 	movzbl 0xca(%rdx),%eax
   11410:	4d 89 ef             	mov    %r13,%r15
   11413:	4c 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%r8
   1141a:	49 c1 ef 04          	shr    $0x4,%r15
   1141e:	83 e0 01             	and    $0x1,%eax
   11421:	4d 39 c7             	cmp    %r8,%r15
   11424:	0f 87 c6 02 00 00    	ja     116f0 <stm_load_bytes+0x380>
   1142a:	84 c0                	test   %al,%al
   1142c:	75 2d                	jne    1145b <stm_load_bytes+0xeb>
   1142e:	8b 82 f0 00 00 00    	mov    0xf0(%rdx),%eax
   11434:	3b 82 f4 00 00 00    	cmp    0xf4(%rdx),%eax
   1143a:	0f 84 00 04 00 00    	je     11840 <stm_load_bytes+0x4d0>
   11440:	8d 48 01             	lea    0x1(%rax),%ecx
   11443:	48 c1 e0 04          	shl    $0x4,%rax
   11447:	48 03 82 e8 00 00 00 	add    0xe8(%rdx),%rax
   1144e:	89 8a f0 00 00 00    	mov    %ecx,0xf0(%rdx)
   11454:	4c 89 38             	mov    %r15,(%rax)
   11457:	48 89 58 08          	mov    %rbx,0x8(%rax)
   1145b:	4c 89 75 00          	mov    %r14,0x0(%rbp)
   1145f:	48 83 c5 08          	add    $0x8,%rbp
   11463:	49 83 c4 08          	add    $0x8,%r12
   11467:	4c 39 d5             	cmp    %r10,%rbp
   1146a:	0f 84 b0 01 00 00    	je     11620 <stm_load_bytes+0x2b0>
   11470:	4c 89 e3             	mov    %r12,%rbx
   11473:	48 c1 eb 02          	shr    $0x2,%rbx
   11477:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   1147d:	4c 01 db             	add    %r11,%rbx
   11480:	48 8b 03             	mov    (%rbx),%rax
   11483:	a8 01                	test   $0x1,%al
   11485:	0f 84 65 ff ff ff    	je     113f0 <stm_load_bytes+0x80>
   1148b:	48 8b 8a f8 00 00 00 	mov    0xf8(%rdx),%rcx
   11492:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   11496:	48 39 c8             	cmp    %rcx,%rax
   11499:	0f 82 21 04 00 00    	jb     118c0 <stm_load_bytes+0x550>
   1149f:	8b b2 00 01 00 00    	mov    0x100(%rdx),%esi
   114a5:	48 c1 e6 06          	shl    $0x6,%rsi
   114a9:	48 01 f1             	add    %rsi,%rcx
   114ac:	48 39 c8             	cmp    %rcx,%rax
   114af:	72 18                	jb     114c9 <stm_load_bytes+0x159>
   114b1:	e9 0a 04 00 00       	jmpq   118c0 <stm_load_bytes+0x550>
   114b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   114bd:	00 00 00 
   114c0:	48 8b 40 30          	mov    0x30(%rax),%rax
   114c4:	48 85 c0             	test   %rax,%rax
   114c7:	74 10                	je     114d9 <stm_load_bytes+0x169>
   114c9:	4c 3b 20             	cmp    (%rax),%r12
   114cc:	75 f2                	jne    114c0 <stm_load_bytes+0x150>
   114ce:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   114d3:	0f 85 9f 03 00 00    	jne    11878 <stm_load_bytes+0x508>
   114d9:	4d 8b 34 24          	mov    (%r12),%r14
   114dd:	e9 79 ff ff ff       	jmpq   1145b <stm_load_bytes+0xeb>
   114e2:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   114e9:	0f 85 69 01 00 00    	jne    11658 <stm_load_bytes+0x2e8>
   114ef:	48 8b 0d 1a f2 80 00 	mov    0x80f21a(%rip),%rcx        # 820710 <_tinystm+0x800550>
   114f6:	48 85 c9             	test   %rcx,%rcx
   114f9:	74 1d                	je     11518 <stm_load_bytes+0x1a8>
   114fb:	48 8b 70 28          	mov    0x28(%rax),%rsi
   114ff:	48 89 d7             	mov    %rdx,%rdi
   11502:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   11507:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1150c:	ff d1                	callq  *%rcx
   1150e:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   11513:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11518:	be 40 02 00 00       	mov    $0x240,%esi
   1151d:	48 89 d7             	mov    %rdx,%rdi
   11520:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   11525:	e8 d6 f2 ff ff       	callq  10800 <stm_rollback>
   1152a:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   1152f:	45 31 e4             	xor    %r12d,%r12d
   11532:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11538:	4c 89 64 24 48       	mov    %r12,0x48(%rsp)
   1153d:	31 c0                	xor    %eax,%eax
   1153f:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
   11544:	0f 1f 40 00          	nopl   0x0(%rax)
   11548:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
   1154c:	41 88 14 02          	mov    %dl,(%r10,%rax,1)
   11550:	48 ff c0             	inc    %rax
   11553:	49 39 c5             	cmp    %rax,%r13
   11556:	75 f0                	jne    11548 <stm_load_bytes+0x1d8>
   11558:	48 83 c4 58          	add    $0x58,%rsp
   1155c:	5b                   	pop    %rbx
   1155d:	5d                   	pop    %rbp
   1155e:	41 5c                	pop    %r12
   11560:	41 5d                	pop    %r13
   11562:	41 5e                	pop    %r14
   11564:	41 5f                	pop    %r15
   11566:	c3                   	retq   
   11567:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1156e:	00 00 
   11570:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   11574:	48 8d 47 08          	lea    0x8(%rdi),%rax
   11578:	49 89 fc             	mov    %rdi,%r12
   1157b:	49 c1 ec 02          	shr    $0x2,%r12
   1157f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   11584:	41 81 e4 f8 ff 7f 00 	and    $0x7ffff8,%r12d
   1158b:	4c 8d 1d 2e ec 00 00 	lea    0xec2e(%rip),%r11        # 201c0 <_tinystm>
   11592:	49 89 fe             	mov    %rdi,%r14
   11595:	4d 01 dc             	add    %r11,%r12
   11598:	49 8b 04 24          	mov    (%r12),%rax
   1159c:	a8 01                	test   $0x1,%al
   1159e:	0f 85 3a 04 00 00    	jne    119de <stm_load_bytes+0x66e>
   115a4:	4d 8b 16             	mov    (%r14),%r10
   115a7:	4d 8b 3c 24          	mov    (%r12),%r15
   115ab:	4c 39 f8             	cmp    %r15,%rax
   115ae:	0f 85 82 04 00 00    	jne    11a36 <stm_load_bytes+0x6c6>
   115b4:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   115bb:	75 29                	jne    115e6 <stm_load_bytes+0x276>
   115bd:	0f b6 82 ca 00 00 00 	movzbl 0xca(%rdx),%eax
   115c4:	4d 89 f9             	mov    %r15,%r9
   115c7:	4c 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%r8
   115ce:	49 c1 e9 04          	shr    $0x4,%r9
   115d2:	83 e0 01             	and    $0x1,%eax
   115d5:	4d 39 c1             	cmp    %r8,%r9
   115d8:	0f 87 68 04 00 00    	ja     11a46 <stm_load_bytes+0x6d6>
   115de:	84 c0                	test   %al,%al
   115e0:	0f 84 a2 02 00 00    	je     11888 <stm_load_bytes+0x518>
   115e6:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
   115eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   115f0:	89 d8                	mov    %ebx,%eax
   115f2:	0f b6 44 04 48       	movzbl 0x48(%rsp,%rax,1),%eax
   115f7:	ff c3                	inc    %ebx
   115f9:	48 ff c5             	inc    %rbp
   115fc:	49 ff cd             	dec    %r13
   115ff:	88 45 ff             	mov    %al,-0x1(%rbp)
   11602:	83 fb 07             	cmp    $0x7,%ebx
   11605:	77 05                	ja     1160c <stm_load_bytes+0x29c>
   11607:	4d 85 ed             	test   %r13,%r13
   1160a:	75 e4                	jne    115f0 <stm_load_bytes+0x280>
   1160c:	49 83 fd 07          	cmp    $0x7,%r13
   11610:	0f 87 aa fd ff ff    	ja     113c0 <stm_load_bytes+0x50>
   11616:	49 89 ea             	mov    %rbp,%r10
   11619:	eb 18                	jmp    11633 <stm_load_bytes+0x2c3>
   1161b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11620:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
   11625:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   1162a:	48 01 74 24 08       	add    %rsi,0x8(%rsp)
   1162f:	41 83 e5 07          	and    $0x7,%r13d
   11633:	4d 85 ed             	test   %r13,%r13
   11636:	0f 84 1c ff ff ff    	je     11558 <stm_load_bytes+0x1e8>
   1163c:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
   11641:	49 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%r15
   11648:	ff ff 0f 
   1164b:	48 c1 eb 02          	shr    $0x2,%rbx
   1164f:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   11655:	4c 01 db             	add    %r11,%rbx
   11658:	48 8b 03             	mov    (%rbx),%rax
   1165b:	a8 01                	test   $0x1,%al
   1165d:	0f 85 1d 03 00 00    	jne    11980 <stm_load_bytes+0x610>
   11663:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
   11668:	4c 8b 26             	mov    (%rsi),%r12
   1166b:	48 8b 2b             	mov    (%rbx),%rbp
   1166e:	48 39 e8             	cmp    %rbp,%rax
   11671:	0f 85 c7 03 00 00    	jne    11a3e <stm_load_bytes+0x6ce>
   11677:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   1167e:	0f 85 b4 fe ff ff    	jne    11538 <stm_load_bytes+0x1c8>
   11684:	0f b6 82 ca 00 00 00 	movzbl 0xca(%rdx),%eax
   1168b:	49 89 ee             	mov    %rbp,%r14
   1168e:	4c 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%r8
   11695:	49 c1 ee 04          	shr    $0x4,%r14
   11699:	83 e0 01             	and    $0x1,%eax
   1169c:	4d 39 c6             	cmp    %r8,%r14
   1169f:	0f 87 e0 04 00 00    	ja     11b85 <stm_load_bytes+0x815>
   116a5:	84 c0                	test   %al,%al
   116a7:	0f 85 8b fe ff ff    	jne    11538 <stm_load_bytes+0x1c8>
   116ad:	8b 82 f0 00 00 00    	mov    0xf0(%rdx),%eax
   116b3:	3b 82 f4 00 00 00    	cmp    0xf4(%rdx),%eax
   116b9:	0f 84 17 06 00 00    	je     11cd6 <stm_load_bytes+0x966>
   116bf:	8d 48 01             	lea    0x1(%rax),%ecx
   116c2:	48 c1 e0 04          	shl    $0x4,%rax
   116c6:	48 03 82 e8 00 00 00 	add    0xe8(%rdx),%rax
   116cd:	89 8a f0 00 00 00    	mov    %ecx,0xf0(%rdx)
   116d3:	4c 89 30             	mov    %r14,(%rax)
   116d6:	48 89 58 08          	mov    %rbx,0x8(%rax)
   116da:	e9 59 fe ff ff       	jmpq   11538 <stm_load_bytes+0x1c8>
   116df:	90                   	nop
   116e0:	4c 89 e8             	mov    %r13,%rax
   116e3:	e9 9b fd ff ff       	jmpq   11483 <stm_load_bytes+0x113>
   116e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   116ef:	00 
   116f0:	84 c0                	test   %al,%al
   116f2:	0f 85 10 01 00 00    	jne    11808 <stm_load_bytes+0x498>
   116f8:	48 8b 8a d8 00 00 00 	mov    0xd8(%rdx),%rcx
   116ff:	48 8d 35 5a 8d 00 00 	lea    0x8d5a(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   11706:	bf 01 00 00 00       	mov    $0x1,%edi
   1170b:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   11710:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   11715:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1171a:	e8 71 0d ff ff       	callq  2490 <__printf_chk@plt>
   1171f:	31 ff                	xor    %edi,%edi
   11721:	e8 3a 0d ff ff       	callq  2460 <fflush@plt>
   11726:	4c 8b 0d 13 eb 80 00 	mov    0x80eb13(%rip),%r9        # 820240 <_tinystm+0x800080>
   1172d:	48 b8 fe df ff ff ff 	movabs $0xfffffffffffdffe,%rax
   11734:	ff ff 0f 
   11737:	49 39 c1             	cmp    %rax,%r9
   1173a:	4c 89 4c 24 38       	mov    %r9,0x38(%rsp)
   1173f:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   11744:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   11749:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1174e:	0f 87 b4 00 00 00    	ja     11808 <stm_load_bytes+0x498>
   11754:	48 8b 8a d8 00 00 00 	mov    0xd8(%rdx),%rcx
   1175b:	4c 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%r8
   11762:	48 8d 35 5f 8c 00 00 	lea    0x8c5f(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   11769:	bf 01 00 00 00       	mov    $0x1,%edi
   1176e:	31 c0                	xor    %eax,%eax
   11770:	e8 1b 0d ff ff       	callq  2490 <__printf_chk@plt>
   11775:	31 ff                	xor    %edi,%edi
   11777:	e8 e4 0c ff ff       	callq  2460 <fflush@plt>
   1177c:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   11781:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   11786:	8b 82 f0 00 00 00    	mov    0xf0(%rdx),%eax
   1178c:	48 8b 8a e8 00 00 00 	mov    0xe8(%rdx),%rcx
   11793:	85 c0                	test   %eax,%eax
   11795:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1179a:	4c 8b 4c 24 38       	mov    0x38(%rsp),%r9
   1179f:	0f 8e b3 01 00 00    	jle    11958 <stm_load_bytes+0x5e8>
   117a5:	8d 70 ff             	lea    -0x1(%rax),%esi
   117a8:	48 ff c6             	inc    %rsi
   117ab:	48 c1 e6 04          	shl    $0x4,%rsi
   117af:	48 01 ce             	add    %rcx,%rsi
   117b2:	eb 3c                	jmp    117f0 <stm_load_bytes+0x480>
   117b4:	0f 1f 40 00          	nopl   0x0(%rax)
   117b8:	48 8b ba f8 00 00 00 	mov    0xf8(%rdx),%rdi
   117bf:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   117c3:	48 39 f8             	cmp    %rdi,%rax
   117c6:	0f 82 4c 01 00 00    	jb     11918 <stm_load_bytes+0x5a8>
   117cc:	44 8b 82 00 01 00 00 	mov    0x100(%rdx),%r8d
   117d3:	49 c1 e0 06          	shl    $0x6,%r8
   117d7:	4c 01 c7             	add    %r8,%rdi
   117da:	48 39 f8             	cmp    %rdi,%rax
   117dd:	0f 83 35 01 00 00    	jae    11918 <stm_load_bytes+0x5a8>
   117e3:	48 83 c1 10          	add    $0x10,%rcx
   117e7:	48 39 f1             	cmp    %rsi,%rcx
   117ea:	0f 84 68 01 00 00    	je     11958 <stm_load_bytes+0x5e8>
   117f0:	48 8b 41 08          	mov    0x8(%rcx),%rax
   117f4:	48 8b 00             	mov    (%rax),%rax
   117f7:	a8 01                	test   $0x1,%al
   117f9:	75 bd                	jne    117b8 <stm_load_bytes+0x448>
   117fb:	48 c1 e8 04          	shr    $0x4,%rax
   117ff:	48 3b 01             	cmp    (%rcx),%rax
   11802:	74 df                	je     117e3 <stm_load_bytes+0x473>
   11804:	0f 1f 40 00          	nopl   0x0(%rax)
   11808:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   1180d:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   11812:	be 40 05 00 00       	mov    $0x540,%esi
   11817:	48 89 d7             	mov    %rdx,%rdi
   1181a:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1181f:	45 31 f6             	xor    %r14d,%r14d
   11822:	e8 d9 ef ff ff       	callq  10800 <stm_rollback>
   11827:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1182c:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   11831:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   11836:	e9 20 fc ff ff       	jmpq   1145b <stm_load_bytes+0xeb>
   1183b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11840:	48 89 d7             	mov    %rdx,%rdi
   11843:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   11848:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   1184d:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   11852:	e8 19 ee ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   11857:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   1185c:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   11861:	8b 82 f0 00 00 00    	mov    0xf0(%rdx),%eax
   11867:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   1186c:	e9 cf fb ff ff       	jmpq   11440 <stm_load_bytes+0xd0>
   11871:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11878:	4c 8b 70 08          	mov    0x8(%rax),%r14
   1187c:	e9 da fb ff ff       	jmpq   1145b <stm_load_bytes+0xeb>
   11881:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11888:	8b 82 f0 00 00 00    	mov    0xf0(%rdx),%eax
   1188e:	3b 82 f4 00 00 00    	cmp    0xf4(%rdx),%eax
   11894:	0f 84 01 04 00 00    	je     11c9b <stm_load_bytes+0x92b>
   1189a:	8d 48 01             	lea    0x1(%rax),%ecx
   1189d:	48 c1 e0 04          	shl    $0x4,%rax
   118a1:	48 03 82 e8 00 00 00 	add    0xe8(%rdx),%rax
   118a8:	89 8a f0 00 00 00    	mov    %ecx,0xf0(%rdx)
   118ae:	4c 89 08             	mov    %r9,(%rax)
   118b1:	4c 89 60 08          	mov    %r12,0x8(%rax)
   118b5:	e9 2c fd ff ff       	jmpq   115e6 <stm_load_bytes+0x276>
   118ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   118c0:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   118c7:	0f 85 b3 fb ff ff    	jne    11480 <stm_load_bytes+0x110>
   118cd:	48 8b 0d 3c ee 80 00 	mov    0x80ee3c(%rip),%rcx        # 820710 <_tinystm+0x800550>
   118d4:	48 85 c9             	test   %rcx,%rcx
   118d7:	74 27                	je     11900 <stm_load_bytes+0x590>
   118d9:	48 8b 70 28          	mov    0x28(%rax),%rsi
   118dd:	48 89 d7             	mov    %rdx,%rdi
   118e0:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   118e5:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   118ea:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   118ef:	ff d1                	callq  *%rcx
   118f1:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   118f6:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   118fb:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   11900:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   11905:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   1190a:	be 40 02 00 00       	mov    $0x240,%esi
   1190f:	e9 03 ff ff ff       	jmpq   11817 <stm_load_bytes+0x4a7>
   11914:	0f 1f 40 00          	nopl   0x0(%rax)
   11918:	48 8b 0d f1 ed 80 00 	mov    0x80edf1(%rip),%rcx        # 820710 <_tinystm+0x800550>
   1191f:	48 85 c9             	test   %rcx,%rcx
   11922:	0f 84 e0 fe ff ff    	je     11808 <stm_load_bytes+0x498>
   11928:	48 8b 70 28          	mov    0x28(%rax),%rsi
   1192c:	48 89 d7             	mov    %rdx,%rdi
   1192f:	4c 89 5c 24 30       	mov    %r11,0x30(%rsp)
   11934:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   11939:	48 89 54 24 20       	mov    %rdx,0x20(%rsp)
   1193e:	ff d1                	callq  *%rcx
   11940:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
   11945:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   1194a:	4c 8b 5c 24 30       	mov    0x30(%rsp),%r11
   1194f:	e9 b4 fe ff ff       	jmpq   11808 <stm_load_bytes+0x498>
   11954:	0f 1f 40 00          	nopl   0x0(%rax)
   11958:	4c 89 8a e0 00 00 00 	mov    %r9,0xe0(%rdx)
   1195f:	48 8b 03             	mov    (%rbx),%rax
   11962:	49 39 c5             	cmp    %rax,%r13
   11965:	0f 85 18 fb ff ff    	jne    11483 <stm_load_bytes+0x113>
   1196b:	0f b6 82 ca 00 00 00 	movzbl 0xca(%rdx),%eax
   11972:	83 e0 01             	and    $0x1,%eax
   11975:	e9 b0 fa ff ff       	jmpq   1142a <stm_load_bytes+0xba>
   1197a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11980:	48 8b 8a f8 00 00 00 	mov    0xf8(%rdx),%rcx
   11987:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1198b:	48 39 c8             	cmp    %rcx,%rax
   1198e:	0f 82 4e fb ff ff    	jb     114e2 <stm_load_bytes+0x172>
   11994:	8b b2 00 01 00 00    	mov    0x100(%rdx),%esi
   1199a:	48 c1 e6 06          	shl    $0x6,%rsi
   1199e:	48 01 f1             	add    %rsi,%rcx
   119a1:	48 39 c8             	cmp    %rcx,%rax
   119a4:	0f 83 38 fb ff ff    	jae    114e2 <stm_load_bytes+0x172>
   119aa:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   119af:	eb 14                	jmp    119c5 <stm_load_bytes+0x655>
   119b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   119b8:	48 8b 40 30          	mov    0x30(%rax),%rax
   119bc:	48 85 c0             	test   %rax,%rax
   119bf:	0f 84 38 03 00 00    	je     11cfd <stm_load_bytes+0x98d>
   119c5:	48 3b 10             	cmp    (%rax),%rdx
   119c8:	75 ee                	jne    119b8 <stm_load_bytes+0x648>
   119ca:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   119cf:	0f 84 28 03 00 00    	je     11cfd <stm_load_bytes+0x98d>
   119d5:	4c 8b 60 08          	mov    0x8(%rax),%r12
   119d9:	e9 5a fb ff ff       	jmpq   11538 <stm_load_bytes+0x1c8>
   119de:	48 8b 8a f8 00 00 00 	mov    0xf8(%rdx),%rcx
   119e5:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   119e9:	48 39 c8             	cmp    %rcx,%rax
   119ec:	0f 82 1b 03 00 00    	jb     11d0d <stm_load_bytes+0x99d>
   119f2:	8b b2 00 01 00 00    	mov    0x100(%rdx),%esi
   119f8:	48 c1 e6 06          	shl    $0x6,%rsi
   119fc:	48 01 f1             	add    %rsi,%rcx
   119ff:	48 39 c8             	cmp    %rcx,%rax
   11a02:	72 19                	jb     11a1d <stm_load_bytes+0x6ad>
   11a04:	e9 04 03 00 00       	jmpq   11d0d <stm_load_bytes+0x99d>
   11a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11a10:	48 8b 40 30          	mov    0x30(%rax),%rax
   11a14:	48 85 c0             	test   %rax,%rax
   11a17:	0f 84 e8 02 00 00    	je     11d05 <stm_load_bytes+0x995>
   11a1d:	4c 3b 30             	cmp    (%rax),%r14
   11a20:	75 ee                	jne    11a10 <stm_load_bytes+0x6a0>
   11a22:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   11a27:	0f 84 d8 02 00 00    	je     11d05 <stm_load_bytes+0x995>
   11a2d:	4c 8b 50 08          	mov    0x8(%rax),%r10
   11a31:	e9 b0 fb ff ff       	jmpq   115e6 <stm_load_bytes+0x276>
   11a36:	4c 89 f8             	mov    %r15,%rax
   11a39:	e9 5e fb ff ff       	jmpq   1159c <stm_load_bytes+0x22c>
   11a3e:	48 89 e8             	mov    %rbp,%rax
   11a41:	e9 15 fc ff ff       	jmpq   1165b <stm_load_bytes+0x2eb>
   11a46:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   11a4b:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   11a50:	84 c0                	test   %al,%al
   11a52:	0f 85 04 01 00 00    	jne    11b5c <stm_load_bytes+0x7ec>
   11a58:	48 8b 8a d8 00 00 00 	mov    0xd8(%rdx),%rcx
   11a5f:	48 8d 35 fa 89 00 00 	lea    0x89fa(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   11a66:	bf 01 00 00 00       	mov    $0x1,%edi
   11a6b:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   11a70:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   11a75:	e8 16 0a ff ff       	callq  2490 <__printf_chk@plt>
   11a7a:	31 ff                	xor    %edi,%edi
   11a7c:	e8 df 09 ff ff       	callq  2460 <fflush@plt>
   11a81:	48 8b 05 b8 e7 80 00 	mov    0x80e7b8(%rip),%rax        # 820240 <_tinystm+0x800080>
   11a88:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
   11a8d:	48 be fe df ff ff ff 	movabs $0xfffffffffffdffe,%rsi
   11a94:	ff ff 0f 
   11a97:	48 39 f0             	cmp    %rsi,%rax
   11a9a:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   11a9f:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   11aa4:	0f 87 b2 00 00 00    	ja     11b5c <stm_load_bytes+0x7ec>
   11aaa:	48 8b 8a d8 00 00 00 	mov    0xd8(%rdx),%rcx
   11ab1:	4c 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%r8
   11ab8:	48 8d 35 09 89 00 00 	lea    0x8909(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   11abf:	bf 01 00 00 00       	mov    $0x1,%edi
   11ac4:	31 c0                	xor    %eax,%eax
   11ac6:	e8 c5 09 ff ff       	callq  2490 <__printf_chk@plt>
   11acb:	31 ff                	xor    %edi,%edi
   11acd:	e8 8e 09 ff ff       	callq  2460 <fflush@plt>
   11ad2:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   11ad7:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   11adc:	8b 82 f0 00 00 00    	mov    0xf0(%rdx),%eax
   11ae2:	48 8b 8a e8 00 00 00 	mov    0xe8(%rdx),%rcx
   11ae9:	85 c0                	test   %eax,%eax
   11aeb:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   11af0:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   11af5:	0f 8e bb 02 00 00    	jle    11db6 <stm_load_bytes+0xa46>
   11afb:	8d 70 ff             	lea    -0x1(%rax),%esi
   11afe:	48 ff c6             	inc    %rsi
   11b01:	48 c1 e6 04          	shl    $0x4,%rsi
   11b05:	48 01 ce             	add    %rcx,%rsi
   11b08:	eb 3e                	jmp    11b48 <stm_load_bytes+0x7d8>
   11b0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11b10:	48 8b ba f8 00 00 00 	mov    0xf8(%rdx),%rdi
   11b17:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   11b1b:	48 39 f8             	cmp    %rdi,%rax
   11b1e:	0f 82 2e 02 00 00    	jb     11d52 <stm_load_bytes+0x9e2>
   11b24:	44 8b 82 00 01 00 00 	mov    0x100(%rdx),%r8d
   11b2b:	49 c1 e0 06          	shl    $0x6,%r8
   11b2f:	4c 01 c7             	add    %r8,%rdi
   11b32:	48 39 f8             	cmp    %rdi,%rax
   11b35:	0f 83 17 02 00 00    	jae    11d52 <stm_load_bytes+0x9e2>
   11b3b:	48 83 c1 10          	add    $0x10,%rcx
   11b3f:	48 39 f1             	cmp    %rsi,%rcx
   11b42:	0f 84 6e 02 00 00    	je     11db6 <stm_load_bytes+0xa46>
   11b48:	48 8b 41 08          	mov    0x8(%rcx),%rax
   11b4c:	48 8b 00             	mov    (%rax),%rax
   11b4f:	a8 01                	test   $0x1,%al
   11b51:	75 bd                	jne    11b10 <stm_load_bytes+0x7a0>
   11b53:	48 c1 e8 04          	shr    $0x4,%rax
   11b57:	48 3b 01             	cmp    (%rcx),%rax
   11b5a:	74 df                	je     11b3b <stm_load_bytes+0x7cb>
   11b5c:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   11b61:	be 40 05 00 00       	mov    $0x540,%esi
   11b66:	48 89 d7             	mov    %rdx,%rdi
   11b69:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   11b6e:	e8 8d ec ff ff       	callq  10800 <stm_rollback>
   11b73:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   11b78:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   11b7d:	45 31 d2             	xor    %r10d,%r10d
   11b80:	e9 61 fa ff ff       	jmpq   115e6 <stm_load_bytes+0x276>
   11b85:	84 c0                	test   %al,%al
   11b87:	0f 85 ef 00 00 00    	jne    11c7c <stm_load_bytes+0x90c>
   11b8d:	48 8b 8a d8 00 00 00 	mov    0xd8(%rdx),%rcx
   11b94:	48 8d 35 c5 88 00 00 	lea    0x88c5(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   11b9b:	bf 01 00 00 00       	mov    $0x1,%edi
   11ba0:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   11ba5:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   11baa:	e8 e1 08 ff ff       	callq  2490 <__printf_chk@plt>
   11baf:	31 ff                	xor    %edi,%edi
   11bb1:	e8 aa 08 ff ff       	callq  2460 <fflush@plt>
   11bb6:	4c 8b 0d 83 e6 80 00 	mov    0x80e683(%rip),%r9        # 820240 <_tinystm+0x800080>
   11bbd:	4d 39 f9             	cmp    %r15,%r9
   11bc0:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   11bc5:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   11bca:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   11bcf:	0f 87 a7 00 00 00    	ja     11c7c <stm_load_bytes+0x90c>
   11bd5:	48 8b 8a d8 00 00 00 	mov    0xd8(%rdx),%rcx
   11bdc:	4c 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%r8
   11be3:	48 8d 35 de 87 00 00 	lea    0x87de(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   11bea:	bf 01 00 00 00       	mov    $0x1,%edi
   11bef:	31 c0                	xor    %eax,%eax
   11bf1:	e8 9a 08 ff ff       	callq  2490 <__printf_chk@plt>
   11bf6:	31 ff                	xor    %edi,%edi
   11bf8:	e8 63 08 ff ff       	callq  2460 <fflush@plt>
   11bfd:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   11c02:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   11c07:	8b 82 f0 00 00 00    	mov    0xf0(%rdx),%eax
   11c0d:	48 8b 8a e8 00 00 00 	mov    0xe8(%rdx),%rcx
   11c14:	85 c0                	test   %eax,%eax
   11c16:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   11c1b:	0f 8e bf 01 00 00    	jle    11de0 <stm_load_bytes+0xa70>
   11c21:	8d 78 ff             	lea    -0x1(%rax),%edi
   11c24:	48 ff c7             	inc    %rdi
   11c27:	48 c1 e7 04          	shl    $0x4,%rdi
   11c2b:	48 01 cf             	add    %rcx,%rdi
   11c2e:	eb 38                	jmp    11c68 <stm_load_bytes+0x8f8>
   11c30:	48 8b b2 f8 00 00 00 	mov    0xf8(%rdx),%rsi
   11c37:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   11c3b:	48 39 f0             	cmp    %rsi,%rax
   11c3e:	0f 82 40 01 00 00    	jb     11d84 <stm_load_bytes+0xa14>
   11c44:	44 8b 82 00 01 00 00 	mov    0x100(%rdx),%r8d
   11c4b:	49 c1 e0 06          	shl    $0x6,%r8
   11c4f:	4c 01 c6             	add    %r8,%rsi
   11c52:	48 39 f0             	cmp    %rsi,%rax
   11c55:	0f 83 29 01 00 00    	jae    11d84 <stm_load_bytes+0xa14>
   11c5b:	48 83 c1 10          	add    $0x10,%rcx
   11c5f:	48 39 f9             	cmp    %rdi,%rcx
   11c62:	0f 84 78 01 00 00    	je     11de0 <stm_load_bytes+0xa70>
   11c68:	48 8b 41 08          	mov    0x8(%rcx),%rax
   11c6c:	48 8b 00             	mov    (%rax),%rax
   11c6f:	a8 01                	test   $0x1,%al
   11c71:	75 bd                	jne    11c30 <stm_load_bytes+0x8c0>
   11c73:	48 c1 e8 04          	shr    $0x4,%rax
   11c77:	48 3b 01             	cmp    (%rcx),%rax
   11c7a:	74 df                	je     11c5b <stm_load_bytes+0x8eb>
   11c7c:	be 40 05 00 00       	mov    $0x540,%esi
   11c81:	48 89 d7             	mov    %rdx,%rdi
   11c84:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   11c89:	45 31 e4             	xor    %r12d,%r12d
   11c8c:	e8 6f eb ff ff       	callq  10800 <stm_rollback>
   11c91:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   11c96:	e9 9d f8 ff ff       	jmpq   11538 <stm_load_bytes+0x1c8>
   11c9b:	48 89 d7             	mov    %rdx,%rdi
   11c9e:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   11ca3:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   11ca8:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   11cad:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   11cb2:	e8 b9 e9 ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   11cb7:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   11cbc:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   11cc1:	8b 82 f0 00 00 00    	mov    0xf0(%rdx),%eax
   11cc7:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   11ccc:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   11cd1:	e9 c4 fb ff ff       	jmpq   1189a <stm_load_bytes+0x52a>
   11cd6:	48 89 d7             	mov    %rdx,%rdi
   11cd9:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   11cde:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   11ce3:	e8 88 e9 ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   11ce8:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11ced:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   11cf2:	8b 82 f0 00 00 00    	mov    0xf0(%rdx),%eax
   11cf8:	e9 c2 f9 ff ff       	jmpq   116bf <stm_load_bytes+0x34f>
   11cfd:	4c 8b 22             	mov    (%rdx),%r12
   11d00:	e9 33 f8 ff ff       	jmpq   11538 <stm_load_bytes+0x1c8>
   11d05:	4d 8b 16             	mov    (%r14),%r10
   11d08:	e9 d9 f8 ff ff       	jmpq   115e6 <stm_load_bytes+0x276>
   11d0d:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   11d14:	0f 85 7e f8 ff ff    	jne    11598 <stm_load_bytes+0x228>
   11d1a:	48 8b 0d ef e9 80 00 	mov    0x80e9ef(%rip),%rcx        # 820710 <_tinystm+0x800550>
   11d21:	48 85 c9             	test   %rcx,%rcx
   11d24:	74 1d                	je     11d43 <stm_load_bytes+0x9d3>
   11d26:	48 8b 70 28          	mov    0x28(%rax),%rsi
   11d2a:	48 89 d7             	mov    %rdx,%rdi
   11d2d:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   11d32:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   11d37:	ff d1                	callq  *%rcx
   11d39:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   11d3e:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   11d43:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   11d48:	be 40 02 00 00       	mov    $0x240,%esi
   11d4d:	e9 14 fe ff ff       	jmpq   11b66 <stm_load_bytes+0x7f6>
   11d52:	48 8b 0d b7 e9 80 00 	mov    0x80e9b7(%rip),%rcx        # 820710 <_tinystm+0x800550>
   11d59:	48 85 c9             	test   %rcx,%rcx
   11d5c:	0f 84 fa fd ff ff    	je     11b5c <stm_load_bytes+0x7ec>
   11d62:	48 8b 70 28          	mov    0x28(%rax),%rsi
   11d66:	48 89 d7             	mov    %rdx,%rdi
   11d69:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   11d6e:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   11d73:	ff d1                	callq  *%rcx
   11d75:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   11d7a:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   11d7f:	e9 d8 fd ff ff       	jmpq   11b5c <stm_load_bytes+0x7ec>
   11d84:	48 8b 0d 85 e9 80 00 	mov    0x80e985(%rip),%rcx        # 820710 <_tinystm+0x800550>
   11d8b:	48 85 c9             	test   %rcx,%rcx
   11d8e:	0f 84 e8 fe ff ff    	je     11c7c <stm_load_bytes+0x90c>
   11d94:	48 8b 70 28          	mov    0x28(%rax),%rsi
   11d98:	48 89 d7             	mov    %rdx,%rdi
   11d9b:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   11da0:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   11da5:	ff d1                	callq  *%rcx
   11da7:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   11dac:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   11db1:	e9 c6 fe ff ff       	jmpq   11c7c <stm_load_bytes+0x90c>
   11db6:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
   11dbb:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)
   11dc2:	49 8b 04 24          	mov    (%r12),%rax
   11dc6:	49 39 c7             	cmp    %rax,%r15
   11dc9:	0f 85 cd f7 ff ff    	jne    1159c <stm_load_bytes+0x22c>
   11dcf:	0f b6 82 ca 00 00 00 	movzbl 0xca(%rdx),%eax
   11dd6:	83 e0 01             	and    $0x1,%eax
   11dd9:	e9 00 f8 ff ff       	jmpq   115de <stm_load_bytes+0x26e>
   11dde:	66 90                	xchg   %ax,%ax
   11de0:	4c 89 8a e0 00 00 00 	mov    %r9,0xe0(%rdx)
   11de7:	48 8b 03             	mov    (%rbx),%rax
   11dea:	48 39 c5             	cmp    %rax,%rbp
   11ded:	0f 85 68 f8 ff ff    	jne    1165b <stm_load_bytes+0x2eb>
   11df3:	0f b6 82 ca 00 00 00 	movzbl 0xca(%rdx),%eax
   11dfa:	83 e0 01             	and    $0x1,%eax
   11dfd:	e9 a3 f8 ff ff       	jmpq   116a5 <stm_load_bytes+0x335>
   11e02:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   11e09:	00 00 00 00 
   11e0d:	0f 1f 00             	nopl   (%rax)

0000000000011e10 <stm_load_u16>:
   11e10:	f3 0f 1e fa          	endbr64 
   11e14:	41 57                	push   %r15
   11e16:	41 56                	push   %r14
   11e18:	41 55                	push   %r13
   11e1a:	41 54                	push   %r12
   11e1c:	55                   	push   %rbp
   11e1d:	48 89 fd             	mov    %rdi,%rbp
   11e20:	53                   	push   %rbx
   11e21:	48 83 ec 28          	sub    $0x28,%rsp
   11e25:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   11e2c:	83 e7 01             	and    $0x1,%edi
   11e2f:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   11e33:	0f 85 bf 00 00 00    	jne    11ef8 <stm_load_u16+0xe8>
   11e39:	48 89 eb             	mov    %rbp,%rbx
   11e3c:	48 c1 eb 02          	shr    $0x2,%rbx
   11e40:	49 89 ef             	mov    %rbp,%r15
   11e43:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   11e49:	48 8d 05 70 e3 00 00 	lea    0xe370(%rip),%rax        # 201c0 <_tinystm>
   11e50:	49 83 e7 f8          	and    $0xfffffffffffffff8,%r15
   11e54:	48 01 c3             	add    %rax,%rbx
   11e57:	48 8b 03             	mov    (%rbx),%rax
   11e5a:	a8 01                	test   $0x1,%al
   11e5c:	0f 85 be 00 00 00    	jne    11f20 <stm_load_u16+0x110>
   11e62:	4d 8b 2f             	mov    (%r15),%r13
   11e65:	4c 8b 13             	mov    (%rbx),%r10
   11e68:	4c 39 d0             	cmp    %r10,%rax
   11e6b:	0f 85 0f 01 00 00    	jne    11f80 <stm_load_u16+0x170>
   11e71:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   11e78:	00 0f 
   11e7a:	75 5c                	jne    11ed8 <stm_load_u16+0xc8>
   11e7c:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   11e83:	00 00 
   11e85:	4d 89 d6             	mov    %r10,%r14
   11e88:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   11e8f:	00 
   11e90:	49 c1 ee 04          	shr    $0x4,%r14
   11e94:	83 e0 01             	and    $0x1,%eax
   11e97:	4d 39 c6             	cmp    %r8,%r14
   11e9a:	0f 87 f0 00 00 00    	ja     11f90 <stm_load_u16+0x180>
   11ea0:	84 c0                	test   %al,%al
   11ea2:	75 34                	jne    11ed8 <stm_load_u16+0xc8>
   11ea4:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   11eab:	00 
   11eac:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
   11eb3:	00 
   11eb4:	0f 84 36 01 00 00    	je     11ff0 <stm_load_u16+0x1e0>
   11eba:	8d 50 01             	lea    0x1(%rax),%edx
   11ebd:	48 c1 e0 04          	shl    $0x4,%rax
   11ec1:	49 03 84 24 e8 00 00 	add    0xe8(%r12),%rax
   11ec8:	00 
   11ec9:	41 89 94 24 f0 00 00 	mov    %edx,0xf0(%r12)
   11ed0:	00 
   11ed1:	4c 89 30             	mov    %r14,(%rax)
   11ed4:	48 89 58 08          	mov    %rbx,0x8(%rax)
   11ed8:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   11edd:	83 e5 06             	and    $0x6,%ebp
   11ee0:	0f b7 44 2c 18       	movzwl 0x18(%rsp,%rbp,1),%eax
   11ee5:	48 83 c4 28          	add    $0x28,%rsp
   11ee9:	5b                   	pop    %rbx
   11eea:	5d                   	pop    %rbp
   11eeb:	41 5c                	pop    %r12
   11eed:	41 5d                	pop    %r13
   11eef:	41 5e                	pop    %r14
   11ef1:	41 5f                	pop    %r15
   11ef3:	c3                   	retq   
   11ef4:	0f 1f 40 00          	nopl   0x0(%rax)
   11ef8:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   11efd:	48 89 ef             	mov    %rbp,%rdi
   11f00:	ba 02 00 00 00       	mov    $0x2,%edx
   11f05:	e8 66 f4 ff ff       	callq  11370 <stm_load_bytes>
   11f0a:	0f b7 44 24 18       	movzwl 0x18(%rsp),%eax
   11f0f:	48 83 c4 28          	add    $0x28,%rsp
   11f13:	5b                   	pop    %rbx
   11f14:	5d                   	pop    %rbp
   11f15:	41 5c                	pop    %r12
   11f17:	41 5d                	pop    %r13
   11f19:	41 5e                	pop    %r14
   11f1b:	41 5f                	pop    %r15
   11f1d:	c3                   	retq   
   11f1e:	66 90                	xchg   %ax,%ax
   11f20:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   11f27:	00 
   11f28:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   11f2c:	48 39 d0             	cmp    %rdx,%rax
   11f2f:	0f 82 8b 01 00 00    	jb     120c0 <stm_load_u16+0x2b0>
   11f35:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   11f3c:	00 
   11f3d:	48 c1 e1 06          	shl    $0x6,%rcx
   11f41:	48 01 ca             	add    %rcx,%rdx
   11f44:	48 39 d0             	cmp    %rdx,%rax
   11f47:	72 14                	jb     11f5d <stm_load_u16+0x14d>
   11f49:	e9 72 01 00 00       	jmpq   120c0 <stm_load_u16+0x2b0>
   11f4e:	66 90                	xchg   %ax,%ax
   11f50:	48 8b 40 30          	mov    0x30(%rax),%rax
   11f54:	48 85 c0             	test   %rax,%rax
   11f57:	0f 84 ab 00 00 00    	je     12008 <stm_load_u16+0x1f8>
   11f5d:	4c 3b 38             	cmp    (%rax),%r15
   11f60:	75 ee                	jne    11f50 <stm_load_u16+0x140>
   11f62:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   11f67:	0f 84 9b 00 00 00    	je     12008 <stm_load_u16+0x1f8>
   11f6d:	4c 8b 68 08          	mov    0x8(%rax),%r13
   11f71:	e9 62 ff ff ff       	jmpq   11ed8 <stm_load_u16+0xc8>
   11f76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   11f7d:	00 00 00 
   11f80:	4c 89 d0             	mov    %r10,%rax
   11f83:	e9 d2 fe ff ff       	jmpq   11e5a <stm_load_u16+0x4a>
   11f88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11f8f:	00 
   11f90:	4c 89 14 24          	mov    %r10,(%rsp)
   11f94:	84 c0                	test   %al,%al
   11f96:	75 3e                	jne    11fd6 <stm_load_u16+0x1c6>
   11f98:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   11f9f:	00 
   11fa0:	4c 89 e2             	mov    %r12,%rdx
   11fa3:	48 8d 35 b6 84 00 00 	lea    0x84b6(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   11faa:	bf 01 00 00 00       	mov    $0x1,%edi
   11faf:	e8 dc 04 ff ff       	callq  2490 <__printf_chk@plt>
   11fb4:	31 ff                	xor    %edi,%edi
   11fb6:	e8 a5 04 ff ff       	callq  2460 <fflush@plt>
   11fbb:	4c 8b 1d 7e e2 80 00 	mov    0x80e27e(%rip),%r11        # 820240 <_tinystm+0x800080>
   11fc2:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
   11fc9:	ff ff 0f 
   11fcc:	4d 39 cb             	cmp    %r9,%r11
   11fcf:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   11fd4:	76 3a                	jbe    12010 <stm_load_u16+0x200>
   11fd6:	be 40 05 00 00       	mov    $0x540,%esi
   11fdb:	4c 89 e7             	mov    %r12,%rdi
   11fde:	e8 1d e8 ff ff       	callq  10800 <stm_rollback>
   11fe3:	45 31 ed             	xor    %r13d,%r13d
   11fe6:	e9 ed fe ff ff       	jmpq   11ed8 <stm_load_u16+0xc8>
   11feb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11ff0:	4c 89 e7             	mov    %r12,%rdi
   11ff3:	e8 78 e6 ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   11ff8:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   11fff:	00 
   12000:	e9 b5 fe ff ff       	jmpq   11eba <stm_load_u16+0xaa>
   12005:	0f 1f 00             	nopl   (%rax)
   12008:	4d 8b 2f             	mov    (%r15),%r13
   1200b:	e9 c8 fe ff ff       	jmpq   11ed8 <stm_load_u16+0xc8>
   12010:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   12017:	00 
   12018:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   1201f:	00 
   12020:	4c 89 e2             	mov    %r12,%rdx
   12023:	48 8d 35 9e 83 00 00 	lea    0x839e(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   1202a:	bf 01 00 00 00       	mov    $0x1,%edi
   1202f:	31 c0                	xor    %eax,%eax
   12031:	e8 5a 04 ff ff       	callq  2490 <__printf_chk@plt>
   12036:	31 ff                	xor    %edi,%edi
   12038:	e8 23 04 ff ff       	callq  2460 <fflush@plt>
   1203d:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   12044:	00 
   12045:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   1204c:	00 
   1204d:	85 c0                	test   %eax,%eax
   1204f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   12054:	4c 8b 14 24          	mov    (%rsp),%r10
   12058:	0f 8e c2 00 00 00    	jle    12120 <stm_load_u16+0x310>
   1205e:	8d 70 ff             	lea    -0x1(%rax),%esi
   12061:	48 ff c6             	inc    %rsi
   12064:	48 c1 e6 04          	shl    $0x4,%rsi
   12068:	48 01 d6             	add    %rdx,%rsi
   1206b:	eb 35                	jmp    120a2 <stm_load_u16+0x292>
   1206d:	0f 1f 00             	nopl   (%rax)
   12070:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   12077:	00 
   12078:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1207c:	48 39 c8             	cmp    %rcx,%rax
   1207f:	72 7f                	jb     12100 <stm_load_u16+0x2f0>
   12081:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   12088:	00 
   12089:	48 c1 e7 06          	shl    $0x6,%rdi
   1208d:	48 01 f9             	add    %rdi,%rcx
   12090:	48 39 c8             	cmp    %rcx,%rax
   12093:	73 6b                	jae    12100 <stm_load_u16+0x2f0>
   12095:	48 83 c2 10          	add    $0x10,%rdx
   12099:	48 39 d6             	cmp    %rdx,%rsi
   1209c:	0f 84 7e 00 00 00    	je     12120 <stm_load_u16+0x310>
   120a2:	48 8b 42 08          	mov    0x8(%rdx),%rax
   120a6:	48 8b 00             	mov    (%rax),%rax
   120a9:	a8 01                	test   $0x1,%al
   120ab:	75 c3                	jne    12070 <stm_load_u16+0x260>
   120ad:	48 c1 e8 04          	shr    $0x4,%rax
   120b1:	48 3b 02             	cmp    (%rdx),%rax
   120b4:	74 df                	je     12095 <stm_load_u16+0x285>
   120b6:	e9 1b ff ff ff       	jmpq   11fd6 <stm_load_u16+0x1c6>
   120bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   120c0:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   120c7:	00 0f 
   120c9:	0f 85 88 fd ff ff    	jne    11e57 <stm_load_u16+0x47>
   120cf:	48 8b 15 3a e6 80 00 	mov    0x80e63a(%rip),%rdx        # 820710 <_tinystm+0x800550>
   120d6:	48 85 d2             	test   %rdx,%rdx
   120d9:	74 09                	je     120e4 <stm_load_u16+0x2d4>
   120db:	48 8b 70 28          	mov    0x28(%rax),%rsi
   120df:	4c 89 e7             	mov    %r12,%rdi
   120e2:	ff d2                	callq  *%rdx
   120e4:	be 40 02 00 00       	mov    $0x240,%esi
   120e9:	4c 89 e7             	mov    %r12,%rdi
   120ec:	e8 0f e7 ff ff       	callq  10800 <stm_rollback>
   120f1:	45 31 ed             	xor    %r13d,%r13d
   120f4:	e9 df fd ff ff       	jmpq   11ed8 <stm_load_u16+0xc8>
   120f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12100:	48 8b 15 09 e6 80 00 	mov    0x80e609(%rip),%rdx        # 820710 <_tinystm+0x800550>
   12107:	48 85 d2             	test   %rdx,%rdx
   1210a:	0f 84 c6 fe ff ff    	je     11fd6 <stm_load_u16+0x1c6>
   12110:	48 8b 70 28          	mov    0x28(%rax),%rsi
   12114:	4c 89 e7             	mov    %r12,%rdi
   12117:	ff d2                	callq  *%rdx
   12119:	e9 b8 fe ff ff       	jmpq   11fd6 <stm_load_u16+0x1c6>
   1211e:	66 90                	xchg   %ax,%ax
   12120:	4d 89 9c 24 e0 00 00 	mov    %r11,0xe0(%r12)
   12127:	00 
   12128:	48 8b 03             	mov    (%rbx),%rax
   1212b:	49 39 c2             	cmp    %rax,%r10
   1212e:	0f 85 26 fd ff ff    	jne    11e5a <stm_load_u16+0x4a>
   12134:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   1213b:	00 00 
   1213d:	83 e0 01             	and    $0x1,%eax
   12140:	e9 5b fd ff ff       	jmpq   11ea0 <stm_load_u16+0x90>
   12145:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1214c:	00 00 00 00 

0000000000012150 <stm_load_ushort>:
   12150:	f3 0f 1e fa          	endbr64 
   12154:	e9 b7 fc ff ff       	jmpq   11e10 <stm_load_u16>
   12159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000012160 <stm_load_u32>:
   12160:	f3 0f 1e fa          	endbr64 
   12164:	41 57                	push   %r15
   12166:	41 56                	push   %r14
   12168:	41 55                	push   %r13
   1216a:	41 54                	push   %r12
   1216c:	55                   	push   %rbp
   1216d:	48 89 fd             	mov    %rdi,%rbp
   12170:	53                   	push   %rbx
   12171:	48 83 ec 28          	sub    $0x28,%rsp
   12175:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   1217c:	83 e7 03             	and    $0x3,%edi
   1217f:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   12183:	0f 85 bf 00 00 00    	jne    12248 <stm_load_u32+0xe8>
   12189:	48 89 eb             	mov    %rbp,%rbx
   1218c:	48 c1 eb 02          	shr    $0x2,%rbx
   12190:	49 89 ef             	mov    %rbp,%r15
   12193:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   12199:	48 8d 05 20 e0 00 00 	lea    0xe020(%rip),%rax        # 201c0 <_tinystm>
   121a0:	49 83 e7 f8          	and    $0xfffffffffffffff8,%r15
   121a4:	48 01 c3             	add    %rax,%rbx
   121a7:	48 8b 03             	mov    (%rbx),%rax
   121aa:	a8 01                	test   $0x1,%al
   121ac:	0f 85 be 00 00 00    	jne    12270 <stm_load_u32+0x110>
   121b2:	4d 8b 2f             	mov    (%r15),%r13
   121b5:	4c 8b 13             	mov    (%rbx),%r10
   121b8:	4c 39 d0             	cmp    %r10,%rax
   121bb:	0f 85 0f 01 00 00    	jne    122d0 <stm_load_u32+0x170>
   121c1:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   121c8:	00 0f 
   121ca:	75 5c                	jne    12228 <stm_load_u32+0xc8>
   121cc:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   121d3:	00 00 
   121d5:	4d 89 d6             	mov    %r10,%r14
   121d8:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   121df:	00 
   121e0:	49 c1 ee 04          	shr    $0x4,%r14
   121e4:	83 e0 01             	and    $0x1,%eax
   121e7:	4d 39 c6             	cmp    %r8,%r14
   121ea:	0f 87 f0 00 00 00    	ja     122e0 <stm_load_u32+0x180>
   121f0:	84 c0                	test   %al,%al
   121f2:	75 34                	jne    12228 <stm_load_u32+0xc8>
   121f4:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   121fb:	00 
   121fc:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
   12203:	00 
   12204:	0f 84 36 01 00 00    	je     12340 <stm_load_u32+0x1e0>
   1220a:	8d 50 01             	lea    0x1(%rax),%edx
   1220d:	48 c1 e0 04          	shl    $0x4,%rax
   12211:	49 03 84 24 e8 00 00 	add    0xe8(%r12),%rax
   12218:	00 
   12219:	41 89 94 24 f0 00 00 	mov    %edx,0xf0(%r12)
   12220:	00 
   12221:	4c 89 30             	mov    %r14,(%rax)
   12224:	48 89 58 08          	mov    %rbx,0x8(%rax)
   12228:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   1222d:	83 e5 04             	and    $0x4,%ebp
   12230:	8b 44 2c 18          	mov    0x18(%rsp,%rbp,1),%eax
   12234:	48 83 c4 28          	add    $0x28,%rsp
   12238:	5b                   	pop    %rbx
   12239:	5d                   	pop    %rbp
   1223a:	41 5c                	pop    %r12
   1223c:	41 5d                	pop    %r13
   1223e:	41 5e                	pop    %r14
   12240:	41 5f                	pop    %r15
   12242:	c3                   	retq   
   12243:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12248:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1224d:	48 89 ef             	mov    %rbp,%rdi
   12250:	ba 04 00 00 00       	mov    $0x4,%edx
   12255:	e8 16 f1 ff ff       	callq  11370 <stm_load_bytes>
   1225a:	8b 44 24 18          	mov    0x18(%rsp),%eax
   1225e:	48 83 c4 28          	add    $0x28,%rsp
   12262:	5b                   	pop    %rbx
   12263:	5d                   	pop    %rbp
   12264:	41 5c                	pop    %r12
   12266:	41 5d                	pop    %r13
   12268:	41 5e                	pop    %r14
   1226a:	41 5f                	pop    %r15
   1226c:	c3                   	retq   
   1226d:	0f 1f 00             	nopl   (%rax)
   12270:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   12277:	00 
   12278:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1227c:	48 39 d0             	cmp    %rdx,%rax
   1227f:	0f 82 8b 01 00 00    	jb     12410 <stm_load_u32+0x2b0>
   12285:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   1228c:	00 
   1228d:	48 c1 e1 06          	shl    $0x6,%rcx
   12291:	48 01 ca             	add    %rcx,%rdx
   12294:	48 39 d0             	cmp    %rdx,%rax
   12297:	72 14                	jb     122ad <stm_load_u32+0x14d>
   12299:	e9 72 01 00 00       	jmpq   12410 <stm_load_u32+0x2b0>
   1229e:	66 90                	xchg   %ax,%ax
   122a0:	48 8b 40 30          	mov    0x30(%rax),%rax
   122a4:	48 85 c0             	test   %rax,%rax
   122a7:	0f 84 ab 00 00 00    	je     12358 <stm_load_u32+0x1f8>
   122ad:	4c 3b 38             	cmp    (%rax),%r15
   122b0:	75 ee                	jne    122a0 <stm_load_u32+0x140>
   122b2:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   122b7:	0f 84 9b 00 00 00    	je     12358 <stm_load_u32+0x1f8>
   122bd:	4c 8b 68 08          	mov    0x8(%rax),%r13
   122c1:	e9 62 ff ff ff       	jmpq   12228 <stm_load_u32+0xc8>
   122c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   122cd:	00 00 00 
   122d0:	4c 89 d0             	mov    %r10,%rax
   122d3:	e9 d2 fe ff ff       	jmpq   121aa <stm_load_u32+0x4a>
   122d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   122df:	00 
   122e0:	4c 89 14 24          	mov    %r10,(%rsp)
   122e4:	84 c0                	test   %al,%al
   122e6:	75 3e                	jne    12326 <stm_load_u32+0x1c6>
   122e8:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   122ef:	00 
   122f0:	4c 89 e2             	mov    %r12,%rdx
   122f3:	48 8d 35 66 81 00 00 	lea    0x8166(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   122fa:	bf 01 00 00 00       	mov    $0x1,%edi
   122ff:	e8 8c 01 ff ff       	callq  2490 <__printf_chk@plt>
   12304:	31 ff                	xor    %edi,%edi
   12306:	e8 55 01 ff ff       	callq  2460 <fflush@plt>
   1230b:	4c 8b 1d 2e df 80 00 	mov    0x80df2e(%rip),%r11        # 820240 <_tinystm+0x800080>
   12312:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
   12319:	ff ff 0f 
   1231c:	4d 39 cb             	cmp    %r9,%r11
   1231f:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   12324:	76 3a                	jbe    12360 <stm_load_u32+0x200>
   12326:	be 40 05 00 00       	mov    $0x540,%esi
   1232b:	4c 89 e7             	mov    %r12,%rdi
   1232e:	e8 cd e4 ff ff       	callq  10800 <stm_rollback>
   12333:	45 31 ed             	xor    %r13d,%r13d
   12336:	e9 ed fe ff ff       	jmpq   12228 <stm_load_u32+0xc8>
   1233b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12340:	4c 89 e7             	mov    %r12,%rdi
   12343:	e8 28 e3 ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   12348:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   1234f:	00 
   12350:	e9 b5 fe ff ff       	jmpq   1220a <stm_load_u32+0xaa>
   12355:	0f 1f 00             	nopl   (%rax)
   12358:	4d 8b 2f             	mov    (%r15),%r13
   1235b:	e9 c8 fe ff ff       	jmpq   12228 <stm_load_u32+0xc8>
   12360:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   12367:	00 
   12368:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   1236f:	00 
   12370:	4c 89 e2             	mov    %r12,%rdx
   12373:	48 8d 35 4e 80 00 00 	lea    0x804e(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   1237a:	bf 01 00 00 00       	mov    $0x1,%edi
   1237f:	31 c0                	xor    %eax,%eax
   12381:	e8 0a 01 ff ff       	callq  2490 <__printf_chk@plt>
   12386:	31 ff                	xor    %edi,%edi
   12388:	e8 d3 00 ff ff       	callq  2460 <fflush@plt>
   1238d:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   12394:	00 
   12395:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   1239c:	00 
   1239d:	85 c0                	test   %eax,%eax
   1239f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   123a4:	4c 8b 14 24          	mov    (%rsp),%r10
   123a8:	0f 8e c2 00 00 00    	jle    12470 <stm_load_u32+0x310>
   123ae:	8d 70 ff             	lea    -0x1(%rax),%esi
   123b1:	48 ff c6             	inc    %rsi
   123b4:	48 c1 e6 04          	shl    $0x4,%rsi
   123b8:	48 01 d6             	add    %rdx,%rsi
   123bb:	eb 35                	jmp    123f2 <stm_load_u32+0x292>
   123bd:	0f 1f 00             	nopl   (%rax)
   123c0:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   123c7:	00 
   123c8:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   123cc:	48 39 c8             	cmp    %rcx,%rax
   123cf:	72 7f                	jb     12450 <stm_load_u32+0x2f0>
   123d1:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   123d8:	00 
   123d9:	48 c1 e7 06          	shl    $0x6,%rdi
   123dd:	48 01 f9             	add    %rdi,%rcx
   123e0:	48 39 c8             	cmp    %rcx,%rax
   123e3:	73 6b                	jae    12450 <stm_load_u32+0x2f0>
   123e5:	48 83 c2 10          	add    $0x10,%rdx
   123e9:	48 39 d6             	cmp    %rdx,%rsi
   123ec:	0f 84 7e 00 00 00    	je     12470 <stm_load_u32+0x310>
   123f2:	48 8b 42 08          	mov    0x8(%rdx),%rax
   123f6:	48 8b 00             	mov    (%rax),%rax
   123f9:	a8 01                	test   $0x1,%al
   123fb:	75 c3                	jne    123c0 <stm_load_u32+0x260>
   123fd:	48 c1 e8 04          	shr    $0x4,%rax
   12401:	48 3b 02             	cmp    (%rdx),%rax
   12404:	74 df                	je     123e5 <stm_load_u32+0x285>
   12406:	e9 1b ff ff ff       	jmpq   12326 <stm_load_u32+0x1c6>
   1240b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12410:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   12417:	00 0f 
   12419:	0f 85 88 fd ff ff    	jne    121a7 <stm_load_u32+0x47>
   1241f:	48 8b 15 ea e2 80 00 	mov    0x80e2ea(%rip),%rdx        # 820710 <_tinystm+0x800550>
   12426:	48 85 d2             	test   %rdx,%rdx
   12429:	74 09                	je     12434 <stm_load_u32+0x2d4>
   1242b:	48 8b 70 28          	mov    0x28(%rax),%rsi
   1242f:	4c 89 e7             	mov    %r12,%rdi
   12432:	ff d2                	callq  *%rdx
   12434:	be 40 02 00 00       	mov    $0x240,%esi
   12439:	4c 89 e7             	mov    %r12,%rdi
   1243c:	e8 bf e3 ff ff       	callq  10800 <stm_rollback>
   12441:	45 31 ed             	xor    %r13d,%r13d
   12444:	e9 df fd ff ff       	jmpq   12228 <stm_load_u32+0xc8>
   12449:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12450:	48 8b 15 b9 e2 80 00 	mov    0x80e2b9(%rip),%rdx        # 820710 <_tinystm+0x800550>
   12457:	48 85 d2             	test   %rdx,%rdx
   1245a:	0f 84 c6 fe ff ff    	je     12326 <stm_load_u32+0x1c6>
   12460:	48 8b 70 28          	mov    0x28(%rax),%rsi
   12464:	4c 89 e7             	mov    %r12,%rdi
   12467:	ff d2                	callq  *%rdx
   12469:	e9 b8 fe ff ff       	jmpq   12326 <stm_load_u32+0x1c6>
   1246e:	66 90                	xchg   %ax,%ax
   12470:	4d 89 9c 24 e0 00 00 	mov    %r11,0xe0(%r12)
   12477:	00 
   12478:	48 8b 03             	mov    (%rbx),%rax
   1247b:	49 39 c2             	cmp    %rax,%r10
   1247e:	0f 85 26 fd ff ff    	jne    121aa <stm_load_u32+0x4a>
   12484:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   1248b:	00 00 
   1248d:	83 e0 01             	and    $0x1,%eax
   12490:	e9 5b fd ff ff       	jmpq   121f0 <stm_load_u32+0x90>
   12495:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1249c:	00 00 00 00 

00000000000124a0 <stm_load_uint>:
   124a0:	f3 0f 1e fa          	endbr64 
   124a4:	e9 b7 fc ff ff       	jmpq   12160 <stm_load_u32>
   124a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000124b0 <stm_load_u64>:
   124b0:	f3 0f 1e fa          	endbr64 
   124b4:	41 57                	push   %r15
   124b6:	41 56                	push   %r14
   124b8:	41 55                	push   %r13
   124ba:	41 54                	push   %r12
   124bc:	55                   	push   %rbp
   124bd:	48 89 fd             	mov    %rdi,%rbp
   124c0:	53                   	push   %rbx
   124c1:	48 83 ec 28          	sub    $0x28,%rsp
   124c5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   124cc:	83 e7 07             	and    $0x7,%edi
   124cf:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   124d3:	0f 85 b7 00 00 00    	jne    12590 <stm_load_u64+0xe0>
   124d9:	48 89 eb             	mov    %rbp,%rbx
   124dc:	48 c1 eb 02          	shr    $0x2,%rbx
   124e0:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   124e6:	48 8d 05 d3 dc 00 00 	lea    0xdcd3(%rip),%rax        # 201c0 <_tinystm>
   124ed:	48 01 c3             	add    %rax,%rbx
   124f0:	49 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%r15
   124f7:	ff ff 0f 
   124fa:	48 8b 03             	mov    (%rbx),%rax
   124fd:	a8 01                	test   $0x1,%al
   124ff:	0f 85 ab 00 00 00    	jne    125b0 <stm_load_u64+0x100>
   12505:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
   12509:	4c 8b 0b             	mov    (%rbx),%r9
   1250c:	4c 39 c8             	cmp    %r9,%rax
   1250f:	0f 85 fb 00 00 00    	jne    12610 <stm_load_u64+0x160>
   12515:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   1251c:	00 0f 
   1251e:	75 5c                	jne    1257c <stm_load_u64+0xcc>
   12520:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   12527:	00 00 
   12529:	4d 89 ce             	mov    %r9,%r14
   1252c:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   12533:	00 
   12534:	49 c1 ee 04          	shr    $0x4,%r14
   12538:	83 e0 01             	and    $0x1,%eax
   1253b:	4d 39 c6             	cmp    %r8,%r14
   1253e:	0f 87 dc 00 00 00    	ja     12620 <stm_load_u64+0x170>
   12544:	84 c0                	test   %al,%al
   12546:	75 34                	jne    1257c <stm_load_u64+0xcc>
   12548:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   1254f:	00 
   12550:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
   12557:	00 
   12558:	0f 84 1a 01 00 00    	je     12678 <stm_load_u64+0x1c8>
   1255e:	8d 50 01             	lea    0x1(%rax),%edx
   12561:	48 c1 e0 04          	shl    $0x4,%rax
   12565:	49 03 84 24 e8 00 00 	add    0xe8(%r12),%rax
   1256c:	00 
   1256d:	41 89 94 24 f0 00 00 	mov    %edx,0xf0(%r12)
   12574:	00 
   12575:	4c 89 30             	mov    %r14,(%rax)
   12578:	48 89 58 08          	mov    %rbx,0x8(%rax)
   1257c:	48 83 c4 28          	add    $0x28,%rsp
   12580:	5b                   	pop    %rbx
   12581:	5d                   	pop    %rbp
   12582:	41 5c                	pop    %r12
   12584:	4c 89 e8             	mov    %r13,%rax
   12587:	41 5d                	pop    %r13
   12589:	41 5e                	pop    %r14
   1258b:	41 5f                	pop    %r15
   1258d:	c3                   	retq   
   1258e:	66 90                	xchg   %ax,%ax
   12590:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   12595:	ba 08 00 00 00       	mov    $0x8,%edx
   1259a:	48 89 ef             	mov    %rbp,%rdi
   1259d:	e8 ce ed ff ff       	callq  11370 <stm_load_bytes>
   125a2:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   125a7:	eb d3                	jmp    1257c <stm_load_u64+0xcc>
   125a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   125b0:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   125b7:	00 
   125b8:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   125bc:	48 39 d0             	cmp    %rdx,%rax
   125bf:	0f 82 8b 01 00 00    	jb     12750 <stm_load_u64+0x2a0>
   125c5:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   125cc:	00 
   125cd:	48 c1 e1 06          	shl    $0x6,%rcx
   125d1:	48 01 ca             	add    %rcx,%rdx
   125d4:	48 39 d0             	cmp    %rdx,%rax
   125d7:	72 14                	jb     125ed <stm_load_u64+0x13d>
   125d9:	e9 72 01 00 00       	jmpq   12750 <stm_load_u64+0x2a0>
   125de:	66 90                	xchg   %ax,%ax
   125e0:	48 8b 40 30          	mov    0x30(%rax),%rax
   125e4:	48 85 c0             	test   %rax,%rax
   125e7:	0f 84 a3 00 00 00    	je     12690 <stm_load_u64+0x1e0>
   125ed:	48 3b 28             	cmp    (%rax),%rbp
   125f0:	75 ee                	jne    125e0 <stm_load_u64+0x130>
   125f2:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   125f7:	0f 84 93 00 00 00    	je     12690 <stm_load_u64+0x1e0>
   125fd:	4c 8b 68 08          	mov    0x8(%rax),%r13
   12601:	e9 76 ff ff ff       	jmpq   1257c <stm_load_u64+0xcc>
   12606:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1260d:	00 00 00 
   12610:	4c 89 c8             	mov    %r9,%rax
   12613:	e9 e5 fe ff ff       	jmpq   124fd <stm_load_u64+0x4d>
   12618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1261f:	00 
   12620:	4c 89 0c 24          	mov    %r9,(%rsp)
   12624:	84 c0                	test   %al,%al
   12626:	75 34                	jne    1265c <stm_load_u64+0x1ac>
   12628:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   1262f:	00 
   12630:	4c 89 e2             	mov    %r12,%rdx
   12633:	48 8d 35 26 7e 00 00 	lea    0x7e26(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   1263a:	bf 01 00 00 00       	mov    $0x1,%edi
   1263f:	e8 4c fe fe ff       	callq  2490 <__printf_chk@plt>
   12644:	31 ff                	xor    %edi,%edi
   12646:	e8 15 fe fe ff       	callq  2460 <fflush@plt>
   1264b:	4c 8b 15 ee db 80 00 	mov    0x80dbee(%rip),%r10        # 820240 <_tinystm+0x800080>
   12652:	4d 39 fa             	cmp    %r15,%r10
   12655:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1265a:	76 44                	jbe    126a0 <stm_load_u64+0x1f0>
   1265c:	be 40 05 00 00       	mov    $0x540,%esi
   12661:	4c 89 e7             	mov    %r12,%rdi
   12664:	e8 97 e1 ff ff       	callq  10800 <stm_rollback>
   12669:	45 31 ed             	xor    %r13d,%r13d
   1266c:	e9 0b ff ff ff       	jmpq   1257c <stm_load_u64+0xcc>
   12671:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12678:	4c 89 e7             	mov    %r12,%rdi
   1267b:	e8 f0 df ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   12680:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   12687:	00 
   12688:	e9 d1 fe ff ff       	jmpq   1255e <stm_load_u64+0xae>
   1268d:	0f 1f 00             	nopl   (%rax)
   12690:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
   12694:	e9 e3 fe ff ff       	jmpq   1257c <stm_load_u64+0xcc>
   12699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   126a0:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   126a7:	00 
   126a8:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   126af:	00 
   126b0:	4c 89 e2             	mov    %r12,%rdx
   126b3:	48 8d 35 0e 7d 00 00 	lea    0x7d0e(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   126ba:	bf 01 00 00 00       	mov    $0x1,%edi
   126bf:	31 c0                	xor    %eax,%eax
   126c1:	e8 ca fd fe ff       	callq  2490 <__printf_chk@plt>
   126c6:	31 ff                	xor    %edi,%edi
   126c8:	e8 93 fd fe ff       	callq  2460 <fflush@plt>
   126cd:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   126d4:	00 
   126d5:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   126dc:	00 
   126dd:	85 c0                	test   %eax,%eax
   126df:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   126e4:	4c 8b 0c 24          	mov    (%rsp),%r9
   126e8:	0f 8e c2 00 00 00    	jle    127b0 <stm_load_u64+0x300>
   126ee:	8d 70 ff             	lea    -0x1(%rax),%esi
   126f1:	48 ff c6             	inc    %rsi
   126f4:	48 c1 e6 04          	shl    $0x4,%rsi
   126f8:	48 01 d6             	add    %rdx,%rsi
   126fb:	eb 35                	jmp    12732 <stm_load_u64+0x282>
   126fd:	0f 1f 00             	nopl   (%rax)
   12700:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   12707:	00 
   12708:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1270c:	48 39 c8             	cmp    %rcx,%rax
   1270f:	72 7f                	jb     12790 <stm_load_u64+0x2e0>
   12711:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   12718:	00 
   12719:	48 c1 e7 06          	shl    $0x6,%rdi
   1271d:	48 01 f9             	add    %rdi,%rcx
   12720:	48 39 c8             	cmp    %rcx,%rax
   12723:	73 6b                	jae    12790 <stm_load_u64+0x2e0>
   12725:	48 83 c2 10          	add    $0x10,%rdx
   12729:	48 39 d6             	cmp    %rdx,%rsi
   1272c:	0f 84 7e 00 00 00    	je     127b0 <stm_load_u64+0x300>
   12732:	48 8b 42 08          	mov    0x8(%rdx),%rax
   12736:	48 8b 00             	mov    (%rax),%rax
   12739:	a8 01                	test   $0x1,%al
   1273b:	75 c3                	jne    12700 <stm_load_u64+0x250>
   1273d:	48 c1 e8 04          	shr    $0x4,%rax
   12741:	48 3b 02             	cmp    (%rdx),%rax
   12744:	74 df                	je     12725 <stm_load_u64+0x275>
   12746:	e9 11 ff ff ff       	jmpq   1265c <stm_load_u64+0x1ac>
   1274b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12750:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   12757:	00 0f 
   12759:	0f 85 9b fd ff ff    	jne    124fa <stm_load_u64+0x4a>
   1275f:	48 8b 15 aa df 80 00 	mov    0x80dfaa(%rip),%rdx        # 820710 <_tinystm+0x800550>
   12766:	48 85 d2             	test   %rdx,%rdx
   12769:	74 09                	je     12774 <stm_load_u64+0x2c4>
   1276b:	48 8b 70 28          	mov    0x28(%rax),%rsi
   1276f:	4c 89 e7             	mov    %r12,%rdi
   12772:	ff d2                	callq  *%rdx
   12774:	be 40 02 00 00       	mov    $0x240,%esi
   12779:	4c 89 e7             	mov    %r12,%rdi
   1277c:	e8 7f e0 ff ff       	callq  10800 <stm_rollback>
   12781:	45 31 ed             	xor    %r13d,%r13d
   12784:	e9 f3 fd ff ff       	jmpq   1257c <stm_load_u64+0xcc>
   12789:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12790:	48 8b 15 79 df 80 00 	mov    0x80df79(%rip),%rdx        # 820710 <_tinystm+0x800550>
   12797:	48 85 d2             	test   %rdx,%rdx
   1279a:	0f 84 bc fe ff ff    	je     1265c <stm_load_u64+0x1ac>
   127a0:	48 8b 70 28          	mov    0x28(%rax),%rsi
   127a4:	4c 89 e7             	mov    %r12,%rdi
   127a7:	ff d2                	callq  *%rdx
   127a9:	e9 ae fe ff ff       	jmpq   1265c <stm_load_u64+0x1ac>
   127ae:	66 90                	xchg   %ax,%ax
   127b0:	4d 89 94 24 e0 00 00 	mov    %r10,0xe0(%r12)
   127b7:	00 
   127b8:	48 8b 03             	mov    (%rbx),%rax
   127bb:	49 39 c1             	cmp    %rax,%r9
   127be:	0f 85 39 fd ff ff    	jne    124fd <stm_load_u64+0x4d>
   127c4:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   127cb:	00 00 
   127cd:	83 e0 01             	and    $0x1,%eax
   127d0:	e9 6f fd ff ff       	jmpq   12544 <stm_load_u64+0x94>
   127d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   127dc:	00 00 00 00 

00000000000127e0 <stm_load_short>:
   127e0:	f3 0f 1e fa          	endbr64 
   127e4:	41 57                	push   %r15
   127e6:	41 56                	push   %r14
   127e8:	41 55                	push   %r13
   127ea:	41 54                	push   %r12
   127ec:	55                   	push   %rbp
   127ed:	48 89 fd             	mov    %rdi,%rbp
   127f0:	53                   	push   %rbx
   127f1:	48 83 ec 28          	sub    $0x28,%rsp
   127f5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   127fc:	83 e7 01             	and    $0x1,%edi
   127ff:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   12803:	0f 85 bf 00 00 00    	jne    128c8 <stm_load_short+0xe8>
   12809:	48 89 eb             	mov    %rbp,%rbx
   1280c:	48 c1 eb 02          	shr    $0x2,%rbx
   12810:	49 89 ef             	mov    %rbp,%r15
   12813:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   12819:	48 8d 05 a0 d9 00 00 	lea    0xd9a0(%rip),%rax        # 201c0 <_tinystm>
   12820:	49 83 e7 f8          	and    $0xfffffffffffffff8,%r15
   12824:	48 01 c3             	add    %rax,%rbx
   12827:	48 8b 03             	mov    (%rbx),%rax
   1282a:	a8 01                	test   $0x1,%al
   1282c:	0f 85 be 00 00 00    	jne    128f0 <stm_load_short+0x110>
   12832:	4d 8b 2f             	mov    (%r15),%r13
   12835:	4c 8b 13             	mov    (%rbx),%r10
   12838:	4c 39 d0             	cmp    %r10,%rax
   1283b:	0f 85 0f 01 00 00    	jne    12950 <stm_load_short+0x170>
   12841:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   12848:	00 0f 
   1284a:	75 5c                	jne    128a8 <stm_load_short+0xc8>
   1284c:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   12853:	00 00 
   12855:	4d 89 d6             	mov    %r10,%r14
   12858:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   1285f:	00 
   12860:	49 c1 ee 04          	shr    $0x4,%r14
   12864:	83 e0 01             	and    $0x1,%eax
   12867:	4d 39 c6             	cmp    %r8,%r14
   1286a:	0f 87 f0 00 00 00    	ja     12960 <stm_load_short+0x180>
   12870:	84 c0                	test   %al,%al
   12872:	75 34                	jne    128a8 <stm_load_short+0xc8>
   12874:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   1287b:	00 
   1287c:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
   12883:	00 
   12884:	0f 84 36 01 00 00    	je     129c0 <stm_load_short+0x1e0>
   1288a:	8d 50 01             	lea    0x1(%rax),%edx
   1288d:	48 c1 e0 04          	shl    $0x4,%rax
   12891:	49 03 84 24 e8 00 00 	add    0xe8(%r12),%rax
   12898:	00 
   12899:	41 89 94 24 f0 00 00 	mov    %edx,0xf0(%r12)
   128a0:	00 
   128a1:	4c 89 30             	mov    %r14,(%rax)
   128a4:	48 89 58 08          	mov    %rbx,0x8(%rax)
   128a8:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   128ad:	83 e5 06             	and    $0x6,%ebp
   128b0:	0f b7 44 2c 18       	movzwl 0x18(%rsp,%rbp,1),%eax
   128b5:	48 83 c4 28          	add    $0x28,%rsp
   128b9:	5b                   	pop    %rbx
   128ba:	5d                   	pop    %rbp
   128bb:	41 5c                	pop    %r12
   128bd:	41 5d                	pop    %r13
   128bf:	41 5e                	pop    %r14
   128c1:	41 5f                	pop    %r15
   128c3:	c3                   	retq   
   128c4:	0f 1f 40 00          	nopl   0x0(%rax)
   128c8:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   128cd:	48 89 ef             	mov    %rbp,%rdi
   128d0:	ba 02 00 00 00       	mov    $0x2,%edx
   128d5:	e8 96 ea ff ff       	callq  11370 <stm_load_bytes>
   128da:	0f b7 44 24 18       	movzwl 0x18(%rsp),%eax
   128df:	48 83 c4 28          	add    $0x28,%rsp
   128e3:	5b                   	pop    %rbx
   128e4:	5d                   	pop    %rbp
   128e5:	41 5c                	pop    %r12
   128e7:	41 5d                	pop    %r13
   128e9:	41 5e                	pop    %r14
   128eb:	41 5f                	pop    %r15
   128ed:	c3                   	retq   
   128ee:	66 90                	xchg   %ax,%ax
   128f0:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   128f7:	00 
   128f8:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   128fc:	48 39 d0             	cmp    %rdx,%rax
   128ff:	0f 82 8b 01 00 00    	jb     12a90 <stm_load_short+0x2b0>
   12905:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   1290c:	00 
   1290d:	48 c1 e1 06          	shl    $0x6,%rcx
   12911:	48 01 ca             	add    %rcx,%rdx
   12914:	48 39 d0             	cmp    %rdx,%rax
   12917:	72 14                	jb     1292d <stm_load_short+0x14d>
   12919:	e9 72 01 00 00       	jmpq   12a90 <stm_load_short+0x2b0>
   1291e:	66 90                	xchg   %ax,%ax
   12920:	48 8b 40 30          	mov    0x30(%rax),%rax
   12924:	48 85 c0             	test   %rax,%rax
   12927:	0f 84 ab 00 00 00    	je     129d8 <stm_load_short+0x1f8>
   1292d:	4c 3b 38             	cmp    (%rax),%r15
   12930:	75 ee                	jne    12920 <stm_load_short+0x140>
   12932:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   12937:	0f 84 9b 00 00 00    	je     129d8 <stm_load_short+0x1f8>
   1293d:	4c 8b 68 08          	mov    0x8(%rax),%r13
   12941:	e9 62 ff ff ff       	jmpq   128a8 <stm_load_short+0xc8>
   12946:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1294d:	00 00 00 
   12950:	4c 89 d0             	mov    %r10,%rax
   12953:	e9 d2 fe ff ff       	jmpq   1282a <stm_load_short+0x4a>
   12958:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1295f:	00 
   12960:	4c 89 14 24          	mov    %r10,(%rsp)
   12964:	84 c0                	test   %al,%al
   12966:	75 3e                	jne    129a6 <stm_load_short+0x1c6>
   12968:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   1296f:	00 
   12970:	4c 89 e2             	mov    %r12,%rdx
   12973:	48 8d 35 e6 7a 00 00 	lea    0x7ae6(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   1297a:	bf 01 00 00 00       	mov    $0x1,%edi
   1297f:	e8 0c fb fe ff       	callq  2490 <__printf_chk@plt>
   12984:	31 ff                	xor    %edi,%edi
   12986:	e8 d5 fa fe ff       	callq  2460 <fflush@plt>
   1298b:	4c 8b 1d ae d8 80 00 	mov    0x80d8ae(%rip),%r11        # 820240 <_tinystm+0x800080>
   12992:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
   12999:	ff ff 0f 
   1299c:	4d 39 cb             	cmp    %r9,%r11
   1299f:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   129a4:	76 3a                	jbe    129e0 <stm_load_short+0x200>
   129a6:	be 40 05 00 00       	mov    $0x540,%esi
   129ab:	4c 89 e7             	mov    %r12,%rdi
   129ae:	e8 4d de ff ff       	callq  10800 <stm_rollback>
   129b3:	45 31 ed             	xor    %r13d,%r13d
   129b6:	e9 ed fe ff ff       	jmpq   128a8 <stm_load_short+0xc8>
   129bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   129c0:	4c 89 e7             	mov    %r12,%rdi
   129c3:	e8 a8 dc ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   129c8:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   129cf:	00 
   129d0:	e9 b5 fe ff ff       	jmpq   1288a <stm_load_short+0xaa>
   129d5:	0f 1f 00             	nopl   (%rax)
   129d8:	4d 8b 2f             	mov    (%r15),%r13
   129db:	e9 c8 fe ff ff       	jmpq   128a8 <stm_load_short+0xc8>
   129e0:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   129e7:	00 
   129e8:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   129ef:	00 
   129f0:	4c 89 e2             	mov    %r12,%rdx
   129f3:	48 8d 35 ce 79 00 00 	lea    0x79ce(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   129fa:	bf 01 00 00 00       	mov    $0x1,%edi
   129ff:	31 c0                	xor    %eax,%eax
   12a01:	e8 8a fa fe ff       	callq  2490 <__printf_chk@plt>
   12a06:	31 ff                	xor    %edi,%edi
   12a08:	e8 53 fa fe ff       	callq  2460 <fflush@plt>
   12a0d:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   12a14:	00 
   12a15:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   12a1c:	00 
   12a1d:	85 c0                	test   %eax,%eax
   12a1f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   12a24:	4c 8b 14 24          	mov    (%rsp),%r10
   12a28:	0f 8e c2 00 00 00    	jle    12af0 <stm_load_short+0x310>
   12a2e:	8d 70 ff             	lea    -0x1(%rax),%esi
   12a31:	48 ff c6             	inc    %rsi
   12a34:	48 c1 e6 04          	shl    $0x4,%rsi
   12a38:	48 01 d6             	add    %rdx,%rsi
   12a3b:	eb 35                	jmp    12a72 <stm_load_short+0x292>
   12a3d:	0f 1f 00             	nopl   (%rax)
   12a40:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   12a47:	00 
   12a48:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   12a4c:	48 39 c8             	cmp    %rcx,%rax
   12a4f:	72 7f                	jb     12ad0 <stm_load_short+0x2f0>
   12a51:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   12a58:	00 
   12a59:	48 c1 e7 06          	shl    $0x6,%rdi
   12a5d:	48 01 f9             	add    %rdi,%rcx
   12a60:	48 39 c8             	cmp    %rcx,%rax
   12a63:	73 6b                	jae    12ad0 <stm_load_short+0x2f0>
   12a65:	48 83 c2 10          	add    $0x10,%rdx
   12a69:	48 39 d6             	cmp    %rdx,%rsi
   12a6c:	0f 84 7e 00 00 00    	je     12af0 <stm_load_short+0x310>
   12a72:	48 8b 42 08          	mov    0x8(%rdx),%rax
   12a76:	48 8b 00             	mov    (%rax),%rax
   12a79:	a8 01                	test   $0x1,%al
   12a7b:	75 c3                	jne    12a40 <stm_load_short+0x260>
   12a7d:	48 c1 e8 04          	shr    $0x4,%rax
   12a81:	48 3b 02             	cmp    (%rdx),%rax
   12a84:	74 df                	je     12a65 <stm_load_short+0x285>
   12a86:	e9 1b ff ff ff       	jmpq   129a6 <stm_load_short+0x1c6>
   12a8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12a90:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   12a97:	00 0f 
   12a99:	0f 85 88 fd ff ff    	jne    12827 <stm_load_short+0x47>
   12a9f:	48 8b 15 6a dc 80 00 	mov    0x80dc6a(%rip),%rdx        # 820710 <_tinystm+0x800550>
   12aa6:	48 85 d2             	test   %rdx,%rdx
   12aa9:	74 09                	je     12ab4 <stm_load_short+0x2d4>
   12aab:	48 8b 70 28          	mov    0x28(%rax),%rsi
   12aaf:	4c 89 e7             	mov    %r12,%rdi
   12ab2:	ff d2                	callq  *%rdx
   12ab4:	be 40 02 00 00       	mov    $0x240,%esi
   12ab9:	4c 89 e7             	mov    %r12,%rdi
   12abc:	e8 3f dd ff ff       	callq  10800 <stm_rollback>
   12ac1:	45 31 ed             	xor    %r13d,%r13d
   12ac4:	e9 df fd ff ff       	jmpq   128a8 <stm_load_short+0xc8>
   12ac9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12ad0:	48 8b 15 39 dc 80 00 	mov    0x80dc39(%rip),%rdx        # 820710 <_tinystm+0x800550>
   12ad7:	48 85 d2             	test   %rdx,%rdx
   12ada:	0f 84 c6 fe ff ff    	je     129a6 <stm_load_short+0x1c6>
   12ae0:	48 8b 70 28          	mov    0x28(%rax),%rsi
   12ae4:	4c 89 e7             	mov    %r12,%rdi
   12ae7:	ff d2                	callq  *%rdx
   12ae9:	e9 b8 fe ff ff       	jmpq   129a6 <stm_load_short+0x1c6>
   12aee:	66 90                	xchg   %ax,%ax
   12af0:	4d 89 9c 24 e0 00 00 	mov    %r11,0xe0(%r12)
   12af7:	00 
   12af8:	48 8b 03             	mov    (%rbx),%rax
   12afb:	49 39 c2             	cmp    %rax,%r10
   12afe:	0f 85 26 fd ff ff    	jne    1282a <stm_load_short+0x4a>
   12b04:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   12b0b:	00 00 
   12b0d:	83 e0 01             	and    $0x1,%eax
   12b10:	e9 5b fd ff ff       	jmpq   12870 <stm_load_short+0x90>
   12b15:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12b1c:	00 00 00 00 

0000000000012b20 <stm_load_int>:
   12b20:	f3 0f 1e fa          	endbr64 
   12b24:	41 57                	push   %r15
   12b26:	41 56                	push   %r14
   12b28:	41 55                	push   %r13
   12b2a:	41 54                	push   %r12
   12b2c:	55                   	push   %rbp
   12b2d:	48 89 fd             	mov    %rdi,%rbp
   12b30:	53                   	push   %rbx
   12b31:	48 83 ec 28          	sub    $0x28,%rsp
   12b35:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   12b3c:	83 e7 03             	and    $0x3,%edi
   12b3f:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   12b43:	0f 85 bf 00 00 00    	jne    12c08 <stm_load_int+0xe8>
   12b49:	48 89 eb             	mov    %rbp,%rbx
   12b4c:	48 c1 eb 02          	shr    $0x2,%rbx
   12b50:	49 89 ef             	mov    %rbp,%r15
   12b53:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   12b59:	48 8d 05 60 d6 00 00 	lea    0xd660(%rip),%rax        # 201c0 <_tinystm>
   12b60:	49 83 e7 f8          	and    $0xfffffffffffffff8,%r15
   12b64:	48 01 c3             	add    %rax,%rbx
   12b67:	48 8b 03             	mov    (%rbx),%rax
   12b6a:	a8 01                	test   $0x1,%al
   12b6c:	0f 85 be 00 00 00    	jne    12c30 <stm_load_int+0x110>
   12b72:	4d 8b 2f             	mov    (%r15),%r13
   12b75:	4c 8b 13             	mov    (%rbx),%r10
   12b78:	4c 39 d0             	cmp    %r10,%rax
   12b7b:	0f 85 0f 01 00 00    	jne    12c90 <stm_load_int+0x170>
   12b81:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   12b88:	00 0f 
   12b8a:	75 5c                	jne    12be8 <stm_load_int+0xc8>
   12b8c:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   12b93:	00 00 
   12b95:	4d 89 d6             	mov    %r10,%r14
   12b98:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   12b9f:	00 
   12ba0:	49 c1 ee 04          	shr    $0x4,%r14
   12ba4:	83 e0 01             	and    $0x1,%eax
   12ba7:	4d 39 c6             	cmp    %r8,%r14
   12baa:	0f 87 f0 00 00 00    	ja     12ca0 <stm_load_int+0x180>
   12bb0:	84 c0                	test   %al,%al
   12bb2:	75 34                	jne    12be8 <stm_load_int+0xc8>
   12bb4:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   12bbb:	00 
   12bbc:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
   12bc3:	00 
   12bc4:	0f 84 36 01 00 00    	je     12d00 <stm_load_int+0x1e0>
   12bca:	8d 50 01             	lea    0x1(%rax),%edx
   12bcd:	48 c1 e0 04          	shl    $0x4,%rax
   12bd1:	49 03 84 24 e8 00 00 	add    0xe8(%r12),%rax
   12bd8:	00 
   12bd9:	41 89 94 24 f0 00 00 	mov    %edx,0xf0(%r12)
   12be0:	00 
   12be1:	4c 89 30             	mov    %r14,(%rax)
   12be4:	48 89 58 08          	mov    %rbx,0x8(%rax)
   12be8:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   12bed:	83 e5 04             	and    $0x4,%ebp
   12bf0:	8b 44 2c 18          	mov    0x18(%rsp,%rbp,1),%eax
   12bf4:	48 83 c4 28          	add    $0x28,%rsp
   12bf8:	5b                   	pop    %rbx
   12bf9:	5d                   	pop    %rbp
   12bfa:	41 5c                	pop    %r12
   12bfc:	41 5d                	pop    %r13
   12bfe:	41 5e                	pop    %r14
   12c00:	41 5f                	pop    %r15
   12c02:	c3                   	retq   
   12c03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12c08:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   12c0d:	48 89 ef             	mov    %rbp,%rdi
   12c10:	ba 04 00 00 00       	mov    $0x4,%edx
   12c15:	e8 56 e7 ff ff       	callq  11370 <stm_load_bytes>
   12c1a:	8b 44 24 18          	mov    0x18(%rsp),%eax
   12c1e:	48 83 c4 28          	add    $0x28,%rsp
   12c22:	5b                   	pop    %rbx
   12c23:	5d                   	pop    %rbp
   12c24:	41 5c                	pop    %r12
   12c26:	41 5d                	pop    %r13
   12c28:	41 5e                	pop    %r14
   12c2a:	41 5f                	pop    %r15
   12c2c:	c3                   	retq   
   12c2d:	0f 1f 00             	nopl   (%rax)
   12c30:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   12c37:	00 
   12c38:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   12c3c:	48 39 d0             	cmp    %rdx,%rax
   12c3f:	0f 82 8b 01 00 00    	jb     12dd0 <stm_load_int+0x2b0>
   12c45:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   12c4c:	00 
   12c4d:	48 c1 e1 06          	shl    $0x6,%rcx
   12c51:	48 01 ca             	add    %rcx,%rdx
   12c54:	48 39 d0             	cmp    %rdx,%rax
   12c57:	72 14                	jb     12c6d <stm_load_int+0x14d>
   12c59:	e9 72 01 00 00       	jmpq   12dd0 <stm_load_int+0x2b0>
   12c5e:	66 90                	xchg   %ax,%ax
   12c60:	48 8b 40 30          	mov    0x30(%rax),%rax
   12c64:	48 85 c0             	test   %rax,%rax
   12c67:	0f 84 ab 00 00 00    	je     12d18 <stm_load_int+0x1f8>
   12c6d:	4c 3b 38             	cmp    (%rax),%r15
   12c70:	75 ee                	jne    12c60 <stm_load_int+0x140>
   12c72:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   12c77:	0f 84 9b 00 00 00    	je     12d18 <stm_load_int+0x1f8>
   12c7d:	4c 8b 68 08          	mov    0x8(%rax),%r13
   12c81:	e9 62 ff ff ff       	jmpq   12be8 <stm_load_int+0xc8>
   12c86:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12c8d:	00 00 00 
   12c90:	4c 89 d0             	mov    %r10,%rax
   12c93:	e9 d2 fe ff ff       	jmpq   12b6a <stm_load_int+0x4a>
   12c98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12c9f:	00 
   12ca0:	4c 89 14 24          	mov    %r10,(%rsp)
   12ca4:	84 c0                	test   %al,%al
   12ca6:	75 3e                	jne    12ce6 <stm_load_int+0x1c6>
   12ca8:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   12caf:	00 
   12cb0:	4c 89 e2             	mov    %r12,%rdx
   12cb3:	48 8d 35 a6 77 00 00 	lea    0x77a6(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   12cba:	bf 01 00 00 00       	mov    $0x1,%edi
   12cbf:	e8 cc f7 fe ff       	callq  2490 <__printf_chk@plt>
   12cc4:	31 ff                	xor    %edi,%edi
   12cc6:	e8 95 f7 fe ff       	callq  2460 <fflush@plt>
   12ccb:	4c 8b 1d 6e d5 80 00 	mov    0x80d56e(%rip),%r11        # 820240 <_tinystm+0x800080>
   12cd2:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
   12cd9:	ff ff 0f 
   12cdc:	4d 39 cb             	cmp    %r9,%r11
   12cdf:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   12ce4:	76 3a                	jbe    12d20 <stm_load_int+0x200>
   12ce6:	be 40 05 00 00       	mov    $0x540,%esi
   12ceb:	4c 89 e7             	mov    %r12,%rdi
   12cee:	e8 0d db ff ff       	callq  10800 <stm_rollback>
   12cf3:	45 31 ed             	xor    %r13d,%r13d
   12cf6:	e9 ed fe ff ff       	jmpq   12be8 <stm_load_int+0xc8>
   12cfb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12d00:	4c 89 e7             	mov    %r12,%rdi
   12d03:	e8 68 d9 ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   12d08:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   12d0f:	00 
   12d10:	e9 b5 fe ff ff       	jmpq   12bca <stm_load_int+0xaa>
   12d15:	0f 1f 00             	nopl   (%rax)
   12d18:	4d 8b 2f             	mov    (%r15),%r13
   12d1b:	e9 c8 fe ff ff       	jmpq   12be8 <stm_load_int+0xc8>
   12d20:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   12d27:	00 
   12d28:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   12d2f:	00 
   12d30:	4c 89 e2             	mov    %r12,%rdx
   12d33:	48 8d 35 8e 76 00 00 	lea    0x768e(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   12d3a:	bf 01 00 00 00       	mov    $0x1,%edi
   12d3f:	31 c0                	xor    %eax,%eax
   12d41:	e8 4a f7 fe ff       	callq  2490 <__printf_chk@plt>
   12d46:	31 ff                	xor    %edi,%edi
   12d48:	e8 13 f7 fe ff       	callq  2460 <fflush@plt>
   12d4d:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   12d54:	00 
   12d55:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   12d5c:	00 
   12d5d:	85 c0                	test   %eax,%eax
   12d5f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   12d64:	4c 8b 14 24          	mov    (%rsp),%r10
   12d68:	0f 8e c2 00 00 00    	jle    12e30 <stm_load_int+0x310>
   12d6e:	8d 70 ff             	lea    -0x1(%rax),%esi
   12d71:	48 ff c6             	inc    %rsi
   12d74:	48 c1 e6 04          	shl    $0x4,%rsi
   12d78:	48 01 d6             	add    %rdx,%rsi
   12d7b:	eb 35                	jmp    12db2 <stm_load_int+0x292>
   12d7d:	0f 1f 00             	nopl   (%rax)
   12d80:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   12d87:	00 
   12d88:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   12d8c:	48 39 c8             	cmp    %rcx,%rax
   12d8f:	72 7f                	jb     12e10 <stm_load_int+0x2f0>
   12d91:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   12d98:	00 
   12d99:	48 c1 e7 06          	shl    $0x6,%rdi
   12d9d:	48 01 f9             	add    %rdi,%rcx
   12da0:	48 39 c8             	cmp    %rcx,%rax
   12da3:	73 6b                	jae    12e10 <stm_load_int+0x2f0>
   12da5:	48 83 c2 10          	add    $0x10,%rdx
   12da9:	48 39 d6             	cmp    %rdx,%rsi
   12dac:	0f 84 7e 00 00 00    	je     12e30 <stm_load_int+0x310>
   12db2:	48 8b 42 08          	mov    0x8(%rdx),%rax
   12db6:	48 8b 00             	mov    (%rax),%rax
   12db9:	a8 01                	test   $0x1,%al
   12dbb:	75 c3                	jne    12d80 <stm_load_int+0x260>
   12dbd:	48 c1 e8 04          	shr    $0x4,%rax
   12dc1:	48 3b 02             	cmp    (%rdx),%rax
   12dc4:	74 df                	je     12da5 <stm_load_int+0x285>
   12dc6:	e9 1b ff ff ff       	jmpq   12ce6 <stm_load_int+0x1c6>
   12dcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   12dd0:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   12dd7:	00 0f 
   12dd9:	0f 85 88 fd ff ff    	jne    12b67 <stm_load_int+0x47>
   12ddf:	48 8b 15 2a d9 80 00 	mov    0x80d92a(%rip),%rdx        # 820710 <_tinystm+0x800550>
   12de6:	48 85 d2             	test   %rdx,%rdx
   12de9:	74 09                	je     12df4 <stm_load_int+0x2d4>
   12deb:	48 8b 70 28          	mov    0x28(%rax),%rsi
   12def:	4c 89 e7             	mov    %r12,%rdi
   12df2:	ff d2                	callq  *%rdx
   12df4:	be 40 02 00 00       	mov    $0x240,%esi
   12df9:	4c 89 e7             	mov    %r12,%rdi
   12dfc:	e8 ff d9 ff ff       	callq  10800 <stm_rollback>
   12e01:	45 31 ed             	xor    %r13d,%r13d
   12e04:	e9 df fd ff ff       	jmpq   12be8 <stm_load_int+0xc8>
   12e09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   12e10:	48 8b 15 f9 d8 80 00 	mov    0x80d8f9(%rip),%rdx        # 820710 <_tinystm+0x800550>
   12e17:	48 85 d2             	test   %rdx,%rdx
   12e1a:	0f 84 c6 fe ff ff    	je     12ce6 <stm_load_int+0x1c6>
   12e20:	48 8b 70 28          	mov    0x28(%rax),%rsi
   12e24:	4c 89 e7             	mov    %r12,%rdi
   12e27:	ff d2                	callq  *%rdx
   12e29:	e9 b8 fe ff ff       	jmpq   12ce6 <stm_load_int+0x1c6>
   12e2e:	66 90                	xchg   %ax,%ax
   12e30:	4d 89 9c 24 e0 00 00 	mov    %r11,0xe0(%r12)
   12e37:	00 
   12e38:	48 8b 03             	mov    (%rbx),%rax
   12e3b:	49 39 c2             	cmp    %rax,%r10
   12e3e:	0f 85 26 fd ff ff    	jne    12b6a <stm_load_int+0x4a>
   12e44:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   12e4b:	00 00 
   12e4d:	83 e0 01             	and    $0x1,%eax
   12e50:	e9 5b fd ff ff       	jmpq   12bb0 <stm_load_int+0x90>
   12e55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   12e5c:	00 00 00 00 

0000000000012e60 <stm_load_long>:
   12e60:	f3 0f 1e fa          	endbr64 
   12e64:	41 57                	push   %r15
   12e66:	41 56                	push   %r14
   12e68:	41 55                	push   %r13
   12e6a:	41 54                	push   %r12
   12e6c:	55                   	push   %rbp
   12e6d:	48 89 fd             	mov    %rdi,%rbp
   12e70:	53                   	push   %rbx
   12e71:	48 83 ec 28          	sub    $0x28,%rsp
   12e75:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   12e7c:	83 e7 07             	and    $0x7,%edi
   12e7f:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   12e83:	0f 85 bf 00 00 00    	jne    12f48 <stm_load_long+0xe8>
   12e89:	48 89 eb             	mov    %rbp,%rbx
   12e8c:	48 c1 eb 02          	shr    $0x2,%rbx
   12e90:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   12e96:	48 8d 05 23 d3 00 00 	lea    0xd323(%rip),%rax        # 201c0 <_tinystm>
   12e9d:	48 01 c3             	add    %rax,%rbx
   12ea0:	49 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%r15
   12ea7:	ff ff 0f 
   12eaa:	48 8b 03             	mov    (%rbx),%rax
   12ead:	a8 01                	test   $0x1,%al
   12eaf:	0f 85 bb 00 00 00    	jne    12f70 <stm_load_long+0x110>
   12eb5:	4c 8b 75 00          	mov    0x0(%rbp),%r14
   12eb9:	4c 8b 0b             	mov    (%rbx),%r9
   12ebc:	4c 39 c8             	cmp    %r9,%rax
   12ebf:	0f 85 0b 01 00 00    	jne    12fd0 <stm_load_long+0x170>
   12ec5:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   12ecc:	00 0f 
   12ece:	0f 85 0c 01 00 00    	jne    12fe0 <stm_load_long+0x180>
   12ed4:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
   12edb:	00 00 
   12edd:	4d 89 cd             	mov    %r9,%r13
   12ee0:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   12ee7:	00 
   12ee8:	49 c1 ed 04          	shr    $0x4,%r13
   12eec:	83 e2 01             	and    $0x1,%edx
   12eef:	4d 39 c5             	cmp    %r8,%r13
   12ef2:	0f 87 f8 00 00 00    	ja     12ff0 <stm_load_long+0x190>
   12ef8:	4c 89 f0             	mov    %r14,%rax
   12efb:	84 d2                	test   %dl,%dl
   12efd:	75 34                	jne    12f33 <stm_load_long+0xd3>
   12eff:	41 8b 94 24 f0 00 00 	mov    0xf0(%r12),%edx
   12f06:	00 
   12f07:	41 3b 94 24 f4 00 00 	cmp    0xf4(%r12),%edx
   12f0e:	00 
   12f0f:	0f 84 33 01 00 00    	je     13048 <stm_load_long+0x1e8>
   12f15:	8d 4a 01             	lea    0x1(%rdx),%ecx
   12f18:	48 c1 e2 04          	shl    $0x4,%rdx
   12f1c:	49 03 94 24 e8 00 00 	add    0xe8(%r12),%rdx
   12f23:	00 
   12f24:	41 89 8c 24 f0 00 00 	mov    %ecx,0xf0(%r12)
   12f2b:	00 
   12f2c:	4c 89 2a             	mov    %r13,(%rdx)
   12f2f:	48 89 5a 08          	mov    %rbx,0x8(%rdx)
   12f33:	48 83 c4 28          	add    $0x28,%rsp
   12f37:	5b                   	pop    %rbx
   12f38:	5d                   	pop    %rbp
   12f39:	41 5c                	pop    %r12
   12f3b:	41 5d                	pop    %r13
   12f3d:	41 5e                	pop    %r14
   12f3f:	41 5f                	pop    %r15
   12f41:	c3                   	retq   
   12f42:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   12f48:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   12f4d:	48 89 ef             	mov    %rbp,%rdi
   12f50:	ba 08 00 00 00       	mov    $0x8,%edx
   12f55:	e8 16 e4 ff ff       	callq  11370 <stm_load_bytes>
   12f5a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   12f5f:	48 83 c4 28          	add    $0x28,%rsp
   12f63:	5b                   	pop    %rbx
   12f64:	5d                   	pop    %rbp
   12f65:	41 5c                	pop    %r12
   12f67:	41 5d                	pop    %r13
   12f69:	41 5e                	pop    %r14
   12f6b:	41 5f                	pop    %r15
   12f6d:	c3                   	retq   
   12f6e:	66 90                	xchg   %ax,%ax
   12f70:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   12f77:	00 
   12f78:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   12f7c:	48 39 d0             	cmp    %rdx,%rax
   12f7f:	0f 82 9b 01 00 00    	jb     13120 <stm_load_long+0x2c0>
   12f85:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   12f8c:	00 
   12f8d:	48 c1 e1 06          	shl    $0x6,%rcx
   12f91:	48 01 ca             	add    %rcx,%rdx
   12f94:	48 39 d0             	cmp    %rdx,%rax
   12f97:	72 14                	jb     12fad <stm_load_long+0x14d>
   12f99:	e9 82 01 00 00       	jmpq   13120 <stm_load_long+0x2c0>
   12f9e:	66 90                	xchg   %ax,%ax
   12fa0:	48 8b 40 30          	mov    0x30(%rax),%rax
   12fa4:	48 85 c0             	test   %rax,%rax
   12fa7:	0f 84 bb 00 00 00    	je     13068 <stm_load_long+0x208>
   12fad:	48 3b 28             	cmp    (%rax),%rbp
   12fb0:	75 ee                	jne    12fa0 <stm_load_long+0x140>
   12fb2:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   12fb7:	0f 84 ab 00 00 00    	je     13068 <stm_load_long+0x208>
   12fbd:	48 8b 40 08          	mov    0x8(%rax),%rax
   12fc1:	e9 6d ff ff ff       	jmpq   12f33 <stm_load_long+0xd3>
   12fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   12fcd:	00 00 00 
   12fd0:	4c 89 c8             	mov    %r9,%rax
   12fd3:	e9 d5 fe ff ff       	jmpq   12ead <stm_load_long+0x4d>
   12fd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12fdf:	00 
   12fe0:	4c 89 f0             	mov    %r14,%rax
   12fe3:	e9 4b ff ff ff       	jmpq   12f33 <stm_load_long+0xd3>
   12fe8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   12fef:	00 
   12ff0:	4c 89 0c 24          	mov    %r9,(%rsp)
   12ff4:	84 d2                	test   %dl,%dl
   12ff6:	75 36                	jne    1302e <stm_load_long+0x1ce>
   12ff8:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   12fff:	00 
   13000:	4c 89 e2             	mov    %r12,%rdx
   13003:	48 8d 35 56 74 00 00 	lea    0x7456(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   1300a:	bf 01 00 00 00       	mov    $0x1,%edi
   1300f:	31 c0                	xor    %eax,%eax
   13011:	e8 7a f4 fe ff       	callq  2490 <__printf_chk@plt>
   13016:	31 ff                	xor    %edi,%edi
   13018:	e8 43 f4 fe ff       	callq  2460 <fflush@plt>
   1301d:	4c 8b 15 1c d2 80 00 	mov    0x80d21c(%rip),%r10        # 820240 <_tinystm+0x800080>
   13024:	4d 39 fa             	cmp    %r15,%r10
   13027:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1302c:	76 4a                	jbe    13078 <stm_load_long+0x218>
   1302e:	be 40 05 00 00       	mov    $0x540,%esi
   13033:	4c 89 e7             	mov    %r12,%rdi
   13036:	e8 c5 d7 ff ff       	callq  10800 <stm_rollback>
   1303b:	31 c0                	xor    %eax,%eax
   1303d:	e9 f1 fe ff ff       	jmpq   12f33 <stm_load_long+0xd3>
   13042:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13048:	4c 89 e7             	mov    %r12,%rdi
   1304b:	4c 89 34 24          	mov    %r14,(%rsp)
   1304f:	e8 1c d6 ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   13054:	41 8b 94 24 f0 00 00 	mov    0xf0(%r12),%edx
   1305b:	00 
   1305c:	48 8b 04 24          	mov    (%rsp),%rax
   13060:	e9 b0 fe ff ff       	jmpq   12f15 <stm_load_long+0xb5>
   13065:	0f 1f 00             	nopl   (%rax)
   13068:	48 8b 45 00          	mov    0x0(%rbp),%rax
   1306c:	e9 c2 fe ff ff       	jmpq   12f33 <stm_load_long+0xd3>
   13071:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13078:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   1307f:	00 
   13080:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   13087:	00 
   13088:	4c 89 e2             	mov    %r12,%rdx
   1308b:	48 8d 35 36 73 00 00 	lea    0x7336(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   13092:	bf 01 00 00 00       	mov    $0x1,%edi
   13097:	31 c0                	xor    %eax,%eax
   13099:	e8 f2 f3 fe ff       	callq  2490 <__printf_chk@plt>
   1309e:	31 ff                	xor    %edi,%edi
   130a0:	e8 bb f3 fe ff       	callq  2460 <fflush@plt>
   130a5:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   130ac:	00 
   130ad:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   130b4:	00 
   130b5:	85 c0                	test   %eax,%eax
   130b7:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   130bc:	4c 8b 0c 24          	mov    (%rsp),%r9
   130c0:	0f 8e ba 00 00 00    	jle    13180 <stm_load_long+0x320>
   130c6:	8d 70 ff             	lea    -0x1(%rax),%esi
   130c9:	48 ff c6             	inc    %rsi
   130cc:	48 c1 e6 04          	shl    $0x4,%rsi
   130d0:	48 01 d6             	add    %rdx,%rsi
   130d3:	eb 31                	jmp    13106 <stm_load_long+0x2a6>
   130d5:	0f 1f 00             	nopl   (%rax)
   130d8:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   130df:	00 
   130e0:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   130e4:	48 39 c8             	cmp    %rcx,%rax
   130e7:	72 77                	jb     13160 <stm_load_long+0x300>
   130e9:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   130f0:	00 
   130f1:	48 c1 e7 06          	shl    $0x6,%rdi
   130f5:	48 01 f9             	add    %rdi,%rcx
   130f8:	48 39 c8             	cmp    %rcx,%rax
   130fb:	73 63                	jae    13160 <stm_load_long+0x300>
   130fd:	48 83 c2 10          	add    $0x10,%rdx
   13101:	48 39 d6             	cmp    %rdx,%rsi
   13104:	74 7a                	je     13180 <stm_load_long+0x320>
   13106:	48 8b 42 08          	mov    0x8(%rdx),%rax
   1310a:	48 8b 00             	mov    (%rax),%rax
   1310d:	a8 01                	test   $0x1,%al
   1310f:	75 c7                	jne    130d8 <stm_load_long+0x278>
   13111:	48 c1 e8 04          	shr    $0x4,%rax
   13115:	48 3b 02             	cmp    (%rdx),%rax
   13118:	74 e3                	je     130fd <stm_load_long+0x29d>
   1311a:	e9 0f ff ff ff       	jmpq   1302e <stm_load_long+0x1ce>
   1311f:	90                   	nop
   13120:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   13127:	00 0f 
   13129:	0f 85 7b fd ff ff    	jne    12eaa <stm_load_long+0x4a>
   1312f:	48 8b 15 da d5 80 00 	mov    0x80d5da(%rip),%rdx        # 820710 <_tinystm+0x800550>
   13136:	48 85 d2             	test   %rdx,%rdx
   13139:	74 09                	je     13144 <stm_load_long+0x2e4>
   1313b:	48 8b 70 28          	mov    0x28(%rax),%rsi
   1313f:	4c 89 e7             	mov    %r12,%rdi
   13142:	ff d2                	callq  *%rdx
   13144:	be 40 02 00 00       	mov    $0x240,%esi
   13149:	4c 89 e7             	mov    %r12,%rdi
   1314c:	e8 af d6 ff ff       	callq  10800 <stm_rollback>
   13151:	31 c0                	xor    %eax,%eax
   13153:	e9 db fd ff ff       	jmpq   12f33 <stm_load_long+0xd3>
   13158:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1315f:	00 
   13160:	48 8b 15 a9 d5 80 00 	mov    0x80d5a9(%rip),%rdx        # 820710 <_tinystm+0x800550>
   13167:	48 85 d2             	test   %rdx,%rdx
   1316a:	0f 84 be fe ff ff    	je     1302e <stm_load_long+0x1ce>
   13170:	48 8b 70 28          	mov    0x28(%rax),%rsi
   13174:	4c 89 e7             	mov    %r12,%rdi
   13177:	ff d2                	callq  *%rdx
   13179:	e9 b0 fe ff ff       	jmpq   1302e <stm_load_long+0x1ce>
   1317e:	66 90                	xchg   %ax,%ax
   13180:	4d 89 94 24 e0 00 00 	mov    %r10,0xe0(%r12)
   13187:	00 
   13188:	48 8b 03             	mov    (%rbx),%rax
   1318b:	49 39 c1             	cmp    %rax,%r9
   1318e:	0f 85 19 fd ff ff    	jne    12ead <stm_load_long+0x4d>
   13194:	41 0f b6 94 24 ca 00 	movzbl 0xca(%r12),%edx
   1319b:	00 00 
   1319d:	83 e2 01             	and    $0x1,%edx
   131a0:	e9 53 fd ff ff       	jmpq   12ef8 <stm_load_long+0x98>
   131a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   131ac:	00 00 00 00 

00000000000131b0 <stm_load_ulong>:
   131b0:	f3 0f 1e fa          	endbr64 
   131b4:	41 57                	push   %r15
   131b6:	41 56                	push   %r14
   131b8:	41 55                	push   %r13
   131ba:	41 54                	push   %r12
   131bc:	55                   	push   %rbp
   131bd:	48 89 fd             	mov    %rdi,%rbp
   131c0:	53                   	push   %rbx
   131c1:	48 83 ec 28          	sub    $0x28,%rsp
   131c5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   131cc:	83 e7 07             	and    $0x7,%edi
   131cf:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   131d3:	0f 85 b7 00 00 00    	jne    13290 <stm_load_ulong+0xe0>
   131d9:	48 89 eb             	mov    %rbp,%rbx
   131dc:	48 c1 eb 02          	shr    $0x2,%rbx
   131e0:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   131e6:	48 8d 05 d3 cf 00 00 	lea    0xcfd3(%rip),%rax        # 201c0 <_tinystm>
   131ed:	48 01 c3             	add    %rax,%rbx
   131f0:	49 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%r15
   131f7:	ff ff 0f 
   131fa:	48 8b 03             	mov    (%rbx),%rax
   131fd:	a8 01                	test   $0x1,%al
   131ff:	0f 85 ab 00 00 00    	jne    132b0 <stm_load_ulong+0x100>
   13205:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
   13209:	4c 8b 0b             	mov    (%rbx),%r9
   1320c:	4c 39 c8             	cmp    %r9,%rax
   1320f:	0f 85 fb 00 00 00    	jne    13310 <stm_load_ulong+0x160>
   13215:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   1321c:	00 0f 
   1321e:	75 5c                	jne    1327c <stm_load_ulong+0xcc>
   13220:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   13227:	00 00 
   13229:	4d 89 ce             	mov    %r9,%r14
   1322c:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   13233:	00 
   13234:	49 c1 ee 04          	shr    $0x4,%r14
   13238:	83 e0 01             	and    $0x1,%eax
   1323b:	4d 39 c6             	cmp    %r8,%r14
   1323e:	0f 87 dc 00 00 00    	ja     13320 <stm_load_ulong+0x170>
   13244:	84 c0                	test   %al,%al
   13246:	75 34                	jne    1327c <stm_load_ulong+0xcc>
   13248:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   1324f:	00 
   13250:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
   13257:	00 
   13258:	0f 84 1a 01 00 00    	je     13378 <stm_load_ulong+0x1c8>
   1325e:	8d 50 01             	lea    0x1(%rax),%edx
   13261:	48 c1 e0 04          	shl    $0x4,%rax
   13265:	49 03 84 24 e8 00 00 	add    0xe8(%r12),%rax
   1326c:	00 
   1326d:	41 89 94 24 f0 00 00 	mov    %edx,0xf0(%r12)
   13274:	00 
   13275:	4c 89 30             	mov    %r14,(%rax)
   13278:	48 89 58 08          	mov    %rbx,0x8(%rax)
   1327c:	48 83 c4 28          	add    $0x28,%rsp
   13280:	5b                   	pop    %rbx
   13281:	5d                   	pop    %rbp
   13282:	41 5c                	pop    %r12
   13284:	4c 89 e8             	mov    %r13,%rax
   13287:	41 5d                	pop    %r13
   13289:	41 5e                	pop    %r14
   1328b:	41 5f                	pop    %r15
   1328d:	c3                   	retq   
   1328e:	66 90                	xchg   %ax,%ax
   13290:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   13295:	ba 08 00 00 00       	mov    $0x8,%edx
   1329a:	48 89 ef             	mov    %rbp,%rdi
   1329d:	e8 ce e0 ff ff       	callq  11370 <stm_load_bytes>
   132a2:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   132a7:	eb d3                	jmp    1327c <stm_load_ulong+0xcc>
   132a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   132b0:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   132b7:	00 
   132b8:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   132bc:	48 39 d0             	cmp    %rdx,%rax
   132bf:	0f 82 8b 01 00 00    	jb     13450 <stm_load_ulong+0x2a0>
   132c5:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   132cc:	00 
   132cd:	48 c1 e1 06          	shl    $0x6,%rcx
   132d1:	48 01 ca             	add    %rcx,%rdx
   132d4:	48 39 d0             	cmp    %rdx,%rax
   132d7:	72 14                	jb     132ed <stm_load_ulong+0x13d>
   132d9:	e9 72 01 00 00       	jmpq   13450 <stm_load_ulong+0x2a0>
   132de:	66 90                	xchg   %ax,%ax
   132e0:	48 8b 40 30          	mov    0x30(%rax),%rax
   132e4:	48 85 c0             	test   %rax,%rax
   132e7:	0f 84 a3 00 00 00    	je     13390 <stm_load_ulong+0x1e0>
   132ed:	48 3b 28             	cmp    (%rax),%rbp
   132f0:	75 ee                	jne    132e0 <stm_load_ulong+0x130>
   132f2:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   132f7:	0f 84 93 00 00 00    	je     13390 <stm_load_ulong+0x1e0>
   132fd:	4c 8b 68 08          	mov    0x8(%rax),%r13
   13301:	e9 76 ff ff ff       	jmpq   1327c <stm_load_ulong+0xcc>
   13306:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1330d:	00 00 00 
   13310:	4c 89 c8             	mov    %r9,%rax
   13313:	e9 e5 fe ff ff       	jmpq   131fd <stm_load_ulong+0x4d>
   13318:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1331f:	00 
   13320:	4c 89 0c 24          	mov    %r9,(%rsp)
   13324:	84 c0                	test   %al,%al
   13326:	75 34                	jne    1335c <stm_load_ulong+0x1ac>
   13328:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   1332f:	00 
   13330:	4c 89 e2             	mov    %r12,%rdx
   13333:	48 8d 35 26 71 00 00 	lea    0x7126(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   1333a:	bf 01 00 00 00       	mov    $0x1,%edi
   1333f:	e8 4c f1 fe ff       	callq  2490 <__printf_chk@plt>
   13344:	31 ff                	xor    %edi,%edi
   13346:	e8 15 f1 fe ff       	callq  2460 <fflush@plt>
   1334b:	4c 8b 15 ee ce 80 00 	mov    0x80ceee(%rip),%r10        # 820240 <_tinystm+0x800080>
   13352:	4d 39 fa             	cmp    %r15,%r10
   13355:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   1335a:	76 44                	jbe    133a0 <stm_load_ulong+0x1f0>
   1335c:	be 40 05 00 00       	mov    $0x540,%esi
   13361:	4c 89 e7             	mov    %r12,%rdi
   13364:	e8 97 d4 ff ff       	callq  10800 <stm_rollback>
   13369:	45 31 ed             	xor    %r13d,%r13d
   1336c:	e9 0b ff ff ff       	jmpq   1327c <stm_load_ulong+0xcc>
   13371:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13378:	4c 89 e7             	mov    %r12,%rdi
   1337b:	e8 f0 d2 ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   13380:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   13387:	00 
   13388:	e9 d1 fe ff ff       	jmpq   1325e <stm_load_ulong+0xae>
   1338d:	0f 1f 00             	nopl   (%rax)
   13390:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
   13394:	e9 e3 fe ff ff       	jmpq   1327c <stm_load_ulong+0xcc>
   13399:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   133a0:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   133a7:	00 
   133a8:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   133af:	00 
   133b0:	4c 89 e2             	mov    %r12,%rdx
   133b3:	48 8d 35 0e 70 00 00 	lea    0x700e(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   133ba:	bf 01 00 00 00       	mov    $0x1,%edi
   133bf:	31 c0                	xor    %eax,%eax
   133c1:	e8 ca f0 fe ff       	callq  2490 <__printf_chk@plt>
   133c6:	31 ff                	xor    %edi,%edi
   133c8:	e8 93 f0 fe ff       	callq  2460 <fflush@plt>
   133cd:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   133d4:	00 
   133d5:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   133dc:	00 
   133dd:	85 c0                	test   %eax,%eax
   133df:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   133e4:	4c 8b 0c 24          	mov    (%rsp),%r9
   133e8:	0f 8e c2 00 00 00    	jle    134b0 <stm_load_ulong+0x300>
   133ee:	8d 70 ff             	lea    -0x1(%rax),%esi
   133f1:	48 ff c6             	inc    %rsi
   133f4:	48 c1 e6 04          	shl    $0x4,%rsi
   133f8:	48 01 d6             	add    %rdx,%rsi
   133fb:	eb 35                	jmp    13432 <stm_load_ulong+0x282>
   133fd:	0f 1f 00             	nopl   (%rax)
   13400:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   13407:	00 
   13408:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1340c:	48 39 c8             	cmp    %rcx,%rax
   1340f:	72 7f                	jb     13490 <stm_load_ulong+0x2e0>
   13411:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   13418:	00 
   13419:	48 c1 e7 06          	shl    $0x6,%rdi
   1341d:	48 01 f9             	add    %rdi,%rcx
   13420:	48 39 c8             	cmp    %rcx,%rax
   13423:	73 6b                	jae    13490 <stm_load_ulong+0x2e0>
   13425:	48 83 c2 10          	add    $0x10,%rdx
   13429:	48 39 d6             	cmp    %rdx,%rsi
   1342c:	0f 84 7e 00 00 00    	je     134b0 <stm_load_ulong+0x300>
   13432:	48 8b 42 08          	mov    0x8(%rdx),%rax
   13436:	48 8b 00             	mov    (%rax),%rax
   13439:	a8 01                	test   $0x1,%al
   1343b:	75 c3                	jne    13400 <stm_load_ulong+0x250>
   1343d:	48 c1 e8 04          	shr    $0x4,%rax
   13441:	48 3b 02             	cmp    (%rdx),%rax
   13444:	74 df                	je     13425 <stm_load_ulong+0x275>
   13446:	e9 11 ff ff ff       	jmpq   1335c <stm_load_ulong+0x1ac>
   1344b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13450:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   13457:	00 0f 
   13459:	0f 85 9b fd ff ff    	jne    131fa <stm_load_ulong+0x4a>
   1345f:	48 8b 15 aa d2 80 00 	mov    0x80d2aa(%rip),%rdx        # 820710 <_tinystm+0x800550>
   13466:	48 85 d2             	test   %rdx,%rdx
   13469:	74 09                	je     13474 <stm_load_ulong+0x2c4>
   1346b:	48 8b 70 28          	mov    0x28(%rax),%rsi
   1346f:	4c 89 e7             	mov    %r12,%rdi
   13472:	ff d2                	callq  *%rdx
   13474:	be 40 02 00 00       	mov    $0x240,%esi
   13479:	4c 89 e7             	mov    %r12,%rdi
   1347c:	e8 7f d3 ff ff       	callq  10800 <stm_rollback>
   13481:	45 31 ed             	xor    %r13d,%r13d
   13484:	e9 f3 fd ff ff       	jmpq   1327c <stm_load_ulong+0xcc>
   13489:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   13490:	48 8b 15 79 d2 80 00 	mov    0x80d279(%rip),%rdx        # 820710 <_tinystm+0x800550>
   13497:	48 85 d2             	test   %rdx,%rdx
   1349a:	0f 84 bc fe ff ff    	je     1335c <stm_load_ulong+0x1ac>
   134a0:	48 8b 70 28          	mov    0x28(%rax),%rsi
   134a4:	4c 89 e7             	mov    %r12,%rdi
   134a7:	ff d2                	callq  *%rdx
   134a9:	e9 ae fe ff ff       	jmpq   1335c <stm_load_ulong+0x1ac>
   134ae:	66 90                	xchg   %ax,%ax
   134b0:	4d 89 94 24 e0 00 00 	mov    %r10,0xe0(%r12)
   134b7:	00 
   134b8:	48 8b 03             	mov    (%rbx),%rax
   134bb:	49 39 c1             	cmp    %rax,%r9
   134be:	0f 85 39 fd ff ff    	jne    131fd <stm_load_ulong+0x4d>
   134c4:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   134cb:	00 00 
   134cd:	83 e0 01             	and    $0x1,%eax
   134d0:	e9 6f fd ff ff       	jmpq   13244 <stm_load_ulong+0x94>
   134d5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   134dc:	00 00 00 00 

00000000000134e0 <stm_load_float>:
   134e0:	f3 0f 1e fa          	endbr64 
   134e4:	41 57                	push   %r15
   134e6:	41 56                	push   %r14
   134e8:	41 55                	push   %r13
   134ea:	41 54                	push   %r12
   134ec:	55                   	push   %rbp
   134ed:	48 89 fd             	mov    %rdi,%rbp
   134f0:	53                   	push   %rbx
   134f1:	48 83 ec 28          	sub    $0x28,%rsp
   134f5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   134fc:	83 e7 03             	and    $0x3,%edi
   134ff:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   13503:	0f 85 c7 00 00 00    	jne    135d0 <stm_load_float+0xf0>
   13509:	48 89 eb             	mov    %rbp,%rbx
   1350c:	48 c1 eb 02          	shr    $0x2,%rbx
   13510:	49 89 ef             	mov    %rbp,%r15
   13513:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   13519:	48 8d 05 a0 cc 00 00 	lea    0xcca0(%rip),%rax        # 201c0 <_tinystm>
   13520:	49 83 e7 f8          	and    $0xfffffffffffffff8,%r15
   13524:	48 01 c3             	add    %rax,%rbx
   13527:	48 8b 03             	mov    (%rbx),%rax
   1352a:	a8 01                	test   $0x1,%al
   1352c:	0f 85 be 00 00 00    	jne    135f0 <stm_load_float+0x110>
   13532:	4d 8b 2f             	mov    (%r15),%r13
   13535:	4c 8b 13             	mov    (%rbx),%r10
   13538:	4c 39 d0             	cmp    %r10,%rax
   1353b:	0f 85 0f 01 00 00    	jne    13650 <stm_load_float+0x170>
   13541:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   13548:	00 0f 
   1354a:	75 5c                	jne    135a8 <stm_load_float+0xc8>
   1354c:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   13553:	00 00 
   13555:	4d 89 d6             	mov    %r10,%r14
   13558:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   1355f:	00 
   13560:	49 c1 ee 04          	shr    $0x4,%r14
   13564:	83 e0 01             	and    $0x1,%eax
   13567:	4d 39 c6             	cmp    %r8,%r14
   1356a:	0f 87 f0 00 00 00    	ja     13660 <stm_load_float+0x180>
   13570:	84 c0                	test   %al,%al
   13572:	75 34                	jne    135a8 <stm_load_float+0xc8>
   13574:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   1357b:	00 
   1357c:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
   13583:	00 
   13584:	0f 84 36 01 00 00    	je     136c0 <stm_load_float+0x1e0>
   1358a:	8d 50 01             	lea    0x1(%rax),%edx
   1358d:	48 c1 e0 04          	shl    $0x4,%rax
   13591:	49 03 84 24 e8 00 00 	add    0xe8(%r12),%rax
   13598:	00 
   13599:	41 89 94 24 f0 00 00 	mov    %edx,0xf0(%r12)
   135a0:	00 
   135a1:	4c 89 30             	mov    %r14,(%rax)
   135a4:	48 89 58 08          	mov    %rbx,0x8(%rax)
   135a8:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   135ad:	83 e5 04             	and    $0x4,%ebp
   135b0:	8b 44 2c 18          	mov    0x18(%rsp,%rbp,1),%eax
   135b4:	48 83 c4 28          	add    $0x28,%rsp
   135b8:	5b                   	pop    %rbx
   135b9:	5d                   	pop    %rbp
   135ba:	41 5c                	pop    %r12
   135bc:	41 5d                	pop    %r13
   135be:	41 5e                	pop    %r14
   135c0:	c5 f9 6e c0          	vmovd  %eax,%xmm0
   135c4:	41 5f                	pop    %r15
   135c6:	c3                   	retq   
   135c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   135ce:	00 00 
   135d0:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   135d5:	ba 04 00 00 00       	mov    $0x4,%edx
   135da:	48 89 ef             	mov    %rbp,%rdi
   135dd:	e8 8e dd ff ff       	callq  11370 <stm_load_bytes>
   135e2:	8b 44 24 18          	mov    0x18(%rsp),%eax
   135e6:	eb cc                	jmp    135b4 <stm_load_float+0xd4>
   135e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   135ef:	00 
   135f0:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   135f7:	00 
   135f8:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   135fc:	48 39 d0             	cmp    %rdx,%rax
   135ff:	0f 82 8b 01 00 00    	jb     13790 <stm_load_float+0x2b0>
   13605:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   1360c:	00 
   1360d:	48 c1 e1 06          	shl    $0x6,%rcx
   13611:	48 01 ca             	add    %rcx,%rdx
   13614:	48 39 d0             	cmp    %rdx,%rax
   13617:	72 14                	jb     1362d <stm_load_float+0x14d>
   13619:	e9 72 01 00 00       	jmpq   13790 <stm_load_float+0x2b0>
   1361e:	66 90                	xchg   %ax,%ax
   13620:	48 8b 40 30          	mov    0x30(%rax),%rax
   13624:	48 85 c0             	test   %rax,%rax
   13627:	0f 84 ab 00 00 00    	je     136d8 <stm_load_float+0x1f8>
   1362d:	4c 3b 38             	cmp    (%rax),%r15
   13630:	75 ee                	jne    13620 <stm_load_float+0x140>
   13632:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   13637:	0f 84 9b 00 00 00    	je     136d8 <stm_load_float+0x1f8>
   1363d:	4c 8b 68 08          	mov    0x8(%rax),%r13
   13641:	e9 62 ff ff ff       	jmpq   135a8 <stm_load_float+0xc8>
   13646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1364d:	00 00 00 
   13650:	4c 89 d0             	mov    %r10,%rax
   13653:	e9 d2 fe ff ff       	jmpq   1352a <stm_load_float+0x4a>
   13658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1365f:	00 
   13660:	4c 89 14 24          	mov    %r10,(%rsp)
   13664:	84 c0                	test   %al,%al
   13666:	75 3e                	jne    136a6 <stm_load_float+0x1c6>
   13668:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   1366f:	00 
   13670:	4c 89 e2             	mov    %r12,%rdx
   13673:	48 8d 35 e6 6d 00 00 	lea    0x6de6(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   1367a:	bf 01 00 00 00       	mov    $0x1,%edi
   1367f:	e8 0c ee fe ff       	callq  2490 <__printf_chk@plt>
   13684:	31 ff                	xor    %edi,%edi
   13686:	e8 d5 ed fe ff       	callq  2460 <fflush@plt>
   1368b:	4c 8b 1d ae cb 80 00 	mov    0x80cbae(%rip),%r11        # 820240 <_tinystm+0x800080>
   13692:	49 b9 fe df ff ff ff 	movabs $0xfffffffffffdffe,%r9
   13699:	ff ff 0f 
   1369c:	4d 39 cb             	cmp    %r9,%r11
   1369f:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   136a4:	76 3a                	jbe    136e0 <stm_load_float+0x200>
   136a6:	be 40 05 00 00       	mov    $0x540,%esi
   136ab:	4c 89 e7             	mov    %r12,%rdi
   136ae:	e8 4d d1 ff ff       	callq  10800 <stm_rollback>
   136b3:	45 31 ed             	xor    %r13d,%r13d
   136b6:	e9 ed fe ff ff       	jmpq   135a8 <stm_load_float+0xc8>
   136bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   136c0:	4c 89 e7             	mov    %r12,%rdi
   136c3:	e8 a8 cf ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   136c8:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   136cf:	00 
   136d0:	e9 b5 fe ff ff       	jmpq   1358a <stm_load_float+0xaa>
   136d5:	0f 1f 00             	nopl   (%rax)
   136d8:	4d 8b 2f             	mov    (%r15),%r13
   136db:	e9 c8 fe ff ff       	jmpq   135a8 <stm_load_float+0xc8>
   136e0:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   136e7:	00 
   136e8:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   136ef:	00 
   136f0:	4c 89 e2             	mov    %r12,%rdx
   136f3:	48 8d 35 ce 6c 00 00 	lea    0x6cce(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   136fa:	bf 01 00 00 00       	mov    $0x1,%edi
   136ff:	31 c0                	xor    %eax,%eax
   13701:	e8 8a ed fe ff       	callq  2490 <__printf_chk@plt>
   13706:	31 ff                	xor    %edi,%edi
   13708:	e8 53 ed fe ff       	callq  2460 <fflush@plt>
   1370d:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   13714:	00 
   13715:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   1371c:	00 
   1371d:	85 c0                	test   %eax,%eax
   1371f:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   13724:	4c 8b 14 24          	mov    (%rsp),%r10
   13728:	0f 8e c2 00 00 00    	jle    137f0 <stm_load_float+0x310>
   1372e:	8d 70 ff             	lea    -0x1(%rax),%esi
   13731:	48 ff c6             	inc    %rsi
   13734:	48 c1 e6 04          	shl    $0x4,%rsi
   13738:	48 01 d6             	add    %rdx,%rsi
   1373b:	eb 35                	jmp    13772 <stm_load_float+0x292>
   1373d:	0f 1f 00             	nopl   (%rax)
   13740:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   13747:	00 
   13748:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1374c:	48 39 c8             	cmp    %rcx,%rax
   1374f:	72 7f                	jb     137d0 <stm_load_float+0x2f0>
   13751:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   13758:	00 
   13759:	48 c1 e7 06          	shl    $0x6,%rdi
   1375d:	48 01 f9             	add    %rdi,%rcx
   13760:	48 39 c8             	cmp    %rcx,%rax
   13763:	73 6b                	jae    137d0 <stm_load_float+0x2f0>
   13765:	48 83 c2 10          	add    $0x10,%rdx
   13769:	48 39 d6             	cmp    %rdx,%rsi
   1376c:	0f 84 7e 00 00 00    	je     137f0 <stm_load_float+0x310>
   13772:	48 8b 42 08          	mov    0x8(%rdx),%rax
   13776:	48 8b 00             	mov    (%rax),%rax
   13779:	a8 01                	test   $0x1,%al
   1377b:	75 c3                	jne    13740 <stm_load_float+0x260>
   1377d:	48 c1 e8 04          	shr    $0x4,%rax
   13781:	48 3b 02             	cmp    (%rdx),%rax
   13784:	74 df                	je     13765 <stm_load_float+0x285>
   13786:	e9 1b ff ff ff       	jmpq   136a6 <stm_load_float+0x1c6>
   1378b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13790:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   13797:	00 0f 
   13799:	0f 85 88 fd ff ff    	jne    13527 <stm_load_float+0x47>
   1379f:	48 8b 15 6a cf 80 00 	mov    0x80cf6a(%rip),%rdx        # 820710 <_tinystm+0x800550>
   137a6:	48 85 d2             	test   %rdx,%rdx
   137a9:	74 09                	je     137b4 <stm_load_float+0x2d4>
   137ab:	48 8b 70 28          	mov    0x28(%rax),%rsi
   137af:	4c 89 e7             	mov    %r12,%rdi
   137b2:	ff d2                	callq  *%rdx
   137b4:	be 40 02 00 00       	mov    $0x240,%esi
   137b9:	4c 89 e7             	mov    %r12,%rdi
   137bc:	e8 3f d0 ff ff       	callq  10800 <stm_rollback>
   137c1:	45 31 ed             	xor    %r13d,%r13d
   137c4:	e9 df fd ff ff       	jmpq   135a8 <stm_load_float+0xc8>
   137c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   137d0:	48 8b 15 39 cf 80 00 	mov    0x80cf39(%rip),%rdx        # 820710 <_tinystm+0x800550>
   137d7:	48 85 d2             	test   %rdx,%rdx
   137da:	0f 84 c6 fe ff ff    	je     136a6 <stm_load_float+0x1c6>
   137e0:	48 8b 70 28          	mov    0x28(%rax),%rsi
   137e4:	4c 89 e7             	mov    %r12,%rdi
   137e7:	ff d2                	callq  *%rdx
   137e9:	e9 b8 fe ff ff       	jmpq   136a6 <stm_load_float+0x1c6>
   137ee:	66 90                	xchg   %ax,%ax
   137f0:	4d 89 9c 24 e0 00 00 	mov    %r11,0xe0(%r12)
   137f7:	00 
   137f8:	48 8b 03             	mov    (%rbx),%rax
   137fb:	49 39 c2             	cmp    %rax,%r10
   137fe:	0f 85 26 fd ff ff    	jne    1352a <stm_load_float+0x4a>
   13804:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   1380b:	00 00 
   1380d:	83 e0 01             	and    $0x1,%eax
   13810:	e9 5b fd ff ff       	jmpq   13570 <stm_load_float+0x90>
   13815:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1381c:	00 00 00 00 

0000000000013820 <stm_load_double>:
   13820:	f3 0f 1e fa          	endbr64 
   13824:	41 57                	push   %r15
   13826:	41 56                	push   %r14
   13828:	41 55                	push   %r13
   1382a:	41 54                	push   %r12
   1382c:	55                   	push   %rbp
   1382d:	48 89 fd             	mov    %rdi,%rbp
   13830:	53                   	push   %rbx
   13831:	48 83 ec 28          	sub    $0x28,%rsp
   13835:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   1383c:	83 e7 07             	and    $0x7,%edi
   1383f:	64 4c 8b 20          	mov    %fs:(%rax),%r12
   13843:	0f 85 bf 00 00 00    	jne    13908 <stm_load_double+0xe8>
   13849:	48 89 eb             	mov    %rbp,%rbx
   1384c:	48 c1 eb 02          	shr    $0x2,%rbx
   13850:	81 e3 f8 ff 7f 00    	and    $0x7ffff8,%ebx
   13856:	48 8d 05 63 c9 00 00 	lea    0xc963(%rip),%rax        # 201c0 <_tinystm>
   1385d:	48 01 c3             	add    %rax,%rbx
   13860:	49 bf fe df ff ff ff 	movabs $0xfffffffffffdffe,%r15
   13867:	ff ff 0f 
   1386a:	48 8b 03             	mov    (%rbx),%rax
   1386d:	a8 01                	test   $0x1,%al
   1386f:	0f 85 bb 00 00 00    	jne    13930 <stm_load_double+0x110>
   13875:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
   13879:	4c 8b 0b             	mov    (%rbx),%r9
   1387c:	4c 39 c8             	cmp    %r9,%rax
   1387f:	0f 85 0b 01 00 00    	jne    13990 <stm_load_double+0x170>
   13885:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   1388c:	00 0f 
   1388e:	0f 85 0c 01 00 00    	jne    139a0 <stm_load_double+0x180>
   13894:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   1389b:	00 00 
   1389d:	4d 89 ce             	mov    %r9,%r14
   138a0:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   138a7:	00 
   138a8:	49 c1 ee 04          	shr    $0x4,%r14
   138ac:	83 e0 01             	and    $0x1,%eax
   138af:	4d 39 c6             	cmp    %r8,%r14
   138b2:	0f 87 f8 00 00 00    	ja     139b0 <stm_load_double+0x190>
   138b8:	c4 c1 f9 6e c5       	vmovq  %r13,%xmm0
   138bd:	84 c0                	test   %al,%al
   138bf:	75 34                	jne    138f5 <stm_load_double+0xd5>
   138c1:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   138c8:	00 
   138c9:	41 3b 84 24 f4 00 00 	cmp    0xf4(%r12),%eax
   138d0:	00 
   138d1:	0f 84 31 01 00 00    	je     13a08 <stm_load_double+0x1e8>
   138d7:	8d 50 01             	lea    0x1(%rax),%edx
   138da:	48 c1 e0 04          	shl    $0x4,%rax
   138de:	49 03 84 24 e8 00 00 	add    0xe8(%r12),%rax
   138e5:	00 
   138e6:	41 89 94 24 f0 00 00 	mov    %edx,0xf0(%r12)
   138ed:	00 
   138ee:	4c 89 30             	mov    %r14,(%rax)
   138f1:	48 89 58 08          	mov    %rbx,0x8(%rax)
   138f5:	48 83 c4 28          	add    $0x28,%rsp
   138f9:	5b                   	pop    %rbx
   138fa:	5d                   	pop    %rbp
   138fb:	41 5c                	pop    %r12
   138fd:	41 5d                	pop    %r13
   138ff:	41 5e                	pop    %r14
   13901:	41 5f                	pop    %r15
   13903:	c3                   	retq   
   13904:	0f 1f 40 00          	nopl   0x0(%rax)
   13908:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1390d:	48 89 ef             	mov    %rbp,%rdi
   13910:	ba 08 00 00 00       	mov    $0x8,%edx
   13915:	e8 56 da ff ff       	callq  11370 <stm_load_bytes>
   1391a:	c5 fb 10 44 24 18    	vmovsd 0x18(%rsp),%xmm0
   13920:	48 83 c4 28          	add    $0x28,%rsp
   13924:	5b                   	pop    %rbx
   13925:	5d                   	pop    %rbp
   13926:	41 5c                	pop    %r12
   13928:	41 5d                	pop    %r13
   1392a:	41 5e                	pop    %r14
   1392c:	41 5f                	pop    %r15
   1392e:	c3                   	retq   
   1392f:	90                   	nop
   13930:	49 8b 94 24 f8 00 00 	mov    0xf8(%r12),%rdx
   13937:	00 
   13938:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   1393c:	48 39 d0             	cmp    %rdx,%rax
   1393f:	0f 82 ab 01 00 00    	jb     13af0 <stm_load_double+0x2d0>
   13945:	41 8b 8c 24 00 01 00 	mov    0x100(%r12),%ecx
   1394c:	00 
   1394d:	48 c1 e1 06          	shl    $0x6,%rcx
   13951:	48 01 ca             	add    %rcx,%rdx
   13954:	48 39 d0             	cmp    %rdx,%rax
   13957:	72 14                	jb     1396d <stm_load_double+0x14d>
   13959:	e9 92 01 00 00       	jmpq   13af0 <stm_load_double+0x2d0>
   1395e:	66 90                	xchg   %ax,%ax
   13960:	48 8b 40 30          	mov    0x30(%rax),%rax
   13964:	48 85 c0             	test   %rax,%rax
   13967:	0f 84 c3 00 00 00    	je     13a30 <stm_load_double+0x210>
   1396d:	48 3b 28             	cmp    (%rax),%rbp
   13970:	75 ee                	jne    13960 <stm_load_double+0x140>
   13972:	48 83 78 10 00       	cmpq   $0x0,0x10(%rax)
   13977:	0f 84 b3 00 00 00    	je     13a30 <stm_load_double+0x210>
   1397d:	c5 fb 10 40 08       	vmovsd 0x8(%rax),%xmm0
   13982:	e9 6e ff ff ff       	jmpq   138f5 <stm_load_double+0xd5>
   13987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1398e:	00 00 
   13990:	4c 89 c8             	mov    %r9,%rax
   13993:	e9 d5 fe ff ff       	jmpq   1386d <stm_load_double+0x4d>
   13998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1399f:	00 
   139a0:	c4 c1 f9 6e c5       	vmovq  %r13,%xmm0
   139a5:	e9 4b ff ff ff       	jmpq   138f5 <stm_load_double+0xd5>
   139aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   139b0:	4c 89 0c 24          	mov    %r9,(%rsp)
   139b4:	84 c0                	test   %al,%al
   139b6:	75 34                	jne    139ec <stm_load_double+0x1cc>
   139b8:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   139bf:	00 
   139c0:	4c 89 e2             	mov    %r12,%rdx
   139c3:	48 8d 35 96 6a 00 00 	lea    0x6a96(%rip),%rsi        # 1a460 <__PRETTY_FUNCTION__.3713+0x5f8>
   139ca:	bf 01 00 00 00       	mov    $0x1,%edi
   139cf:	e8 bc ea fe ff       	callq  2490 <__printf_chk@plt>
   139d4:	31 ff                	xor    %edi,%edi
   139d6:	e8 85 ea fe ff       	callq  2460 <fflush@plt>
   139db:	4c 8b 15 5e c8 80 00 	mov    0x80c85e(%rip),%r10        # 820240 <_tinystm+0x800080>
   139e2:	4d 39 fa             	cmp    %r15,%r10
   139e5:	4c 89 54 24 08       	mov    %r10,0x8(%rsp)
   139ea:	76 54                	jbe    13a40 <stm_load_double+0x220>
   139ec:	be 40 05 00 00       	mov    $0x540,%esi
   139f1:	4c 89 e7             	mov    %r12,%rdi
   139f4:	e8 07 ce ff ff       	callq  10800 <stm_rollback>
   139f9:	c5 f9 57 c0          	vxorpd %xmm0,%xmm0,%xmm0
   139fd:	e9 f3 fe ff ff       	jmpq   138f5 <stm_load_double+0xd5>
   13a02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13a08:	4c 89 e7             	mov    %r12,%rdi
   13a0b:	4c 89 2c 24          	mov    %r13,(%rsp)
   13a0f:	e8 5c cc ff ff       	callq  10670 <stm_allocate_rs_entries.constprop.0>
   13a14:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   13a1b:	00 
   13a1c:	c5 fb 10 04 24       	vmovsd (%rsp),%xmm0
   13a21:	e9 b1 fe ff ff       	jmpq   138d7 <stm_load_double+0xb7>
   13a26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13a2d:	00 00 00 
   13a30:	48 8b 45 00          	mov    0x0(%rbp),%rax
   13a34:	c4 e1 f9 6e c0       	vmovq  %rax,%xmm0
   13a39:	e9 b7 fe ff ff       	jmpq   138f5 <stm_load_double+0xd5>
   13a3e:	66 90                	xchg   %ax,%ax
   13a40:	49 8b 8c 24 d8 00 00 	mov    0xd8(%r12),%rcx
   13a47:	00 
   13a48:	4d 8b 84 24 e0 00 00 	mov    0xe0(%r12),%r8
   13a4f:	00 
   13a50:	4c 89 e2             	mov    %r12,%rdx
   13a53:	48 8d 35 6e 69 00 00 	lea    0x696e(%rip),%rsi        # 1a3c8 <__PRETTY_FUNCTION__.3713+0x560>
   13a5a:	bf 01 00 00 00       	mov    $0x1,%edi
   13a5f:	31 c0                	xor    %eax,%eax
   13a61:	e8 2a ea fe ff       	callq  2490 <__printf_chk@plt>
   13a66:	31 ff                	xor    %edi,%edi
   13a68:	e8 f3 e9 fe ff       	callq  2460 <fflush@plt>
   13a6d:	41 8b 84 24 f0 00 00 	mov    0xf0(%r12),%eax
   13a74:	00 
   13a75:	49 8b 94 24 e8 00 00 	mov    0xe8(%r12),%rdx
   13a7c:	00 
   13a7d:	85 c0                	test   %eax,%eax
   13a7f:	4c 8b 54 24 08       	mov    0x8(%rsp),%r10
   13a84:	4c 8b 0c 24          	mov    (%rsp),%r9
   13a88:	0f 8e c2 00 00 00    	jle    13b50 <stm_load_double+0x330>
   13a8e:	8d 70 ff             	lea    -0x1(%rax),%esi
   13a91:	48 ff c6             	inc    %rsi
   13a94:	48 c1 e6 04          	shl    $0x4,%rsi
   13a98:	48 01 d6             	add    %rdx,%rsi
   13a9b:	eb 35                	jmp    13ad2 <stm_load_double+0x2b2>
   13a9d:	0f 1f 00             	nopl   (%rax)
   13aa0:	49 8b 8c 24 f8 00 00 	mov    0xf8(%r12),%rcx
   13aa7:	00 
   13aa8:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
   13aac:	48 39 c8             	cmp    %rcx,%rax
   13aaf:	72 7f                	jb     13b30 <stm_load_double+0x310>
   13ab1:	41 8b bc 24 00 01 00 	mov    0x100(%r12),%edi
   13ab8:	00 
   13ab9:	48 c1 e7 06          	shl    $0x6,%rdi
   13abd:	48 01 f9             	add    %rdi,%rcx
   13ac0:	48 39 c8             	cmp    %rcx,%rax
   13ac3:	73 6b                	jae    13b30 <stm_load_double+0x310>
   13ac5:	48 83 c2 10          	add    $0x10,%rdx
   13ac9:	48 39 d6             	cmp    %rdx,%rsi
   13acc:	0f 84 7e 00 00 00    	je     13b50 <stm_load_double+0x330>
   13ad2:	48 8b 42 08          	mov    0x8(%rdx),%rax
   13ad6:	48 8b 00             	mov    (%rax),%rax
   13ad9:	a8 01                	test   $0x1,%al
   13adb:	75 c3                	jne    13aa0 <stm_load_double+0x280>
   13add:	48 c1 e8 04          	shr    $0x4,%rax
   13ae1:	48 3b 02             	cmp    (%rdx),%rax
   13ae4:	74 df                	je     13ac5 <stm_load_double+0x2a5>
   13ae6:	e9 01 ff ff ff       	jmpq   139ec <stm_load_double+0x1cc>
   13aeb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13af0:	41 f6 84 24 10 01 00 	testb  $0xf,0x110(%r12)
   13af7:	00 0f 
   13af9:	0f 85 6b fd ff ff    	jne    1386a <stm_load_double+0x4a>
   13aff:	48 8b 15 0a cc 80 00 	mov    0x80cc0a(%rip),%rdx        # 820710 <_tinystm+0x800550>
   13b06:	48 85 d2             	test   %rdx,%rdx
   13b09:	74 09                	je     13b14 <stm_load_double+0x2f4>
   13b0b:	48 8b 70 28          	mov    0x28(%rax),%rsi
   13b0f:	4c 89 e7             	mov    %r12,%rdi
   13b12:	ff d2                	callq  *%rdx
   13b14:	be 40 02 00 00       	mov    $0x240,%esi
   13b19:	4c 89 e7             	mov    %r12,%rdi
   13b1c:	e8 df cc ff ff       	callq  10800 <stm_rollback>
   13b21:	c5 f9 57 c0          	vxorpd %xmm0,%xmm0,%xmm0
   13b25:	e9 cb fd ff ff       	jmpq   138f5 <stm_load_double+0xd5>
   13b2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13b30:	48 8b 15 d9 cb 80 00 	mov    0x80cbd9(%rip),%rdx        # 820710 <_tinystm+0x800550>
   13b37:	48 85 d2             	test   %rdx,%rdx
   13b3a:	0f 84 ac fe ff ff    	je     139ec <stm_load_double+0x1cc>
   13b40:	48 8b 70 28          	mov    0x28(%rax),%rsi
   13b44:	4c 89 e7             	mov    %r12,%rdi
   13b47:	ff d2                	callq  *%rdx
   13b49:	e9 9e fe ff ff       	jmpq   139ec <stm_load_double+0x1cc>
   13b4e:	66 90                	xchg   %ax,%ax
   13b50:	4d 89 94 24 e0 00 00 	mov    %r10,0xe0(%r12)
   13b57:	00 
   13b58:	48 8b 03             	mov    (%rbx),%rax
   13b5b:	49 39 c1             	cmp    %rax,%r9
   13b5e:	0f 85 09 fd ff ff    	jne    1386d <stm_load_double+0x4d>
   13b64:	41 0f b6 84 24 ca 00 	movzbl 0xca(%r12),%eax
   13b6b:	00 00 
   13b6d:	83 e0 01             	and    $0x1,%eax
   13b70:	e9 43 fd ff ff       	jmpq   138b8 <stm_load_double+0x98>
   13b75:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   13b7c:	00 00 00 00 

0000000000013b80 <stm_store_u8>:
   13b80:	f3 0f 1e fa          	endbr64 
   13b84:	41 57                	push   %r15
   13b86:	4c 8d 15 fb 68 00 00 	lea    0x68fb(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   13b8d:	41 56                	push   %r14
   13b8f:	41 55                	push   %r13
   13b91:	49 89 fd             	mov    %rdi,%r13
   13b94:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
   13b98:	41 54                	push   %r12
   13b9a:	55                   	push   %rbp
   13b9b:	53                   	push   %rbx
   13b9c:	48 8d 1d 1d c6 00 00 	lea    0xc61d(%rip),%rbx        # 201c0 <_tinystm>
   13ba3:	48 83 ec 28          	sub    $0x28,%rsp
   13ba7:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   13bae:	64 4c 8b 18          	mov    %fs:(%rax),%r11
   13bb2:	48 89 f8             	mov    %rdi,%rax
   13bb5:	83 e0 07             	and    $0x7,%eax
   13bb8:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   13bbf:	00 00 
   13bc1:	40 88 74 04 10       	mov    %sil,0x10(%rsp,%rax,1)
   13bc6:	c6 44 04 18 ff       	movb   $0xff,0x18(%rsp,%rax,1)
   13bcb:	48 c1 ef 02          	shr    $0x2,%rdi
   13bcf:	81 e7 f8 ff 7f 00    	and    $0x7ffff8,%edi
   13bd5:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   13bda:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   13bdf:	48 01 fb             	add    %rdi,%rbx
   13be2:	48 8b 2b             	mov    (%rbx),%rbp
   13be5:	40 f6 c5 01          	test   $0x1,%bpl
   13be9:	0f 85 c9 00 00 00    	jne    13cb8 <stm_store_u8+0x138>
   13bef:	49 89 ee             	mov    %rbp,%r14
   13bf2:	49 c1 ee 04          	shr    $0x4,%r14
   13bf6:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   13bfd:	0f 
   13bfe:	75 14                	jne    13c14 <stm_store_u8+0x94>
   13c00:	f3 0f 1e fa          	endbr64 
   13c04:	4d 8b 83 e0 00 00 00 	mov    0xe0(%r11),%r8
   13c0b:	4d 39 c6             	cmp    %r8,%r14
   13c0e:	0f 87 5c 01 00 00    	ja     13d70 <stm_store_u8+0x1f0>
   13c14:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   13c1b:	41 3b 93 04 01 00 00 	cmp    0x104(%r11),%edx
   13c22:	0f 84 18 01 00 00    	je     13d40 <stm_store_u8+0x1c0>
   13c28:	48 c1 e2 06          	shl    $0x6,%rdx
   13c2c:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   13c33:	48 89 d1             	mov    %rdx,%rcx
   13c36:	48 83 c9 01          	or     $0x1,%rcx
   13c3a:	48 89 e8             	mov    %rbp,%rax
   13c3d:	f0 48 0f b1 0b       	lock cmpxchg %rcx,(%rbx)
   13c42:	75 9e                	jne    13be2 <stm_store_u8+0x62>
   13c44:	4c 89 2a             	mov    %r13,(%rdx)
   13c47:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   13c4b:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   13c4f:	4d 85 e4             	test   %r12,%r12
   13c52:	74 50                	je     13ca4 <stm_store_u8+0x124>
   13c54:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   13c58:	74 46                	je     13ca0 <stm_store_u8+0x120>
   13c5a:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   13c5e:	4c 89 f8             	mov    %r15,%rax
   13c61:	48 31 c8             	xor    %rcx,%rax
   13c64:	4c 21 e0             	and    %r12,%rax
   13c67:	48 31 c8             	xor    %rcx,%rax
   13c6a:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13c6e:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   13c72:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   13c79:	00 
   13c7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13c80:	41 ff 83 00 01 00 00 	incl   0x100(%r11)
   13c87:	41 ff 83 08 01 00 00 	incl   0x108(%r11)
   13c8e:	48 83 c4 28          	add    $0x28,%rsp
   13c92:	5b                   	pop    %rbx
   13c93:	5d                   	pop    %rbp
   13c94:	41 5c                	pop    %r12
   13c96:	41 5d                	pop    %r13
   13c98:	41 5e                	pop    %r14
   13c9a:	41 5f                	pop    %r15
   13c9c:	c3                   	retq   
   13c9d:	0f 1f 00             	nopl   (%rax)
   13ca0:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   13ca4:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   13ca8:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   13caf:	00 
   13cb0:	eb ce                	jmp    13c80 <stm_store_u8+0x100>
   13cb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13cb8:	49 8b 93 f8 00 00 00 	mov    0xf8(%r11),%rdx
   13cbf:	48 83 e5 fe          	and    $0xfffffffffffffffe,%rbp
   13cc3:	48 39 d5             	cmp    %rdx,%rbp
   13cc6:	0f 82 74 01 00 00    	jb     13e40 <stm_store_u8+0x2c0>
   13ccc:	41 8b 83 00 01 00 00 	mov    0x100(%r11),%eax
   13cd3:	48 89 c1             	mov    %rax,%rcx
   13cd6:	48 c1 e0 06          	shl    $0x6,%rax
   13cda:	48 01 c2             	add    %rax,%rdx
   13cdd:	48 39 d5             	cmp    %rdx,%rbp
   13ce0:	0f 83 5a 01 00 00    	jae    13e40 <stm_store_u8+0x2c0>
   13ce6:	4d 85 e4             	test   %r12,%r12
   13ce9:	75 15                	jne    13d00 <stm_store_u8+0x180>
   13ceb:	eb a1                	jmp    13c8e <stm_store_u8+0x10e>
   13ced:	0f 1f 00             	nopl   (%rax)
   13cf0:	48 8b 45 30          	mov    0x30(%rbp),%rax
   13cf4:	48 85 c0             	test   %rax,%rax
   13cf7:	0f 84 03 01 00 00    	je     13e00 <stm_store_u8+0x280>
   13cfd:	48 89 c5             	mov    %rax,%rbp
   13d00:	4c 3b 6d 00          	cmp    0x0(%rbp),%r13
   13d04:	75 ea                	jne    13cf0 <stm_store_u8+0x170>
   13d06:	48 8b 45 10          	mov    0x10(%rbp),%rax
   13d0a:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   13d0e:	74 16                	je     13d26 <stm_store_u8+0x1a6>
   13d10:	48 85 c0             	test   %rax,%rax
   13d13:	0f 84 67 01 00 00    	je     13e80 <stm_store_u8+0x300>
   13d19:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   13d1d:	49 31 d7             	xor    %rdx,%r15
   13d20:	4d 21 e7             	and    %r12,%r15
   13d23:	49 31 d7             	xor    %rdx,%r15
   13d26:	49 09 c4             	or     %rax,%r12
   13d29:	4c 89 7d 08          	mov    %r15,0x8(%rbp)
   13d2d:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   13d31:	e9 58 ff ff ff       	jmpq   13c8e <stm_store_u8+0x10e>
   13d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   13d3d:	00 00 00 
   13d40:	4c 89 df             	mov    %r11,%rdi
   13d43:	be 40 0c 00 00       	mov    $0xc40,%esi
   13d48:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   13d4d:	e8 ae ca ff ff       	callq  10800 <stm_rollback>
   13d52:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   13d57:	4c 8d 15 2a 67 00 00 	lea    0x672a(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   13d5e:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   13d65:	e9 be fe ff ff       	jmpq   13c28 <stm_store_u8+0xa8>
   13d6a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13d70:	49 8b 8b d8 00 00 00 	mov    0xd8(%r11),%rcx
   13d77:	4c 89 da             	mov    %r11,%rdx
   13d7a:	4c 89 d6             	mov    %r10,%rsi
   13d7d:	49 89 d9             	mov    %rbx,%r9
   13d80:	bf 01 00 00 00       	mov    $0x1,%edi
   13d85:	31 c0                	xor    %eax,%eax
   13d87:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   13d8c:	e8 ff e6 fe ff       	callq  2490 <__printf_chk@plt>
   13d91:	31 ff                	xor    %edi,%edi
   13d93:	e8 c8 e6 fe ff       	callq  2460 <fflush@plt>
   13d98:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   13d9d:	4c 8d 15 e4 66 00 00 	lea    0x66e4(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   13da4:	41 8b 93 f0 00 00 00 	mov    0xf0(%r11),%edx
   13dab:	49 8b 83 e8 00 00 00 	mov    0xe8(%r11),%rax
   13db2:	85 d2                	test   %edx,%edx
   13db4:	0f 8e 5a fe ff ff    	jle    13c14 <stm_store_u8+0x94>
   13dba:	ff ca                	dec    %edx
   13dbc:	48 ff c2             	inc    %rdx
   13dbf:	48 c1 e2 04          	shl    $0x4,%rdx
   13dc3:	48 01 c2             	add    %rax,%rdx
   13dc6:	eb 15                	jmp    13ddd <stm_store_u8+0x25d>
   13dc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   13dcf:	00 
   13dd0:	48 83 c0 10          	add    $0x10,%rax
   13dd4:	48 39 d0             	cmp    %rdx,%rax
   13dd7:	0f 84 37 fe ff ff    	je     13c14 <stm_store_u8+0x94>
   13ddd:	48 3b 58 08          	cmp    0x8(%rax),%rbx
   13de1:	75 ed                	jne    13dd0 <stm_store_u8+0x250>
   13de3:	be 40 06 00 00       	mov    $0x640,%esi
   13de8:	48 83 c4 28          	add    $0x28,%rsp
   13dec:	5b                   	pop    %rbx
   13ded:	5d                   	pop    %rbp
   13dee:	41 5c                	pop    %r12
   13df0:	41 5d                	pop    %r13
   13df2:	41 5e                	pop    %r14
   13df4:	4c 89 df             	mov    %r11,%rdi
   13df7:	41 5f                	pop    %r15
   13df9:	e9 02 ca ff ff       	jmpq   10800 <stm_rollback>
   13dfe:	66 90                	xchg   %ax,%ax
   13e00:	4c 8b 75 18          	mov    0x18(%rbp),%r14
   13e04:	41 3b 8b 04 01 00 00 	cmp    0x104(%r11),%ecx
   13e0b:	74 7c                	je     13e89 <stm_store_u8+0x309>
   13e0d:	4c 89 2a             	mov    %r13,(%rdx)
   13e10:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   13e14:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   13e18:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   13e1c:	0f 85 95 00 00 00    	jne    13eb7 <stm_store_u8+0x337>
   13e22:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   13e26:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   13e2a:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   13e31:	00 
   13e32:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   13e36:	e9 45 fe ff ff       	jmpq   13c80 <stm_store_u8+0x100>
   13e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   13e40:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   13e47:	0f 
   13e48:	0f 85 94 fd ff ff    	jne    13be2 <stm_store_u8+0x62>
   13e4e:	48 8b 05 bb c8 80 00 	mov    0x80c8bb(%rip),%rax        # 820710 <_tinystm+0x800550>
   13e55:	48 85 c0             	test   %rax,%rax
   13e58:	74 13                	je     13e6d <stm_store_u8+0x2ed>
   13e5a:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   13e5e:	4c 89 df             	mov    %r11,%rdi
   13e61:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   13e66:	ff d0                	callq  *%rax
   13e68:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   13e6d:	be 40 04 00 00       	mov    $0x440,%esi
   13e72:	e9 71 ff ff ff       	jmpq   13de8 <stm_store_u8+0x268>
   13e77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   13e7e:	00 00 
   13e80:	49 8b 55 00          	mov    0x0(%r13),%rdx
   13e84:	e9 94 fe ff ff       	jmpq   13d1d <stm_store_u8+0x19d>
   13e89:	4c 89 df             	mov    %r11,%rdi
   13e8c:	be 40 0c 00 00       	mov    $0xc40,%esi
   13e91:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   13e96:	e8 65 c9 ff ff       	callq  10800 <stm_rollback>
   13e9b:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   13ea0:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   13ea7:	48 c1 e2 06          	shl    $0x6,%rdx
   13eab:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   13eb2:	e9 56 ff ff ff       	jmpq   13e0d <stm_store_u8+0x28d>
   13eb7:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   13ebb:	4c 89 f8             	mov    %r15,%rax
   13ebe:	48 31 c8             	xor    %rcx,%rax
   13ec1:	4c 21 e0             	and    %r12,%rax
   13ec4:	48 31 c8             	xor    %rcx,%rax
   13ec7:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13ecb:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   13ecf:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   13ed6:	00 
   13ed7:	e9 56 ff ff ff       	jmpq   13e32 <stm_store_u8+0x2b2>
   13edc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000013ee0 <stm_store_char>:
   13ee0:	f3 0f 1e fa          	endbr64 
   13ee4:	41 57                	push   %r15
   13ee6:	4c 8d 15 9b 65 00 00 	lea    0x659b(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   13eed:	41 56                	push   %r14
   13eef:	41 55                	push   %r13
   13ef1:	49 89 fd             	mov    %rdi,%r13
   13ef4:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
   13ef8:	41 54                	push   %r12
   13efa:	55                   	push   %rbp
   13efb:	53                   	push   %rbx
   13efc:	48 8d 1d bd c2 00 00 	lea    0xc2bd(%rip),%rbx        # 201c0 <_tinystm>
   13f03:	48 83 ec 28          	sub    $0x28,%rsp
   13f07:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   13f0e:	64 4c 8b 18          	mov    %fs:(%rax),%r11
   13f12:	48 89 f8             	mov    %rdi,%rax
   13f15:	83 e0 07             	and    $0x7,%eax
   13f18:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
   13f1f:	00 00 
   13f21:	40 88 74 04 10       	mov    %sil,0x10(%rsp,%rax,1)
   13f26:	c6 44 04 18 ff       	movb   $0xff,0x18(%rsp,%rax,1)
   13f2b:	48 c1 ef 02          	shr    $0x2,%rdi
   13f2f:	81 e7 f8 ff 7f 00    	and    $0x7ffff8,%edi
   13f35:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
   13f3a:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   13f3f:	48 01 fb             	add    %rdi,%rbx
   13f42:	48 8b 2b             	mov    (%rbx),%rbp
   13f45:	40 f6 c5 01          	test   $0x1,%bpl
   13f49:	0f 85 c9 00 00 00    	jne    14018 <stm_store_char+0x138>
   13f4f:	49 89 ee             	mov    %rbp,%r14
   13f52:	49 c1 ee 04          	shr    $0x4,%r14
   13f56:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   13f5d:	0f 
   13f5e:	75 14                	jne    13f74 <stm_store_char+0x94>
   13f60:	f3 0f 1e fa          	endbr64 
   13f64:	4d 8b 83 e0 00 00 00 	mov    0xe0(%r11),%r8
   13f6b:	4d 39 c6             	cmp    %r8,%r14
   13f6e:	0f 87 5c 01 00 00    	ja     140d0 <stm_store_char+0x1f0>
   13f74:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   13f7b:	41 3b 93 04 01 00 00 	cmp    0x104(%r11),%edx
   13f82:	0f 84 18 01 00 00    	je     140a0 <stm_store_char+0x1c0>
   13f88:	48 c1 e2 06          	shl    $0x6,%rdx
   13f8c:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   13f93:	48 89 d1             	mov    %rdx,%rcx
   13f96:	48 83 c9 01          	or     $0x1,%rcx
   13f9a:	48 89 e8             	mov    %rbp,%rax
   13f9d:	f0 48 0f b1 0b       	lock cmpxchg %rcx,(%rbx)
   13fa2:	75 9e                	jne    13f42 <stm_store_char+0x62>
   13fa4:	4c 89 2a             	mov    %r13,(%rdx)
   13fa7:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   13fab:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   13faf:	4d 85 e4             	test   %r12,%r12
   13fb2:	74 50                	je     14004 <stm_store_char+0x124>
   13fb4:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   13fb8:	74 46                	je     14000 <stm_store_char+0x120>
   13fba:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   13fbe:	4c 89 f8             	mov    %r15,%rax
   13fc1:	48 31 c8             	xor    %rcx,%rax
   13fc4:	4c 21 e0             	and    %r12,%rax
   13fc7:	48 31 c8             	xor    %rcx,%rax
   13fca:	48 89 42 08          	mov    %rax,0x8(%rdx)
   13fce:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   13fd2:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   13fd9:	00 
   13fda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   13fe0:	41 ff 83 00 01 00 00 	incl   0x100(%r11)
   13fe7:	41 ff 83 08 01 00 00 	incl   0x108(%r11)
   13fee:	48 83 c4 28          	add    $0x28,%rsp
   13ff2:	5b                   	pop    %rbx
   13ff3:	5d                   	pop    %rbp
   13ff4:	41 5c                	pop    %r12
   13ff6:	41 5d                	pop    %r13
   13ff8:	41 5e                	pop    %r14
   13ffa:	41 5f                	pop    %r15
   13ffc:	c3                   	retq   
   13ffd:	0f 1f 00             	nopl   (%rax)
   14000:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   14004:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   14008:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   1400f:	00 
   14010:	eb ce                	jmp    13fe0 <stm_store_char+0x100>
   14012:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14018:	49 8b 93 f8 00 00 00 	mov    0xf8(%r11),%rdx
   1401f:	48 83 e5 fe          	and    $0xfffffffffffffffe,%rbp
   14023:	48 39 d5             	cmp    %rdx,%rbp
   14026:	0f 82 74 01 00 00    	jb     141a0 <stm_store_char+0x2c0>
   1402c:	41 8b 83 00 01 00 00 	mov    0x100(%r11),%eax
   14033:	48 89 c1             	mov    %rax,%rcx
   14036:	48 c1 e0 06          	shl    $0x6,%rax
   1403a:	48 01 c2             	add    %rax,%rdx
   1403d:	48 39 d5             	cmp    %rdx,%rbp
   14040:	0f 83 5a 01 00 00    	jae    141a0 <stm_store_char+0x2c0>
   14046:	4d 85 e4             	test   %r12,%r12
   14049:	75 15                	jne    14060 <stm_store_char+0x180>
   1404b:	eb a1                	jmp    13fee <stm_store_char+0x10e>
   1404d:	0f 1f 00             	nopl   (%rax)
   14050:	48 8b 45 30          	mov    0x30(%rbp),%rax
   14054:	48 85 c0             	test   %rax,%rax
   14057:	0f 84 03 01 00 00    	je     14160 <stm_store_char+0x280>
   1405d:	48 89 c5             	mov    %rax,%rbp
   14060:	4c 3b 6d 00          	cmp    0x0(%rbp),%r13
   14064:	75 ea                	jne    14050 <stm_store_char+0x170>
   14066:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1406a:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   1406e:	74 16                	je     14086 <stm_store_char+0x1a6>
   14070:	48 85 c0             	test   %rax,%rax
   14073:	0f 84 67 01 00 00    	je     141e0 <stm_store_char+0x300>
   14079:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   1407d:	49 31 d7             	xor    %rdx,%r15
   14080:	4d 21 e7             	and    %r12,%r15
   14083:	49 31 d7             	xor    %rdx,%r15
   14086:	49 09 c4             	or     %rax,%r12
   14089:	4c 89 7d 08          	mov    %r15,0x8(%rbp)
   1408d:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   14091:	e9 58 ff ff ff       	jmpq   13fee <stm_store_char+0x10e>
   14096:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1409d:	00 00 00 
   140a0:	4c 89 df             	mov    %r11,%rdi
   140a3:	be 40 0c 00 00       	mov    $0xc40,%esi
   140a8:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   140ad:	e8 4e c7 ff ff       	callq  10800 <stm_rollback>
   140b2:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   140b7:	4c 8d 15 ca 63 00 00 	lea    0x63ca(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   140be:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   140c5:	e9 be fe ff ff       	jmpq   13f88 <stm_store_char+0xa8>
   140ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   140d0:	49 8b 8b d8 00 00 00 	mov    0xd8(%r11),%rcx
   140d7:	4c 89 da             	mov    %r11,%rdx
   140da:	4c 89 d6             	mov    %r10,%rsi
   140dd:	49 89 d9             	mov    %rbx,%r9
   140e0:	bf 01 00 00 00       	mov    $0x1,%edi
   140e5:	31 c0                	xor    %eax,%eax
   140e7:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   140ec:	e8 9f e3 fe ff       	callq  2490 <__printf_chk@plt>
   140f1:	31 ff                	xor    %edi,%edi
   140f3:	e8 68 e3 fe ff       	callq  2460 <fflush@plt>
   140f8:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   140fd:	4c 8d 15 84 63 00 00 	lea    0x6384(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   14104:	41 8b 93 f0 00 00 00 	mov    0xf0(%r11),%edx
   1410b:	49 8b 83 e8 00 00 00 	mov    0xe8(%r11),%rax
   14112:	85 d2                	test   %edx,%edx
   14114:	0f 8e 5a fe ff ff    	jle    13f74 <stm_store_char+0x94>
   1411a:	ff ca                	dec    %edx
   1411c:	48 ff c2             	inc    %rdx
   1411f:	48 c1 e2 04          	shl    $0x4,%rdx
   14123:	48 01 c2             	add    %rax,%rdx
   14126:	eb 15                	jmp    1413d <stm_store_char+0x25d>
   14128:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1412f:	00 
   14130:	48 83 c0 10          	add    $0x10,%rax
   14134:	48 39 d0             	cmp    %rdx,%rax
   14137:	0f 84 37 fe ff ff    	je     13f74 <stm_store_char+0x94>
   1413d:	48 3b 58 08          	cmp    0x8(%rax),%rbx
   14141:	75 ed                	jne    14130 <stm_store_char+0x250>
   14143:	be 40 06 00 00       	mov    $0x640,%esi
   14148:	48 83 c4 28          	add    $0x28,%rsp
   1414c:	5b                   	pop    %rbx
   1414d:	5d                   	pop    %rbp
   1414e:	41 5c                	pop    %r12
   14150:	41 5d                	pop    %r13
   14152:	41 5e                	pop    %r14
   14154:	4c 89 df             	mov    %r11,%rdi
   14157:	41 5f                	pop    %r15
   14159:	e9 a2 c6 ff ff       	jmpq   10800 <stm_rollback>
   1415e:	66 90                	xchg   %ax,%ax
   14160:	4c 8b 75 18          	mov    0x18(%rbp),%r14
   14164:	41 3b 8b 04 01 00 00 	cmp    0x104(%r11),%ecx
   1416b:	74 7c                	je     141e9 <stm_store_char+0x309>
   1416d:	4c 89 2a             	mov    %r13,(%rdx)
   14170:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   14174:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   14178:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   1417c:	0f 85 95 00 00 00    	jne    14217 <stm_store_char+0x337>
   14182:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   14186:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   1418a:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   14191:	00 
   14192:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   14196:	e9 45 fe ff ff       	jmpq   13fe0 <stm_store_char+0x100>
   1419b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   141a0:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   141a7:	0f 
   141a8:	0f 85 94 fd ff ff    	jne    13f42 <stm_store_char+0x62>
   141ae:	48 8b 05 5b c5 80 00 	mov    0x80c55b(%rip),%rax        # 820710 <_tinystm+0x800550>
   141b5:	48 85 c0             	test   %rax,%rax
   141b8:	74 13                	je     141cd <stm_store_char+0x2ed>
   141ba:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   141be:	4c 89 df             	mov    %r11,%rdi
   141c1:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   141c6:	ff d0                	callq  *%rax
   141c8:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   141cd:	be 40 04 00 00       	mov    $0x440,%esi
   141d2:	e9 71 ff ff ff       	jmpq   14148 <stm_store_char+0x268>
   141d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   141de:	00 00 
   141e0:	49 8b 55 00          	mov    0x0(%r13),%rdx
   141e4:	e9 94 fe ff ff       	jmpq   1407d <stm_store_char+0x19d>
   141e9:	4c 89 df             	mov    %r11,%rdi
   141ec:	be 40 0c 00 00       	mov    $0xc40,%esi
   141f1:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   141f6:	e8 05 c6 ff ff       	callq  10800 <stm_rollback>
   141fb:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   14200:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   14207:	48 c1 e2 06          	shl    $0x6,%rdx
   1420b:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   14212:	e9 56 ff ff ff       	jmpq   1416d <stm_store_char+0x28d>
   14217:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   1421b:	4c 89 f8             	mov    %r15,%rax
   1421e:	48 31 c8             	xor    %rcx,%rax
   14221:	4c 21 e0             	and    %r12,%rax
   14224:	48 31 c8             	xor    %rcx,%rax
   14227:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1422b:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   1422f:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   14236:	00 
   14237:	e9 56 ff ff ff       	jmpq   14192 <stm_store_char+0x2b2>
   1423c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000014240 <stm_store_uchar>:
   14240:	f3 0f 1e fa          	endbr64 
   14244:	e9 37 f9 ff ff       	jmpq   13b80 <stm_store_u8>
   14249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000014250 <stm_store_ptr>:
   14250:	f3 0f 1e fa          	endbr64 
   14254:	41 57                	push   %r15
   14256:	49 89 f9             	mov    %rdi,%r9
   14259:	49 c1 e9 02          	shr    $0x2,%r9
   1425d:	41 56                	push   %r14
   1425f:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
   14266:	4c 8d 3d 1b 62 00 00 	lea    0x621b(%rip),%r15        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   1426d:	41 55                	push   %r13
   1426f:	49 89 f5             	mov    %rsi,%r13
   14272:	41 54                	push   %r12
   14274:	49 89 fc             	mov    %rdi,%r12
   14277:	55                   	push   %rbp
   14278:	53                   	push   %rbx
   14279:	48 83 ec 18          	sub    $0x18,%rsp
   1427d:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   14284:	64 48 8b 28          	mov    %fs:(%rax),%rbp
   14288:	48 8d 05 31 bf 00 00 	lea    0xbf31(%rip),%rax        # 201c0 <_tinystm>
   1428f:	49 01 c1             	add    %rax,%r9
   14292:	49 8b 19             	mov    (%r9),%rbx
   14295:	f6 c3 01             	test   $0x1,%bl
   14298:	0f 85 92 00 00 00    	jne    14330 <stm_store_ptr+0xe0>
   1429e:	49 89 de             	mov    %rbx,%r14
   142a1:	49 c1 ee 04          	shr    $0x4,%r14
   142a5:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
   142ac:	75 14                	jne    142c2 <stm_store_ptr+0x72>
   142ae:	f3 0f 1e fa          	endbr64 
   142b2:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
   142b9:	4d 39 c6             	cmp    %r8,%r14
   142bc:	0f 87 ee 00 00 00    	ja     143b0 <stm_store_ptr+0x160>
   142c2:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   142c8:	3b 95 04 01 00 00    	cmp    0x104(%rbp),%edx
   142ce:	0f 84 b4 00 00 00    	je     14388 <stm_store_ptr+0x138>
   142d4:	48 c1 e2 06          	shl    $0x6,%rdx
   142d8:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
   142df:	48 89 d1             	mov    %rdx,%rcx
   142e2:	48 83 c9 01          	or     $0x1,%rcx
   142e6:	48 89 d8             	mov    %rbx,%rax
   142e9:	f0 49 0f b1 09       	lock cmpxchg %rcx,(%r9)
   142ee:	75 a2                	jne    14292 <stm_store_ptr+0x42>
   142f0:	4c 89 22             	mov    %r12,(%rdx)
   142f3:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
   142fa:	ff 
   142fb:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
   142ff:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
   14303:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   14307:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   1430e:	00 
   1430f:	ff 85 00 01 00 00    	incl   0x100(%rbp)
   14315:	ff 85 08 01 00 00    	incl   0x108(%rbp)
   1431b:	48 83 c4 18          	add    $0x18,%rsp
   1431f:	5b                   	pop    %rbx
   14320:	5d                   	pop    %rbp
   14321:	41 5c                	pop    %r12
   14323:	41 5d                	pop    %r13
   14325:	41 5e                	pop    %r14
   14327:	41 5f                	pop    %r15
   14329:	c3                   	retq   
   1432a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14330:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
   14337:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
   1433b:	48 39 d3             	cmp    %rdx,%rbx
   1433e:	0f 82 24 01 00 00    	jb     14468 <stm_store_ptr+0x218>
   14344:	8b 85 00 01 00 00    	mov    0x100(%rbp),%eax
   1434a:	48 89 c1             	mov    %rax,%rcx
   1434d:	48 c1 e0 06          	shl    $0x6,%rax
   14351:	48 01 c2             	add    %rax,%rdx
   14354:	48 39 d3             	cmp    %rdx,%rbx
   14357:	72 17                	jb     14370 <stm_store_ptr+0x120>
   14359:	e9 0a 01 00 00       	jmpq   14468 <stm_store_ptr+0x218>
   1435e:	66 90                	xchg   %ax,%ax
   14360:	48 8b 43 30          	mov    0x30(%rbx),%rax
   14364:	48 85 c0             	test   %rax,%rax
   14367:	0f 84 c3 00 00 00    	je     14430 <stm_store_ptr+0x1e0>
   1436d:	48 89 c3             	mov    %rax,%rbx
   14370:	4c 3b 23             	cmp    (%rbx),%r12
   14373:	75 eb                	jne    14360 <stm_store_ptr+0x110>
   14375:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
   14379:	48 c7 43 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rbx)
   14380:	ff 
   14381:	eb 98                	jmp    1431b <stm_store_ptr+0xcb>
   14383:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14388:	be 40 0c 00 00       	mov    $0xc40,%esi
   1438d:	48 89 ef             	mov    %rbp,%rdi
   14390:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   14395:	e8 66 c4 ff ff       	callq  10800 <stm_rollback>
   1439a:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   143a0:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   143a5:	e9 2a ff ff ff       	jmpq   142d4 <stm_store_ptr+0x84>
   143aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   143b0:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
   143b7:	48 89 ea             	mov    %rbp,%rdx
   143ba:	4c 89 fe             	mov    %r15,%rsi
   143bd:	bf 01 00 00 00       	mov    $0x1,%edi
   143c2:	31 c0                	xor    %eax,%eax
   143c4:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   143c9:	e8 c2 e0 fe ff       	callq  2490 <__printf_chk@plt>
   143ce:	31 ff                	xor    %edi,%edi
   143d0:	e8 8b e0 fe ff       	callq  2460 <fflush@plt>
   143d5:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
   143db:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
   143e2:	85 d2                	test   %edx,%edx
   143e4:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   143e9:	0f 8e d3 fe ff ff    	jle    142c2 <stm_store_ptr+0x72>
   143ef:	ff ca                	dec    %edx
   143f1:	48 ff c2             	inc    %rdx
   143f4:	48 c1 e2 04          	shl    $0x4,%rdx
   143f8:	48 01 c2             	add    %rax,%rdx
   143fb:	eb 10                	jmp    1440d <stm_store_ptr+0x1bd>
   143fd:	0f 1f 00             	nopl   (%rax)
   14400:	48 83 c0 10          	add    $0x10,%rax
   14404:	48 39 d0             	cmp    %rdx,%rax
   14407:	0f 84 b5 fe ff ff    	je     142c2 <stm_store_ptr+0x72>
   1440d:	4c 3b 48 08          	cmp    0x8(%rax),%r9
   14411:	75 ed                	jne    14400 <stm_store_ptr+0x1b0>
   14413:	be 40 06 00 00       	mov    $0x640,%esi
   14418:	48 83 c4 18          	add    $0x18,%rsp
   1441c:	5b                   	pop    %rbx
   1441d:	48 89 ef             	mov    %rbp,%rdi
   14420:	5d                   	pop    %rbp
   14421:	41 5c                	pop    %r12
   14423:	41 5d                	pop    %r13
   14425:	41 5e                	pop    %r14
   14427:	41 5f                	pop    %r15
   14429:	e9 d2 c3 ff ff       	jmpq   10800 <stm_rollback>
   1442e:	66 90                	xchg   %ax,%ax
   14430:	4c 8b 73 18          	mov    0x18(%rbx),%r14
   14434:	3b 8d 04 01 00 00    	cmp    0x104(%rbp),%ecx
   1443a:	74 5c                	je     14498 <stm_store_ptr+0x248>
   1443c:	4c 89 22             	mov    %r12,(%rdx)
   1443f:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
   14446:	ff 
   14447:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
   1444b:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
   1444f:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   14453:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   1445a:	00 
   1445b:	48 89 53 30          	mov    %rdx,0x30(%rbx)
   1445f:	e9 ab fe ff ff       	jmpq   1430f <stm_store_ptr+0xbf>
   14464:	0f 1f 40 00          	nopl   0x0(%rax)
   14468:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
   1446f:	0f 85 1d fe ff ff    	jne    14292 <stm_store_ptr+0x42>
   14475:	48 8b 05 94 c2 80 00 	mov    0x80c294(%rip),%rax        # 820710 <_tinystm+0x800550>
   1447c:	48 85 c0             	test   %rax,%rax
   1447f:	74 09                	je     1448a <stm_store_ptr+0x23a>
   14481:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   14485:	48 89 ef             	mov    %rbp,%rdi
   14488:	ff d0                	callq  *%rax
   1448a:	be 40 04 00 00       	mov    $0x440,%esi
   1448f:	e9 84 ff ff ff       	jmpq   14418 <stm_store_ptr+0x1c8>
   14494:	0f 1f 40 00          	nopl   0x0(%rax)
   14498:	be 40 0c 00 00       	mov    $0xc40,%esi
   1449d:	48 89 ef             	mov    %rbp,%rdi
   144a0:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   144a5:	e8 56 c3 ff ff       	callq  10800 <stm_rollback>
   144aa:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   144b0:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   144b5:	48 c1 e2 06          	shl    $0x6,%rdx
   144b9:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
   144c0:	e9 77 ff ff ff       	jmpq   1443c <stm_store_ptr+0x1ec>
   144c5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   144cc:	00 00 00 00 

00000000000144d0 <stm_store_bytes>:
   144d0:	f3 0f 1e fa          	endbr64 
   144d4:	41 57                	push   %r15
   144d6:	41 56                	push   %r14
   144d8:	41 55                	push   %r13
   144da:	41 54                	push   %r12
   144dc:	55                   	push   %rbp
   144dd:	53                   	push   %rbx
   144de:	48 83 ec 48          	sub    $0x48,%rsp
   144e2:	48 89 3c 24          	mov    %rdi,(%rsp)
   144e6:	48 85 d2             	test   %rdx,%rdx
   144e9:	0f 84 ad 02 00 00    	je     1479c <stm_store_bytes+0x2cc>
   144ef:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   144f6:	49 89 d5             	mov    %rdx,%r13
   144f9:	64 48 8b 10          	mov    %fs:(%rax),%rdx
   144fd:	89 f8                	mov    %edi,%eax
   144ff:	48 89 f5             	mov    %rsi,%rbp
   14502:	83 e0 07             	and    $0x7,%eax
   14505:	0f 85 a5 02 00 00    	jne    147b0 <stm_store_bytes+0x2e0>
   1450b:	4c 8d 1d ae bc 00 00 	lea    0xbcae(%rip),%r11        # 201c0 <_tinystm>
   14512:	49 89 f2             	mov    %rsi,%r10
   14515:	49 83 fd 07          	cmp    $0x7,%r13
   14519:	0f 86 6f 01 00 00    	jbe    1468e <stm_store_bytes+0x1be>
   1451f:	49 8d 45 f8          	lea    -0x8(%r13),%rax
   14523:	48 c1 e8 03          	shr    $0x3,%rax
   14527:	48 8d 04 c5 08 00 00 	lea    0x8(,%rax,8),%rax
   1452e:	00 
   1452f:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)
   14534:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
   14539:	4c 8b 24 24          	mov    (%rsp),%r12
   1453d:	4c 8d 54 05 00       	lea    0x0(%rbp,%rax,1),%r10
   14542:	49 89 d5             	mov    %rdx,%r13
   14545:	e9 99 00 00 00       	jmpq   145e3 <stm_store_bytes+0x113>
   1454a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14550:	49 89 de             	mov    %rbx,%r14
   14553:	49 c1 ee 04          	shr    $0x4,%r14
   14557:	41 f6 85 10 01 00 00 	testb  $0xf,0x110(%r13)
   1455e:	0f 
   1455f:	75 14                	jne    14575 <stm_store_bytes+0xa5>
   14561:	f3 0f 1e fa          	endbr64 
   14565:	4d 8b 85 e0 00 00 00 	mov    0xe0(%r13),%r8
   1456c:	4d 39 c6             	cmp    %r8,%r14
   1456f:	0f 87 ab 03 00 00    	ja     14920 <stm_store_bytes+0x450>
   14575:	41 8b 8d 00 01 00 00 	mov    0x100(%r13),%ecx
   1457c:	41 3b 8d 04 01 00 00 	cmp    0x104(%r13),%ecx
   14583:	0f 84 57 03 00 00    	je     148e0 <stm_store_bytes+0x410>
   14589:	48 c1 e1 06          	shl    $0x6,%rcx
   1458d:	49 03 8d f8 00 00 00 	add    0xf8(%r13),%rcx
   14594:	48 89 ca             	mov    %rcx,%rdx
   14597:	48 83 ca 01          	or     $0x1,%rdx
   1459b:	48 89 d8             	mov    %rbx,%rax
   1459e:	f0 49 0f b1 11       	lock cmpxchg %rdx,(%r9)
   145a3:	75 53                	jne    145f8 <stm_store_bytes+0x128>
   145a5:	4c 89 21             	mov    %r12,(%rcx)
   145a8:	48 c7 41 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rcx)
   145af:	ff 
   145b0:	4c 89 49 20          	mov    %r9,0x20(%rcx)
   145b4:	4c 89 79 08          	mov    %r15,0x8(%rcx)
   145b8:	4c 89 71 18          	mov    %r14,0x18(%rcx)
   145bc:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   145c3:	00 
   145c4:	41 ff 85 00 01 00 00 	incl   0x100(%r13)
   145cb:	41 ff 85 08 01 00 00 	incl   0x108(%r13)
   145d2:	48 83 c5 08          	add    $0x8,%rbp
   145d6:	49 83 c4 08          	add    $0x8,%r12
   145da:	4c 39 d5             	cmp    %r10,%rbp
   145dd:	0f 84 8d 00 00 00    	je     14670 <stm_store_bytes+0x1a0>
   145e3:	4d 89 e1             	mov    %r12,%r9
   145e6:	49 c1 e9 02          	shr    $0x2,%r9
   145ea:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
   145f1:	4c 8b 7d 00          	mov    0x0(%rbp),%r15
   145f5:	4d 01 d9             	add    %r11,%r9
   145f8:	49 8b 19             	mov    (%r9),%rbx
   145fb:	f6 c3 01             	test   $0x1,%bl
   145fe:	0f 84 4c ff ff ff    	je     14550 <stm_store_bytes+0x80>
   14604:	49 8b 85 f8 00 00 00 	mov    0xf8(%r13),%rax
   1460b:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
   1460f:	48 39 c3             	cmp    %rax,%rbx
   14612:	0f 82 f8 03 00 00    	jb     14a10 <stm_store_bytes+0x540>
   14618:	41 8b 95 00 01 00 00 	mov    0x100(%r13),%edx
   1461f:	48 89 d6             	mov    %rdx,%rsi
   14622:	48 c1 e2 06          	shl    $0x6,%rdx
   14626:	48 01 d0             	add    %rdx,%rax
   14629:	48 39 c3             	cmp    %rax,%rbx
   1462c:	72 1a                	jb     14648 <stm_store_bytes+0x178>
   1462e:	e9 dd 03 00 00       	jmpq   14a10 <stm_store_bytes+0x540>
   14633:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   14638:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   1463c:	48 85 d2             	test   %rdx,%rdx
   1463f:	0f 84 8b 03 00 00    	je     149d0 <stm_store_bytes+0x500>
   14645:	48 89 d3             	mov    %rdx,%rbx
   14648:	4c 3b 23             	cmp    (%rbx),%r12
   1464b:	75 eb                	jne    14638 <stm_store_bytes+0x168>
   1464d:	48 83 c5 08          	add    $0x8,%rbp
   14651:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
   14655:	48 c7 43 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rbx)
   1465c:	ff 
   1465d:	49 83 c4 08          	add    $0x8,%r12
   14661:	4c 39 d5             	cmp    %r10,%rbp
   14664:	0f 85 79 ff ff ff    	jne    145e3 <stm_store_bytes+0x113>
   1466a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14670:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   14675:	4c 89 ea             	mov    %r13,%rdx
   14678:	48 01 3c 24          	add    %rdi,(%rsp)
   1467c:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13
   14681:	41 83 e5 07          	and    $0x7,%r13d
   14685:	4d 85 ed             	test   %r13,%r13
   14688:	0f 84 0e 01 00 00    	je     1479c <stm_store_bytes+0x2cc>
   1468e:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   14695:	00 00 
   14697:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   1469e:	00 00 
   146a0:	31 c0                	xor    %eax,%eax
   146a2:	48 8d 7c 24 38       	lea    0x38(%rsp),%rdi
   146a7:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
   146ac:	0f 1f 40 00          	nopl   0x0(%rax)
   146b0:	41 0f b6 0c 02       	movzbl (%r10,%rax,1),%ecx
   146b5:	c6 04 07 ff          	movb   $0xff,(%rdi,%rax,1)
   146b9:	88 0c 06             	mov    %cl,(%rsi,%rax,1)
   146bc:	48 ff c0             	inc    %rax
   146bf:	49 39 c5             	cmp    %rax,%r13
   146c2:	75 ec                	jne    146b0 <stm_store_bytes+0x1e0>
   146c4:	4c 8b 3c 24          	mov    (%rsp),%r15
   146c8:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   146cd:	49 c1 ef 02          	shr    $0x2,%r15
   146d1:	41 81 e7 f8 ff 7f 00 	and    $0x7ffff8,%r15d
   146d8:	4c 8b 6c 24 30       	mov    0x30(%rsp),%r13
   146dd:	4d 01 df             	add    %r11,%r15
   146e0:	4c 8d 35 a1 5d 00 00 	lea    0x5da1(%rip),%r14        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   146e7:	49 8b 1f             	mov    (%r15),%rbx
   146ea:	f6 c3 01             	test   $0x1,%bl
   146ed:	0f 85 72 04 00 00    	jne    14b65 <stm_store_bytes+0x695>
   146f3:	49 89 dc             	mov    %rbx,%r12
   146f6:	49 c1 ec 04          	shr    $0x4,%r12
   146fa:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   14701:	75 14                	jne    14717 <stm_store_bytes+0x247>
   14703:	f3 0f 1e fa          	endbr64 
   14707:	4c 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%r8
   1470e:	4d 39 c4             	cmp    %r8,%r12
   14711:	0f 87 30 05 00 00    	ja     14c47 <stm_store_bytes+0x777>
   14717:	8b 8a 00 01 00 00    	mov    0x100(%rdx),%ecx
   1471d:	3b 8a 04 01 00 00    	cmp    0x104(%rdx),%ecx
   14723:	0f 84 bc 04 00 00    	je     14be5 <stm_store_bytes+0x715>
   14729:	48 c1 e1 06          	shl    $0x6,%rcx
   1472d:	48 03 8a f8 00 00 00 	add    0xf8(%rdx),%rcx
   14734:	48 89 ce             	mov    %rcx,%rsi
   14737:	48 83 ce 01          	or     $0x1,%rsi
   1473b:	48 89 d8             	mov    %rbx,%rax
   1473e:	f0 49 0f b1 37       	lock cmpxchg %rsi,(%r15)
   14743:	75 a2                	jne    146e7 <stm_store_bytes+0x217>
   14745:	48 8b 04 24          	mov    (%rsp),%rax
   14749:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   1474d:	48 89 01             	mov    %rax,(%rcx)
   14750:	4c 89 79 20          	mov    %r15,0x20(%rcx)
   14754:	48 85 ed             	test   %rbp,%rbp
   14757:	0f 84 17 03 00 00    	je     14a74 <stm_store_bytes+0x5a4>
   1475d:	48 83 fd ff          	cmp    $0xffffffffffffffff,%rbp
   14761:	0f 84 09 03 00 00    	je     14a70 <stm_store_bytes+0x5a0>
   14767:	48 8b 04 24          	mov    (%rsp),%rax
   1476b:	48 8b 30             	mov    (%rax),%rsi
   1476e:	4c 89 e8             	mov    %r13,%rax
   14771:	48 31 f0             	xor    %rsi,%rax
   14774:	48 21 e8             	and    %rbp,%rax
   14777:	48 31 f0             	xor    %rsi,%rax
   1477a:	48 89 41 08          	mov    %rax,0x8(%rcx)
   1477e:	4c 89 61 18          	mov    %r12,0x18(%rcx)
   14782:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   14789:	00 
   1478a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14790:	ff 82 00 01 00 00    	incl   0x100(%rdx)
   14796:	ff 82 08 01 00 00    	incl   0x108(%rdx)
   1479c:	48 83 c4 48          	add    $0x48,%rsp
   147a0:	5b                   	pop    %rbx
   147a1:	5d                   	pop    %rbp
   147a2:	41 5c                	pop    %r12
   147a4:	41 5d                	pop    %r13
   147a6:	41 5e                	pop    %r14
   147a8:	41 5f                	pop    %r15
   147aa:	c3                   	retq   
   147ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   147b0:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   147b4:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   147bb:	00 00 
   147bd:	48 c7 44 24 30 00 00 	movq   $0x0,0x30(%rsp)
   147c4:	00 00 
   147c6:	49 89 fc             	mov    %rdi,%r12
   147c9:	eb 0a                	jmp    147d5 <stm_store_bytes+0x305>
   147cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   147d0:	4d 85 ed             	test   %r13,%r13
   147d3:	74 1d                	je     147f2 <stm_store_bytes+0x322>
   147d5:	0f b6 75 00          	movzbl 0x0(%rbp),%esi
   147d9:	89 c1                	mov    %eax,%ecx
   147db:	ff c0                	inc    %eax
   147dd:	48 ff c5             	inc    %rbp
   147e0:	c6 44 0c 38 ff       	movb   $0xff,0x38(%rsp,%rcx,1)
   147e5:	40 88 74 0c 30       	mov    %sil,0x30(%rsp,%rcx,1)
   147ea:	49 ff cd             	dec    %r13
   147ed:	83 f8 07             	cmp    $0x7,%eax
   147f0:	76 de                	jbe    147d0 <stm_store_bytes+0x300>
   147f2:	49 8d 44 24 08       	lea    0x8(%r12),%rax
   147f7:	4d 89 e1             	mov    %r12,%r9
   147fa:	49 c1 e9 02          	shr    $0x2,%r9
   147fe:	48 89 04 24          	mov    %rax,(%rsp)
   14802:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
   14809:	4c 8d 1d b0 b9 00 00 	lea    0xb9b0(%rip),%r11        # 201c0 <_tinystm>
   14810:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
   14815:	4c 8b 54 24 30       	mov    0x30(%rsp),%r10
   1481a:	4d 01 d9             	add    %r11,%r9
   1481d:	49 8b 19             	mov    (%r9),%rbx
   14820:	f6 c3 01             	test   $0x1,%bl
   14823:	0f 85 b6 02 00 00    	jne    14adf <stm_store_bytes+0x60f>
   14829:	49 89 df             	mov    %rbx,%r15
   1482c:	49 c1 ef 04          	shr    $0x4,%r15
   14830:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   14837:	75 14                	jne    1484d <stm_store_bytes+0x37d>
   14839:	f3 0f 1e fa          	endbr64 
   1483d:	4c 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%r8
   14844:	4d 39 c7             	cmp    %r8,%r15
   14847:	0f 87 79 04 00 00    	ja     14cc6 <stm_store_bytes+0x7f6>
   1484d:	8b 82 00 01 00 00    	mov    0x100(%rdx),%eax
   14853:	3b 82 04 01 00 00    	cmp    0x104(%rdx),%eax
   14859:	0f 84 a8 03 00 00    	je     14c07 <stm_store_bytes+0x737>
   1485f:	89 c1                	mov    %eax,%ecx
   14861:	48 c1 e1 06          	shl    $0x6,%rcx
   14865:	48 03 8a f8 00 00 00 	add    0xf8(%rdx),%rcx
   1486c:	48 89 ce             	mov    %rcx,%rsi
   1486f:	48 83 ce 01          	or     $0x1,%rsi
   14873:	48 89 d8             	mov    %rbx,%rax
   14876:	f0 49 0f b1 31       	lock cmpxchg %rsi,(%r9)
   1487b:	75 a0                	jne    1481d <stm_store_bytes+0x34d>
   1487d:	4c 89 21             	mov    %r12,(%rcx)
   14880:	4c 89 71 10          	mov    %r14,0x10(%rcx)
   14884:	4c 89 49 20          	mov    %r9,0x20(%rcx)
   14888:	4d 85 f6             	test   %r14,%r14
   1488b:	0f 84 fb 01 00 00    	je     14a8c <stm_store_bytes+0x5bc>
   14891:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
   14895:	0f 84 ed 01 00 00    	je     14a88 <stm_store_bytes+0x5b8>
   1489b:	49 8b 34 24          	mov    (%r12),%rsi
   1489f:	4c 89 d0             	mov    %r10,%rax
   148a2:	48 31 f0             	xor    %rsi,%rax
   148a5:	4c 21 f0             	and    %r14,%rax
   148a8:	48 31 f0             	xor    %rsi,%rax
   148ab:	48 89 41 08          	mov    %rax,0x8(%rcx)
   148af:	4c 89 79 18          	mov    %r15,0x18(%rcx)
   148b3:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   148ba:	00 
   148bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   148c0:	ff 82 00 01 00 00    	incl   0x100(%rdx)
   148c6:	ff 82 08 01 00 00    	incl   0x108(%rdx)
   148cc:	49 89 ea             	mov    %rbp,%r10
   148cf:	49 83 fd 07          	cmp    $0x7,%r13
   148d3:	0f 87 46 fc ff ff    	ja     1451f <stm_store_bytes+0x4f>
   148d9:	e9 a7 fd ff ff       	jmpq   14685 <stm_store_bytes+0x1b5>
   148de:	66 90                	xchg   %ax,%ax
   148e0:	be 40 0c 00 00       	mov    $0xc40,%esi
   148e5:	4c 89 ef             	mov    %r13,%rdi
   148e8:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   148ed:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   148f2:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   148f7:	e8 04 bf ff ff       	callq  10800 <stm_rollback>
   148fc:	41 8b 8d 00 01 00 00 	mov    0x100(%r13),%ecx
   14903:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   14908:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1490d:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   14912:	e9 72 fc ff ff       	jmpq   14589 <stm_store_bytes+0xb9>
   14917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1491e:	00 00 
   14920:	49 8b 8d d8 00 00 00 	mov    0xd8(%r13),%rcx
   14927:	4c 89 ea             	mov    %r13,%rdx
   1492a:	48 8d 35 57 5b 00 00 	lea    0x5b57(%rip),%rsi        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   14931:	bf 01 00 00 00       	mov    $0x1,%edi
   14936:	31 c0                	xor    %eax,%eax
   14938:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   1493d:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   14942:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   14947:	e8 44 db fe ff       	callq  2490 <__printf_chk@plt>
   1494c:	31 ff                	xor    %edi,%edi
   1494e:	e8 0d db fe ff       	callq  2460 <fflush@plt>
   14953:	41 8b 95 f0 00 00 00 	mov    0xf0(%r13),%edx
   1495a:	49 8b 85 e8 00 00 00 	mov    0xe8(%r13),%rax
   14961:	85 d2                	test   %edx,%edx
   14963:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   14968:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1496d:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   14972:	0f 8e fd fb ff ff    	jle    14575 <stm_store_bytes+0xa5>
   14978:	ff ca                	dec    %edx
   1497a:	48 ff c2             	inc    %rdx
   1497d:	48 c1 e2 04          	shl    $0x4,%rdx
   14981:	48 01 c2             	add    %rax,%rdx
   14984:	eb 17                	jmp    1499d <stm_store_bytes+0x4cd>
   14986:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1498d:	00 00 00 
   14990:	48 83 c0 10          	add    $0x10,%rax
   14994:	48 39 d0             	cmp    %rdx,%rax
   14997:	0f 84 d8 fb ff ff    	je     14575 <stm_store_bytes+0xa5>
   1499d:	4c 3b 48 08          	cmp    0x8(%rax),%r9
   149a1:	75 ed                	jne    14990 <stm_store_bytes+0x4c0>
   149a3:	be 40 06 00 00       	mov    $0x640,%esi
   149a8:	4c 89 ef             	mov    %r13,%rdi
   149ab:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   149b0:	4c 89 5c 24 18       	mov    %r11,0x18(%rsp)
   149b5:	e8 46 be ff ff       	callq  10800 <stm_rollback>
   149ba:	4c 8b 5c 24 18       	mov    0x18(%rsp),%r11
   149bf:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   149c4:	e9 09 fc ff ff       	jmpq   145d2 <stm_store_bytes+0x102>
   149c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   149d0:	4c 8b 73 18          	mov    0x18(%rbx),%r14
   149d4:	41 3b b5 04 01 00 00 	cmp    0x104(%r13),%esi
   149db:	0f 84 bc 00 00 00    	je     14a9d <stm_store_bytes+0x5cd>
   149e1:	4c 89 20             	mov    %r12,(%rax)
   149e4:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
   149eb:	ff 
   149ec:	4c 89 48 20          	mov    %r9,0x20(%rax)
   149f0:	4c 89 78 08          	mov    %r15,0x8(%rax)
   149f4:	4c 89 70 18          	mov    %r14,0x18(%rax)
   149f8:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   149ff:	00 
   14a00:	48 89 43 30          	mov    %rax,0x30(%rbx)
   14a04:	e9 bb fb ff ff       	jmpq   145c4 <stm_store_bytes+0xf4>
   14a09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14a10:	41 f6 85 10 01 00 00 	testb  $0xf,0x110(%r13)
   14a17:	0f 
   14a18:	0f 85 da fb ff ff    	jne    145f8 <stm_store_bytes+0x128>
   14a1e:	48 8b 05 eb bc 80 00 	mov    0x80bceb(%rip),%rax        # 820710 <_tinystm+0x800550>
   14a25:	48 85 c0             	test   %rax,%rax
   14a28:	74 1d                	je     14a47 <stm_store_bytes+0x577>
   14a2a:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   14a2e:	4c 89 ef             	mov    %r13,%rdi
   14a31:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   14a36:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   14a3b:	ff d0                	callq  *%rax
   14a3d:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   14a42:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   14a47:	be 40 04 00 00       	mov    $0x440,%esi
   14a4c:	4c 89 ef             	mov    %r13,%rdi
   14a4f:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   14a54:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   14a59:	e8 a2 bd ff ff       	callq  10800 <stm_rollback>
   14a5e:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   14a63:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   14a68:	e9 65 fb ff ff       	jmpq   145d2 <stm_store_bytes+0x102>
   14a6d:	0f 1f 00             	nopl   (%rax)
   14a70:	4c 89 69 08          	mov    %r13,0x8(%rcx)
   14a74:	4c 89 61 18          	mov    %r12,0x18(%rcx)
   14a78:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   14a7f:	00 
   14a80:	e9 0b fd ff ff       	jmpq   14790 <stm_store_bytes+0x2c0>
   14a85:	0f 1f 00             	nopl   (%rax)
   14a88:	4c 89 51 08          	mov    %r10,0x8(%rcx)
   14a8c:	4c 89 79 18          	mov    %r15,0x18(%rcx)
   14a90:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   14a97:	00 
   14a98:	e9 23 fe ff ff       	jmpq   148c0 <stm_store_bytes+0x3f0>
   14a9d:	be 40 0c 00 00       	mov    $0xc40,%esi
   14aa2:	4c 89 ef             	mov    %r13,%rdi
   14aa5:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   14aaa:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   14aaf:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   14ab4:	e8 47 bd ff ff       	callq  10800 <stm_rollback>
   14ab9:	41 8b 85 00 01 00 00 	mov    0x100(%r13),%eax
   14ac0:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   14ac5:	48 c1 e0 06          	shl    $0x6,%rax
   14ac9:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   14ace:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   14ad3:	49 03 85 f8 00 00 00 	add    0xf8(%r13),%rax
   14ada:	e9 02 ff ff ff       	jmpq   149e1 <stm_store_bytes+0x511>
   14adf:	48 8b 82 f8 00 00 00 	mov    0xf8(%rdx),%rax
   14ae6:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
   14aea:	48 39 c3             	cmp    %rax,%rbx
   14aed:	0f 82 45 03 00 00    	jb     14e38 <stm_store_bytes+0x968>
   14af3:	8b 8a 00 01 00 00    	mov    0x100(%rdx),%ecx
   14af9:	48 89 ce             	mov    %rcx,%rsi
   14afc:	48 c1 e1 06          	shl    $0x6,%rcx
   14b00:	48 01 c1             	add    %rax,%rcx
   14b03:	48 39 cb             	cmp    %rcx,%rbx
   14b06:	0f 83 2c 03 00 00    	jae    14e38 <stm_store_bytes+0x968>
   14b0c:	4d 85 f6             	test   %r14,%r14
   14b0f:	75 1f                	jne    14b30 <stm_store_bytes+0x660>
   14b11:	e9 b6 fd ff ff       	jmpq   148cc <stm_store_bytes+0x3fc>
   14b16:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   14b1d:	00 00 00 
   14b20:	48 8b 43 30          	mov    0x30(%rbx),%rax
   14b24:	48 85 c0             	test   %rax,%rax
   14b27:	0f 84 44 02 00 00    	je     14d71 <stm_store_bytes+0x8a1>
   14b2d:	48 89 c3             	mov    %rax,%rbx
   14b30:	4c 3b 23             	cmp    (%rbx),%r12
   14b33:	75 eb                	jne    14b20 <stm_store_bytes+0x650>
   14b35:	48 8b 43 10          	mov    0x10(%rbx),%rax
   14b39:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
   14b3d:	74 16                	je     14b55 <stm_store_bytes+0x685>
   14b3f:	48 85 c0             	test   %rax,%rax
   14b42:	0f 84 44 03 00 00    	je     14e8c <stm_store_bytes+0x9bc>
   14b48:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   14b4c:	49 31 ca             	xor    %rcx,%r10
   14b4f:	4d 21 f2             	and    %r14,%r10
   14b52:	49 31 ca             	xor    %rcx,%r10
   14b55:	4c 09 f0             	or     %r14,%rax
   14b58:	4c 89 53 08          	mov    %r10,0x8(%rbx)
   14b5c:	48 89 43 10          	mov    %rax,0x10(%rbx)
   14b60:	e9 67 fd ff ff       	jmpq   148cc <stm_store_bytes+0x3fc>
   14b65:	48 8b 82 f8 00 00 00 	mov    0xf8(%rdx),%rax
   14b6c:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
   14b70:	48 39 c3             	cmp    %rax,%rbx
   14b73:	0f 82 84 02 00 00    	jb     14dfd <stm_store_bytes+0x92d>
   14b79:	8b 8a 00 01 00 00    	mov    0x100(%rdx),%ecx
   14b7f:	48 89 ce             	mov    %rcx,%rsi
   14b82:	48 c1 e1 06          	shl    $0x6,%rcx
   14b86:	48 01 c1             	add    %rax,%rcx
   14b89:	48 39 cb             	cmp    %rcx,%rbx
   14b8c:	0f 83 6b 02 00 00    	jae    14dfd <stm_store_bytes+0x92d>
   14b92:	48 8b 3c 24          	mov    (%rsp),%rdi
   14b96:	48 85 ed             	test   %rbp,%rbp
   14b99:	75 15                	jne    14bb0 <stm_store_bytes+0x6e0>
   14b9b:	e9 fc fb ff ff       	jmpq   1479c <stm_store_bytes+0x2cc>
   14ba0:	48 8b 43 30          	mov    0x30(%rbx),%rax
   14ba4:	48 85 c0             	test   %rax,%rax
   14ba7:	0f 84 02 02 00 00    	je     14daf <stm_store_bytes+0x8df>
   14bad:	48 89 c3             	mov    %rax,%rbx
   14bb0:	48 3b 3b             	cmp    (%rbx),%rdi
   14bb3:	75 eb                	jne    14ba0 <stm_store_bytes+0x6d0>
   14bb5:	48 8b 43 10          	mov    0x10(%rbx),%rax
   14bb9:	48 83 fd ff          	cmp    $0xffffffffffffffff,%rbp
   14bbd:	74 16                	je     14bd5 <stm_store_bytes+0x705>
   14bbf:	48 85 c0             	test   %rax,%rax
   14bc2:	0f 84 b8 02 00 00    	je     14e80 <stm_store_bytes+0x9b0>
   14bc8:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   14bcc:	49 31 d5             	xor    %rdx,%r13
   14bcf:	49 21 ed             	and    %rbp,%r13
   14bd2:	49 31 d5             	xor    %rdx,%r13
   14bd5:	48 09 e8             	or     %rbp,%rax
   14bd8:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
   14bdc:	48 89 43 10          	mov    %rax,0x10(%rbx)
   14be0:	e9 b7 fb ff ff       	jmpq   1479c <stm_store_bytes+0x2cc>
   14be5:	48 89 d7             	mov    %rdx,%rdi
   14be8:	be 40 0c 00 00       	mov    $0xc40,%esi
   14bed:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   14bf2:	e8 09 bc ff ff       	callq  10800 <stm_rollback>
   14bf7:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   14bfc:	8b 8a 00 01 00 00    	mov    0x100(%rdx),%ecx
   14c02:	e9 22 fb ff ff       	jmpq   14729 <stm_store_bytes+0x259>
   14c07:	48 89 d7             	mov    %rdx,%rdi
   14c0a:	be 40 0c 00 00       	mov    $0xc40,%esi
   14c0f:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   14c14:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   14c19:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   14c1e:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   14c23:	e8 d8 bb ff ff       	callq  10800 <stm_rollback>
   14c28:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   14c2d:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   14c32:	8b 82 00 01 00 00    	mov    0x100(%rdx),%eax
   14c38:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   14c3d:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   14c42:	e9 18 fc ff ff       	jmpq   1485f <stm_store_bytes+0x38f>
   14c47:	48 8b 8a d8 00 00 00 	mov    0xd8(%rdx),%rcx
   14c4e:	4d 89 f9             	mov    %r15,%r9
   14c51:	4c 89 f6             	mov    %r14,%rsi
   14c54:	bf 01 00 00 00       	mov    $0x1,%edi
   14c59:	31 c0                	xor    %eax,%eax
   14c5b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   14c60:	e8 2b d8 fe ff       	callq  2490 <__printf_chk@plt>
   14c65:	31 ff                	xor    %edi,%edi
   14c67:	e8 f4 d7 fe ff       	callq  2460 <fflush@plt>
   14c6c:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   14c71:	8b 8a f0 00 00 00    	mov    0xf0(%rdx),%ecx
   14c77:	48 8b 82 e8 00 00 00 	mov    0xe8(%rdx),%rax
   14c7e:	85 c9                	test   %ecx,%ecx
   14c80:	0f 8e 91 fa ff ff    	jle    14717 <stm_store_bytes+0x247>
   14c86:	ff c9                	dec    %ecx
   14c88:	48 ff c1             	inc    %rcx
   14c8b:	48 c1 e1 04          	shl    $0x4,%rcx
   14c8f:	48 01 c1             	add    %rax,%rcx
   14c92:	eb 11                	jmp    14ca5 <stm_store_bytes+0x7d5>
   14c94:	0f 1f 40 00          	nopl   0x0(%rax)
   14c98:	48 83 c0 10          	add    $0x10,%rax
   14c9c:	48 39 c8             	cmp    %rcx,%rax
   14c9f:	0f 84 72 fa ff ff    	je     14717 <stm_store_bytes+0x247>
   14ca5:	4c 3b 78 08          	cmp    0x8(%rax),%r15
   14ca9:	75 ed                	jne    14c98 <stm_store_bytes+0x7c8>
   14cab:	be 40 06 00 00       	mov    $0x640,%esi
   14cb0:	48 83 c4 48          	add    $0x48,%rsp
   14cb4:	5b                   	pop    %rbx
   14cb5:	5d                   	pop    %rbp
   14cb6:	41 5c                	pop    %r12
   14cb8:	41 5d                	pop    %r13
   14cba:	41 5e                	pop    %r14
   14cbc:	48 89 d7             	mov    %rdx,%rdi
   14cbf:	41 5f                	pop    %r15
   14cc1:	e9 3a bb ff ff       	jmpq   10800 <stm_rollback>
   14cc6:	48 8b 8a d8 00 00 00 	mov    0xd8(%rdx),%rcx
   14ccd:	48 8d 35 b4 57 00 00 	lea    0x57b4(%rip),%rsi        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   14cd4:	bf 01 00 00 00       	mov    $0x1,%edi
   14cd9:	31 c0                	xor    %eax,%eax
   14cdb:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   14ce0:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
   14ce5:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   14cea:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   14cef:	e8 9c d7 fe ff       	callq  2490 <__printf_chk@plt>
   14cf4:	31 ff                	xor    %edi,%edi
   14cf6:	e8 65 d7 fe ff       	callq  2460 <fflush@plt>
   14cfb:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   14d00:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   14d05:	8b 8a f0 00 00 00    	mov    0xf0(%rdx),%ecx
   14d0b:	48 8b 82 e8 00 00 00 	mov    0xe8(%rdx),%rax
   14d12:	85 c9                	test   %ecx,%ecx
   14d14:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
   14d19:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   14d1e:	0f 8e 29 fb ff ff    	jle    1484d <stm_store_bytes+0x37d>
   14d24:	ff c9                	dec    %ecx
   14d26:	48 ff c1             	inc    %rcx
   14d29:	48 c1 e1 04          	shl    $0x4,%rcx
   14d2d:	48 01 c1             	add    %rax,%rcx
   14d30:	eb 13                	jmp    14d45 <stm_store_bytes+0x875>
   14d32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   14d38:	48 83 c0 10          	add    $0x10,%rax
   14d3c:	48 39 c8             	cmp    %rcx,%rax
   14d3f:	0f 84 08 fb ff ff    	je     1484d <stm_store_bytes+0x37d>
   14d45:	4c 3b 48 08          	cmp    0x8(%rax),%r9
   14d49:	75 ed                	jne    14d38 <stm_store_bytes+0x868>
   14d4b:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   14d50:	be 40 06 00 00       	mov    $0x640,%esi
   14d55:	48 89 d7             	mov    %rdx,%rdi
   14d58:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   14d5d:	e8 9e ba ff ff       	callq  10800 <stm_rollback>
   14d62:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   14d67:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   14d6c:	e9 5b fb ff ff       	jmpq   148cc <stm_store_bytes+0x3fc>
   14d71:	4c 8b 7b 18          	mov    0x18(%rbx),%r15
   14d75:	3b b2 04 01 00 00    	cmp    0x104(%rdx),%esi
   14d7b:	0f 84 14 01 00 00    	je     14e95 <stm_store_bytes+0x9c5>
   14d81:	4c 89 21             	mov    %r12,(%rcx)
   14d84:	4c 89 71 10          	mov    %r14,0x10(%rcx)
   14d88:	4c 89 49 20          	mov    %r9,0x20(%rcx)
   14d8c:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
   14d90:	0f 85 77 01 00 00    	jne    14f0d <stm_store_bytes+0xa3d>
   14d96:	4c 89 51 08          	mov    %r10,0x8(%rcx)
   14d9a:	4c 89 79 18          	mov    %r15,0x18(%rcx)
   14d9e:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   14da5:	00 
   14da6:	48 89 4b 30          	mov    %rcx,0x30(%rbx)
   14daa:	e9 11 fb ff ff       	jmpq   148c0 <stm_store_bytes+0x3f0>
   14daf:	4c 8b 63 18          	mov    0x18(%rbx),%r12
   14db3:	3b b2 04 01 00 00    	cmp    0x104(%rdx),%esi
   14db9:	0f 84 21 01 00 00    	je     14ee0 <stm_store_bytes+0xa10>
   14dbf:	48 8b 04 24          	mov    (%rsp),%rax
   14dc3:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   14dc7:	48 89 01             	mov    %rax,(%rcx)
   14dca:	4c 89 79 20          	mov    %r15,0x20(%rcx)
   14dce:	48 83 fd ff          	cmp    $0xffffffffffffffff,%rbp
   14dd2:	0f 85 5a 01 00 00    	jne    14f32 <stm_store_bytes+0xa62>
   14dd8:	4c 89 69 08          	mov    %r13,0x8(%rcx)
   14ddc:	4c 89 61 18          	mov    %r12,0x18(%rcx)
   14de0:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   14de7:	00 
   14de8:	48 89 4b 30          	mov    %rcx,0x30(%rbx)
   14dec:	ff 82 00 01 00 00    	incl   0x100(%rdx)
   14df2:	ff 82 08 01 00 00    	incl   0x108(%rdx)
   14df8:	e9 9f f9 ff ff       	jmpq   1479c <stm_store_bytes+0x2cc>
   14dfd:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   14e04:	0f 85 dd f8 ff ff    	jne    146e7 <stm_store_bytes+0x217>
   14e0a:	48 8b 05 ff b8 80 00 	mov    0x80b8ff(%rip),%rax        # 820710 <_tinystm+0x800550>
   14e11:	48 85 c0             	test   %rax,%rax
   14e14:	74 11                	je     14e27 <stm_store_bytes+0x957>
   14e16:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   14e1a:	48 89 d7             	mov    %rdx,%rdi
   14e1d:	48 89 14 24          	mov    %rdx,(%rsp)
   14e21:	ff d0                	callq  *%rax
   14e23:	48 8b 14 24          	mov    (%rsp),%rdx
   14e27:	be 40 04 00 00       	mov    $0x440,%esi
   14e2c:	e9 7f fe ff ff       	jmpq   14cb0 <stm_store_bytes+0x7e0>
   14e31:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   14e38:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   14e3f:	0f 85 d8 f9 ff ff    	jne    1481d <stm_store_bytes+0x34d>
   14e45:	48 8b 05 c4 b8 80 00 	mov    0x80b8c4(%rip),%rax        # 820710 <_tinystm+0x800550>
   14e4c:	48 85 c0             	test   %rax,%rax
   14e4f:	74 1d                	je     14e6e <stm_store_bytes+0x99e>
   14e51:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   14e55:	48 89 d7             	mov    %rdx,%rdi
   14e58:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   14e5d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   14e62:	ff d0                	callq  *%rax
   14e64:	4c 8b 5c 24 10       	mov    0x10(%rsp),%r11
   14e69:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   14e6e:	4c 89 5c 24 10       	mov    %r11,0x10(%rsp)
   14e73:	be 40 04 00 00       	mov    $0x440,%esi
   14e78:	e9 d8 fe ff ff       	jmpq   14d55 <stm_store_bytes+0x885>
   14e7d:	0f 1f 00             	nopl   (%rax)
   14e80:	48 8b 3c 24          	mov    (%rsp),%rdi
   14e84:	48 8b 17             	mov    (%rdi),%rdx
   14e87:	e9 40 fd ff ff       	jmpq   14bcc <stm_store_bytes+0x6fc>
   14e8c:	49 8b 0c 24          	mov    (%r12),%rcx
   14e90:	e9 b7 fc ff ff       	jmpq   14b4c <stm_store_bytes+0x67c>
   14e95:	48 89 d7             	mov    %rdx,%rdi
   14e98:	be 40 0c 00 00       	mov    $0xc40,%esi
   14e9d:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)
   14ea2:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   14ea7:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   14eac:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   14eb1:	e8 4a b9 ff ff       	callq  10800 <stm_rollback>
   14eb6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   14ebb:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11
   14ec0:	8b 8a 00 01 00 00    	mov    0x100(%rdx),%ecx
   14ec6:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   14ecb:	48 c1 e1 06          	shl    $0x6,%rcx
   14ecf:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   14ed4:	48 03 8a f8 00 00 00 	add    0xf8(%rdx),%rcx
   14edb:	e9 a1 fe ff ff       	jmpq   14d81 <stm_store_bytes+0x8b1>
   14ee0:	48 89 d7             	mov    %rdx,%rdi
   14ee3:	be 40 0c 00 00       	mov    $0xc40,%esi
   14ee8:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   14eed:	e8 0e b9 ff ff       	callq  10800 <stm_rollback>
   14ef2:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   14ef7:	8b 8a 00 01 00 00    	mov    0x100(%rdx),%ecx
   14efd:	48 c1 e1 06          	shl    $0x6,%rcx
   14f01:	48 03 8a f8 00 00 00 	add    0xf8(%rdx),%rcx
   14f08:	e9 b2 fe ff ff       	jmpq   14dbf <stm_store_bytes+0x8ef>
   14f0d:	49 8b 34 24          	mov    (%r12),%rsi
   14f11:	4c 89 d0             	mov    %r10,%rax
   14f14:	48 31 f0             	xor    %rsi,%rax
   14f17:	4c 21 f0             	and    %r14,%rax
   14f1a:	48 31 f0             	xor    %rsi,%rax
   14f1d:	48 89 41 08          	mov    %rax,0x8(%rcx)
   14f21:	4c 89 79 18          	mov    %r15,0x18(%rcx)
   14f25:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   14f2c:	00 
   14f2d:	e9 74 fe ff ff       	jmpq   14da6 <stm_store_bytes+0x8d6>
   14f32:	48 8b 04 24          	mov    (%rsp),%rax
   14f36:	48 8b 30             	mov    (%rax),%rsi
   14f39:	4c 89 e8             	mov    %r13,%rax
   14f3c:	48 31 f0             	xor    %rsi,%rax
   14f3f:	48 21 e8             	and    %rbp,%rax
   14f42:	48 31 f0             	xor    %rsi,%rax
   14f45:	48 89 41 08          	mov    %rax,0x8(%rcx)
   14f49:	4c 89 61 18          	mov    %r12,0x18(%rcx)
   14f4d:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   14f54:	00 
   14f55:	e9 8e fe ff ff       	jmpq   14de8 <stm_store_bytes+0x918>
   14f5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000014f60 <stm_store_u16>:
   14f60:	f3 0f 1e fa          	endbr64 
   14f64:	41 57                	push   %r15
   14f66:	41 56                	push   %r14
   14f68:	41 55                	push   %r13
   14f6a:	41 54                	push   %r12
   14f6c:	55                   	push   %rbp
   14f6d:	53                   	push   %rbx
   14f6e:	48 83 ec 38          	sub    $0x38,%rsp
   14f72:	66 89 74 24 1e       	mov    %si,0x1e(%rsp)
   14f77:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   14f7e:	64 4c 8b 18          	mov    %fs:(%rax),%r11
   14f82:	40 f6 c7 01          	test   $0x1,%dil
   14f86:	0f 85 a4 01 00 00    	jne    15130 <stm_store_u16+0x1d0>
   14f8c:	48 89 f8             	mov    %rdi,%rax
   14f8f:	48 d1 e8             	shr    %rax
   14f92:	83 e0 03             	and    $0x3,%eax
   14f95:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   14f9a:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   14fa1:	00 00 
   14fa3:	66 89 74 44 20       	mov    %si,0x20(%rsp,%rax,2)
   14fa8:	66 89 54 44 28       	mov    %dx,0x28(%rsp,%rax,2)
   14fad:	49 89 fd             	mov    %rdi,%r13
   14fb0:	48 c1 ef 02          	shr    $0x2,%rdi
   14fb4:	81 e7 f8 ff 7f 00    	and    $0x7ffff8,%edi
   14fba:	48 8d 1d ff b1 00 00 	lea    0xb1ff(%rip),%rbx        # 201c0 <_tinystm>
   14fc1:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   14fc6:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   14fcb:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
   14fcf:	48 01 fb             	add    %rdi,%rbx
   14fd2:	4c 8d 15 af 54 00 00 	lea    0x54af(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   14fd9:	48 8b 2b             	mov    (%rbx),%rbp
   14fdc:	40 f6 c5 01          	test   $0x1,%bpl
   14fe0:	0f 85 ca 00 00 00    	jne    150b0 <stm_store_u16+0x150>
   14fe6:	49 89 ee             	mov    %rbp,%r14
   14fe9:	49 c1 ee 04          	shr    $0x4,%r14
   14fed:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   14ff4:	0f 
   14ff5:	75 14                	jne    1500b <stm_store_u16+0xab>
   14ff7:	f3 0f 1e fa          	endbr64 
   14ffb:	4d 8b 83 e0 00 00 00 	mov    0xe0(%r11),%r8
   15002:	4d 39 c6             	cmp    %r8,%r14
   15005:	0f 87 75 01 00 00    	ja     15180 <stm_store_u16+0x220>
   1500b:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   15012:	41 3b 93 04 01 00 00 	cmp    0x104(%r11),%edx
   15019:	0f 84 31 01 00 00    	je     15150 <stm_store_u16+0x1f0>
   1501f:	48 c1 e2 06          	shl    $0x6,%rdx
   15023:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   1502a:	48 89 d1             	mov    %rdx,%rcx
   1502d:	48 83 c9 01          	or     $0x1,%rcx
   15031:	48 89 e8             	mov    %rbp,%rax
   15034:	f0 48 0f b1 0b       	lock cmpxchg %rcx,(%rbx)
   15039:	75 9e                	jne    14fd9 <stm_store_u16+0x79>
   1503b:	4c 89 2a             	mov    %r13,(%rdx)
   1503e:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   15042:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   15046:	4d 85 e4             	test   %r12,%r12
   15049:	74 51                	je     1509c <stm_store_u16+0x13c>
   1504b:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   1504f:	74 47                	je     15098 <stm_store_u16+0x138>
   15051:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   15055:	4c 89 f8             	mov    %r15,%rax
   15058:	48 31 c8             	xor    %rcx,%rax
   1505b:	4c 21 e0             	and    %r12,%rax
   1505e:	48 31 c8             	xor    %rcx,%rax
   15061:	48 89 42 08          	mov    %rax,0x8(%rdx)
   15065:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15069:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   15070:	00 
   15071:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15078:	41 ff 83 00 01 00 00 	incl   0x100(%r11)
   1507f:	41 ff 83 08 01 00 00 	incl   0x108(%r11)
   15086:	48 83 c4 38          	add    $0x38,%rsp
   1508a:	5b                   	pop    %rbx
   1508b:	5d                   	pop    %rbp
   1508c:	41 5c                	pop    %r12
   1508e:	41 5d                	pop    %r13
   15090:	41 5e                	pop    %r14
   15092:	41 5f                	pop    %r15
   15094:	c3                   	retq   
   15095:	0f 1f 00             	nopl   (%rax)
   15098:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   1509c:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   150a0:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   150a7:	00 
   150a8:	eb ce                	jmp    15078 <stm_store_u16+0x118>
   150aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   150b0:	49 8b 93 f8 00 00 00 	mov    0xf8(%r11),%rdx
   150b7:	48 83 e5 fe          	and    $0xfffffffffffffffe,%rbp
   150bb:	48 39 d5             	cmp    %rdx,%rbp
   150be:	0f 82 8c 01 00 00    	jb     15250 <stm_store_u16+0x2f0>
   150c4:	41 8b 83 00 01 00 00 	mov    0x100(%r11),%eax
   150cb:	48 89 c1             	mov    %rax,%rcx
   150ce:	48 c1 e0 06          	shl    $0x6,%rax
   150d2:	48 01 c2             	add    %rax,%rdx
   150d5:	48 39 d5             	cmp    %rdx,%rbp
   150d8:	0f 83 72 01 00 00    	jae    15250 <stm_store_u16+0x2f0>
   150de:	4d 85 e4             	test   %r12,%r12
   150e1:	75 15                	jne    150f8 <stm_store_u16+0x198>
   150e3:	eb a1                	jmp    15086 <stm_store_u16+0x126>
   150e5:	0f 1f 00             	nopl   (%rax)
   150e8:	48 8b 45 30          	mov    0x30(%rbp),%rax
   150ec:	48 85 c0             	test   %rax,%rax
   150ef:	0f 84 13 01 00 00    	je     15208 <stm_store_u16+0x2a8>
   150f5:	48 89 c5             	mov    %rax,%rbp
   150f8:	4c 3b 6d 00          	cmp    0x0(%rbp),%r13
   150fc:	75 ea                	jne    150e8 <stm_store_u16+0x188>
   150fe:	48 8b 45 10          	mov    0x10(%rbp),%rax
   15102:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   15106:	74 16                	je     1511e <stm_store_u16+0x1be>
   15108:	48 85 c0             	test   %rax,%rax
   1510b:	0f 84 7f 01 00 00    	je     15290 <stm_store_u16+0x330>
   15111:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   15115:	49 31 d7             	xor    %rdx,%r15
   15118:	4d 21 e7             	and    %r12,%r15
   1511b:	49 31 d7             	xor    %rdx,%r15
   1511e:	49 09 c4             	or     %rax,%r12
   15121:	4c 89 7d 08          	mov    %r15,0x8(%rbp)
   15125:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   15129:	e9 58 ff ff ff       	jmpq   15086 <stm_store_u16+0x126>
   1512e:	66 90                	xchg   %ax,%ax
   15130:	48 8d 74 24 1e       	lea    0x1e(%rsp),%rsi
   15135:	ba 02 00 00 00       	mov    $0x2,%edx
   1513a:	e8 91 f3 ff ff       	callq  144d0 <stm_store_bytes>
   1513f:	48 83 c4 38          	add    $0x38,%rsp
   15143:	5b                   	pop    %rbx
   15144:	5d                   	pop    %rbp
   15145:	41 5c                	pop    %r12
   15147:	41 5d                	pop    %r13
   15149:	41 5e                	pop    %r14
   1514b:	41 5f                	pop    %r15
   1514d:	c3                   	retq   
   1514e:	66 90                	xchg   %ax,%ax
   15150:	4c 89 df             	mov    %r11,%rdi
   15153:	be 40 0c 00 00       	mov    $0xc40,%esi
   15158:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1515d:	e8 9e b6 ff ff       	callq  10800 <stm_rollback>
   15162:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   15167:	4c 8d 15 1a 53 00 00 	lea    0x531a(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   1516e:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   15175:	e9 a5 fe ff ff       	jmpq   1501f <stm_store_u16+0xbf>
   1517a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15180:	49 8b 8b d8 00 00 00 	mov    0xd8(%r11),%rcx
   15187:	4c 89 da             	mov    %r11,%rdx
   1518a:	4c 89 d6             	mov    %r10,%rsi
   1518d:	49 89 d9             	mov    %rbx,%r9
   15190:	bf 01 00 00 00       	mov    $0x1,%edi
   15195:	31 c0                	xor    %eax,%eax
   15197:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1519c:	e8 ef d2 fe ff       	callq  2490 <__printf_chk@plt>
   151a1:	31 ff                	xor    %edi,%edi
   151a3:	e8 b8 d2 fe ff       	callq  2460 <fflush@plt>
   151a8:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   151ad:	4c 8d 15 d4 52 00 00 	lea    0x52d4(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   151b4:	41 8b 93 f0 00 00 00 	mov    0xf0(%r11),%edx
   151bb:	49 8b 83 e8 00 00 00 	mov    0xe8(%r11),%rax
   151c2:	85 d2                	test   %edx,%edx
   151c4:	0f 8e 41 fe ff ff    	jle    1500b <stm_store_u16+0xab>
   151ca:	ff ca                	dec    %edx
   151cc:	48 ff c2             	inc    %rdx
   151cf:	48 c1 e2 04          	shl    $0x4,%rdx
   151d3:	48 01 c2             	add    %rax,%rdx
   151d6:	eb 15                	jmp    151ed <stm_store_u16+0x28d>
   151d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   151df:	00 
   151e0:	48 83 c0 10          	add    $0x10,%rax
   151e4:	48 39 d0             	cmp    %rdx,%rax
   151e7:	0f 84 1e fe ff ff    	je     1500b <stm_store_u16+0xab>
   151ed:	48 3b 58 08          	cmp    0x8(%rax),%rbx
   151f1:	75 ed                	jne    151e0 <stm_store_u16+0x280>
   151f3:	be 40 06 00 00       	mov    $0x640,%esi
   151f8:	4c 89 df             	mov    %r11,%rdi
   151fb:	e8 00 b6 ff ff       	callq  10800 <stm_rollback>
   15200:	e9 81 fe ff ff       	jmpq   15086 <stm_store_u16+0x126>
   15205:	0f 1f 00             	nopl   (%rax)
   15208:	4c 8b 75 18          	mov    0x18(%rbp),%r14
   1520c:	41 3b 8b 04 01 00 00 	cmp    0x104(%r11),%ecx
   15213:	0f 84 80 00 00 00    	je     15299 <stm_store_u16+0x339>
   15219:	4c 89 2a             	mov    %r13,(%rdx)
   1521c:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   15220:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   15224:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   15228:	0f 85 99 00 00 00    	jne    152c7 <stm_store_u16+0x367>
   1522e:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   15232:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15236:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   1523d:	00 
   1523e:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   15242:	e9 31 fe ff ff       	jmpq   15078 <stm_store_u16+0x118>
   15247:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1524e:	00 00 
   15250:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   15257:	0f 
   15258:	0f 85 7b fd ff ff    	jne    14fd9 <stm_store_u16+0x79>
   1525e:	48 8b 05 ab b4 80 00 	mov    0x80b4ab(%rip),%rax        # 820710 <_tinystm+0x800550>
   15265:	48 85 c0             	test   %rax,%rax
   15268:	74 13                	je     1527d <stm_store_u16+0x31d>
   1526a:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   1526e:	4c 89 df             	mov    %r11,%rdi
   15271:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   15276:	ff d0                	callq  *%rax
   15278:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1527d:	be 40 04 00 00       	mov    $0x440,%esi
   15282:	4c 89 df             	mov    %r11,%rdi
   15285:	e8 76 b5 ff ff       	callq  10800 <stm_rollback>
   1528a:	e9 f7 fd ff ff       	jmpq   15086 <stm_store_u16+0x126>
   1528f:	90                   	nop
   15290:	49 8b 55 00          	mov    0x0(%r13),%rdx
   15294:	e9 7c fe ff ff       	jmpq   15115 <stm_store_u16+0x1b5>
   15299:	4c 89 df             	mov    %r11,%rdi
   1529c:	be 40 0c 00 00       	mov    $0xc40,%esi
   152a1:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   152a6:	e8 55 b5 ff ff       	callq  10800 <stm_rollback>
   152ab:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   152b0:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   152b7:	48 c1 e2 06          	shl    $0x6,%rdx
   152bb:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   152c2:	e9 52 ff ff ff       	jmpq   15219 <stm_store_u16+0x2b9>
   152c7:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   152cb:	4c 89 f8             	mov    %r15,%rax
   152ce:	48 31 c8             	xor    %rcx,%rax
   152d1:	4c 21 e0             	and    %r12,%rax
   152d4:	48 31 c8             	xor    %rcx,%rax
   152d7:	48 89 42 08          	mov    %rax,0x8(%rdx)
   152db:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   152df:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   152e6:	00 
   152e7:	e9 52 ff ff ff       	jmpq   1523e <stm_store_u16+0x2de>
   152ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000152f0 <stm_store_ushort>:
   152f0:	f3 0f 1e fa          	endbr64 
   152f4:	e9 67 fc ff ff       	jmpq   14f60 <stm_store_u16>
   152f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000015300 <stm_store_u32>:
   15300:	f3 0f 1e fa          	endbr64 
   15304:	41 57                	push   %r15
   15306:	41 56                	push   %r14
   15308:	41 55                	push   %r13
   1530a:	41 54                	push   %r12
   1530c:	55                   	push   %rbp
   1530d:	53                   	push   %rbx
   1530e:	48 83 ec 38          	sub    $0x38,%rsp
   15312:	89 74 24 1c          	mov    %esi,0x1c(%rsp)
   15316:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   1531d:	64 4c 8b 18          	mov    %fs:(%rax),%r11
   15321:	40 f6 c7 03          	test   $0x3,%dil
   15325:	0f 85 a5 01 00 00    	jne    154d0 <stm_store_u32+0x1d0>
   1532b:	48 89 f8             	mov    %rdi,%rax
   1532e:	48 c1 e8 02          	shr    $0x2,%rax
   15332:	83 e0 01             	and    $0x1,%eax
   15335:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1533c:	00 00 
   1533e:	89 74 84 20          	mov    %esi,0x20(%rsp,%rax,4)
   15342:	c7 44 84 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp,%rax,4)
   15349:	ff 
   1534a:	49 89 fd             	mov    %rdi,%r13
   1534d:	48 c1 ef 02          	shr    $0x2,%rdi
   15351:	81 e7 f8 ff 7f 00    	and    $0x7ffff8,%edi
   15357:	48 8d 1d 62 ae 00 00 	lea    0xae62(%rip),%rbx        # 201c0 <_tinystm>
   1535e:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   15363:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   15368:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
   1536c:	48 01 fb             	add    %rdi,%rbx
   1536f:	4c 8d 15 12 51 00 00 	lea    0x5112(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   15376:	48 8b 2b             	mov    (%rbx),%rbp
   15379:	40 f6 c5 01          	test   $0x1,%bpl
   1537d:	0f 85 c5 00 00 00    	jne    15448 <stm_store_u32+0x148>
   15383:	49 89 ee             	mov    %rbp,%r14
   15386:	49 c1 ee 04          	shr    $0x4,%r14
   1538a:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   15391:	0f 
   15392:	75 14                	jne    153a8 <stm_store_u32+0xa8>
   15394:	f3 0f 1e fa          	endbr64 
   15398:	4d 8b 83 e0 00 00 00 	mov    0xe0(%r11),%r8
   1539f:	4d 39 c6             	cmp    %r8,%r14
   153a2:	0f 87 78 01 00 00    	ja     15520 <stm_store_u32+0x220>
   153a8:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   153af:	41 3b 93 04 01 00 00 	cmp    0x104(%r11),%edx
   153b6:	0f 84 34 01 00 00    	je     154f0 <stm_store_u32+0x1f0>
   153bc:	48 c1 e2 06          	shl    $0x6,%rdx
   153c0:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   153c7:	48 89 d1             	mov    %rdx,%rcx
   153ca:	48 83 c9 01          	or     $0x1,%rcx
   153ce:	48 89 e8             	mov    %rbp,%rax
   153d1:	f0 48 0f b1 0b       	lock cmpxchg %rcx,(%rbx)
   153d6:	75 9e                	jne    15376 <stm_store_u32+0x76>
   153d8:	4c 89 2a             	mov    %r13,(%rdx)
   153db:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   153df:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   153e3:	4d 85 e4             	test   %r12,%r12
   153e6:	74 4c                	je     15434 <stm_store_u32+0x134>
   153e8:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   153ec:	74 42                	je     15430 <stm_store_u32+0x130>
   153ee:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   153f2:	4c 89 f8             	mov    %r15,%rax
   153f5:	48 31 c8             	xor    %rcx,%rax
   153f8:	4c 21 e0             	and    %r12,%rax
   153fb:	48 31 c8             	xor    %rcx,%rax
   153fe:	48 89 42 08          	mov    %rax,0x8(%rdx)
   15402:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15406:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   1540d:	00 
   1540e:	66 90                	xchg   %ax,%ax
   15410:	41 ff 83 00 01 00 00 	incl   0x100(%r11)
   15417:	41 ff 83 08 01 00 00 	incl   0x108(%r11)
   1541e:	48 83 c4 38          	add    $0x38,%rsp
   15422:	5b                   	pop    %rbx
   15423:	5d                   	pop    %rbp
   15424:	41 5c                	pop    %r12
   15426:	41 5d                	pop    %r13
   15428:	41 5e                	pop    %r14
   1542a:	41 5f                	pop    %r15
   1542c:	c3                   	retq   
   1542d:	0f 1f 00             	nopl   (%rax)
   15430:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   15434:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15438:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   1543f:	00 
   15440:	eb ce                	jmp    15410 <stm_store_u32+0x110>
   15442:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15448:	49 8b 93 f8 00 00 00 	mov    0xf8(%r11),%rdx
   1544f:	48 83 e5 fe          	and    $0xfffffffffffffffe,%rbp
   15453:	48 39 d5             	cmp    %rdx,%rbp
   15456:	0f 82 94 01 00 00    	jb     155f0 <stm_store_u32+0x2f0>
   1545c:	41 8b 83 00 01 00 00 	mov    0x100(%r11),%eax
   15463:	48 89 c1             	mov    %rax,%rcx
   15466:	48 c1 e0 06          	shl    $0x6,%rax
   1546a:	48 01 c2             	add    %rax,%rdx
   1546d:	48 39 d5             	cmp    %rdx,%rbp
   15470:	0f 83 7a 01 00 00    	jae    155f0 <stm_store_u32+0x2f0>
   15476:	4d 85 e4             	test   %r12,%r12
   15479:	75 15                	jne    15490 <stm_store_u32+0x190>
   1547b:	eb a1                	jmp    1541e <stm_store_u32+0x11e>
   1547d:	0f 1f 00             	nopl   (%rax)
   15480:	48 8b 45 30          	mov    0x30(%rbp),%rax
   15484:	48 85 c0             	test   %rax,%rax
   15487:	0f 84 1b 01 00 00    	je     155a8 <stm_store_u32+0x2a8>
   1548d:	48 89 c5             	mov    %rax,%rbp
   15490:	4c 3b 6d 00          	cmp    0x0(%rbp),%r13
   15494:	75 ea                	jne    15480 <stm_store_u32+0x180>
   15496:	48 8b 45 10          	mov    0x10(%rbp),%rax
   1549a:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   1549e:	74 16                	je     154b6 <stm_store_u32+0x1b6>
   154a0:	48 85 c0             	test   %rax,%rax
   154a3:	0f 84 87 01 00 00    	je     15630 <stm_store_u32+0x330>
   154a9:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   154ad:	49 31 d7             	xor    %rdx,%r15
   154b0:	4d 21 e7             	and    %r12,%r15
   154b3:	49 31 d7             	xor    %rdx,%r15
   154b6:	49 09 c4             	or     %rax,%r12
   154b9:	4c 89 7d 08          	mov    %r15,0x8(%rbp)
   154bd:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   154c1:	e9 58 ff ff ff       	jmpq   1541e <stm_store_u32+0x11e>
   154c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   154cd:	00 00 00 
   154d0:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
   154d5:	ba 04 00 00 00       	mov    $0x4,%edx
   154da:	e8 f1 ef ff ff       	callq  144d0 <stm_store_bytes>
   154df:	48 83 c4 38          	add    $0x38,%rsp
   154e3:	5b                   	pop    %rbx
   154e4:	5d                   	pop    %rbp
   154e5:	41 5c                	pop    %r12
   154e7:	41 5d                	pop    %r13
   154e9:	41 5e                	pop    %r14
   154eb:	41 5f                	pop    %r15
   154ed:	c3                   	retq   
   154ee:	66 90                	xchg   %ax,%ax
   154f0:	4c 89 df             	mov    %r11,%rdi
   154f3:	be 40 0c 00 00       	mov    $0xc40,%esi
   154f8:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   154fd:	e8 fe b2 ff ff       	callq  10800 <stm_rollback>
   15502:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   15507:	4c 8d 15 7a 4f 00 00 	lea    0x4f7a(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   1550e:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   15515:	e9 a2 fe ff ff       	jmpq   153bc <stm_store_u32+0xbc>
   1551a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15520:	49 8b 8b d8 00 00 00 	mov    0xd8(%r11),%rcx
   15527:	4c 89 da             	mov    %r11,%rdx
   1552a:	4c 89 d6             	mov    %r10,%rsi
   1552d:	49 89 d9             	mov    %rbx,%r9
   15530:	bf 01 00 00 00       	mov    $0x1,%edi
   15535:	31 c0                	xor    %eax,%eax
   15537:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1553c:	e8 4f cf fe ff       	callq  2490 <__printf_chk@plt>
   15541:	31 ff                	xor    %edi,%edi
   15543:	e8 18 cf fe ff       	callq  2460 <fflush@plt>
   15548:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1554d:	4c 8d 15 34 4f 00 00 	lea    0x4f34(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   15554:	41 8b 93 f0 00 00 00 	mov    0xf0(%r11),%edx
   1555b:	49 8b 83 e8 00 00 00 	mov    0xe8(%r11),%rax
   15562:	85 d2                	test   %edx,%edx
   15564:	0f 8e 3e fe ff ff    	jle    153a8 <stm_store_u32+0xa8>
   1556a:	ff ca                	dec    %edx
   1556c:	48 ff c2             	inc    %rdx
   1556f:	48 c1 e2 04          	shl    $0x4,%rdx
   15573:	48 01 c2             	add    %rax,%rdx
   15576:	eb 15                	jmp    1558d <stm_store_u32+0x28d>
   15578:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1557f:	00 
   15580:	48 83 c0 10          	add    $0x10,%rax
   15584:	48 39 d0             	cmp    %rdx,%rax
   15587:	0f 84 1b fe ff ff    	je     153a8 <stm_store_u32+0xa8>
   1558d:	48 3b 58 08          	cmp    0x8(%rax),%rbx
   15591:	75 ed                	jne    15580 <stm_store_u32+0x280>
   15593:	be 40 06 00 00       	mov    $0x640,%esi
   15598:	4c 89 df             	mov    %r11,%rdi
   1559b:	e8 60 b2 ff ff       	callq  10800 <stm_rollback>
   155a0:	e9 79 fe ff ff       	jmpq   1541e <stm_store_u32+0x11e>
   155a5:	0f 1f 00             	nopl   (%rax)
   155a8:	4c 8b 75 18          	mov    0x18(%rbp),%r14
   155ac:	41 3b 8b 04 01 00 00 	cmp    0x104(%r11),%ecx
   155b3:	0f 84 80 00 00 00    	je     15639 <stm_store_u32+0x339>
   155b9:	4c 89 2a             	mov    %r13,(%rdx)
   155bc:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   155c0:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   155c4:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   155c8:	0f 85 99 00 00 00    	jne    15667 <stm_store_u32+0x367>
   155ce:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   155d2:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   155d6:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   155dd:	00 
   155de:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   155e2:	e9 29 fe ff ff       	jmpq   15410 <stm_store_u32+0x110>
   155e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   155ee:	00 00 
   155f0:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   155f7:	0f 
   155f8:	0f 85 78 fd ff ff    	jne    15376 <stm_store_u32+0x76>
   155fe:	48 8b 05 0b b1 80 00 	mov    0x80b10b(%rip),%rax        # 820710 <_tinystm+0x800550>
   15605:	48 85 c0             	test   %rax,%rax
   15608:	74 13                	je     1561d <stm_store_u32+0x31d>
   1560a:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   1560e:	4c 89 df             	mov    %r11,%rdi
   15611:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   15616:	ff d0                	callq  *%rax
   15618:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1561d:	be 40 04 00 00       	mov    $0x440,%esi
   15622:	4c 89 df             	mov    %r11,%rdi
   15625:	e8 d6 b1 ff ff       	callq  10800 <stm_rollback>
   1562a:	e9 ef fd ff ff       	jmpq   1541e <stm_store_u32+0x11e>
   1562f:	90                   	nop
   15630:	49 8b 55 00          	mov    0x0(%r13),%rdx
   15634:	e9 74 fe ff ff       	jmpq   154ad <stm_store_u32+0x1ad>
   15639:	4c 89 df             	mov    %r11,%rdi
   1563c:	be 40 0c 00 00       	mov    $0xc40,%esi
   15641:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   15646:	e8 b5 b1 ff ff       	callq  10800 <stm_rollback>
   1564b:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   15650:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   15657:	48 c1 e2 06          	shl    $0x6,%rdx
   1565b:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   15662:	e9 52 ff ff ff       	jmpq   155b9 <stm_store_u32+0x2b9>
   15667:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   1566b:	4c 89 f8             	mov    %r15,%rax
   1566e:	48 31 c8             	xor    %rcx,%rax
   15671:	4c 21 e0             	and    %r12,%rax
   15674:	48 31 c8             	xor    %rcx,%rax
   15677:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1567b:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   1567f:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   15686:	00 
   15687:	e9 52 ff ff ff       	jmpq   155de <stm_store_u32+0x2de>
   1568c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015690 <stm_store_uint>:
   15690:	f3 0f 1e fa          	endbr64 
   15694:	e9 67 fc ff ff       	jmpq   15300 <stm_store_u32>
   15699:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000156a0 <stm_store_u64>:
   156a0:	f3 0f 1e fa          	endbr64 
   156a4:	41 57                	push   %r15
   156a6:	41 56                	push   %r14
   156a8:	41 55                	push   %r13
   156aa:	41 54                	push   %r12
   156ac:	49 89 fc             	mov    %rdi,%r12
   156af:	55                   	push   %rbp
   156b0:	53                   	push   %rbx
   156b1:	48 83 ec 28          	sub    $0x28,%rsp
   156b5:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   156ba:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   156c1:	83 e7 07             	and    $0x7,%edi
   156c4:	64 48 8b 28          	mov    %fs:(%rax),%rbp
   156c8:	0f 85 1a 01 00 00    	jne    157e8 <stm_store_u64+0x148>
   156ce:	4d 89 e1             	mov    %r12,%r9
   156d1:	49 c1 e9 02          	shr    $0x2,%r9
   156d5:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
   156dc:	48 8d 05 dd aa 00 00 	lea    0xaadd(%rip),%rax        # 201c0 <_tinystm>
   156e3:	49 89 f5             	mov    %rsi,%r13
   156e6:	49 01 c1             	add    %rax,%r9
   156e9:	4c 8d 3d 98 4d 00 00 	lea    0x4d98(%rip),%r15        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   156f0:	49 8b 19             	mov    (%r9),%rbx
   156f3:	f6 c3 01             	test   $0x1,%bl
   156f6:	0f 85 94 00 00 00    	jne    15790 <stm_store_u64+0xf0>
   156fc:	49 89 de             	mov    %rbx,%r14
   156ff:	49 c1 ee 04          	shr    $0x4,%r14
   15703:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
   1570a:	75 14                	jne    15720 <stm_store_u64+0x80>
   1570c:	f3 0f 1e fa          	endbr64 
   15710:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
   15717:	4d 39 c6             	cmp    %r8,%r14
   1571a:	0f 87 18 01 00 00    	ja     15838 <stm_store_u64+0x198>
   15720:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   15726:	3b 95 04 01 00 00    	cmp    0x104(%rbp),%edx
   1572c:	0f 84 de 00 00 00    	je     15810 <stm_store_u64+0x170>
   15732:	48 c1 e2 06          	shl    $0x6,%rdx
   15736:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
   1573d:	48 89 d1             	mov    %rdx,%rcx
   15740:	48 83 c9 01          	or     $0x1,%rcx
   15744:	48 89 d8             	mov    %rbx,%rax
   15747:	f0 49 0f b1 09       	lock cmpxchg %rcx,(%r9)
   1574c:	75 a2                	jne    156f0 <stm_store_u64+0x50>
   1574e:	4c 89 22             	mov    %r12,(%rdx)
   15751:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
   15758:	ff 
   15759:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
   1575d:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
   15761:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15765:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   1576c:	00 
   1576d:	ff 85 00 01 00 00    	incl   0x100(%rbp)
   15773:	ff 85 08 01 00 00    	incl   0x108(%rbp)
   15779:	48 83 c4 28          	add    $0x28,%rsp
   1577d:	5b                   	pop    %rbx
   1577e:	5d                   	pop    %rbp
   1577f:	41 5c                	pop    %r12
   15781:	41 5d                	pop    %r13
   15783:	41 5e                	pop    %r14
   15785:	41 5f                	pop    %r15
   15787:	c3                   	retq   
   15788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1578f:	00 
   15790:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
   15797:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
   1579b:	48 39 d3             	cmp    %rdx,%rbx
   1579e:	0f 82 44 01 00 00    	jb     158e8 <stm_store_u64+0x248>
   157a4:	8b 85 00 01 00 00    	mov    0x100(%rbp),%eax
   157aa:	48 89 c1             	mov    %rax,%rcx
   157ad:	48 c1 e0 06          	shl    $0x6,%rax
   157b1:	48 01 c2             	add    %rax,%rdx
   157b4:	48 39 d3             	cmp    %rdx,%rbx
   157b7:	72 17                	jb     157d0 <stm_store_u64+0x130>
   157b9:	e9 2a 01 00 00       	jmpq   158e8 <stm_store_u64+0x248>
   157be:	66 90                	xchg   %ax,%ax
   157c0:	48 8b 43 30          	mov    0x30(%rbx),%rax
   157c4:	48 85 c0             	test   %rax,%rax
   157c7:	0f 84 e3 00 00 00    	je     158b0 <stm_store_u64+0x210>
   157cd:	48 89 c3             	mov    %rax,%rbx
   157d0:	4c 3b 23             	cmp    (%rbx),%r12
   157d3:	75 eb                	jne    157c0 <stm_store_u64+0x120>
   157d5:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
   157d9:	48 c7 43 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rbx)
   157e0:	ff 
   157e1:	eb 96                	jmp    15779 <stm_store_u64+0xd9>
   157e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   157e8:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   157ed:	4c 89 e7             	mov    %r12,%rdi
   157f0:	ba 08 00 00 00       	mov    $0x8,%edx
   157f5:	e8 d6 ec ff ff       	callq  144d0 <stm_store_bytes>
   157fa:	48 83 c4 28          	add    $0x28,%rsp
   157fe:	5b                   	pop    %rbx
   157ff:	5d                   	pop    %rbp
   15800:	41 5c                	pop    %r12
   15802:	41 5d                	pop    %r13
   15804:	41 5e                	pop    %r14
   15806:	41 5f                	pop    %r15
   15808:	c3                   	retq   
   15809:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15810:	be 40 0c 00 00       	mov    $0xc40,%esi
   15815:	48 89 ef             	mov    %rbp,%rdi
   15818:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1581d:	e8 de af ff ff       	callq  10800 <stm_rollback>
   15822:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   15828:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1582d:	e9 00 ff ff ff       	jmpq   15732 <stm_store_u64+0x92>
   15832:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15838:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
   1583f:	48 89 ea             	mov    %rbp,%rdx
   15842:	4c 89 fe             	mov    %r15,%rsi
   15845:	bf 01 00 00 00       	mov    $0x1,%edi
   1584a:	31 c0                	xor    %eax,%eax
   1584c:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   15851:	e8 3a cc fe ff       	callq  2490 <__printf_chk@plt>
   15856:	31 ff                	xor    %edi,%edi
   15858:	e8 03 cc fe ff       	callq  2460 <fflush@plt>
   1585d:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
   15863:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
   1586a:	85 d2                	test   %edx,%edx
   1586c:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   15871:	0f 8e a9 fe ff ff    	jle    15720 <stm_store_u64+0x80>
   15877:	ff ca                	dec    %edx
   15879:	48 ff c2             	inc    %rdx
   1587c:	48 c1 e2 04          	shl    $0x4,%rdx
   15880:	48 01 c2             	add    %rax,%rdx
   15883:	eb 10                	jmp    15895 <stm_store_u64+0x1f5>
   15885:	0f 1f 00             	nopl   (%rax)
   15888:	48 83 c0 10          	add    $0x10,%rax
   1588c:	48 39 d0             	cmp    %rdx,%rax
   1588f:	0f 84 8b fe ff ff    	je     15720 <stm_store_u64+0x80>
   15895:	4c 3b 48 08          	cmp    0x8(%rax),%r9
   15899:	75 ed                	jne    15888 <stm_store_u64+0x1e8>
   1589b:	be 40 06 00 00       	mov    $0x640,%esi
   158a0:	48 89 ef             	mov    %rbp,%rdi
   158a3:	e8 58 af ff ff       	callq  10800 <stm_rollback>
   158a8:	e9 cc fe ff ff       	jmpq   15779 <stm_store_u64+0xd9>
   158ad:	0f 1f 00             	nopl   (%rax)
   158b0:	4c 8b 73 18          	mov    0x18(%rbx),%r14
   158b4:	3b 8d 04 01 00 00    	cmp    0x104(%rbp),%ecx
   158ba:	74 64                	je     15920 <stm_store_u64+0x280>
   158bc:	4c 89 22             	mov    %r12,(%rdx)
   158bf:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
   158c6:	ff 
   158c7:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
   158cb:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
   158cf:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   158d3:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   158da:	00 
   158db:	48 89 53 30          	mov    %rdx,0x30(%rbx)
   158df:	e9 89 fe ff ff       	jmpq   1576d <stm_store_u64+0xcd>
   158e4:	0f 1f 40 00          	nopl   0x0(%rax)
   158e8:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
   158ef:	0f 85 fb fd ff ff    	jne    156f0 <stm_store_u64+0x50>
   158f5:	48 8b 05 14 ae 80 00 	mov    0x80ae14(%rip),%rax        # 820710 <_tinystm+0x800550>
   158fc:	48 85 c0             	test   %rax,%rax
   158ff:	74 09                	je     1590a <stm_store_u64+0x26a>
   15901:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   15905:	48 89 ef             	mov    %rbp,%rdi
   15908:	ff d0                	callq  *%rax
   1590a:	be 40 04 00 00       	mov    $0x440,%esi
   1590f:	48 89 ef             	mov    %rbp,%rdi
   15912:	e8 e9 ae ff ff       	callq  10800 <stm_rollback>
   15917:	e9 5d fe ff ff       	jmpq   15779 <stm_store_u64+0xd9>
   1591c:	0f 1f 40 00          	nopl   0x0(%rax)
   15920:	be 40 0c 00 00       	mov    $0xc40,%esi
   15925:	48 89 ef             	mov    %rbp,%rdi
   15928:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1592d:	e8 ce ae ff ff       	callq  10800 <stm_rollback>
   15932:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   15938:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1593d:	48 c1 e2 06          	shl    $0x6,%rdx
   15941:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
   15948:	e9 6f ff ff ff       	jmpq   158bc <stm_store_u64+0x21c>
   1594d:	0f 1f 00             	nopl   (%rax)

0000000000015950 <stm_store_ulong>:
   15950:	f3 0f 1e fa          	endbr64 
   15954:	e9 47 fd ff ff       	jmpq   156a0 <stm_store_u64>
   15959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000015960 <stm_store_short>:
   15960:	f3 0f 1e fa          	endbr64 
   15964:	41 57                	push   %r15
   15966:	41 56                	push   %r14
   15968:	41 55                	push   %r13
   1596a:	41 54                	push   %r12
   1596c:	55                   	push   %rbp
   1596d:	53                   	push   %rbx
   1596e:	48 83 ec 38          	sub    $0x38,%rsp
   15972:	66 89 74 24 1e       	mov    %si,0x1e(%rsp)
   15977:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   1597e:	64 4c 8b 18          	mov    %fs:(%rax),%r11
   15982:	40 f6 c7 01          	test   $0x1,%dil
   15986:	0f 85 a4 01 00 00    	jne    15b30 <stm_store_short+0x1d0>
   1598c:	48 89 f8             	mov    %rdi,%rax
   1598f:	48 d1 e8             	shr    %rax
   15992:	83 e0 03             	and    $0x3,%eax
   15995:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   1599a:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   159a1:	00 00 
   159a3:	66 89 74 44 20       	mov    %si,0x20(%rsp,%rax,2)
   159a8:	66 89 54 44 28       	mov    %dx,0x28(%rsp,%rax,2)
   159ad:	49 89 fd             	mov    %rdi,%r13
   159b0:	48 c1 ef 02          	shr    $0x2,%rdi
   159b4:	81 e7 f8 ff 7f 00    	and    $0x7ffff8,%edi
   159ba:	48 8d 1d ff a7 00 00 	lea    0xa7ff(%rip),%rbx        # 201c0 <_tinystm>
   159c1:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   159c6:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   159cb:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
   159cf:	48 01 fb             	add    %rdi,%rbx
   159d2:	4c 8d 15 af 4a 00 00 	lea    0x4aaf(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   159d9:	48 8b 2b             	mov    (%rbx),%rbp
   159dc:	40 f6 c5 01          	test   $0x1,%bpl
   159e0:	0f 85 ca 00 00 00    	jne    15ab0 <stm_store_short+0x150>
   159e6:	49 89 ee             	mov    %rbp,%r14
   159e9:	49 c1 ee 04          	shr    $0x4,%r14
   159ed:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   159f4:	0f 
   159f5:	75 14                	jne    15a0b <stm_store_short+0xab>
   159f7:	f3 0f 1e fa          	endbr64 
   159fb:	4d 8b 83 e0 00 00 00 	mov    0xe0(%r11),%r8
   15a02:	4d 39 c6             	cmp    %r8,%r14
   15a05:	0f 87 75 01 00 00    	ja     15b80 <stm_store_short+0x220>
   15a0b:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   15a12:	41 3b 93 04 01 00 00 	cmp    0x104(%r11),%edx
   15a19:	0f 84 31 01 00 00    	je     15b50 <stm_store_short+0x1f0>
   15a1f:	48 c1 e2 06          	shl    $0x6,%rdx
   15a23:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   15a2a:	48 89 d1             	mov    %rdx,%rcx
   15a2d:	48 83 c9 01          	or     $0x1,%rcx
   15a31:	48 89 e8             	mov    %rbp,%rax
   15a34:	f0 48 0f b1 0b       	lock cmpxchg %rcx,(%rbx)
   15a39:	75 9e                	jne    159d9 <stm_store_short+0x79>
   15a3b:	4c 89 2a             	mov    %r13,(%rdx)
   15a3e:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   15a42:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   15a46:	4d 85 e4             	test   %r12,%r12
   15a49:	74 51                	je     15a9c <stm_store_short+0x13c>
   15a4b:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   15a4f:	74 47                	je     15a98 <stm_store_short+0x138>
   15a51:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   15a55:	4c 89 f8             	mov    %r15,%rax
   15a58:	48 31 c8             	xor    %rcx,%rax
   15a5b:	4c 21 e0             	and    %r12,%rax
   15a5e:	48 31 c8             	xor    %rcx,%rax
   15a61:	48 89 42 08          	mov    %rax,0x8(%rdx)
   15a65:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15a69:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   15a70:	00 
   15a71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   15a78:	41 ff 83 00 01 00 00 	incl   0x100(%r11)
   15a7f:	41 ff 83 08 01 00 00 	incl   0x108(%r11)
   15a86:	48 83 c4 38          	add    $0x38,%rsp
   15a8a:	5b                   	pop    %rbx
   15a8b:	5d                   	pop    %rbp
   15a8c:	41 5c                	pop    %r12
   15a8e:	41 5d                	pop    %r13
   15a90:	41 5e                	pop    %r14
   15a92:	41 5f                	pop    %r15
   15a94:	c3                   	retq   
   15a95:	0f 1f 00             	nopl   (%rax)
   15a98:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   15a9c:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15aa0:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   15aa7:	00 
   15aa8:	eb ce                	jmp    15a78 <stm_store_short+0x118>
   15aaa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15ab0:	49 8b 93 f8 00 00 00 	mov    0xf8(%r11),%rdx
   15ab7:	48 83 e5 fe          	and    $0xfffffffffffffffe,%rbp
   15abb:	48 39 d5             	cmp    %rdx,%rbp
   15abe:	0f 82 8c 01 00 00    	jb     15c50 <stm_store_short+0x2f0>
   15ac4:	41 8b 83 00 01 00 00 	mov    0x100(%r11),%eax
   15acb:	48 89 c1             	mov    %rax,%rcx
   15ace:	48 c1 e0 06          	shl    $0x6,%rax
   15ad2:	48 01 c2             	add    %rax,%rdx
   15ad5:	48 39 d5             	cmp    %rdx,%rbp
   15ad8:	0f 83 72 01 00 00    	jae    15c50 <stm_store_short+0x2f0>
   15ade:	4d 85 e4             	test   %r12,%r12
   15ae1:	75 15                	jne    15af8 <stm_store_short+0x198>
   15ae3:	eb a1                	jmp    15a86 <stm_store_short+0x126>
   15ae5:	0f 1f 00             	nopl   (%rax)
   15ae8:	48 8b 45 30          	mov    0x30(%rbp),%rax
   15aec:	48 85 c0             	test   %rax,%rax
   15aef:	0f 84 13 01 00 00    	je     15c08 <stm_store_short+0x2a8>
   15af5:	48 89 c5             	mov    %rax,%rbp
   15af8:	4c 3b 6d 00          	cmp    0x0(%rbp),%r13
   15afc:	75 ea                	jne    15ae8 <stm_store_short+0x188>
   15afe:	48 8b 45 10          	mov    0x10(%rbp),%rax
   15b02:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   15b06:	74 16                	je     15b1e <stm_store_short+0x1be>
   15b08:	48 85 c0             	test   %rax,%rax
   15b0b:	0f 84 7f 01 00 00    	je     15c90 <stm_store_short+0x330>
   15b11:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   15b15:	49 31 d7             	xor    %rdx,%r15
   15b18:	4d 21 e7             	and    %r12,%r15
   15b1b:	49 31 d7             	xor    %rdx,%r15
   15b1e:	49 09 c4             	or     %rax,%r12
   15b21:	4c 89 7d 08          	mov    %r15,0x8(%rbp)
   15b25:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   15b29:	e9 58 ff ff ff       	jmpq   15a86 <stm_store_short+0x126>
   15b2e:	66 90                	xchg   %ax,%ax
   15b30:	48 8d 74 24 1e       	lea    0x1e(%rsp),%rsi
   15b35:	ba 02 00 00 00       	mov    $0x2,%edx
   15b3a:	e8 91 e9 ff ff       	callq  144d0 <stm_store_bytes>
   15b3f:	48 83 c4 38          	add    $0x38,%rsp
   15b43:	5b                   	pop    %rbx
   15b44:	5d                   	pop    %rbp
   15b45:	41 5c                	pop    %r12
   15b47:	41 5d                	pop    %r13
   15b49:	41 5e                	pop    %r14
   15b4b:	41 5f                	pop    %r15
   15b4d:	c3                   	retq   
   15b4e:	66 90                	xchg   %ax,%ax
   15b50:	4c 89 df             	mov    %r11,%rdi
   15b53:	be 40 0c 00 00       	mov    $0xc40,%esi
   15b58:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   15b5d:	e8 9e ac ff ff       	callq  10800 <stm_rollback>
   15b62:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   15b67:	4c 8d 15 1a 49 00 00 	lea    0x491a(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   15b6e:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   15b75:	e9 a5 fe ff ff       	jmpq   15a1f <stm_store_short+0xbf>
   15b7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15b80:	49 8b 8b d8 00 00 00 	mov    0xd8(%r11),%rcx
   15b87:	4c 89 da             	mov    %r11,%rdx
   15b8a:	4c 89 d6             	mov    %r10,%rsi
   15b8d:	49 89 d9             	mov    %rbx,%r9
   15b90:	bf 01 00 00 00       	mov    $0x1,%edi
   15b95:	31 c0                	xor    %eax,%eax
   15b97:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   15b9c:	e8 ef c8 fe ff       	callq  2490 <__printf_chk@plt>
   15ba1:	31 ff                	xor    %edi,%edi
   15ba3:	e8 b8 c8 fe ff       	callq  2460 <fflush@plt>
   15ba8:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   15bad:	4c 8d 15 d4 48 00 00 	lea    0x48d4(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   15bb4:	41 8b 93 f0 00 00 00 	mov    0xf0(%r11),%edx
   15bbb:	49 8b 83 e8 00 00 00 	mov    0xe8(%r11),%rax
   15bc2:	85 d2                	test   %edx,%edx
   15bc4:	0f 8e 41 fe ff ff    	jle    15a0b <stm_store_short+0xab>
   15bca:	ff ca                	dec    %edx
   15bcc:	48 ff c2             	inc    %rdx
   15bcf:	48 c1 e2 04          	shl    $0x4,%rdx
   15bd3:	48 01 c2             	add    %rax,%rdx
   15bd6:	eb 15                	jmp    15bed <stm_store_short+0x28d>
   15bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15bdf:	00 
   15be0:	48 83 c0 10          	add    $0x10,%rax
   15be4:	48 39 d0             	cmp    %rdx,%rax
   15be7:	0f 84 1e fe ff ff    	je     15a0b <stm_store_short+0xab>
   15bed:	48 3b 58 08          	cmp    0x8(%rax),%rbx
   15bf1:	75 ed                	jne    15be0 <stm_store_short+0x280>
   15bf3:	be 40 06 00 00       	mov    $0x640,%esi
   15bf8:	4c 89 df             	mov    %r11,%rdi
   15bfb:	e8 00 ac ff ff       	callq  10800 <stm_rollback>
   15c00:	e9 81 fe ff ff       	jmpq   15a86 <stm_store_short+0x126>
   15c05:	0f 1f 00             	nopl   (%rax)
   15c08:	4c 8b 75 18          	mov    0x18(%rbp),%r14
   15c0c:	41 3b 8b 04 01 00 00 	cmp    0x104(%r11),%ecx
   15c13:	0f 84 80 00 00 00    	je     15c99 <stm_store_short+0x339>
   15c19:	4c 89 2a             	mov    %r13,(%rdx)
   15c1c:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   15c20:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   15c24:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   15c28:	0f 85 99 00 00 00    	jne    15cc7 <stm_store_short+0x367>
   15c2e:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   15c32:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15c36:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   15c3d:	00 
   15c3e:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   15c42:	e9 31 fe ff ff       	jmpq   15a78 <stm_store_short+0x118>
   15c47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15c4e:	00 00 
   15c50:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   15c57:	0f 
   15c58:	0f 85 7b fd ff ff    	jne    159d9 <stm_store_short+0x79>
   15c5e:	48 8b 05 ab aa 80 00 	mov    0x80aaab(%rip),%rax        # 820710 <_tinystm+0x800550>
   15c65:	48 85 c0             	test   %rax,%rax
   15c68:	74 13                	je     15c7d <stm_store_short+0x31d>
   15c6a:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   15c6e:	4c 89 df             	mov    %r11,%rdi
   15c71:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   15c76:	ff d0                	callq  *%rax
   15c78:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   15c7d:	be 40 04 00 00       	mov    $0x440,%esi
   15c82:	4c 89 df             	mov    %r11,%rdi
   15c85:	e8 76 ab ff ff       	callq  10800 <stm_rollback>
   15c8a:	e9 f7 fd ff ff       	jmpq   15a86 <stm_store_short+0x126>
   15c8f:	90                   	nop
   15c90:	49 8b 55 00          	mov    0x0(%r13),%rdx
   15c94:	e9 7c fe ff ff       	jmpq   15b15 <stm_store_short+0x1b5>
   15c99:	4c 89 df             	mov    %r11,%rdi
   15c9c:	be 40 0c 00 00       	mov    $0xc40,%esi
   15ca1:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   15ca6:	e8 55 ab ff ff       	callq  10800 <stm_rollback>
   15cab:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   15cb0:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   15cb7:	48 c1 e2 06          	shl    $0x6,%rdx
   15cbb:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   15cc2:	e9 52 ff ff ff       	jmpq   15c19 <stm_store_short+0x2b9>
   15cc7:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   15ccb:	4c 89 f8             	mov    %r15,%rax
   15cce:	48 31 c8             	xor    %rcx,%rax
   15cd1:	4c 21 e0             	and    %r12,%rax
   15cd4:	48 31 c8             	xor    %rcx,%rax
   15cd7:	48 89 42 08          	mov    %rax,0x8(%rdx)
   15cdb:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15cdf:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   15ce6:	00 
   15ce7:	e9 52 ff ff ff       	jmpq   15c3e <stm_store_short+0x2de>
   15cec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000015cf0 <stm_store_int>:
   15cf0:	f3 0f 1e fa          	endbr64 
   15cf4:	41 57                	push   %r15
   15cf6:	41 56                	push   %r14
   15cf8:	41 55                	push   %r13
   15cfa:	41 54                	push   %r12
   15cfc:	55                   	push   %rbp
   15cfd:	53                   	push   %rbx
   15cfe:	48 83 ec 38          	sub    $0x38,%rsp
   15d02:	89 74 24 1c          	mov    %esi,0x1c(%rsp)
   15d06:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   15d0d:	64 4c 8b 18          	mov    %fs:(%rax),%r11
   15d11:	40 f6 c7 03          	test   $0x3,%dil
   15d15:	0f 85 a5 01 00 00    	jne    15ec0 <stm_store_int+0x1d0>
   15d1b:	48 89 f8             	mov    %rdi,%rax
   15d1e:	48 c1 e8 02          	shr    $0x2,%rax
   15d22:	83 e0 01             	and    $0x1,%eax
   15d25:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   15d2c:	00 00 
   15d2e:	89 74 84 20          	mov    %esi,0x20(%rsp,%rax,4)
   15d32:	c7 44 84 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp,%rax,4)
   15d39:	ff 
   15d3a:	49 89 fd             	mov    %rdi,%r13
   15d3d:	48 c1 ef 02          	shr    $0x2,%rdi
   15d41:	81 e7 f8 ff 7f 00    	and    $0x7ffff8,%edi
   15d47:	48 8d 1d 72 a4 00 00 	lea    0xa472(%rip),%rbx        # 201c0 <_tinystm>
   15d4e:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   15d53:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   15d58:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
   15d5c:	48 01 fb             	add    %rdi,%rbx
   15d5f:	4c 8d 15 22 47 00 00 	lea    0x4722(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   15d66:	48 8b 2b             	mov    (%rbx),%rbp
   15d69:	40 f6 c5 01          	test   $0x1,%bpl
   15d6d:	0f 85 c5 00 00 00    	jne    15e38 <stm_store_int+0x148>
   15d73:	49 89 ee             	mov    %rbp,%r14
   15d76:	49 c1 ee 04          	shr    $0x4,%r14
   15d7a:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   15d81:	0f 
   15d82:	75 14                	jne    15d98 <stm_store_int+0xa8>
   15d84:	f3 0f 1e fa          	endbr64 
   15d88:	4d 8b 83 e0 00 00 00 	mov    0xe0(%r11),%r8
   15d8f:	4d 39 c6             	cmp    %r8,%r14
   15d92:	0f 87 78 01 00 00    	ja     15f10 <stm_store_int+0x220>
   15d98:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   15d9f:	41 3b 93 04 01 00 00 	cmp    0x104(%r11),%edx
   15da6:	0f 84 34 01 00 00    	je     15ee0 <stm_store_int+0x1f0>
   15dac:	48 c1 e2 06          	shl    $0x6,%rdx
   15db0:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   15db7:	48 89 d1             	mov    %rdx,%rcx
   15dba:	48 83 c9 01          	or     $0x1,%rcx
   15dbe:	48 89 e8             	mov    %rbp,%rax
   15dc1:	f0 48 0f b1 0b       	lock cmpxchg %rcx,(%rbx)
   15dc6:	75 9e                	jne    15d66 <stm_store_int+0x76>
   15dc8:	4c 89 2a             	mov    %r13,(%rdx)
   15dcb:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   15dcf:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   15dd3:	4d 85 e4             	test   %r12,%r12
   15dd6:	74 4c                	je     15e24 <stm_store_int+0x134>
   15dd8:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   15ddc:	74 42                	je     15e20 <stm_store_int+0x130>
   15dde:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   15de2:	4c 89 f8             	mov    %r15,%rax
   15de5:	48 31 c8             	xor    %rcx,%rax
   15de8:	4c 21 e0             	and    %r12,%rax
   15deb:	48 31 c8             	xor    %rcx,%rax
   15dee:	48 89 42 08          	mov    %rax,0x8(%rdx)
   15df2:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15df6:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   15dfd:	00 
   15dfe:	66 90                	xchg   %ax,%ax
   15e00:	41 ff 83 00 01 00 00 	incl   0x100(%r11)
   15e07:	41 ff 83 08 01 00 00 	incl   0x108(%r11)
   15e0e:	48 83 c4 38          	add    $0x38,%rsp
   15e12:	5b                   	pop    %rbx
   15e13:	5d                   	pop    %rbp
   15e14:	41 5c                	pop    %r12
   15e16:	41 5d                	pop    %r13
   15e18:	41 5e                	pop    %r14
   15e1a:	41 5f                	pop    %r15
   15e1c:	c3                   	retq   
   15e1d:	0f 1f 00             	nopl   (%rax)
   15e20:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   15e24:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15e28:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   15e2f:	00 
   15e30:	eb ce                	jmp    15e00 <stm_store_int+0x110>
   15e32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15e38:	49 8b 93 f8 00 00 00 	mov    0xf8(%r11),%rdx
   15e3f:	48 83 e5 fe          	and    $0xfffffffffffffffe,%rbp
   15e43:	48 39 d5             	cmp    %rdx,%rbp
   15e46:	0f 82 94 01 00 00    	jb     15fe0 <stm_store_int+0x2f0>
   15e4c:	41 8b 83 00 01 00 00 	mov    0x100(%r11),%eax
   15e53:	48 89 c1             	mov    %rax,%rcx
   15e56:	48 c1 e0 06          	shl    $0x6,%rax
   15e5a:	48 01 c2             	add    %rax,%rdx
   15e5d:	48 39 d5             	cmp    %rdx,%rbp
   15e60:	0f 83 7a 01 00 00    	jae    15fe0 <stm_store_int+0x2f0>
   15e66:	4d 85 e4             	test   %r12,%r12
   15e69:	75 15                	jne    15e80 <stm_store_int+0x190>
   15e6b:	eb a1                	jmp    15e0e <stm_store_int+0x11e>
   15e6d:	0f 1f 00             	nopl   (%rax)
   15e70:	48 8b 45 30          	mov    0x30(%rbp),%rax
   15e74:	48 85 c0             	test   %rax,%rax
   15e77:	0f 84 1b 01 00 00    	je     15f98 <stm_store_int+0x2a8>
   15e7d:	48 89 c5             	mov    %rax,%rbp
   15e80:	4c 3b 6d 00          	cmp    0x0(%rbp),%r13
   15e84:	75 ea                	jne    15e70 <stm_store_int+0x180>
   15e86:	48 8b 45 10          	mov    0x10(%rbp),%rax
   15e8a:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   15e8e:	74 16                	je     15ea6 <stm_store_int+0x1b6>
   15e90:	48 85 c0             	test   %rax,%rax
   15e93:	0f 84 87 01 00 00    	je     16020 <stm_store_int+0x330>
   15e99:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   15e9d:	49 31 d7             	xor    %rdx,%r15
   15ea0:	4d 21 e7             	and    %r12,%r15
   15ea3:	49 31 d7             	xor    %rdx,%r15
   15ea6:	49 09 c4             	or     %rax,%r12
   15ea9:	4c 89 7d 08          	mov    %r15,0x8(%rbp)
   15ead:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   15eb1:	e9 58 ff ff ff       	jmpq   15e0e <stm_store_int+0x11e>
   15eb6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   15ebd:	00 00 00 
   15ec0:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
   15ec5:	ba 04 00 00 00       	mov    $0x4,%edx
   15eca:	e8 01 e6 ff ff       	callq  144d0 <stm_store_bytes>
   15ecf:	48 83 c4 38          	add    $0x38,%rsp
   15ed3:	5b                   	pop    %rbx
   15ed4:	5d                   	pop    %rbp
   15ed5:	41 5c                	pop    %r12
   15ed7:	41 5d                	pop    %r13
   15ed9:	41 5e                	pop    %r14
   15edb:	41 5f                	pop    %r15
   15edd:	c3                   	retq   
   15ede:	66 90                	xchg   %ax,%ax
   15ee0:	4c 89 df             	mov    %r11,%rdi
   15ee3:	be 40 0c 00 00       	mov    $0xc40,%esi
   15ee8:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   15eed:	e8 0e a9 ff ff       	callq  10800 <stm_rollback>
   15ef2:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   15ef7:	4c 8d 15 8a 45 00 00 	lea    0x458a(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   15efe:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   15f05:	e9 a2 fe ff ff       	jmpq   15dac <stm_store_int+0xbc>
   15f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   15f10:	49 8b 8b d8 00 00 00 	mov    0xd8(%r11),%rcx
   15f17:	4c 89 da             	mov    %r11,%rdx
   15f1a:	4c 89 d6             	mov    %r10,%rsi
   15f1d:	49 89 d9             	mov    %rbx,%r9
   15f20:	bf 01 00 00 00       	mov    $0x1,%edi
   15f25:	31 c0                	xor    %eax,%eax
   15f27:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   15f2c:	e8 5f c5 fe ff       	callq  2490 <__printf_chk@plt>
   15f31:	31 ff                	xor    %edi,%edi
   15f33:	e8 28 c5 fe ff       	callq  2460 <fflush@plt>
   15f38:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   15f3d:	4c 8d 15 44 45 00 00 	lea    0x4544(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   15f44:	41 8b 93 f0 00 00 00 	mov    0xf0(%r11),%edx
   15f4b:	49 8b 83 e8 00 00 00 	mov    0xe8(%r11),%rax
   15f52:	85 d2                	test   %edx,%edx
   15f54:	0f 8e 3e fe ff ff    	jle    15d98 <stm_store_int+0xa8>
   15f5a:	ff ca                	dec    %edx
   15f5c:	48 ff c2             	inc    %rdx
   15f5f:	48 c1 e2 04          	shl    $0x4,%rdx
   15f63:	48 01 c2             	add    %rax,%rdx
   15f66:	eb 15                	jmp    15f7d <stm_store_int+0x28d>
   15f68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   15f6f:	00 
   15f70:	48 83 c0 10          	add    $0x10,%rax
   15f74:	48 39 d0             	cmp    %rdx,%rax
   15f77:	0f 84 1b fe ff ff    	je     15d98 <stm_store_int+0xa8>
   15f7d:	48 3b 58 08          	cmp    0x8(%rax),%rbx
   15f81:	75 ed                	jne    15f70 <stm_store_int+0x280>
   15f83:	be 40 06 00 00       	mov    $0x640,%esi
   15f88:	4c 89 df             	mov    %r11,%rdi
   15f8b:	e8 70 a8 ff ff       	callq  10800 <stm_rollback>
   15f90:	e9 79 fe ff ff       	jmpq   15e0e <stm_store_int+0x11e>
   15f95:	0f 1f 00             	nopl   (%rax)
   15f98:	4c 8b 75 18          	mov    0x18(%rbp),%r14
   15f9c:	41 3b 8b 04 01 00 00 	cmp    0x104(%r11),%ecx
   15fa3:	0f 84 80 00 00 00    	je     16029 <stm_store_int+0x339>
   15fa9:	4c 89 2a             	mov    %r13,(%rdx)
   15fac:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   15fb0:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   15fb4:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   15fb8:	0f 85 99 00 00 00    	jne    16057 <stm_store_int+0x367>
   15fbe:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   15fc2:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   15fc6:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   15fcd:	00 
   15fce:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   15fd2:	e9 29 fe ff ff       	jmpq   15e00 <stm_store_int+0x110>
   15fd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   15fde:	00 00 
   15fe0:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   15fe7:	0f 
   15fe8:	0f 85 78 fd ff ff    	jne    15d66 <stm_store_int+0x76>
   15fee:	48 8b 05 1b a7 80 00 	mov    0x80a71b(%rip),%rax        # 820710 <_tinystm+0x800550>
   15ff5:	48 85 c0             	test   %rax,%rax
   15ff8:	74 13                	je     1600d <stm_store_int+0x31d>
   15ffa:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   15ffe:	4c 89 df             	mov    %r11,%rdi
   16001:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   16006:	ff d0                	callq  *%rax
   16008:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1600d:	be 40 04 00 00       	mov    $0x440,%esi
   16012:	4c 89 df             	mov    %r11,%rdi
   16015:	e8 e6 a7 ff ff       	callq  10800 <stm_rollback>
   1601a:	e9 ef fd ff ff       	jmpq   15e0e <stm_store_int+0x11e>
   1601f:	90                   	nop
   16020:	49 8b 55 00          	mov    0x0(%r13),%rdx
   16024:	e9 74 fe ff ff       	jmpq   15e9d <stm_store_int+0x1ad>
   16029:	4c 89 df             	mov    %r11,%rdi
   1602c:	be 40 0c 00 00       	mov    $0xc40,%esi
   16031:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   16036:	e8 c5 a7 ff ff       	callq  10800 <stm_rollback>
   1603b:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   16040:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   16047:	48 c1 e2 06          	shl    $0x6,%rdx
   1604b:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   16052:	e9 52 ff ff ff       	jmpq   15fa9 <stm_store_int+0x2b9>
   16057:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   1605b:	4c 89 f8             	mov    %r15,%rax
   1605e:	48 31 c8             	xor    %rcx,%rax
   16061:	4c 21 e0             	and    %r12,%rax
   16064:	48 31 c8             	xor    %rcx,%rax
   16067:	48 89 42 08          	mov    %rax,0x8(%rdx)
   1606b:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   1606f:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   16076:	00 
   16077:	e9 52 ff ff ff       	jmpq   15fce <stm_store_int+0x2de>
   1607c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000016080 <stm_store_long>:
   16080:	f3 0f 1e fa          	endbr64 
   16084:	41 57                	push   %r15
   16086:	41 56                	push   %r14
   16088:	41 55                	push   %r13
   1608a:	41 54                	push   %r12
   1608c:	49 89 fc             	mov    %rdi,%r12
   1608f:	55                   	push   %rbp
   16090:	53                   	push   %rbx
   16091:	48 83 ec 28          	sub    $0x28,%rsp
   16095:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
   1609a:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   160a1:	83 e7 07             	and    $0x7,%edi
   160a4:	64 48 8b 28          	mov    %fs:(%rax),%rbp
   160a8:	0f 85 1a 01 00 00    	jne    161c8 <stm_store_long+0x148>
   160ae:	4d 89 e1             	mov    %r12,%r9
   160b1:	49 c1 e9 02          	shr    $0x2,%r9
   160b5:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
   160bc:	48 8d 05 fd a0 00 00 	lea    0xa0fd(%rip),%rax        # 201c0 <_tinystm>
   160c3:	49 89 f5             	mov    %rsi,%r13
   160c6:	49 01 c1             	add    %rax,%r9
   160c9:	4c 8d 3d b8 43 00 00 	lea    0x43b8(%rip),%r15        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   160d0:	49 8b 19             	mov    (%r9),%rbx
   160d3:	f6 c3 01             	test   $0x1,%bl
   160d6:	0f 85 94 00 00 00    	jne    16170 <stm_store_long+0xf0>
   160dc:	49 89 de             	mov    %rbx,%r14
   160df:	49 c1 ee 04          	shr    $0x4,%r14
   160e3:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
   160ea:	75 14                	jne    16100 <stm_store_long+0x80>
   160ec:	f3 0f 1e fa          	endbr64 
   160f0:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
   160f7:	4d 39 c6             	cmp    %r8,%r14
   160fa:	0f 87 18 01 00 00    	ja     16218 <stm_store_long+0x198>
   16100:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   16106:	3b 95 04 01 00 00    	cmp    0x104(%rbp),%edx
   1610c:	0f 84 de 00 00 00    	je     161f0 <stm_store_long+0x170>
   16112:	48 c1 e2 06          	shl    $0x6,%rdx
   16116:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
   1611d:	48 89 d1             	mov    %rdx,%rcx
   16120:	48 83 c9 01          	or     $0x1,%rcx
   16124:	48 89 d8             	mov    %rbx,%rax
   16127:	f0 49 0f b1 09       	lock cmpxchg %rcx,(%r9)
   1612c:	75 a2                	jne    160d0 <stm_store_long+0x50>
   1612e:	4c 89 22             	mov    %r12,(%rdx)
   16131:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
   16138:	ff 
   16139:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
   1613d:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
   16141:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   16145:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   1614c:	00 
   1614d:	ff 85 00 01 00 00    	incl   0x100(%rbp)
   16153:	ff 85 08 01 00 00    	incl   0x108(%rbp)
   16159:	48 83 c4 28          	add    $0x28,%rsp
   1615d:	5b                   	pop    %rbx
   1615e:	5d                   	pop    %rbp
   1615f:	41 5c                	pop    %r12
   16161:	41 5d                	pop    %r13
   16163:	41 5e                	pop    %r14
   16165:	41 5f                	pop    %r15
   16167:	c3                   	retq   
   16168:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1616f:	00 
   16170:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
   16177:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
   1617b:	48 39 d3             	cmp    %rdx,%rbx
   1617e:	0f 82 44 01 00 00    	jb     162c8 <stm_store_long+0x248>
   16184:	8b 85 00 01 00 00    	mov    0x100(%rbp),%eax
   1618a:	48 89 c1             	mov    %rax,%rcx
   1618d:	48 c1 e0 06          	shl    $0x6,%rax
   16191:	48 01 c2             	add    %rax,%rdx
   16194:	48 39 d3             	cmp    %rdx,%rbx
   16197:	72 17                	jb     161b0 <stm_store_long+0x130>
   16199:	e9 2a 01 00 00       	jmpq   162c8 <stm_store_long+0x248>
   1619e:	66 90                	xchg   %ax,%ax
   161a0:	48 8b 43 30          	mov    0x30(%rbx),%rax
   161a4:	48 85 c0             	test   %rax,%rax
   161a7:	0f 84 e3 00 00 00    	je     16290 <stm_store_long+0x210>
   161ad:	48 89 c3             	mov    %rax,%rbx
   161b0:	4c 3b 23             	cmp    (%rbx),%r12
   161b3:	75 eb                	jne    161a0 <stm_store_long+0x120>
   161b5:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
   161b9:	48 c7 43 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rbx)
   161c0:	ff 
   161c1:	eb 96                	jmp    16159 <stm_store_long+0xd9>
   161c3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   161c8:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   161cd:	4c 89 e7             	mov    %r12,%rdi
   161d0:	ba 08 00 00 00       	mov    $0x8,%edx
   161d5:	e8 f6 e2 ff ff       	callq  144d0 <stm_store_bytes>
   161da:	48 83 c4 28          	add    $0x28,%rsp
   161de:	5b                   	pop    %rbx
   161df:	5d                   	pop    %rbp
   161e0:	41 5c                	pop    %r12
   161e2:	41 5d                	pop    %r13
   161e4:	41 5e                	pop    %r14
   161e6:	41 5f                	pop    %r15
   161e8:	c3                   	retq   
   161e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   161f0:	be 40 0c 00 00       	mov    $0xc40,%esi
   161f5:	48 89 ef             	mov    %rbp,%rdi
   161f8:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   161fd:	e8 fe a5 ff ff       	callq  10800 <stm_rollback>
   16202:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   16208:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1620d:	e9 00 ff ff ff       	jmpq   16112 <stm_store_long+0x92>
   16212:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16218:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
   1621f:	48 89 ea             	mov    %rbp,%rdx
   16222:	4c 89 fe             	mov    %r15,%rsi
   16225:	bf 01 00 00 00       	mov    $0x1,%edi
   1622a:	31 c0                	xor    %eax,%eax
   1622c:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   16231:	e8 5a c2 fe ff       	callq  2490 <__printf_chk@plt>
   16236:	31 ff                	xor    %edi,%edi
   16238:	e8 23 c2 fe ff       	callq  2460 <fflush@plt>
   1623d:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
   16243:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
   1624a:	85 d2                	test   %edx,%edx
   1624c:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   16251:	0f 8e a9 fe ff ff    	jle    16100 <stm_store_long+0x80>
   16257:	ff ca                	dec    %edx
   16259:	48 ff c2             	inc    %rdx
   1625c:	48 c1 e2 04          	shl    $0x4,%rdx
   16260:	48 01 c2             	add    %rax,%rdx
   16263:	eb 10                	jmp    16275 <stm_store_long+0x1f5>
   16265:	0f 1f 00             	nopl   (%rax)
   16268:	48 83 c0 10          	add    $0x10,%rax
   1626c:	48 39 d0             	cmp    %rdx,%rax
   1626f:	0f 84 8b fe ff ff    	je     16100 <stm_store_long+0x80>
   16275:	4c 3b 48 08          	cmp    0x8(%rax),%r9
   16279:	75 ed                	jne    16268 <stm_store_long+0x1e8>
   1627b:	be 40 06 00 00       	mov    $0x640,%esi
   16280:	48 89 ef             	mov    %rbp,%rdi
   16283:	e8 78 a5 ff ff       	callq  10800 <stm_rollback>
   16288:	e9 cc fe ff ff       	jmpq   16159 <stm_store_long+0xd9>
   1628d:	0f 1f 00             	nopl   (%rax)
   16290:	4c 8b 73 18          	mov    0x18(%rbx),%r14
   16294:	3b 8d 04 01 00 00    	cmp    0x104(%rbp),%ecx
   1629a:	74 64                	je     16300 <stm_store_long+0x280>
   1629c:	4c 89 22             	mov    %r12,(%rdx)
   1629f:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
   162a6:	ff 
   162a7:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
   162ab:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
   162af:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   162b3:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   162ba:	00 
   162bb:	48 89 53 30          	mov    %rdx,0x30(%rbx)
   162bf:	e9 89 fe ff ff       	jmpq   1614d <stm_store_long+0xcd>
   162c4:	0f 1f 40 00          	nopl   0x0(%rax)
   162c8:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
   162cf:	0f 85 fb fd ff ff    	jne    160d0 <stm_store_long+0x50>
   162d5:	48 8b 05 34 a4 80 00 	mov    0x80a434(%rip),%rax        # 820710 <_tinystm+0x800550>
   162dc:	48 85 c0             	test   %rax,%rax
   162df:	74 09                	je     162ea <stm_store_long+0x26a>
   162e1:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   162e5:	48 89 ef             	mov    %rbp,%rdi
   162e8:	ff d0                	callq  *%rax
   162ea:	be 40 04 00 00       	mov    $0x440,%esi
   162ef:	48 89 ef             	mov    %rbp,%rdi
   162f2:	e8 09 a5 ff ff       	callq  10800 <stm_rollback>
   162f7:	e9 5d fe ff ff       	jmpq   16159 <stm_store_long+0xd9>
   162fc:	0f 1f 40 00          	nopl   0x0(%rax)
   16300:	be 40 0c 00 00       	mov    $0xc40,%esi
   16305:	48 89 ef             	mov    %rbp,%rdi
   16308:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1630d:	e8 ee a4 ff ff       	callq  10800 <stm_rollback>
   16312:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   16318:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1631d:	48 c1 e2 06          	shl    $0x6,%rdx
   16321:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
   16328:	e9 6f ff ff ff       	jmpq   1629c <stm_store_long+0x21c>
   1632d:	0f 1f 00             	nopl   (%rax)

0000000000016330 <stm_store_float>:
   16330:	f3 0f 1e fa          	endbr64 
   16334:	41 57                	push   %r15
   16336:	41 56                	push   %r14
   16338:	41 55                	push   %r13
   1633a:	41 54                	push   %r12
   1633c:	55                   	push   %rbp
   1633d:	53                   	push   %rbx
   1633e:	48 83 ec 38          	sub    $0x38,%rsp
   16342:	48 c7 c2 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rdx
   16349:	c5 f9 7e 44 24 1c    	vmovd  %xmm0,0x1c(%rsp)
   1634f:	64 4c 8b 1a          	mov    %fs:(%rdx),%r11
   16353:	40 f6 c7 03          	test   $0x3,%dil
   16357:	0f 85 a3 01 00 00    	jne    16500 <stm_store_float+0x1d0>
   1635d:	48 89 fa             	mov    %rdi,%rdx
   16360:	48 c1 ea 02          	shr    $0x2,%rdx
   16364:	83 e2 01             	and    $0x1,%edx
   16367:	48 c7 44 24 28 00 00 	movq   $0x0,0x28(%rsp)
   1636e:	00 00 
   16370:	c7 44 94 28 ff ff ff 	movl   $0xffffffff,0x28(%rsp,%rdx,4)
   16377:	ff 
   16378:	49 89 fd             	mov    %rdi,%r13
   1637b:	c5 f9 7e 44 94 20    	vmovd  %xmm0,0x20(%rsp,%rdx,4)
   16381:	48 c1 ef 02          	shr    $0x2,%rdi
   16385:	81 e7 f8 ff 7f 00    	and    $0x7ffff8,%edi
   1638b:	48 8d 1d 2e 9e 00 00 	lea    0x9e2e(%rip),%rbx        # 201c0 <_tinystm>
   16392:	4c 8b 64 24 28       	mov    0x28(%rsp),%r12
   16397:	4c 8b 7c 24 20       	mov    0x20(%rsp),%r15
   1639c:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
   163a0:	48 01 fb             	add    %rdi,%rbx
   163a3:	4c 8d 15 de 40 00 00 	lea    0x40de(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   163aa:	48 8b 2b             	mov    (%rbx),%rbp
   163ad:	40 f6 c5 01          	test   $0x1,%bpl
   163b1:	0f 85 c9 00 00 00    	jne    16480 <stm_store_float+0x150>
   163b7:	49 89 ee             	mov    %rbp,%r14
   163ba:	49 c1 ee 04          	shr    $0x4,%r14
   163be:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   163c5:	0f 
   163c6:	75 14                	jne    163dc <stm_store_float+0xac>
   163c8:	f3 0f 1e fa          	endbr64 
   163cc:	4d 8b 83 e0 00 00 00 	mov    0xe0(%r11),%r8
   163d3:	4d 39 c6             	cmp    %r8,%r14
   163d6:	0f 87 74 01 00 00    	ja     16550 <stm_store_float+0x220>
   163dc:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   163e3:	41 3b 93 04 01 00 00 	cmp    0x104(%r11),%edx
   163ea:	0f 84 30 01 00 00    	je     16520 <stm_store_float+0x1f0>
   163f0:	48 c1 e2 06          	shl    $0x6,%rdx
   163f4:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   163fb:	48 89 d1             	mov    %rdx,%rcx
   163fe:	48 83 c9 01          	or     $0x1,%rcx
   16402:	48 89 e8             	mov    %rbp,%rax
   16405:	f0 48 0f b1 0b       	lock cmpxchg %rcx,(%rbx)
   1640a:	75 9e                	jne    163aa <stm_store_float+0x7a>
   1640c:	4c 89 2a             	mov    %r13,(%rdx)
   1640f:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   16413:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   16417:	4d 85 e4             	test   %r12,%r12
   1641a:	74 50                	je     1646c <stm_store_float+0x13c>
   1641c:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   16420:	74 46                	je     16468 <stm_store_float+0x138>
   16422:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   16426:	4c 89 f8             	mov    %r15,%rax
   16429:	48 31 c8             	xor    %rcx,%rax
   1642c:	4c 21 e0             	and    %r12,%rax
   1642f:	48 31 c8             	xor    %rcx,%rax
   16432:	48 89 42 08          	mov    %rax,0x8(%rdx)
   16436:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   1643a:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   16441:	00 
   16442:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16448:	41 ff 83 00 01 00 00 	incl   0x100(%r11)
   1644f:	41 ff 83 08 01 00 00 	incl   0x108(%r11)
   16456:	48 83 c4 38          	add    $0x38,%rsp
   1645a:	5b                   	pop    %rbx
   1645b:	5d                   	pop    %rbp
   1645c:	41 5c                	pop    %r12
   1645e:	41 5d                	pop    %r13
   16460:	41 5e                	pop    %r14
   16462:	41 5f                	pop    %r15
   16464:	c3                   	retq   
   16465:	0f 1f 00             	nopl   (%rax)
   16468:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   1646c:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   16470:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   16477:	00 
   16478:	eb ce                	jmp    16448 <stm_store_float+0x118>
   1647a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16480:	49 8b 93 f8 00 00 00 	mov    0xf8(%r11),%rdx
   16487:	48 83 e5 fe          	and    $0xfffffffffffffffe,%rbp
   1648b:	48 39 d5             	cmp    %rdx,%rbp
   1648e:	0f 82 8c 01 00 00    	jb     16620 <stm_store_float+0x2f0>
   16494:	41 8b 83 00 01 00 00 	mov    0x100(%r11),%eax
   1649b:	48 89 c1             	mov    %rax,%rcx
   1649e:	48 c1 e0 06          	shl    $0x6,%rax
   164a2:	48 01 c2             	add    %rax,%rdx
   164a5:	48 39 d5             	cmp    %rdx,%rbp
   164a8:	0f 83 72 01 00 00    	jae    16620 <stm_store_float+0x2f0>
   164ae:	4d 85 e4             	test   %r12,%r12
   164b1:	75 15                	jne    164c8 <stm_store_float+0x198>
   164b3:	eb a1                	jmp    16456 <stm_store_float+0x126>
   164b5:	0f 1f 00             	nopl   (%rax)
   164b8:	48 8b 45 30          	mov    0x30(%rbp),%rax
   164bc:	48 85 c0             	test   %rax,%rax
   164bf:	0f 84 13 01 00 00    	je     165d8 <stm_store_float+0x2a8>
   164c5:	48 89 c5             	mov    %rax,%rbp
   164c8:	4c 3b 6d 00          	cmp    0x0(%rbp),%r13
   164cc:	75 ea                	jne    164b8 <stm_store_float+0x188>
   164ce:	48 8b 45 10          	mov    0x10(%rbp),%rax
   164d2:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   164d6:	74 16                	je     164ee <stm_store_float+0x1be>
   164d8:	48 85 c0             	test   %rax,%rax
   164db:	0f 84 7f 01 00 00    	je     16660 <stm_store_float+0x330>
   164e1:	48 8b 55 08          	mov    0x8(%rbp),%rdx
   164e5:	49 31 d7             	xor    %rdx,%r15
   164e8:	4d 21 e7             	and    %r12,%r15
   164eb:	49 31 d7             	xor    %rdx,%r15
   164ee:	49 09 c4             	or     %rax,%r12
   164f1:	4c 89 7d 08          	mov    %r15,0x8(%rbp)
   164f5:	4c 89 65 10          	mov    %r12,0x10(%rbp)
   164f9:	e9 58 ff ff ff       	jmpq   16456 <stm_store_float+0x126>
   164fe:	66 90                	xchg   %ax,%ax
   16500:	48 8d 74 24 1c       	lea    0x1c(%rsp),%rsi
   16505:	ba 04 00 00 00       	mov    $0x4,%edx
   1650a:	e8 c1 df ff ff       	callq  144d0 <stm_store_bytes>
   1650f:	48 83 c4 38          	add    $0x38,%rsp
   16513:	5b                   	pop    %rbx
   16514:	5d                   	pop    %rbp
   16515:	41 5c                	pop    %r12
   16517:	41 5d                	pop    %r13
   16519:	41 5e                	pop    %r14
   1651b:	41 5f                	pop    %r15
   1651d:	c3                   	retq   
   1651e:	66 90                	xchg   %ax,%ax
   16520:	4c 89 df             	mov    %r11,%rdi
   16523:	be 40 0c 00 00       	mov    $0xc40,%esi
   16528:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1652d:	e8 ce a2 ff ff       	callq  10800 <stm_rollback>
   16532:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   16537:	4c 8d 15 4a 3f 00 00 	lea    0x3f4a(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   1653e:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   16545:	e9 a6 fe ff ff       	jmpq   163f0 <stm_store_float+0xc0>
   1654a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16550:	49 8b 8b d8 00 00 00 	mov    0xd8(%r11),%rcx
   16557:	4c 89 da             	mov    %r11,%rdx
   1655a:	4c 89 d6             	mov    %r10,%rsi
   1655d:	49 89 d9             	mov    %rbx,%r9
   16560:	bf 01 00 00 00       	mov    $0x1,%edi
   16565:	31 c0                	xor    %eax,%eax
   16567:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   1656c:	e8 1f bf fe ff       	callq  2490 <__printf_chk@plt>
   16571:	31 ff                	xor    %edi,%edi
   16573:	e8 e8 be fe ff       	callq  2460 <fflush@plt>
   16578:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1657d:	4c 8d 15 04 3f 00 00 	lea    0x3f04(%rip),%r10        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   16584:	41 8b 93 f0 00 00 00 	mov    0xf0(%r11),%edx
   1658b:	49 8b 83 e8 00 00 00 	mov    0xe8(%r11),%rax
   16592:	85 d2                	test   %edx,%edx
   16594:	0f 8e 42 fe ff ff    	jle    163dc <stm_store_float+0xac>
   1659a:	ff ca                	dec    %edx
   1659c:	48 ff c2             	inc    %rdx
   1659f:	48 c1 e2 04          	shl    $0x4,%rdx
   165a3:	48 01 c2             	add    %rax,%rdx
   165a6:	eb 15                	jmp    165bd <stm_store_float+0x28d>
   165a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   165af:	00 
   165b0:	48 83 c0 10          	add    $0x10,%rax
   165b4:	48 39 d0             	cmp    %rdx,%rax
   165b7:	0f 84 1f fe ff ff    	je     163dc <stm_store_float+0xac>
   165bd:	48 3b 58 08          	cmp    0x8(%rax),%rbx
   165c1:	75 ed                	jne    165b0 <stm_store_float+0x280>
   165c3:	be 40 06 00 00       	mov    $0x640,%esi
   165c8:	4c 89 df             	mov    %r11,%rdi
   165cb:	e8 30 a2 ff ff       	callq  10800 <stm_rollback>
   165d0:	e9 81 fe ff ff       	jmpq   16456 <stm_store_float+0x126>
   165d5:	0f 1f 00             	nopl   (%rax)
   165d8:	4c 8b 75 18          	mov    0x18(%rbp),%r14
   165dc:	41 3b 8b 04 01 00 00 	cmp    0x104(%r11),%ecx
   165e3:	0f 84 80 00 00 00    	je     16669 <stm_store_float+0x339>
   165e9:	4c 89 2a             	mov    %r13,(%rdx)
   165ec:	4c 89 62 10          	mov    %r12,0x10(%rdx)
   165f0:	48 89 5a 20          	mov    %rbx,0x20(%rdx)
   165f4:	49 83 fc ff          	cmp    $0xffffffffffffffff,%r12
   165f8:	0f 85 99 00 00 00    	jne    16697 <stm_store_float+0x367>
   165fe:	4c 89 7a 08          	mov    %r15,0x8(%rdx)
   16602:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   16606:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   1660d:	00 
   1660e:	48 89 55 30          	mov    %rdx,0x30(%rbp)
   16612:	e9 31 fe ff ff       	jmpq   16448 <stm_store_float+0x118>
   16617:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1661e:	00 00 
   16620:	41 f6 83 10 01 00 00 	testb  $0xf,0x110(%r11)
   16627:	0f 
   16628:	0f 85 7c fd ff ff    	jne    163aa <stm_store_float+0x7a>
   1662e:	48 8b 05 db a0 80 00 	mov    0x80a0db(%rip),%rax        # 820710 <_tinystm+0x800550>
   16635:	48 85 c0             	test   %rax,%rax
   16638:	74 13                	je     1664d <stm_store_float+0x31d>
   1663a:	48 8b 75 28          	mov    0x28(%rbp),%rsi
   1663e:	4c 89 df             	mov    %r11,%rdi
   16641:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   16646:	ff d0                	callq  *%rax
   16648:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   1664d:	be 40 04 00 00       	mov    $0x440,%esi
   16652:	4c 89 df             	mov    %r11,%rdi
   16655:	e8 a6 a1 ff ff       	callq  10800 <stm_rollback>
   1665a:	e9 f7 fd ff ff       	jmpq   16456 <stm_store_float+0x126>
   1665f:	90                   	nop
   16660:	49 8b 55 00          	mov    0x0(%r13),%rdx
   16664:	e9 7c fe ff ff       	jmpq   164e5 <stm_store_float+0x1b5>
   16669:	4c 89 df             	mov    %r11,%rdi
   1666c:	be 40 0c 00 00       	mov    $0xc40,%esi
   16671:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
   16676:	e8 85 a1 ff ff       	callq  10800 <stm_rollback>
   1667b:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
   16680:	41 8b 93 00 01 00 00 	mov    0x100(%r11),%edx
   16687:	48 c1 e2 06          	shl    $0x6,%rdx
   1668b:	49 03 93 f8 00 00 00 	add    0xf8(%r11),%rdx
   16692:	e9 52 ff ff ff       	jmpq   165e9 <stm_store_float+0x2b9>
   16697:	49 8b 4d 00          	mov    0x0(%r13),%rcx
   1669b:	4c 89 f8             	mov    %r15,%rax
   1669e:	48 31 c8             	xor    %rcx,%rax
   166a1:	4c 21 e0             	and    %r12,%rax
   166a4:	48 31 c8             	xor    %rcx,%rax
   166a7:	48 89 42 08          	mov    %rax,0x8(%rdx)
   166ab:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   166af:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   166b6:	00 
   166b7:	e9 52 ff ff ff       	jmpq   1660e <stm_store_float+0x2de>
   166bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000166c0 <stm_store_double>:
   166c0:	f3 0f 1e fa          	endbr64 
   166c4:	41 57                	push   %r15
   166c6:	41 56                	push   %r14
   166c8:	41 55                	push   %r13
   166ca:	41 54                	push   %r12
   166cc:	49 89 fc             	mov    %rdi,%r12
   166cf:	55                   	push   %rbp
   166d0:	53                   	push   %rbx
   166d1:	48 83 ec 28          	sub    $0x28,%rsp
   166d5:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   166dc:	c5 f9 d6 44 24 18    	vmovq  %xmm0,0x18(%rsp)
   166e2:	83 e7 07             	and    $0x7,%edi
   166e5:	64 48 8b 28          	mov    %fs:(%rax),%rbp
   166e9:	0f 85 19 01 00 00    	jne    16808 <stm_store_double+0x148>
   166ef:	4d 89 e1             	mov    %r12,%r9
   166f2:	49 c1 e9 02          	shr    $0x2,%r9
   166f6:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
   166fd:	48 8d 05 bc 9a 00 00 	lea    0x9abc(%rip),%rax        # 201c0 <_tinystm>
   16704:	c4 c1 f9 7e c5       	vmovq  %xmm0,%r13
   16709:	49 01 c1             	add    %rax,%r9
   1670c:	4c 8d 3d 75 3d 00 00 	lea    0x3d75(%rip),%r15        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   16713:	49 8b 19             	mov    (%r9),%rbx
   16716:	f6 c3 01             	test   $0x1,%bl
   16719:	0f 85 91 00 00 00    	jne    167b0 <stm_store_double+0xf0>
   1671f:	49 89 de             	mov    %rbx,%r14
   16722:	49 c1 ee 04          	shr    $0x4,%r14
   16726:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
   1672d:	75 14                	jne    16743 <stm_store_double+0x83>
   1672f:	f3 0f 1e fa          	endbr64 
   16733:	4c 8b 85 e0 00 00 00 	mov    0xe0(%rbp),%r8
   1673a:	4d 39 c6             	cmp    %r8,%r14
   1673d:	0f 87 15 01 00 00    	ja     16858 <stm_store_double+0x198>
   16743:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   16749:	3b 95 04 01 00 00    	cmp    0x104(%rbp),%edx
   1674f:	0f 84 db 00 00 00    	je     16830 <stm_store_double+0x170>
   16755:	48 c1 e2 06          	shl    $0x6,%rdx
   16759:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
   16760:	48 89 d1             	mov    %rdx,%rcx
   16763:	48 83 c9 01          	or     $0x1,%rcx
   16767:	48 89 d8             	mov    %rbx,%rax
   1676a:	f0 49 0f b1 09       	lock cmpxchg %rcx,(%r9)
   1676f:	75 a2                	jne    16713 <stm_store_double+0x53>
   16771:	4c 89 22             	mov    %r12,(%rdx)
   16774:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
   1677b:	ff 
   1677c:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
   16780:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
   16784:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   16788:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   1678f:	00 
   16790:	ff 85 00 01 00 00    	incl   0x100(%rbp)
   16796:	ff 85 08 01 00 00    	incl   0x108(%rbp)
   1679c:	48 83 c4 28          	add    $0x28,%rsp
   167a0:	5b                   	pop    %rbx
   167a1:	5d                   	pop    %rbp
   167a2:	41 5c                	pop    %r12
   167a4:	41 5d                	pop    %r13
   167a6:	41 5e                	pop    %r14
   167a8:	41 5f                	pop    %r15
   167aa:	c3                   	retq   
   167ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   167b0:	48 8b 95 f8 00 00 00 	mov    0xf8(%rbp),%rdx
   167b7:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
   167bb:	48 39 d3             	cmp    %rdx,%rbx
   167be:	0f 82 44 01 00 00    	jb     16908 <stm_store_double+0x248>
   167c4:	8b 85 00 01 00 00    	mov    0x100(%rbp),%eax
   167ca:	48 89 c1             	mov    %rax,%rcx
   167cd:	48 c1 e0 06          	shl    $0x6,%rax
   167d1:	48 01 c2             	add    %rax,%rdx
   167d4:	48 39 d3             	cmp    %rdx,%rbx
   167d7:	72 17                	jb     167f0 <stm_store_double+0x130>
   167d9:	e9 2a 01 00 00       	jmpq   16908 <stm_store_double+0x248>
   167de:	66 90                	xchg   %ax,%ax
   167e0:	48 8b 43 30          	mov    0x30(%rbx),%rax
   167e4:	48 85 c0             	test   %rax,%rax
   167e7:	0f 84 e3 00 00 00    	je     168d0 <stm_store_double+0x210>
   167ed:	48 89 c3             	mov    %rax,%rbx
   167f0:	4c 3b 23             	cmp    (%rbx),%r12
   167f3:	75 eb                	jne    167e0 <stm_store_double+0x120>
   167f5:	4c 89 6b 08          	mov    %r13,0x8(%rbx)
   167f9:	48 c7 43 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rbx)
   16800:	ff 
   16801:	eb 99                	jmp    1679c <stm_store_double+0xdc>
   16803:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16808:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
   1680d:	4c 89 e7             	mov    %r12,%rdi
   16810:	ba 08 00 00 00       	mov    $0x8,%edx
   16815:	e8 b6 dc ff ff       	callq  144d0 <stm_store_bytes>
   1681a:	48 83 c4 28          	add    $0x28,%rsp
   1681e:	5b                   	pop    %rbx
   1681f:	5d                   	pop    %rbp
   16820:	41 5c                	pop    %r12
   16822:	41 5d                	pop    %r13
   16824:	41 5e                	pop    %r14
   16826:	41 5f                	pop    %r15
   16828:	c3                   	retq   
   16829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16830:	be 40 0c 00 00       	mov    $0xc40,%esi
   16835:	48 89 ef             	mov    %rbp,%rdi
   16838:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1683d:	e8 be 9f ff ff       	callq  10800 <stm_rollback>
   16842:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   16848:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1684d:	e9 03 ff ff ff       	jmpq   16755 <stm_store_double+0x95>
   16852:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16858:	48 8b 8d d8 00 00 00 	mov    0xd8(%rbp),%rcx
   1685f:	48 89 ea             	mov    %rbp,%rdx
   16862:	4c 89 fe             	mov    %r15,%rsi
   16865:	bf 01 00 00 00       	mov    $0x1,%edi
   1686a:	31 c0                	xor    %eax,%eax
   1686c:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   16871:	e8 1a bc fe ff       	callq  2490 <__printf_chk@plt>
   16876:	31 ff                	xor    %edi,%edi
   16878:	e8 e3 bb fe ff       	callq  2460 <fflush@plt>
   1687d:	8b 95 f0 00 00 00    	mov    0xf0(%rbp),%edx
   16883:	48 8b 85 e8 00 00 00 	mov    0xe8(%rbp),%rax
   1688a:	85 d2                	test   %edx,%edx
   1688c:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   16891:	0f 8e ac fe ff ff    	jle    16743 <stm_store_double+0x83>
   16897:	ff ca                	dec    %edx
   16899:	48 ff c2             	inc    %rdx
   1689c:	48 c1 e2 04          	shl    $0x4,%rdx
   168a0:	48 01 c2             	add    %rax,%rdx
   168a3:	eb 10                	jmp    168b5 <stm_store_double+0x1f5>
   168a5:	0f 1f 00             	nopl   (%rax)
   168a8:	48 83 c0 10          	add    $0x10,%rax
   168ac:	48 39 d0             	cmp    %rdx,%rax
   168af:	0f 84 8e fe ff ff    	je     16743 <stm_store_double+0x83>
   168b5:	4c 3b 48 08          	cmp    0x8(%rax),%r9
   168b9:	75 ed                	jne    168a8 <stm_store_double+0x1e8>
   168bb:	be 40 06 00 00       	mov    $0x640,%esi
   168c0:	48 89 ef             	mov    %rbp,%rdi
   168c3:	e8 38 9f ff ff       	callq  10800 <stm_rollback>
   168c8:	e9 cf fe ff ff       	jmpq   1679c <stm_store_double+0xdc>
   168cd:	0f 1f 00             	nopl   (%rax)
   168d0:	4c 8b 73 18          	mov    0x18(%rbx),%r14
   168d4:	3b 8d 04 01 00 00    	cmp    0x104(%rbp),%ecx
   168da:	74 64                	je     16940 <stm_store_double+0x280>
   168dc:	4c 89 22             	mov    %r12,(%rdx)
   168df:	48 c7 42 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rdx)
   168e6:	ff 
   168e7:	4c 89 4a 20          	mov    %r9,0x20(%rdx)
   168eb:	4c 89 6a 08          	mov    %r13,0x8(%rdx)
   168ef:	4c 89 72 18          	mov    %r14,0x18(%rdx)
   168f3:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
   168fa:	00 
   168fb:	48 89 53 30          	mov    %rdx,0x30(%rbx)
   168ff:	e9 8c fe ff ff       	jmpq   16790 <stm_store_double+0xd0>
   16904:	0f 1f 40 00          	nopl   0x0(%rax)
   16908:	f6 85 10 01 00 00 0f 	testb  $0xf,0x110(%rbp)
   1690f:	0f 85 fe fd ff ff    	jne    16713 <stm_store_double+0x53>
   16915:	48 8b 05 f4 9d 80 00 	mov    0x809df4(%rip),%rax        # 820710 <_tinystm+0x800550>
   1691c:	48 85 c0             	test   %rax,%rax
   1691f:	74 09                	je     1692a <stm_store_double+0x26a>
   16921:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   16925:	48 89 ef             	mov    %rbp,%rdi
   16928:	ff d0                	callq  *%rax
   1692a:	be 40 04 00 00       	mov    $0x440,%esi
   1692f:	48 89 ef             	mov    %rbp,%rdi
   16932:	e8 c9 9e ff ff       	callq  10800 <stm_rollback>
   16937:	e9 60 fe ff ff       	jmpq   1679c <stm_store_double+0xdc>
   1693c:	0f 1f 40 00          	nopl   0x0(%rax)
   16940:	be 40 0c 00 00       	mov    $0xc40,%esi
   16945:	48 89 ef             	mov    %rbp,%rdi
   16948:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
   1694d:	e8 ae 9e ff ff       	callq  10800 <stm_rollback>
   16952:	8b 95 00 01 00 00    	mov    0x100(%rbp),%edx
   16958:	4c 8b 4c 24 08       	mov    0x8(%rsp),%r9
   1695d:	48 c1 e2 06          	shl    $0x6,%rdx
   16961:	48 03 95 f8 00 00 00 	add    0xf8(%rbp),%rdx
   16968:	e9 6f ff ff ff       	jmpq   168dc <stm_store_double+0x21c>
   1696d:	0f 1f 00             	nopl   (%rax)

0000000000016970 <stm_set_bytes>:
   16970:	f3 0f 1e fa          	endbr64 
   16974:	48 85 d2             	test   %rdx,%rdx
   16977:	0f 84 23 04 00 00    	je     16da0 <stm_set_bytes+0x430>
   1697d:	41 57                	push   %r15
   1697f:	40 0f b6 ce          	movzbl %sil,%ecx
   16983:	49 89 ff             	mov    %rdi,%r15
   16986:	41 56                	push   %r14
   16988:	41 55                	push   %r13
   1698a:	49 89 d5             	mov    %rdx,%r13
   1698d:	41 54                	push   %r12
   1698f:	55                   	push   %rbp
   16990:	53                   	push   %rbx
   16991:	48 83 ec 48          	sub    $0x48,%rsp
   16995:	48 c7 c0 f8 ff ff ff 	mov    $0xfffffffffffffff8,%rax
   1699c:	64 48 8b 10          	mov    %fs:(%rax),%rdx
   169a0:	31 c0                	xor    %eax,%eax
   169a2:	40 88 f0             	mov    %sil,%al
   169a5:	88 cc                	mov    %cl,%ah
   169a7:	48 89 ce             	mov    %rcx,%rsi
   169aa:	48 25 ff ff 00 ff    	and    $0xffffffffff00ffff,%rax
   169b0:	48 c1 e6 10          	shl    $0x10,%rsi
   169b4:	49 89 c4             	mov    %rax,%r12
   169b7:	49 09 f4             	or     %rsi,%r12
   169ba:	48 89 c8             	mov    %rcx,%rax
   169bd:	48 be ff ff ff 00 ff 	movabs $0xffffffff00ffffff,%rsi
   169c4:	ff ff ff 
   169c7:	48 c1 e0 18          	shl    $0x18,%rax
   169cb:	49 21 f4             	and    %rsi,%r12
   169ce:	49 09 c4             	or     %rax,%r12
   169d1:	48 be ff ff ff ff 00 	movabs $0xffffff00ffffffff,%rsi
   169d8:	ff ff ff 
   169db:	48 89 c8             	mov    %rcx,%rax
   169de:	48 c1 e0 20          	shl    $0x20,%rax
   169e2:	49 21 f4             	and    %rsi,%r12
   169e5:	49 09 c4             	or     %rax,%r12
   169e8:	48 be ff ff ff ff ff 	movabs $0xffff00ffffffffff,%rsi
   169ef:	00 ff ff 
   169f2:	48 89 c8             	mov    %rcx,%rax
   169f5:	48 c1 e0 28          	shl    $0x28,%rax
   169f9:	49 21 f4             	and    %rsi,%r12
   169fc:	49 09 c4             	or     %rax,%r12
   169ff:	48 be ff ff ff ff ff 	movabs $0xff00ffffffffffff,%rsi
   16a06:	ff 00 ff 
   16a09:	48 89 c8             	mov    %rcx,%rax
   16a0c:	48 c1 e0 30          	shl    $0x30,%rax
   16a10:	49 21 f4             	and    %rsi,%r12
   16a13:	49 09 c4             	or     %rax,%r12
   16a16:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
   16a1d:	ff ff 00 
   16a20:	49 21 c4             	and    %rax,%r12
   16a23:	48 c1 e1 38          	shl    $0x38,%rcx
   16a27:	89 f8                	mov    %edi,%eax
   16a29:	49 09 cc             	or     %rcx,%r12
   16a2c:	83 e0 07             	and    $0x7,%eax
   16a2f:	0f 85 9b 01 00 00    	jne    16bd0 <stm_set_bytes+0x260>
   16a35:	4c 8d 15 84 97 00 00 	lea    0x9784(%rip),%r10        # 201c0 <_tinystm>
   16a3c:	49 83 fd 07          	cmp    $0x7,%r13
   16a40:	0f 86 62 03 00 00    	jbe    16da8 <stm_set_bytes+0x438>
   16a46:	49 8d 45 f8          	lea    -0x8(%r13),%rax
   16a4a:	48 89 c7             	mov    %rax,%rdi
   16a4d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
   16a51:	4d 8d 5c 07 08       	lea    0x8(%r15,%rax,1),%r11
   16a56:	48 c1 ef 03          	shr    $0x3,%rdi
   16a5a:	4c 89 7c 24 10       	mov    %r15,0x10(%rsp)
   16a5f:	4c 89 6c 24 18       	mov    %r13,0x18(%rsp)
   16a64:	4c 89 fd             	mov    %r15,%rbp
   16a67:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   16a6c:	4d 89 e7             	mov    %r12,%r15
   16a6f:	49 89 d5             	mov    %rdx,%r13
   16a72:	4d 89 dc             	mov    %r11,%r12
   16a75:	e9 95 00 00 00       	jmpq   16b0f <stm_set_bytes+0x19f>
   16a7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16a80:	49 89 de             	mov    %rbx,%r14
   16a83:	49 c1 ee 04          	shr    $0x4,%r14
   16a87:	41 f6 85 10 01 00 00 	testb  $0xf,0x110(%r13)
   16a8e:	0f 
   16a8f:	75 14                	jne    16aa5 <stm_set_bytes+0x135>
   16a91:	f3 0f 1e fa          	endbr64 
   16a95:	4d 8b 85 e0 00 00 00 	mov    0xe0(%r13),%r8
   16a9c:	4d 39 c6             	cmp    %r8,%r14
   16a9f:	0f 87 6b 02 00 00    	ja     16d10 <stm_set_bytes+0x3a0>
   16aa5:	41 8b 8d 00 01 00 00 	mov    0x100(%r13),%ecx
   16aac:	41 3b 8d 04 01 00 00 	cmp    0x104(%r13),%ecx
   16ab3:	0f 84 27 02 00 00    	je     16ce0 <stm_set_bytes+0x370>
   16ab9:	48 c1 e1 06          	shl    $0x6,%rcx
   16abd:	49 03 8d f8 00 00 00 	add    0xf8(%r13),%rcx
   16ac4:	48 89 ca             	mov    %rcx,%rdx
   16ac7:	48 83 ca 01          	or     $0x1,%rdx
   16acb:	48 89 d8             	mov    %rbx,%rax
   16ace:	f0 49 0f b1 11       	lock cmpxchg %rdx,(%r9)
   16ad3:	75 4b                	jne    16b20 <stm_set_bytes+0x1b0>
   16ad5:	48 89 29             	mov    %rbp,(%rcx)
   16ad8:	48 c7 41 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rcx)
   16adf:	ff 
   16ae0:	4c 89 49 20          	mov    %r9,0x20(%rcx)
   16ae4:	4c 89 79 08          	mov    %r15,0x8(%rcx)
   16ae8:	4c 89 71 18          	mov    %r14,0x18(%rcx)
   16aec:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   16af3:	00 
   16af4:	41 ff 85 00 01 00 00 	incl   0x100(%r13)
   16afb:	41 ff 85 08 01 00 00 	incl   0x108(%r13)
   16b02:	48 83 c5 08          	add    $0x8,%rbp
   16b06:	49 39 ec             	cmp    %rbp,%r12
   16b09:	0f 84 81 00 00 00    	je     16b90 <stm_set_bytes+0x220>
   16b0f:	49 89 e9             	mov    %rbp,%r9
   16b12:	49 c1 e9 02          	shr    $0x2,%r9
   16b16:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
   16b1d:	4d 01 d1             	add    %r10,%r9
   16b20:	49 8b 19             	mov    (%r9),%rbx
   16b23:	f6 c3 01             	test   $0x1,%bl
   16b26:	0f 84 54 ff ff ff    	je     16a80 <stm_set_bytes+0x110>
   16b2c:	49 8b 85 f8 00 00 00 	mov    0xf8(%r13),%rax
   16b33:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
   16b37:	48 39 c3             	cmp    %rax,%rbx
   16b3a:	0f 82 b0 03 00 00    	jb     16ef0 <stm_set_bytes+0x580>
   16b40:	41 8b 95 00 01 00 00 	mov    0x100(%r13),%edx
   16b47:	48 89 d6             	mov    %rdx,%rsi
   16b4a:	48 c1 e2 06          	shl    $0x6,%rdx
   16b4e:	48 01 d0             	add    %rdx,%rax
   16b51:	48 39 c3             	cmp    %rax,%rbx
   16b54:	72 1a                	jb     16b70 <stm_set_bytes+0x200>
   16b56:	e9 95 03 00 00       	jmpq   16ef0 <stm_set_bytes+0x580>
   16b5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16b60:	48 8b 53 30          	mov    0x30(%rbx),%rdx
   16b64:	48 85 d2             	test   %rdx,%rdx
   16b67:	0f 84 43 03 00 00    	je     16eb0 <stm_set_bytes+0x540>
   16b6d:	48 89 d3             	mov    %rdx,%rbx
   16b70:	48 39 2b             	cmp    %rbp,(%rbx)
   16b73:	75 eb                	jne    16b60 <stm_set_bytes+0x1f0>
   16b75:	48 83 c5 08          	add    $0x8,%rbp
   16b79:	4c 89 7b 08          	mov    %r15,0x8(%rbx)
   16b7d:	48 c7 43 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rbx)
   16b84:	ff 
   16b85:	49 39 ec             	cmp    %rbp,%r12
   16b88:	75 85                	jne    16b0f <stm_set_bytes+0x19f>
   16b8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16b90:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   16b95:	4c 89 ea             	mov    %r13,%rdx
   16b98:	4d 89 fc             	mov    %r15,%r12
   16b9b:	4c 8b 6c 24 18       	mov    0x18(%rsp),%r13
   16ba0:	4c 8b 7c 24 10       	mov    0x10(%rsp),%r15
   16ba5:	41 83 e5 07          	and    $0x7,%r13d
   16ba9:	4d 8d 7c c7 08       	lea    0x8(%r15,%rax,8),%r15
   16bae:	4d 85 ed             	test   %r13,%r13
   16bb1:	0f 85 f1 01 00 00    	jne    16da8 <stm_set_bytes+0x438>
   16bb7:	48 83 c4 48          	add    $0x48,%rsp
   16bbb:	5b                   	pop    %rbx
   16bbc:	5d                   	pop    %rbp
   16bbd:	41 5c                	pop    %r12
   16bbf:	41 5d                	pop    %r13
   16bc1:	41 5e                	pop    %r14
   16bc3:	41 5f                	pop    %r15
   16bc5:	c3                   	retq   
   16bc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   16bcd:	00 00 00 
   16bd0:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   16bd7:	00 00 
   16bd9:	49 83 e7 f8          	and    $0xfffffffffffffff8,%r15
   16bdd:	4c 89 fd             	mov    %r15,%rbp
   16be0:	89 c1                	mov    %eax,%ecx
   16be2:	ff c0                	inc    %eax
   16be4:	c6 44 0c 38 ff       	movb   $0xff,0x38(%rsp,%rcx,1)
   16be9:	49 ff cd             	dec    %r13
   16bec:	83 f8 07             	cmp    $0x7,%eax
   16bef:	77 05                	ja     16bf6 <stm_set_bytes+0x286>
   16bf1:	4d 85 ed             	test   %r13,%r13
   16bf4:	75 ea                	jne    16be0 <stm_set_bytes+0x270>
   16bf6:	49 89 e9             	mov    %rbp,%r9
   16bf9:	49 c1 e9 02          	shr    $0x2,%r9
   16bfd:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
   16c02:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
   16c09:	4c 8d 15 b0 95 00 00 	lea    0x95b0(%rip),%r10        # 201c0 <_tinystm>
   16c10:	4c 8b 74 24 38       	mov    0x38(%rsp),%r14
   16c15:	4c 8d 7d 08          	lea    0x8(%rbp),%r15
   16c19:	4d 01 d1             	add    %r10,%r9
   16c1c:	49 8b 19             	mov    (%r9),%rbx
   16c1f:	f6 c3 01             	test   $0x1,%bl
   16c22:	0f 85 7d 03 00 00    	jne    16fa5 <stm_set_bytes+0x635>
   16c28:	49 89 db             	mov    %rbx,%r11
   16c2b:	49 c1 eb 04          	shr    $0x4,%r11
   16c2f:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   16c36:	75 14                	jne    16c4c <stm_set_bytes+0x2dc>
   16c38:	f3 0f 1e fa          	endbr64 
   16c3c:	4c 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%r8
   16c43:	4d 39 c3             	cmp    %r8,%r11
   16c46:	0f 87 df 04 00 00    	ja     1712b <stm_set_bytes+0x7bb>
   16c4c:	8b 82 00 01 00 00    	mov    0x100(%rdx),%eax
   16c52:	3b 82 04 01 00 00    	cmp    0x104(%rdx),%eax
   16c58:	0f 84 5a 04 00 00    	je     170b8 <stm_set_bytes+0x748>
   16c5e:	89 c1                	mov    %eax,%ecx
   16c60:	48 c1 e1 06          	shl    $0x6,%rcx
   16c64:	48 03 8a f8 00 00 00 	add    0xf8(%rdx),%rcx
   16c6b:	48 89 ce             	mov    %rcx,%rsi
   16c6e:	48 83 ce 01          	or     $0x1,%rsi
   16c72:	48 89 d8             	mov    %rbx,%rax
   16c75:	f0 49 0f b1 31       	lock cmpxchg %rsi,(%r9)
   16c7a:	75 a0                	jne    16c1c <stm_set_bytes+0x2ac>
   16c7c:	48 89 29             	mov    %rbp,(%rcx)
   16c7f:	4c 89 71 10          	mov    %r14,0x10(%rcx)
   16c83:	4c 89 49 20          	mov    %r9,0x20(%rcx)
   16c87:	4d 85 f6             	test   %r14,%r14
   16c8a:	0f 84 b4 02 00 00    	je     16f44 <stm_set_bytes+0x5d4>
   16c90:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
   16c94:	0f 84 a6 02 00 00    	je     16f40 <stm_set_bytes+0x5d0>
   16c9a:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   16c9e:	4c 89 e0             	mov    %r12,%rax
   16ca1:	48 31 f0             	xor    %rsi,%rax
   16ca4:	4c 21 f0             	and    %r14,%rax
   16ca7:	48 31 f0             	xor    %rsi,%rax
   16caa:	48 89 41 08          	mov    %rax,0x8(%rcx)
   16cae:	4c 89 59 18          	mov    %r11,0x18(%rcx)
   16cb2:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   16cb9:	00 
   16cba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   16cc0:	ff 82 00 01 00 00    	incl   0x100(%rdx)
   16cc6:	ff 82 08 01 00 00    	incl   0x108(%rdx)
   16ccc:	49 83 fd 07          	cmp    $0x7,%r13
   16cd0:	0f 87 70 fd ff ff    	ja     16a46 <stm_set_bytes+0xd6>
   16cd6:	e9 d3 fe ff ff       	jmpq   16bae <stm_set_bytes+0x23e>
   16cdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16ce0:	be 40 0c 00 00       	mov    $0xc40,%esi
   16ce5:	4c 89 ef             	mov    %r13,%rdi
   16ce8:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   16ced:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   16cf2:	e8 09 9b ff ff       	callq  10800 <stm_rollback>
   16cf7:	41 8b 8d 00 01 00 00 	mov    0x100(%r13),%ecx
   16cfe:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   16d03:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   16d08:	e9 ac fd ff ff       	jmpq   16ab9 <stm_set_bytes+0x149>
   16d0d:	0f 1f 00             	nopl   (%rax)
   16d10:	49 8b 8d d8 00 00 00 	mov    0xd8(%r13),%rcx
   16d17:	4c 89 ea             	mov    %r13,%rdx
   16d1a:	48 8d 35 67 37 00 00 	lea    0x3767(%rip),%rsi        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   16d21:	bf 01 00 00 00       	mov    $0x1,%edi
   16d26:	31 c0                	xor    %eax,%eax
   16d28:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   16d2d:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   16d32:	e8 59 b7 fe ff       	callq  2490 <__printf_chk@plt>
   16d37:	31 ff                	xor    %edi,%edi
   16d39:	e8 22 b7 fe ff       	callq  2460 <fflush@plt>
   16d3e:	41 8b 95 f0 00 00 00 	mov    0xf0(%r13),%edx
   16d45:	49 8b 85 e8 00 00 00 	mov    0xe8(%r13),%rax
   16d4c:	85 d2                	test   %edx,%edx
   16d4e:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   16d53:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   16d58:	0f 8e 47 fd ff ff    	jle    16aa5 <stm_set_bytes+0x135>
   16d5e:	ff ca                	dec    %edx
   16d60:	48 ff c2             	inc    %rdx
   16d63:	48 c1 e2 04          	shl    $0x4,%rdx
   16d67:	48 01 c2             	add    %rax,%rdx
   16d6a:	eb 11                	jmp    16d7d <stm_set_bytes+0x40d>
   16d6c:	0f 1f 40 00          	nopl   0x0(%rax)
   16d70:	48 83 c0 10          	add    $0x10,%rax
   16d74:	48 39 d0             	cmp    %rdx,%rax
   16d77:	0f 84 28 fd ff ff    	je     16aa5 <stm_set_bytes+0x135>
   16d7d:	4c 3b 48 08          	cmp    0x8(%rax),%r9
   16d81:	75 ed                	jne    16d70 <stm_set_bytes+0x400>
   16d83:	be 40 06 00 00       	mov    $0x640,%esi
   16d88:	4c 89 ef             	mov    %r13,%rdi
   16d8b:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   16d90:	e8 6b 9a ff ff       	callq  10800 <stm_rollback>
   16d95:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   16d9a:	e9 63 fd ff ff       	jmpq   16b02 <stm_set_bytes+0x192>
   16d9f:	90                   	nop
   16da0:	c3                   	retq   
   16da1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16da8:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
   16daf:	00 00 
   16db1:	48 8d 44 24 38       	lea    0x38(%rsp),%rax
   16db6:	49 01 c5             	add    %rax,%r13
   16db9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16dc0:	c6 00 ff             	movb   $0xff,(%rax)
   16dc3:	48 ff c0             	inc    %rax
   16dc6:	4c 39 e8             	cmp    %r13,%rax
   16dc9:	75 f5                	jne    16dc0 <stm_set_bytes+0x450>
   16dcb:	4d 89 f9             	mov    %r15,%r9
   16dce:	49 c1 e9 02          	shr    $0x2,%r9
   16dd2:	41 81 e1 f8 ff 7f 00 	and    $0x7ffff8,%r9d
   16dd9:	48 8b 6c 24 38       	mov    0x38(%rsp),%rbp
   16dde:	4d 89 e6             	mov    %r12,%r14
   16de1:	4d 01 d1             	add    %r10,%r9
   16de4:	4c 8d 1d 9d 36 00 00 	lea    0x369d(%rip),%r11        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   16deb:	49 8b 19             	mov    (%r9),%rbx
   16dee:	f6 c3 01             	test   $0x1,%bl
   16df1:	0f 85 3b 02 00 00    	jne    17032 <stm_set_bytes+0x6c2>
   16df7:	49 89 dd             	mov    %rbx,%r13
   16dfa:	49 c1 ed 04          	shr    $0x4,%r13
   16dfe:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   16e05:	75 14                	jne    16e1b <stm_set_bytes+0x4ab>
   16e07:	f3 0f 1e fa          	endbr64 
   16e0b:	4c 8b 82 e0 00 00 00 	mov    0xe0(%rdx),%r8
   16e12:	4d 39 c5             	cmp    %r8,%r13
   16e15:	0f 87 be 03 00 00    	ja     171d9 <stm_set_bytes+0x869>
   16e1b:	8b 82 00 01 00 00    	mov    0x100(%rdx),%eax
   16e21:	3b 82 04 01 00 00    	cmp    0x104(%rdx),%eax
   16e27:	0f 84 cb 02 00 00    	je     170f8 <stm_set_bytes+0x788>
   16e2d:	89 c1                	mov    %eax,%ecx
   16e2f:	48 c1 e1 06          	shl    $0x6,%rcx
   16e33:	48 03 8a f8 00 00 00 	add    0xf8(%rdx),%rcx
   16e3a:	48 89 ce             	mov    %rcx,%rsi
   16e3d:	48 83 ce 01          	or     $0x1,%rsi
   16e41:	48 89 d8             	mov    %rbx,%rax
   16e44:	f0 49 0f b1 31       	lock cmpxchg %rsi,(%r9)
   16e49:	75 a0                	jne    16deb <stm_set_bytes+0x47b>
   16e4b:	4c 89 39             	mov    %r15,(%rcx)
   16e4e:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   16e52:	4c 89 49 20          	mov    %r9,0x20(%rcx)
   16e56:	48 85 ed             	test   %rbp,%rbp
   16e59:	0f 84 fd 00 00 00    	je     16f5c <stm_set_bytes+0x5ec>
   16e5f:	48 83 fd ff          	cmp    $0xffffffffffffffff,%rbp
   16e63:	0f 84 ef 00 00 00    	je     16f58 <stm_set_bytes+0x5e8>
   16e69:	49 8b 37             	mov    (%r15),%rsi
   16e6c:	4c 89 e0             	mov    %r12,%rax
   16e6f:	48 31 f0             	xor    %rsi,%rax
   16e72:	48 21 e8             	and    %rbp,%rax
   16e75:	48 31 f0             	xor    %rsi,%rax
   16e78:	48 89 41 08          	mov    %rax,0x8(%rcx)
   16e7c:	4c 89 69 18          	mov    %r13,0x18(%rcx)
   16e80:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   16e87:	00 
   16e88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   16e8f:	00 
   16e90:	ff 82 00 01 00 00    	incl   0x100(%rdx)
   16e96:	ff 82 08 01 00 00    	incl   0x108(%rdx)
   16e9c:	48 83 c4 48          	add    $0x48,%rsp
   16ea0:	5b                   	pop    %rbx
   16ea1:	5d                   	pop    %rbp
   16ea2:	41 5c                	pop    %r12
   16ea4:	41 5d                	pop    %r13
   16ea6:	41 5e                	pop    %r14
   16ea8:	41 5f                	pop    %r15
   16eaa:	c3                   	retq   
   16eab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   16eb0:	4c 8b 73 18          	mov    0x18(%rbx),%r14
   16eb4:	41 3b b5 04 01 00 00 	cmp    0x104(%r13),%esi
   16ebb:	0f 84 ac 00 00 00    	je     16f6d <stm_set_bytes+0x5fd>
   16ec1:	48 89 28             	mov    %rbp,(%rax)
   16ec4:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
   16ecb:	ff 
   16ecc:	4c 89 48 20          	mov    %r9,0x20(%rax)
   16ed0:	4c 89 78 08          	mov    %r15,0x8(%rax)
   16ed4:	4c 89 70 18          	mov    %r14,0x18(%rax)
   16ed8:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   16edf:	00 
   16ee0:	48 89 43 30          	mov    %rax,0x30(%rbx)
   16ee4:	e9 0b fc ff ff       	jmpq   16af4 <stm_set_bytes+0x184>
   16ee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16ef0:	41 f6 85 10 01 00 00 	testb  $0xf,0x110(%r13)
   16ef7:	0f 
   16ef8:	0f 85 22 fc ff ff    	jne    16b20 <stm_set_bytes+0x1b0>
   16efe:	48 8b 05 0b 98 80 00 	mov    0x80980b(%rip),%rax        # 820710 <_tinystm+0x800550>
   16f05:	48 85 c0             	test   %rax,%rax
   16f08:	74 13                	je     16f1d <stm_set_bytes+0x5ad>
   16f0a:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   16f0e:	4c 89 ef             	mov    %r13,%rdi
   16f11:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   16f16:	ff d0                	callq  *%rax
   16f18:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   16f1d:	be 40 04 00 00       	mov    $0x440,%esi
   16f22:	4c 89 ef             	mov    %r13,%rdi
   16f25:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   16f2a:	e8 d1 98 ff ff       	callq  10800 <stm_rollback>
   16f2f:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   16f34:	e9 c9 fb ff ff       	jmpq   16b02 <stm_set_bytes+0x192>
   16f39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   16f40:	4c 89 61 08          	mov    %r12,0x8(%rcx)
   16f44:	4c 89 59 18          	mov    %r11,0x18(%rcx)
   16f48:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   16f4f:	00 
   16f50:	e9 6b fd ff ff       	jmpq   16cc0 <stm_set_bytes+0x350>
   16f55:	0f 1f 00             	nopl   (%rax)
   16f58:	4c 89 61 08          	mov    %r12,0x8(%rcx)
   16f5c:	4c 89 69 18          	mov    %r13,0x18(%rcx)
   16f60:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   16f67:	00 
   16f68:	e9 23 ff ff ff       	jmpq   16e90 <stm_set_bytes+0x520>
   16f6d:	be 40 0c 00 00       	mov    $0xc40,%esi
   16f72:	4c 89 ef             	mov    %r13,%rdi
   16f75:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)
   16f7a:	4c 89 4c 24 20       	mov    %r9,0x20(%rsp)
   16f7f:	e8 7c 98 ff ff       	callq  10800 <stm_rollback>
   16f84:	41 8b 85 00 01 00 00 	mov    0x100(%r13),%eax
   16f8b:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10
   16f90:	48 c1 e0 06          	shl    $0x6,%rax
   16f94:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
   16f99:	49 03 85 f8 00 00 00 	add    0xf8(%r13),%rax
   16fa0:	e9 1c ff ff ff       	jmpq   16ec1 <stm_set_bytes+0x551>
   16fa5:	48 8b 82 f8 00 00 00 	mov    0xf8(%rdx),%rax
   16fac:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
   16fb0:	48 39 c3             	cmp    %rax,%rbx
   16fb3:	0f 82 6f 03 00 00    	jb     17328 <stm_set_bytes+0x9b8>
   16fb9:	8b 8a 00 01 00 00    	mov    0x100(%rdx),%ecx
   16fbf:	48 89 ce             	mov    %rcx,%rsi
   16fc2:	48 c1 e1 06          	shl    $0x6,%rcx
   16fc6:	48 01 c1             	add    %rax,%rcx
   16fc9:	48 39 cb             	cmp    %rcx,%rbx
   16fcc:	0f 83 56 03 00 00    	jae    17328 <stm_set_bytes+0x9b8>
   16fd2:	4d 85 f6             	test   %r14,%r14
   16fd5:	75 19                	jne    16ff0 <stm_set_bytes+0x680>
   16fd7:	e9 f0 fc ff ff       	jmpq   16ccc <stm_set_bytes+0x35c>
   16fdc:	0f 1f 40 00          	nopl   0x0(%rax)
   16fe0:	48 8b 43 30          	mov    0x30(%rbx),%rax
   16fe4:	48 85 c0             	test   %rax,%rax
   16fe7:	0f 84 79 02 00 00    	je     17266 <stm_set_bytes+0x8f6>
   16fed:	48 89 c3             	mov    %rax,%rbx
   16ff0:	48 3b 2b             	cmp    (%rbx),%rbp
   16ff3:	75 eb                	jne    16fe0 <stm_set_bytes+0x670>
   16ff5:	48 8b 43 10          	mov    0x10(%rbx),%rax
   16ff9:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
   16ffd:	74 1e                	je     1701d <stm_set_bytes+0x6ad>
   16fff:	48 85 c0             	test   %rax,%rax
   17002:	0f 84 70 03 00 00    	je     17378 <stm_set_bytes+0xa08>
   17008:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
   1700c:	4c 89 e6             	mov    %r12,%rsi
   1700f:	48 31 ce             	xor    %rcx,%rsi
   17012:	4c 21 f6             	and    %r14,%rsi
   17015:	48 31 ce             	xor    %rcx,%rsi
   17018:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
   1701d:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   17022:	4c 09 f0             	or     %r14,%rax
   17025:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
   17029:	48 89 43 10          	mov    %rax,0x10(%rbx)
   1702d:	e9 9a fc ff ff       	jmpq   16ccc <stm_set_bytes+0x35c>
   17032:	48 8b 82 f8 00 00 00 	mov    0xf8(%rdx),%rax
   17039:	48 83 e3 fe          	and    $0xfffffffffffffffe,%rbx
   1703d:	48 39 c3             	cmp    %rax,%rbx
   17040:	0f 82 a8 02 00 00    	jb     172ee <stm_set_bytes+0x97e>
   17046:	8b 8a 00 01 00 00    	mov    0x100(%rdx),%ecx
   1704c:	48 89 ce             	mov    %rcx,%rsi
   1704f:	48 c1 e1 06          	shl    $0x6,%rcx
   17053:	48 01 c1             	add    %rax,%rcx
   17056:	48 39 cb             	cmp    %rcx,%rbx
   17059:	0f 83 8f 02 00 00    	jae    172ee <stm_set_bytes+0x97e>
   1705f:	48 85 ed             	test   %rbp,%rbp
   17062:	75 1c                	jne    17080 <stm_set_bytes+0x710>
   17064:	e9 4e fb ff ff       	jmpq   16bb7 <stm_set_bytes+0x247>
   17069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17070:	48 8b 43 30          	mov    0x30(%rbx),%rax
   17074:	48 85 c0             	test   %rax,%rax
   17077:	0f 84 27 02 00 00    	je     172a4 <stm_set_bytes+0x934>
   1707d:	48 89 c3             	mov    %rax,%rbx
   17080:	4c 3b 3b             	cmp    (%rbx),%r15
   17083:	75 eb                	jne    17070 <stm_set_bytes+0x700>
   17085:	48 8b 43 10          	mov    0x10(%rbx),%rax
   17089:	48 83 fd ff          	cmp    $0xffffffffffffffff,%rbp
   1708d:	74 19                	je     170a8 <stm_set_bytes+0x738>
   1708f:	48 85 c0             	test   %rax,%rax
   17092:	0f 84 d8 02 00 00    	je     17370 <stm_set_bytes+0xa00>
   17098:	48 8b 53 08          	mov    0x8(%rbx),%rdx
   1709c:	4d 89 e6             	mov    %r12,%r14
   1709f:	49 31 d6             	xor    %rdx,%r14
   170a2:	49 21 ee             	and    %rbp,%r14
   170a5:	49 31 d6             	xor    %rdx,%r14
   170a8:	48 09 e8             	or     %rbp,%rax
   170ab:	4c 89 73 08          	mov    %r14,0x8(%rbx)
   170af:	48 89 43 10          	mov    %rax,0x10(%rbx)
   170b3:	e9 ff fa ff ff       	jmpq   16bb7 <stm_set_bytes+0x247>
   170b8:	48 89 d7             	mov    %rdx,%rdi
   170bb:	be 40 0c 00 00       	mov    $0xc40,%esi
   170c0:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   170c5:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   170ca:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   170cf:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   170d4:	e8 27 97 ff ff       	callq  10800 <stm_rollback>
   170d9:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   170de:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   170e3:	8b 82 00 01 00 00    	mov    0x100(%rdx),%eax
   170e9:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   170ee:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   170f3:	e9 66 fb ff ff       	jmpq   16c5e <stm_set_bytes+0x2ee>
   170f8:	48 89 d7             	mov    %rdx,%rdi
   170fb:	be 40 0c 00 00       	mov    $0xc40,%esi
   17100:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   17105:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1710a:	e8 f1 96 ff ff       	callq  10800 <stm_rollback>
   1710f:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   17114:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   17119:	8b 82 00 01 00 00    	mov    0x100(%rdx),%eax
   1711f:	4c 8d 1d 62 33 00 00 	lea    0x3362(%rip),%r11        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   17126:	e9 02 fd ff ff       	jmpq   16e2d <stm_set_bytes+0x4bd>
   1712b:	48 8b 8a d8 00 00 00 	mov    0xd8(%rdx),%rcx
   17132:	48 8d 35 4f 33 00 00 	lea    0x334f(%rip),%rsi        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   17139:	bf 01 00 00 00       	mov    $0x1,%edi
   1713e:	31 c0                	xor    %eax,%eax
   17140:	4c 89 5c 24 28       	mov    %r11,0x28(%rsp)
   17145:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   1714a:	4c 89 4c 24 18       	mov    %r9,0x18(%rsp)
   1714f:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
   17154:	e8 37 b3 fe ff       	callq  2490 <__printf_chk@plt>
   17159:	31 ff                	xor    %edi,%edi
   1715b:	e8 00 b3 fe ff       	callq  2460 <fflush@plt>
   17160:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
   17165:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
   1716a:	8b 8a f0 00 00 00    	mov    0xf0(%rdx),%ecx
   17170:	48 8b 82 e8 00 00 00 	mov    0xe8(%rdx),%rax
   17177:	85 c9                	test   %ecx,%ecx
   17179:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   1717e:	4c 8b 5c 24 28       	mov    0x28(%rsp),%r11
   17183:	0f 8e c3 fa ff ff    	jle    16c4c <stm_set_bytes+0x2dc>
   17189:	ff c9                	dec    %ecx
   1718b:	48 ff c1             	inc    %rcx
   1718e:	48 c1 e1 04          	shl    $0x4,%rcx
   17192:	48 01 c1             	add    %rax,%rcx
   17195:	eb 16                	jmp    171ad <stm_set_bytes+0x83d>
   17197:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1719e:	00 00 
   171a0:	48 83 c0 10          	add    $0x10,%rax
   171a4:	48 39 c8             	cmp    %rcx,%rax
   171a7:	0f 84 9f fa ff ff    	je     16c4c <stm_set_bytes+0x2dc>
   171ad:	4c 3b 48 08          	cmp    0x8(%rax),%r9
   171b1:	75 ed                	jne    171a0 <stm_set_bytes+0x830>
   171b3:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   171b8:	be 40 06 00 00       	mov    $0x640,%esi
   171bd:	48 89 d7             	mov    %rdx,%rdi
   171c0:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   171c5:	e8 36 96 ff ff       	callq  10800 <stm_rollback>
   171ca:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   171cf:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   171d4:	e9 f3 fa ff ff       	jmpq   16ccc <stm_set_bytes+0x35c>
   171d9:	48 8b 8a d8 00 00 00 	mov    0xd8(%rdx),%rcx
   171e0:	4c 89 de             	mov    %r11,%rsi
   171e3:	bf 01 00 00 00       	mov    $0x1,%edi
   171e8:	31 c0                	xor    %eax,%eax
   171ea:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   171ef:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   171f4:	e8 97 b2 fe ff       	callq  2490 <__printf_chk@plt>
   171f9:	31 ff                	xor    %edi,%edi
   171fb:	e8 60 b2 fe ff       	callq  2460 <fflush@plt>
   17200:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   17205:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   1720a:	8b 8a f0 00 00 00    	mov    0xf0(%rdx),%ecx
   17210:	48 8b 82 e8 00 00 00 	mov    0xe8(%rdx),%rax
   17217:	85 c9                	test   %ecx,%ecx
   17219:	4c 8d 1d 68 32 00 00 	lea    0x3268(%rip),%r11        # 1a488 <__PRETTY_FUNCTION__.3713+0x620>
   17220:	0f 8e f5 fb ff ff    	jle    16e1b <stm_set_bytes+0x4ab>
   17226:	ff c9                	dec    %ecx
   17228:	48 ff c1             	inc    %rcx
   1722b:	48 c1 e1 04          	shl    $0x4,%rcx
   1722f:	48 01 c1             	add    %rax,%rcx
   17232:	eb 11                	jmp    17245 <stm_set_bytes+0x8d5>
   17234:	0f 1f 40 00          	nopl   0x0(%rax)
   17238:	48 83 c0 10          	add    $0x10,%rax
   1723c:	48 39 c8             	cmp    %rcx,%rax
   1723f:	0f 84 d6 fb ff ff    	je     16e1b <stm_set_bytes+0x4ab>
   17245:	4c 3b 48 08          	cmp    0x8(%rax),%r9
   17249:	75 ed                	jne    17238 <stm_set_bytes+0x8c8>
   1724b:	be 40 06 00 00       	mov    $0x640,%esi
   17250:	48 83 c4 48          	add    $0x48,%rsp
   17254:	5b                   	pop    %rbx
   17255:	5d                   	pop    %rbp
   17256:	41 5c                	pop    %r12
   17258:	41 5d                	pop    %r13
   1725a:	41 5e                	pop    %r14
   1725c:	48 89 d7             	mov    %rdx,%rdi
   1725f:	41 5f                	pop    %r15
   17261:	e9 9a 95 ff ff       	jmpq   10800 <stm_rollback>
   17266:	4c 8b 43 18          	mov    0x18(%rbx),%r8
   1726a:	3b b2 04 01 00 00    	cmp    0x104(%rdx),%esi
   17270:	0f 84 0b 01 00 00    	je     17381 <stm_set_bytes+0xa11>
   17276:	48 89 29             	mov    %rbp,(%rcx)
   17279:	4c 89 71 10          	mov    %r14,0x10(%rcx)
   1727d:	4c 89 49 20          	mov    %r9,0x20(%rcx)
   17281:	49 83 fe ff          	cmp    $0xffffffffffffffff,%r14
   17285:	0f 85 78 01 00 00    	jne    17403 <stm_set_bytes+0xa93>
   1728b:	4c 89 61 08          	mov    %r12,0x8(%rcx)
   1728f:	4c 89 41 18          	mov    %r8,0x18(%rcx)
   17293:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   1729a:	00 
   1729b:	48 89 4b 30          	mov    %rcx,0x30(%rbx)
   1729f:	e9 1c fa ff ff       	jmpq   16cc0 <stm_set_bytes+0x350>
   172a4:	4c 8b 6b 18          	mov    0x18(%rbx),%r13
   172a8:	3b b2 04 01 00 00    	cmp    0x104(%rdx),%esi
   172ae:	0f 84 18 01 00 00    	je     173cc <stm_set_bytes+0xa5c>
   172b4:	4c 89 39             	mov    %r15,(%rcx)
   172b7:	48 89 69 10          	mov    %rbp,0x10(%rcx)
   172bb:	4c 89 49 20          	mov    %r9,0x20(%rcx)
   172bf:	48 83 fd ff          	cmp    $0xffffffffffffffff,%rbp
   172c3:	0f 85 5f 01 00 00    	jne    17428 <stm_set_bytes+0xab8>
   172c9:	4c 89 61 08          	mov    %r12,0x8(%rcx)
   172cd:	4c 89 69 18          	mov    %r13,0x18(%rcx)
   172d1:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   172d8:	00 
   172d9:	48 89 4b 30          	mov    %rcx,0x30(%rbx)
   172dd:	ff 82 00 01 00 00    	incl   0x100(%rdx)
   172e3:	ff 82 08 01 00 00    	incl   0x108(%rdx)
   172e9:	e9 ae fb ff ff       	jmpq   16e9c <stm_set_bytes+0x52c>
   172ee:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   172f5:	0f 85 f0 fa ff ff    	jne    16deb <stm_set_bytes+0x47b>
   172fb:	48 8b 05 0e 94 80 00 	mov    0x80940e(%rip),%rax        # 820710 <_tinystm+0x800550>
   17302:	48 85 c0             	test   %rax,%rax
   17305:	74 13                	je     1731a <stm_set_bytes+0x9aa>
   17307:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   1730b:	48 89 d7             	mov    %rdx,%rdi
   1730e:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   17313:	ff d0                	callq  *%rax
   17315:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1731a:	be 40 04 00 00       	mov    $0x440,%esi
   1731f:	e9 2c ff ff ff       	jmpq   17250 <stm_set_bytes+0x8e0>
   17324:	0f 1f 40 00          	nopl   0x0(%rax)
   17328:	f6 82 10 01 00 00 0f 	testb  $0xf,0x110(%rdx)
   1732f:	0f 85 e7 f8 ff ff    	jne    16c1c <stm_set_bytes+0x2ac>
   17335:	48 8b 05 d4 93 80 00 	mov    0x8093d4(%rip),%rax        # 820710 <_tinystm+0x800550>
   1733c:	48 85 c0             	test   %rax,%rax
   1733f:	74 1d                	je     1735e <stm_set_bytes+0x9ee>
   17341:	48 8b 73 28          	mov    0x28(%rbx),%rsi
   17345:	48 89 d7             	mov    %rdx,%rdi
   17348:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   1734d:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   17352:	ff d0                	callq  *%rax
   17354:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
   17359:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   1735e:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
   17363:	be 40 04 00 00       	mov    $0x440,%esi
   17368:	e9 50 fe ff ff       	jmpq   171bd <stm_set_bytes+0x84d>
   1736d:	0f 1f 00             	nopl   (%rax)
   17370:	49 8b 17             	mov    (%r15),%rdx
   17373:	e9 24 fd ff ff       	jmpq   1709c <stm_set_bytes+0x72c>
   17378:	48 8b 4d 00          	mov    0x0(%rbp),%rcx
   1737c:	e9 8b fc ff ff       	jmpq   1700c <stm_set_bytes+0x69c>
   17381:	48 89 d7             	mov    %rdx,%rdi
   17384:	be 40 0c 00 00       	mov    $0xc40,%esi
   17389:	4c 89 54 24 20       	mov    %r10,0x20(%rsp)
   1738e:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
   17393:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   17398:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   1739d:	e8 5e 94 ff ff       	callq  10800 <stm_rollback>
   173a2:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   173a7:	4c 8b 54 24 20       	mov    0x20(%rsp),%r10
   173ac:	8b 8a 00 01 00 00    	mov    0x100(%rdx),%ecx
   173b2:	4c 8b 44 24 18       	mov    0x18(%rsp),%r8
   173b7:	48 c1 e1 06          	shl    $0x6,%rcx
   173bb:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   173c0:	48 03 8a f8 00 00 00 	add    0xf8(%rdx),%rcx
   173c7:	e9 aa fe ff ff       	jmpq   17276 <stm_set_bytes+0x906>
   173cc:	48 89 d7             	mov    %rdx,%rdi
   173cf:	be 40 0c 00 00       	mov    $0xc40,%esi
   173d4:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
   173d9:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   173de:	e8 1d 94 ff ff       	callq  10800 <stm_rollback>
   173e3:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   173e8:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
   173ed:	8b 8a 00 01 00 00    	mov    0x100(%rdx),%ecx
   173f3:	48 c1 e1 06          	shl    $0x6,%rcx
   173f7:	48 03 8a f8 00 00 00 	add    0xf8(%rdx),%rcx
   173fe:	e9 b1 fe ff ff       	jmpq   172b4 <stm_set_bytes+0x944>
   17403:	48 8b 75 00          	mov    0x0(%rbp),%rsi
   17407:	4c 89 e0             	mov    %r12,%rax
   1740a:	48 31 f0             	xor    %rsi,%rax
   1740d:	4c 21 f0             	and    %r14,%rax
   17410:	48 31 f0             	xor    %rsi,%rax
   17413:	48 89 41 08          	mov    %rax,0x8(%rcx)
   17417:	4c 89 41 18          	mov    %r8,0x18(%rcx)
   1741b:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   17422:	00 
   17423:	e9 73 fe ff ff       	jmpq   1729b <stm_set_bytes+0x92b>
   17428:	49 8b 37             	mov    (%r15),%rsi
   1742b:	4c 89 e0             	mov    %r12,%rax
   1742e:	48 31 f0             	xor    %rsi,%rax
   17431:	48 21 e8             	and    %rbp,%rax
   17434:	48 31 f0             	xor    %rsi,%rax
   17437:	48 89 41 08          	mov    %rax,0x8(%rcx)
   1743b:	4c 89 69 18          	mov    %r13,0x18(%rcx)
   1743f:	48 c7 41 30 00 00 00 	movq   $0x0,0x30(%rcx)
   17446:	00 
   17447:	e9 8d fe ff ff       	jmpq   172d9 <stm_set_bytes+0x969>
   1744c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000017450 <gc_cleanup_thread>:
   17450:	f3 0f 1e fa          	endbr64 
   17454:	41 57                	push   %r15
   17456:	48 89 f1             	mov    %rsi,%rcx
   17459:	31 c0                	xor    %eax,%eax
   1745b:	41 56                	push   %r14
   1745d:	4c 8d 35 fa 30 00 00 	lea    0x30fa(%rip),%r14        # 1a55e <__PRETTY_FUNCTION__.3713+0x6f6>
   17464:	41 55                	push   %r13
   17466:	49 89 f5             	mov    %rsi,%r13
   17469:	48 8d 35 40 30 00 00 	lea    0x3040(%rip),%rsi        # 1a4b0 <__PRETTY_FUNCTION__.3713+0x648>
   17470:	41 54                	push   %r12
   17472:	4c 8d 25 17 93 80 00 	lea    0x809317(%rip),%r12        # 820790 <gc_threads>
   17479:	55                   	push   %rbp
   1747a:	48 63 ef             	movslq %edi,%rbp
   1747d:	89 ea                	mov    %ebp,%edx
   1747f:	53                   	push   %rbx
   17480:	bf 01 00 00 00       	mov    $0x1,%edi
   17485:	48 c1 e5 06          	shl    $0x6,%rbp
   17489:	48 83 ec 08          	sub    $0x8,%rsp
   1748d:	e8 fe af fe ff       	callq  2490 <__printf_chk@plt>
   17492:	31 ff                	xor    %edi,%edi
   17494:	e8 c7 af fe ff       	callq  2460 <fflush@plt>
   17499:	48 8b 05 f0 92 80 00 	mov    0x8092f0(%rip),%rax        # 820790 <gc_threads>
   174a0:	48 01 e8             	add    %rbp,%rax
   174a3:	48 8b 50 10          	mov    0x10(%rax),%rdx
   174a7:	48 85 d2             	test   %rdx,%rdx
   174aa:	0f 84 86 00 00 00    	je     17536 <gc_cleanup_thread+0xe6>
   174b0:	48 8b 48 10          	mov    0x10(%rax),%rcx
   174b4:	48 89 c2             	mov    %rax,%rdx
   174b7:	4c 39 69 08          	cmp    %r13,0x8(%rcx)
   174bb:	73 79                	jae    17536 <gc_cleanup_thread+0xe6>
   174bd:	48 8b 40 10          	mov    0x10(%rax),%rax
   174c1:	48 8b 18             	mov    (%rax),%rbx
   174c4:	48 85 db             	test   %rbx,%rbx
   174c7:	74 44                	je     1750d <gc_cleanup_thread+0xbd>
   174c9:	49 c7 c7 f0 ff ff ff 	mov    $0xfffffffffffffff0,%r15
   174d0:	48 8b 0b             	mov    (%rbx),%rcx
   174d3:	64 41 8b 17          	mov    %fs:(%r15),%edx
   174d7:	4c 89 f6             	mov    %r14,%rsi
   174da:	bf 01 00 00 00       	mov    $0x1,%edi
   174df:	31 c0                	xor    %eax,%eax
   174e1:	e8 aa af fe ff       	callq  2490 <__printf_chk@plt>
   174e6:	31 ff                	xor    %edi,%edi
   174e8:	e8 73 af fe ff       	callq  2460 <fflush@plt>
   174ed:	48 8b 3b             	mov    (%rbx),%rdi
   174f0:	e8 db ad fe ff       	callq  22d0 <free@plt>
   174f5:	48 89 df             	mov    %rbx,%rdi
   174f8:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   174fc:	e8 cf ad fe ff       	callq  22d0 <free@plt>
   17501:	48 85 db             	test   %rbx,%rbx
   17504:	75 ca                	jne    174d0 <gc_cleanup_thread+0x80>
   17506:	49 8b 14 24          	mov    (%r12),%rdx
   1750a:	48 01 ea             	add    %rbp,%rdx
   1750d:	48 8b 42 10          	mov    0x10(%rdx),%rax
   17511:	48 8b 7a 10          	mov    0x10(%rdx),%rdi
   17515:	48 8b 58 10          	mov    0x10(%rax),%rbx
   17519:	e8 b2 ad fe ff       	callq  22d0 <free@plt>
   1751e:	49 8b 04 24          	mov    (%r12),%rax
   17522:	48 01 e8             	add    %rbp,%rax
   17525:	48 89 58 10          	mov    %rbx,0x10(%rax)
   17529:	48 85 db             	test   %rbx,%rbx
   1752c:	75 82                	jne    174b0 <gc_cleanup_thread+0x60>
   1752e:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   17535:	00 
   17536:	48 83 c4 08          	add    $0x8,%rsp
   1753a:	5b                   	pop    %rbx
   1753b:	5d                   	pop    %rbp
   1753c:	41 5c                	pop    %r12
   1753e:	41 5d                	pop    %r13
   17540:	41 5e                	pop    %r14
   17542:	41 5f                	pop    %r15
   17544:	c3                   	retq   
   17545:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1754c:	00 00 00 00 

0000000000017550 <gc_init>:
   17550:	f3 0f 1e fa          	endbr64 
   17554:	53                   	push   %rbx
   17555:	48 89 fb             	mov    %rdi,%rbx
   17558:	48 8d 3d 12 30 00 00 	lea    0x3012(%rip),%rdi        # 1a571 <__PRETTY_FUNCTION__.3713+0x709>
   1755f:	e8 bc ad fe ff       	callq  2320 <puts@plt>
   17564:	31 ff                	xor    %edi,%edi
   17566:	e8 f5 ae fe ff       	callq  2460 <fflush@plt>
   1756b:	bf 00 00 01 00       	mov    $0x10000,%edi
   17570:	48 89 1d 09 92 80 00 	mov    %rbx,0x809209(%rip)        # 820780 <gc_current_epoch>
   17577:	e8 d4 ae fe ff       	callq  2450 <malloc@plt>
   1757c:	48 85 c0             	test   %rax,%rax
   1757f:	74 61                	je     175e2 <gc_init+0x92>
   17581:	48 89 05 08 92 80 00 	mov    %rax,0x809208(%rip)        # 820790 <gc_threads>
   17588:	31 d2                	xor    %edx,%edx
   1758a:	48 8d 35 ff 91 80 00 	lea    0x8091ff(%rip),%rsi        # 820790 <gc_threads>
   17591:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17598:	48 01 d0             	add    %rdx,%rax
   1759b:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   175a2:	48 8b 06             	mov    (%rsi),%rax
   175a5:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
   175a9:	48 83 c2 40          	add    $0x40,%rdx
   175ad:	48 c7 41 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rcx)
   175b4:	ff 
   175b5:	48 c7 41 18 00 00 00 	movq   $0x0,0x18(%rcx)
   175bc:	00 
   175bd:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
   175c4:	00 
   175c5:	c7 41 20 00 00 00 00 	movl   $0x0,0x20(%rcx)
   175cc:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
   175d3:	75 c3                	jne    17598 <gc_init+0x48>
   175d5:	48 c7 05 b8 91 80 00 	movq   $0x0,0x8091b8(%rip)        # 820798 <gc_threads+0x8>
   175dc:	00 00 00 00 
   175e0:	5b                   	pop    %rbx
   175e1:	c3                   	retq   
   175e2:	48 8d 3d 96 2f 00 00 	lea    0x2f96(%rip),%rdi        # 1a57f <__PRETTY_FUNCTION__.3713+0x717>
   175e9:	e8 f2 ae fe ff       	callq  24e0 <perror@plt>
   175ee:	bf 01 00 00 00       	mov    $0x1,%edi
   175f3:	e8 18 af fe ff       	callq  2510 <exit@plt>
   175f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   175ff:	00 

0000000000017600 <gc_exit>:
   17600:	f3 0f 1e fa          	endbr64 
   17604:	41 56                	push   %r14
   17606:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 1a586 <__PRETTY_FUNCTION__.3713+0x71e>
   1760d:	41 55                	push   %r13
   1760f:	41 54                	push   %r12
   17611:	55                   	push   %rbp
   17612:	53                   	push   %rbx
   17613:	e8 08 ad fe ff       	callq  2320 <puts@plt>
   17618:	31 ff                	xor    %edi,%edi
   1761a:	e8 41 ae fe ff       	callq  2460 <fflush@plt>
   1761f:	4c 8b 25 72 91 80 00 	mov    0x809172(%rip),%r12        # 820798 <gc_threads+0x8>
   17626:	4d 85 e4             	test   %r12,%r12
   17629:	0f 85 a6 00 00 00    	jne    176d5 <gc_exit+0xd5>
   1762f:	48 8b 3d 5a 91 80 00 	mov    0x80915a(%rip),%rdi        # 820790 <gc_threads>
   17636:	4c 8d 35 21 2f 00 00 	lea    0x2f21(%rip),%r14        # 1a55e <__PRETTY_FUNCTION__.3713+0x6f6>
   1763d:	0f 1f 00             	nopl   (%rax)
   17640:	4a 8d 04 27          	lea    (%rdi,%r12,1),%rax
   17644:	48 8b 68 10          	mov    0x10(%rax),%rbp
   17648:	48 85 ed             	test   %rbp,%rbp
   1764b:	74 6a                	je     176b7 <gc_exit+0xb7>
   1764d:	0f 1f 00             	nopl   (%rax)
   17650:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
   17654:	48 85 db             	test   %rbx,%rbx
   17657:	74 3e                	je     17697 <gc_exit+0x97>
   17659:	49 c7 c5 f0 ff ff ff 	mov    $0xfffffffffffffff0,%r13
   17660:	48 8b 0b             	mov    (%rbx),%rcx
   17663:	64 41 8b 55 00       	mov    %fs:0x0(%r13),%edx
   17668:	4c 89 f6             	mov    %r14,%rsi
   1766b:	bf 01 00 00 00       	mov    $0x1,%edi
   17670:	31 c0                	xor    %eax,%eax
   17672:	e8 19 ae fe ff       	callq  2490 <__printf_chk@plt>
   17677:	31 ff                	xor    %edi,%edi
   17679:	e8 e2 ad fe ff       	callq  2460 <fflush@plt>
   1767e:	48 8b 3b             	mov    (%rbx),%rdi
   17681:	e8 4a ac fe ff       	callq  22d0 <free@plt>
   17686:	48 89 df             	mov    %rbx,%rdi
   17689:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   1768d:	e8 3e ac fe ff       	callq  22d0 <free@plt>
   17692:	48 85 db             	test   %rbx,%rbx
   17695:	75 c9                	jne    17660 <gc_exit+0x60>
   17697:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
   1769b:	48 89 ef             	mov    %rbp,%rdi
   1769e:	e8 2d ac fe ff       	callq  22d0 <free@plt>
   176a3:	48 85 db             	test   %rbx,%rbx
   176a6:	74 08                	je     176b0 <gc_exit+0xb0>
   176a8:	48 89 dd             	mov    %rbx,%rbp
   176ab:	eb a3                	jmp    17650 <gc_exit+0x50>
   176ad:	0f 1f 00             	nopl   (%rax)
   176b0:	48 8b 3d d9 90 80 00 	mov    0x8090d9(%rip),%rdi        # 820790 <gc_threads>
   176b7:	49 83 c4 40          	add    $0x40,%r12
   176bb:	49 81 fc 00 00 01 00 	cmp    $0x10000,%r12
   176c2:	0f 85 78 ff ff ff    	jne    17640 <gc_exit+0x40>
   176c8:	5b                   	pop    %rbx
   176c9:	5d                   	pop    %rbp
   176ca:	41 5c                	pop    %r12
   176cc:	41 5d                	pop    %r13
   176ce:	41 5e                	pop    %r14
   176d0:	e9 fb ab fe ff       	jmpq   22d0 <free@plt>
   176d5:	48 8b 0d 24 8a 00 00 	mov    0x8a24(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
   176dc:	48 8d 3d f5 2d 00 00 	lea    0x2df5(%rip),%rdi        # 1a4d8 <__PRETTY_FUNCTION__.3713+0x670>
   176e3:	ba 2d 00 00 00       	mov    $0x2d,%edx
   176e8:	be 01 00 00 00       	mov    $0x1,%esi
   176ed:	e8 2e ae fe ff       	callq  2520 <fwrite@plt>
   176f2:	bf 01 00 00 00       	mov    $0x1,%edi
   176f7:	e8 14 ae fe ff       	callq  2510 <exit@plt>
   176fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000017700 <gc_init_thread>:
   17700:	f3 0f 1e fa          	endbr64 
   17704:	41 54                	push   %r12
   17706:	48 8d 3d 87 2e 00 00 	lea    0x2e87(%rip),%rdi        # 1a594 <__PRETTY_FUNCTION__.3713+0x72c>
   1770d:	55                   	push   %rbp
   1770e:	53                   	push   %rbx
   1770f:	e8 0c ac fe ff       	callq  2320 <puts@plt>
   17714:	31 ff                	xor    %edi,%edi
   17716:	e8 45 ad fe ff       	callq  2460 <fflush@plt>
   1771b:	b8 01 00 00 00       	mov    $0x1,%eax
   17720:	f0 48 0f c1 05 6f 90 	lock xadd %rax,0x80906f(%rip)        # 820798 <gc_threads+0x8>
   17727:	80 00 
   17729:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
   1772f:	0f 87 8b 00 00 00    	ja     177c0 <gc_init_thread+0xc0>
   17735:	48 8b 35 54 90 80 00 	mov    0x809054(%rip),%rsi        # 820790 <gc_threads>
   1773c:	45 31 e4             	xor    %r12d,%r12d
   1773f:	bf 01 00 00 00       	mov    $0x1,%edi
   17744:	45 31 c0             	xor    %r8d,%r8d
   17747:	49 63 ec             	movslq %r12d,%rbp
   1774a:	48 89 ea             	mov    %rbp,%rdx
   1774d:	48 c1 e2 06          	shl    $0x6,%rdx
   17751:	48 8d 0c 16          	lea    (%rsi,%rdx,1),%rcx
   17755:	48 8b 01             	mov    (%rcx),%rax
   17758:	48 83 f8 01          	cmp    $0x1,%rax
   1775c:	74 52                	je     177b0 <gc_init_thread+0xb0>
   1775e:	f0 48 0f b1 39       	lock cmpxchg %rdi,(%rcx)
   17763:	75 40                	jne    177a5 <gc_init_thread+0xa5>
   17765:	48 8b 1d 24 90 80 00 	mov    0x809024(%rip),%rbx        # 820790 <gc_threads>
   1776c:	48 01 d3             	add    %rdx,%rbx
   1776f:	ff 15 0b 90 80 00    	callq  *0x80900b(%rip)        # 820780 <gc_current_epoch>
   17775:	48 89 43 08          	mov    %rax,0x8(%rbx)
   17779:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax
   17780:	44 89 e2             	mov    %r12d,%edx
   17783:	64 48 89 28          	mov    %rbp,%fs:(%rax)
   17787:	bf 01 00 00 00       	mov    $0x1,%edi
   1778c:	48 8d 35 16 2e 00 00 	lea    0x2e16(%rip),%rsi        # 1a5a9 <__PRETTY_FUNCTION__.3713+0x741>
   17793:	31 c0                	xor    %eax,%eax
   17795:	e8 f6 ac fe ff       	callq  2490 <__printf_chk@plt>
   1779a:	5b                   	pop    %rbx
   1779b:	5d                   	pop    %rbp
   1779c:	31 ff                	xor    %edi,%edi
   1779e:	41 5c                	pop    %r12
   177a0:	e9 bb ac fe ff       	jmpq   2460 <fflush@plt>
   177a5:	48 8b 35 e4 8f 80 00 	mov    0x808fe4(%rip),%rsi        # 820790 <gc_threads>
   177ac:	0f 1f 40 00          	nopl   0x0(%rax)
   177b0:	41 ff c4             	inc    %r12d
   177b3:	41 81 fc 00 04 00 00 	cmp    $0x400,%r12d
   177ba:	45 0f 4d e0          	cmovge %r8d,%r12d
   177be:	eb 87                	jmp    17747 <gc_init_thread+0x47>
   177c0:	48 8b 0d 39 89 00 00 	mov    0x8939(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
   177c7:	48 8d 3d 3a 2d 00 00 	lea    0x2d3a(%rip),%rdi        # 1a508 <__PRETTY_FUNCTION__.3713+0x6a0>
   177ce:	ba 2b 00 00 00       	mov    $0x2b,%edx
   177d3:	be 01 00 00 00       	mov    $0x1,%esi
   177d8:	e8 43 ad fe ff       	callq  2520 <fwrite@plt>
   177dd:	bf 01 00 00 00       	mov    $0x1,%edi
   177e2:	e8 29 ad fe ff       	callq  2510 <exit@plt>
   177e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   177ee:	00 00 

00000000000177f0 <gc_exit_thread>:
   177f0:	f3 0f 1e fa          	endbr64 
   177f4:	53                   	push   %rbx
   177f5:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax
   177fc:	48 8d 35 c0 2d 00 00 	lea    0x2dc0(%rip),%rsi        # 1a5c3 <__PRETTY_FUNCTION__.3713+0x75b>
   17803:	64 48 8b 18          	mov    %fs:(%rax),%rbx
   17807:	bf 01 00 00 00       	mov    $0x1,%edi
   1780c:	89 da                	mov    %ebx,%edx
   1780e:	31 c0                	xor    %eax,%eax
   17810:	e8 7b ac fe ff       	callq  2490 <__printf_chk@plt>
   17815:	31 ff                	xor    %edi,%edi
   17817:	e8 44 ac fe ff       	callq  2460 <fflush@plt>
   1781c:	48 63 c3             	movslq %ebx,%rax
   1781f:	48 c1 e0 06          	shl    $0x6,%rax
   17823:	48 03 05 66 8f 80 00 	add    0x808f66(%rip),%rax        # 820790 <gc_threads>
   1782a:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
   17831:	ff 
   17832:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17836:	48 85 d2             	test   %rdx,%rdx
   17839:	0f 95 c2             	setne  %dl
   1783c:	0f b6 d2             	movzbl %dl,%edx
   1783f:	48 83 c2 02          	add    $0x2,%rdx
   17843:	48 89 10             	mov    %rdx,(%rax)
   17846:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
   1784d:	f0 48 0f c1 05 42 8f 	lock xadd %rax,0x808f42(%rip)        # 820798 <gc_threads+0x8>
   17854:	80 00 
   17856:	5b                   	pop    %rbx
   17857:	c3                   	retq   
   17858:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1785f:	00 

0000000000017860 <gc_set_epoch>:
   17860:	f3 0f 1e fa          	endbr64 
   17864:	55                   	push   %rbp
   17865:	48 89 f9             	mov    %rdi,%rcx
   17868:	48 89 fd             	mov    %rdi,%rbp
   1786b:	53                   	push   %rbx
   1786c:	bf 01 00 00 00       	mov    $0x1,%edi
   17871:	48 8d 35 63 2d 00 00 	lea    0x2d63(%rip),%rsi        # 1a5db <__PRETTY_FUNCTION__.3713+0x773>
   17878:	48 83 ec 08          	sub    $0x8,%rsp
   1787c:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax
   17883:	64 48 8b 18          	mov    %fs:(%rax),%rbx
   17887:	31 c0                	xor    %eax,%eax
   17889:	89 da                	mov    %ebx,%edx
   1788b:	e8 00 ac fe ff       	callq  2490 <__printf_chk@plt>
   17890:	31 ff                	xor    %edi,%edi
   17892:	e8 c9 ab fe ff       	callq  2460 <fflush@plt>
   17897:	48 83 fd ff          	cmp    $0xffffffffffffffff,%rbp
   1789b:	74 23                	je     178c0 <gc_set_epoch+0x60>
   1789d:	48 63 db             	movslq %ebx,%rbx
   178a0:	48 c1 e3 06          	shl    $0x6,%rbx
   178a4:	48 03 1d e5 8e 80 00 	add    0x808ee5(%rip),%rbx        # 820790 <gc_threads>
   178ab:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
   178af:	48 83 c4 08          	add    $0x8,%rsp
   178b3:	5b                   	pop    %rbx
   178b4:	5d                   	pop    %rbp
   178b5:	c3                   	retq   
   178b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   178bd:	00 00 00 
   178c0:	48 8b 3d 39 88 00 00 	mov    0x8839(%rip),%rdi        # 20100 <stderr@@GLIBC_2.2.5>
   178c7:	48 83 c4 08          	add    $0x8,%rsp
   178cb:	5b                   	pop    %rbx
   178cc:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
   178d3:	48 8d 15 5e 2c 00 00 	lea    0x2c5e(%rip),%rdx        # 1a538 <__PRETTY_FUNCTION__.3713+0x6d0>
   178da:	be 01 00 00 00       	mov    $0x1,%esi
   178df:	31 c0                	xor    %eax,%eax
   178e1:	5d                   	pop    %rbp
   178e2:	e9 49 ac fe ff       	jmpq   2530 <__fprintf_chk@plt>
   178e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   178ee:	00 00 

00000000000178f0 <gc_cleanup>:
   178f0:	f3 0f 1e fa          	endbr64 
   178f4:	41 54                	push   %r12
   178f6:	49 c7 c4 f0 ff ff ff 	mov    $0xfffffffffffffff0,%r12
   178fd:	48 8d 35 f1 2c 00 00 	lea    0x2cf1(%rip),%rsi        # 1a5f5 <__PRETTY_FUNCTION__.3713+0x78d>
   17904:	55                   	push   %rbp
   17905:	bf 01 00 00 00       	mov    $0x1,%edi
   1790a:	31 c0                	xor    %eax,%eax
   1790c:	53                   	push   %rbx
   1790d:	64 49 8b 1c 24       	mov    %fs:(%r12),%rbx
   17912:	89 da                	mov    %ebx,%edx
   17914:	e8 77 ab fe ff       	callq  2490 <__printf_chk@plt>
   17919:	31 ff                	xor    %edi,%edi
   1791b:	e8 40 ab fe ff       	callq  2460 <fflush@plt>
   17920:	48 63 c3             	movslq %ebx,%rax
   17923:	48 c1 e0 06          	shl    $0x6,%rax
   17927:	48 03 05 62 8e 80 00 	add    0x808e62(%rip),%rax        # 820790 <gc_threads>
   1792e:	48 8b 40 10          	mov    0x10(%rax),%rax
   17932:	48 85 c0             	test   %rax,%rax
   17935:	0f 84 a5 00 00 00    	je     179e0 <gc_cleanup+0xf0>
   1793b:	ff 15 3f 8e 80 00    	callq  *0x808e3f(%rip)        # 820780 <gc_current_epoch>
   17941:	64 41 8b 14 24       	mov    %fs:(%r12),%edx
   17946:	48 8d 35 bc 2c 00 00 	lea    0x2cbc(%rip),%rsi        # 1a609 <__PRETTY_FUNCTION__.3713+0x7a1>
   1794d:	bf 01 00 00 00       	mov    $0x1,%edi
   17952:	48 89 c5             	mov    %rax,%rbp
   17955:	31 c0                	xor    %eax,%eax
   17957:	e8 34 ab fe ff       	callq  2490 <__printf_chk@plt>
   1795c:	31 ff                	xor    %edi,%edi
   1795e:	e8 fd aa fe ff       	callq  2460 <fflush@plt>
   17963:	48 8b 35 26 8e 80 00 	mov    0x808e26(%rip),%rsi        # 820790 <gc_threads>
   1796a:	31 d2                	xor    %edx,%edx
   1796c:	0f 1f 40 00          	nopl   0x0(%rax)
   17970:	48 63 c2             	movslq %edx,%rax
   17973:	48 c1 e0 06          	shl    $0x6,%rax
   17977:	48 01 f0             	add    %rsi,%rax
   1797a:	48 8b 08             	mov    (%rax),%rcx
   1797d:	48 83 f9 01          	cmp    $0x1,%rcx
   17981:	74 45                	je     179c8 <gc_cleanup+0xd8>
   17983:	48 85 c9             	test   %rcx,%rcx
   17986:	74 0a                	je     17992 <gc_cleanup+0xa2>
   17988:	ff c2                	inc    %edx
   1798a:	81 fa 00 04 00 00    	cmp    $0x400,%edx
   17990:	75 de                	jne    17970 <gc_cleanup+0x80>
   17992:	64 49 8b 14 24       	mov    %fs:(%r12),%rdx
   17997:	48 89 e9             	mov    %rbp,%rcx
   1799a:	48 8d 35 80 2c 00 00 	lea    0x2c80(%rip),%rsi        # 1a621 <__PRETTY_FUNCTION__.3713+0x7b9>
   179a1:	bf 01 00 00 00       	mov    $0x1,%edi
   179a6:	31 c0                	xor    %eax,%eax
   179a8:	e8 e3 aa fe ff       	callq  2490 <__printf_chk@plt>
   179ad:	31 ff                	xor    %edi,%edi
   179af:	e8 ac aa fe ff       	callq  2460 <fflush@plt>
   179b4:	89 df                	mov    %ebx,%edi
   179b6:	5b                   	pop    %rbx
   179b7:	48 89 ee             	mov    %rbp,%rsi
   179ba:	5d                   	pop    %rbp
   179bb:	41 5c                	pop    %r12
   179bd:	e9 8e fa ff ff       	jmpq   17450 <gc_cleanup_thread>
   179c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   179c8:	48 8b 40 08          	mov    0x8(%rax),%rax
   179cc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   179d0:	74 b8                	je     1798a <gc_cleanup+0x9a>
   179d2:	48 39 c5             	cmp    %rax,%rbp
   179d5:	48 0f 47 e8          	cmova  %rax,%rbp
   179d9:	eb ad                	jmp    17988 <gc_cleanup+0x98>
   179db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   179e0:	5b                   	pop    %rbx
   179e1:	5d                   	pop    %rbp
   179e2:	41 5c                	pop    %r12
   179e4:	c3                   	retq   
   179e5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   179ec:	00 00 00 00 

00000000000179f0 <gc_free>:
   179f0:	f3 0f 1e fa          	endbr64 
   179f4:	41 56                	push   %r14
   179f6:	48 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%rax
   179fd:	48 89 f1             	mov    %rsi,%rcx
   17a00:	41 55                	push   %r13
   17a02:	49 89 f5             	mov    %rsi,%r13
   17a05:	48 8d 35 33 2c 00 00 	lea    0x2c33(%rip),%rsi        # 1a63f <__PRETTY_FUNCTION__.3713+0x7d7>
   17a0c:	41 54                	push   %r12
   17a0e:	49 89 fc             	mov    %rdi,%r12
   17a11:	bf 01 00 00 00       	mov    $0x1,%edi
   17a16:	55                   	push   %rbp
   17a17:	53                   	push   %rbx
   17a18:	64 48 8b 28          	mov    %fs:(%rax),%rbp
   17a1c:	31 c0                	xor    %eax,%eax
   17a1e:	89 ea                	mov    %ebp,%edx
   17a20:	e8 6b aa fe ff       	callq  2490 <__printf_chk@plt>
   17a25:	31 ff                	xor    %edi,%edi
   17a27:	e8 34 aa fe ff       	callq  2460 <fflush@plt>
   17a2c:	48 63 ed             	movslq %ebp,%rbp
   17a2f:	4c 8b 35 5a 8d 80 00 	mov    0x808d5a(%rip),%r14        # 820790 <gc_threads>
   17a36:	48 c1 e5 06          	shl    $0x6,%rbp
   17a3a:	49 01 ee             	add    %rbp,%r14
   17a3d:	49 8b 46 10          	mov    0x10(%r14),%rax
   17a41:	48 85 c0             	test   %rax,%rax
   17a44:	74 5a                	je     17aa0 <gc_free+0xb0>
   17a46:	49 8b 46 18          	mov    0x18(%r14),%rax
   17a4a:	4c 39 68 08          	cmp    %r13,0x8(%rax)
   17a4e:	72 50                	jb     17aa0 <gc_free+0xb0>
   17a50:	49 8b 5e 18          	mov    0x18(%r14),%rbx
   17a54:	bf 10 00 00 00       	mov    $0x10,%edi
   17a59:	e8 f2 a9 fe ff       	callq  2450 <malloc@plt>
   17a5e:	48 85 c0             	test   %rax,%rax
   17a61:	0f 84 89 00 00 00    	je     17af0 <gc_free+0x100>
   17a67:	4c 89 20             	mov    %r12,(%rax)
   17a6a:	48 8b 13             	mov    (%rbx),%rdx
   17a6d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   17a71:	48 89 03             	mov    %rax,(%rbx)
   17a74:	48 8b 05 15 8d 80 00 	mov    0x808d15(%rip),%rax        # 820790 <gc_threads>
   17a7b:	48 01 e8             	add    %rbp,%rax
   17a7e:	8b 50 20             	mov    0x20(%rax),%edx
   17a81:	ff c2                	inc    %edx
   17a83:	89 50 20             	mov    %edx,0x20(%rax)
   17a86:	5b                   	pop    %rbx
   17a87:	5d                   	pop    %rbp
   17a88:	41 5c                	pop    %r12
   17a8a:	41 5d                	pop    %r13
   17a8c:	8b 40 20             	mov    0x20(%rax),%eax
   17a8f:	41 5e                	pop    %r14
   17a91:	e9 5a fe ff ff       	jmpq   178f0 <gc_cleanup>
   17a96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17a9d:	00 00 00 
   17aa0:	bf 18 00 00 00       	mov    $0x18,%edi
   17aa5:	e8 a6 a9 fe ff       	callq  2450 <malloc@plt>
   17aaa:	48 89 c3             	mov    %rax,%rbx
   17aad:	48 85 c0             	test   %rax,%rax
   17ab0:	74 3e                	je     17af0 <gc_free+0x100>
   17ab2:	4c 89 68 08          	mov    %r13,0x8(%rax)
   17ab6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   17abd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   17ac4:	00 
   17ac5:	49 8b 46 10          	mov    0x10(%r14),%rax
   17ac9:	48 85 c0             	test   %rax,%rax
   17acc:	74 12                	je     17ae0 <gc_free+0xf0>
   17ace:	49 8b 46 18          	mov    0x18(%r14),%rax
   17ad2:	48 89 58 10          	mov    %rbx,0x10(%rax)
   17ad6:	49 89 5e 18          	mov    %rbx,0x18(%r14)
   17ada:	e9 75 ff ff ff       	jmpq   17a54 <gc_free+0x64>
   17adf:	90                   	nop
   17ae0:	49 89 5e 18          	mov    %rbx,0x18(%r14)
   17ae4:	49 89 5e 10          	mov    %rbx,0x10(%r14)
   17ae8:	e9 67 ff ff ff       	jmpq   17a54 <gc_free+0x64>
   17aed:	0f 1f 00             	nopl   (%rax)
   17af0:	48 8d 3d 88 2a 00 00 	lea    0x2a88(%rip),%rdi        # 1a57f <__PRETTY_FUNCTION__.3713+0x717>
   17af7:	e8 e4 a9 fe ff       	callq  24e0 <perror@plt>
   17afc:	bf 01 00 00 00       	mov    $0x1,%edi
   17b01:	e8 0a aa fe ff       	callq  2510 <exit@plt>
   17b06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17b0d:	00 00 00 

0000000000017b10 <gc_cleanup_all>:
   17b10:	f3 0f 1e fa          	endbr64 
   17b14:	41 57                	push   %r15
   17b16:	48 8d 3d 37 2b 00 00 	lea    0x2b37(%rip),%rdi        # 1a654 <__PRETTY_FUNCTION__.3713+0x7ec>
   17b1d:	41 56                	push   %r14
   17b1f:	4c 8d 35 6a 8c 80 00 	lea    0x808c6a(%rip),%r14        # 820790 <gc_threads>
   17b26:	41 55                	push   %r13
   17b28:	41 54                	push   %r12
   17b2a:	55                   	push   %rbp
   17b2b:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
   17b32:	53                   	push   %rbx
   17b33:	31 db                	xor    %ebx,%ebx
   17b35:	48 83 ec 08          	sub    $0x8,%rsp
   17b39:	e8 e2 a7 fe ff       	callq  2320 <puts@plt>
   17b3e:	31 ff                	xor    %edi,%edi
   17b40:	e8 1b a9 fe ff       	callq  2460 <fflush@plt>
   17b45:	eb 15                	jmp    17b5c <gc_cleanup_all+0x4c>
   17b47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   17b4e:	00 00 
   17b50:	48 ff c3             	inc    %rbx
   17b53:	48 81 fb 00 04 00 00 	cmp    $0x400,%rbx
   17b5a:	74 65                	je     17bc1 <gc_cleanup_all+0xb1>
   17b5c:	49 8b 16             	mov    (%r14),%rdx
   17b5f:	49 89 dc             	mov    %rbx,%r12
   17b62:	49 c1 e4 06          	shl    $0x6,%r12
   17b66:	4c 01 e2             	add    %r12,%rdx
   17b69:	48 8b 02             	mov    (%rdx),%rax
   17b6c:	41 89 df             	mov    %ebx,%r15d
   17b6f:	48 85 c0             	test   %rax,%rax
   17b72:	74 4d                	je     17bc1 <gc_cleanup_all+0xb1>
   17b74:	4c 8b 2a             	mov    (%rdx),%r13
   17b77:	49 83 fd 03          	cmp    $0x3,%r13
   17b7b:	75 d3                	jne    17b50 <gc_cleanup_all+0x40>
   17b7d:	4c 89 e8             	mov    %r13,%rax
   17b80:	b9 01 00 00 00       	mov    $0x1,%ecx
   17b85:	f0 48 0f b1 0a       	lock cmpxchg %rcx,(%rdx)
   17b8a:	75 c4                	jne    17b50 <gc_cleanup_all+0x40>
   17b8c:	48 83 fd ff          	cmp    $0xffffffffffffffff,%rbp
   17b90:	74 3e                	je     17bd0 <gc_cleanup_all+0xc0>
   17b92:	48 89 ee             	mov    %rbp,%rsi
   17b95:	44 89 ff             	mov    %r15d,%edi
   17b98:	e8 b3 f8 ff ff       	callq  17450 <gc_cleanup_thread>
   17b9d:	4d 03 26             	add    (%r14),%r12
   17ba0:	49 8b 44 24 10       	mov    0x10(%r12),%rax
   17ba5:	48 85 c0             	test   %rax,%rax
   17ba8:	b8 02 00 00 00       	mov    $0x2,%eax
   17bad:	4c 0f 44 e8          	cmove  %rax,%r13
   17bb1:	48 ff c3             	inc    %rbx
   17bb4:	4d 89 2c 24          	mov    %r13,(%r12)
   17bb8:	48 81 fb 00 04 00 00 	cmp    $0x400,%rbx
   17bbf:	75 9b                	jne    17b5c <gc_cleanup_all+0x4c>
   17bc1:	48 83 c4 08          	add    $0x8,%rsp
   17bc5:	5b                   	pop    %rbx
   17bc6:	5d                   	pop    %rbp
   17bc7:	41 5c                	pop    %r12
   17bc9:	41 5d                	pop    %r13
   17bcb:	41 5e                	pop    %r14
   17bcd:	41 5f                	pop    %r15
   17bcf:	c3                   	retq   
   17bd0:	ff 15 aa 8b 80 00    	callq  *0x808baa(%rip)        # 820780 <gc_current_epoch>
   17bd6:	49 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%r8
   17bdd:	48 8d 35 25 2a 00 00 	lea    0x2a25(%rip),%rsi        # 1a609 <__PRETTY_FUNCTION__.3713+0x7a1>
   17be4:	64 41 8b 10          	mov    %fs:(%r8),%edx
   17be8:	bf 01 00 00 00       	mov    $0x1,%edi
   17bed:	48 89 c5             	mov    %rax,%rbp
   17bf0:	31 c0                	xor    %eax,%eax
   17bf2:	e8 99 a8 fe ff       	callq  2490 <__printf_chk@plt>
   17bf7:	31 ff                	xor    %edi,%edi
   17bf9:	e8 62 a8 fe ff       	callq  2460 <fflush@plt>
   17bfe:	49 8b 3e             	mov    (%r14),%rdi
   17c01:	49 c7 c0 f0 ff ff ff 	mov    $0xfffffffffffffff0,%r8
   17c08:	31 d2                	xor    %edx,%edx
   17c0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   17c10:	48 63 c2             	movslq %edx,%rax
   17c13:	48 c1 e0 06          	shl    $0x6,%rax
   17c17:	48 01 f8             	add    %rdi,%rax
   17c1a:	48 8b 30             	mov    (%rax),%rsi
   17c1d:	48 83 fe 01          	cmp    $0x1,%rsi
   17c21:	74 3d                	je     17c60 <gc_cleanup_all+0x150>
   17c23:	48 85 f6             	test   %rsi,%rsi
   17c26:	74 0a                	je     17c32 <gc_cleanup_all+0x122>
   17c28:	ff c2                	inc    %edx
   17c2a:	81 fa 00 04 00 00    	cmp    $0x400,%edx
   17c30:	75 de                	jne    17c10 <gc_cleanup_all+0x100>
   17c32:	64 49 8b 10          	mov    %fs:(%r8),%rdx
   17c36:	48 89 e9             	mov    %rbp,%rcx
   17c39:	48 8d 35 e1 29 00 00 	lea    0x29e1(%rip),%rsi        # 1a621 <__PRETTY_FUNCTION__.3713+0x7b9>
   17c40:	bf 01 00 00 00       	mov    $0x1,%edi
   17c45:	31 c0                	xor    %eax,%eax
   17c47:	e8 44 a8 fe ff       	callq  2490 <__printf_chk@plt>
   17c4c:	31 ff                	xor    %edi,%edi
   17c4e:	e8 0d a8 fe ff       	callq  2460 <fflush@plt>
   17c53:	e9 3a ff ff ff       	jmpq   17b92 <gc_cleanup_all+0x82>
   17c58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   17c5f:	00 
   17c60:	48 8b 40 08          	mov    0x8(%rax),%rax
   17c64:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
   17c68:	74 c0                	je     17c2a <gc_cleanup_all+0x11a>
   17c6a:	48 39 c5             	cmp    %rax,%rbp
   17c6d:	48 0f 47 e8          	cmova  %rax,%rbp
   17c71:	eb b5                	jmp    17c28 <gc_cleanup_all+0x118>
   17c73:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   17c7a:	00 00 00 00 
   17c7e:	66 90                	xchg   %ax,%ax

0000000000017c80 <gc_reset>:
   17c80:	f3 0f 1e fa          	endbr64 
   17c84:	41 56                	push   %r14
   17c86:	48 8d 3d dc 29 00 00 	lea    0x29dc(%rip),%rdi        # 1a669 <__PRETTY_FUNCTION__.3713+0x801>
   17c8d:	41 55                	push   %r13
   17c8f:	4c 8d 2d c8 28 00 00 	lea    0x28c8(%rip),%r13        # 1a55e <__PRETTY_FUNCTION__.3713+0x6f6>
   17c96:	41 54                	push   %r12
   17c98:	45 31 e4             	xor    %r12d,%r12d
   17c9b:	55                   	push   %rbp
   17c9c:	53                   	push   %rbx
   17c9d:	e8 7e a6 fe ff       	callq  2320 <puts@plt>
   17ca2:	31 ff                	xor    %edi,%edi
   17ca4:	e8 b7 a7 fe ff       	callq  2460 <fflush@plt>
   17ca9:	48 8b 15 e0 8a 80 00 	mov    0x808ae0(%rip),%rdx        # 820790 <gc_threads>
   17cb0:	4a 8d 04 22          	lea    (%rdx,%r12,1),%rax
   17cb4:	48 8b 08             	mov    (%rax),%rcx
   17cb7:	48 85 c9             	test   %rcx,%rcx
   17cba:	0f 84 ab 00 00 00    	je     17d6b <gc_reset+0xeb>
   17cc0:	48 8b 68 10          	mov    0x10(%rax),%rbp
   17cc4:	48 85 ed             	test   %rbp,%rbp
   17cc7:	74 72                	je     17d3b <gc_reset+0xbb>
   17cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17cd0:	48 8b 5d 00          	mov    0x0(%rbp),%rbx
   17cd4:	48 85 db             	test   %rbx,%rbx
   17cd7:	74 3d                	je     17d16 <gc_reset+0x96>
   17cd9:	49 c7 c6 f0 ff ff ff 	mov    $0xfffffffffffffff0,%r14
   17ce0:	48 8b 0b             	mov    (%rbx),%rcx
   17ce3:	64 41 8b 16          	mov    %fs:(%r14),%edx
   17ce7:	4c 89 ee             	mov    %r13,%rsi
   17cea:	bf 01 00 00 00       	mov    $0x1,%edi
   17cef:	31 c0                	xor    %eax,%eax
   17cf1:	e8 9a a7 fe ff       	callq  2490 <__printf_chk@plt>
   17cf6:	31 ff                	xor    %edi,%edi
   17cf8:	e8 63 a7 fe ff       	callq  2460 <fflush@plt>
   17cfd:	48 8b 3b             	mov    (%rbx),%rdi
   17d00:	e8 cb a5 fe ff       	callq  22d0 <free@plt>
   17d05:	48 89 df             	mov    %rbx,%rdi
   17d08:	48 8b 5b 08          	mov    0x8(%rbx),%rbx
   17d0c:	e8 bf a5 fe ff       	callq  22d0 <free@plt>
   17d11:	48 85 db             	test   %rbx,%rbx
   17d14:	75 ca                	jne    17ce0 <gc_reset+0x60>
   17d16:	48 8b 5d 10          	mov    0x10(%rbp),%rbx
   17d1a:	48 89 ef             	mov    %rbp,%rdi
   17d1d:	e8 ae a5 fe ff       	callq  22d0 <free@plt>
   17d22:	48 85 db             	test   %rbx,%rbx
   17d25:	74 09                	je     17d30 <gc_reset+0xb0>
   17d27:	48 89 dd             	mov    %rbx,%rbp
   17d2a:	eb a4                	jmp    17cd0 <gc_reset+0x50>
   17d2c:	0f 1f 40 00          	nopl   0x0(%rax)
   17d30:	48 8b 15 59 8a 80 00 	mov    0x808a59(%rip),%rdx        # 820790 <gc_threads>
   17d37:	4a 8d 04 22          	lea    (%rdx,%r12,1),%rax
   17d3b:	49 83 c4 40          	add    $0x40,%r12
   17d3f:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
   17d46:	ff 
   17d47:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   17d4e:	00 
   17d4f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   17d56:	00 
   17d57:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
   17d5e:	49 81 fc 00 00 01 00 	cmp    $0x10000,%r12
   17d65:	0f 85 45 ff ff ff    	jne    17cb0 <gc_reset+0x30>
   17d6b:	5b                   	pop    %rbx
   17d6c:	5d                   	pop    %rbp
   17d6d:	41 5c                	pop    %r12
   17d6f:	41 5d                	pop    %r13
   17d71:	41 5e                	pop    %r14
   17d73:	c3                   	retq   
   17d74:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17d7b:	00 00 00 
   17d7e:	66 90                	xchg   %ax,%ax

0000000000017d80 <mod_cb_on_abort>:
   17d80:	f3 0f 1e fa          	endbr64 
   17d84:	53                   	push   %rbx
   17d85:	8b 3d b5 82 00 00    	mov    0x82b5(%rip),%edi        # 20040 <mod_cb>
   17d8b:	e8 90 60 ff ff       	callq  de20 <stm_get_specific>
   17d90:	0f b7 50 12          	movzwl 0x12(%rax),%edx
   17d94:	48 89 c3             	mov    %rax,%rbx
   17d97:	66 85 d2             	test   %dx,%dx
   17d9a:	74 24                	je     17dc0 <mod_cb_on_abort+0x40>
   17d9c:	0f 1f 40 00          	nopl   0x0(%rax)
   17da0:	ff ca                	dec    %edx
   17da2:	66 89 53 12          	mov    %dx,0x12(%rbx)
   17da6:	0f b7 d2             	movzwl %dx,%edx
   17da9:	48 c1 e2 04          	shl    $0x4,%rdx
   17dad:	48 03 53 18          	add    0x18(%rbx),%rdx
   17db1:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   17db5:	ff 12                	callq  *(%rdx)
   17db7:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
   17dbb:	66 85 d2             	test   %dx,%dx
   17dbe:	75 e0                	jne    17da0 <mod_cb_on_abort+0x20>
   17dc0:	31 c0                	xor    %eax,%eax
   17dc2:	66 89 43 02          	mov    %ax,0x2(%rbx)
   17dc6:	5b                   	pop    %rbx
   17dc7:	c3                   	retq   
   17dc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   17dcf:	00 

0000000000017dd0 <mod_cb_on_commit>:
   17dd0:	f3 0f 1e fa          	endbr64 
   17dd4:	53                   	push   %rbx
   17dd5:	8b 3d 65 82 00 00    	mov    0x8265(%rip),%edi        # 20040 <mod_cb>
   17ddb:	e8 40 60 ff ff       	callq  de20 <stm_get_specific>
   17de0:	0f b7 50 02          	movzwl 0x2(%rax),%edx
   17de4:	48 89 c3             	mov    %rax,%rbx
   17de7:	66 85 d2             	test   %dx,%dx
   17dea:	74 24                	je     17e10 <mod_cb_on_commit+0x40>
   17dec:	0f 1f 40 00          	nopl   0x0(%rax)
   17df0:	ff ca                	dec    %edx
   17df2:	66 89 53 02          	mov    %dx,0x2(%rbx)
   17df6:	0f b7 d2             	movzwl %dx,%edx
   17df9:	48 c1 e2 04          	shl    $0x4,%rdx
   17dfd:	48 03 53 08          	add    0x8(%rbx),%rdx
   17e01:	48 8b 7a 08          	mov    0x8(%rdx),%rdi
   17e05:	ff 12                	callq  *(%rdx)
   17e07:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
   17e0b:	66 85 d2             	test   %dx,%dx
   17e0e:	75 e0                	jne    17df0 <mod_cb_on_commit+0x20>
   17e10:	31 c0                	xor    %eax,%eax
   17e12:	66 89 43 12          	mov    %ax,0x12(%rbx)
   17e16:	5b                   	pop    %rbx
   17e17:	c3                   	retq   
   17e18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   17e1f:	00 

0000000000017e20 <mod_cb_on_thread_exit>:
   17e20:	f3 0f 1e fa          	endbr64 
   17e24:	55                   	push   %rbp
   17e25:	8b 3d 15 82 00 00    	mov    0x8215(%rip),%edi        # 20040 <mod_cb>
   17e2b:	e8 f0 5f ff ff       	callq  de20 <stm_get_specific>
   17e30:	48 8b 78 18          	mov    0x18(%rax),%rdi
   17e34:	48 89 c5             	mov    %rax,%rbp
   17e37:	e8 94 a4 fe ff       	callq  22d0 <free@plt>
   17e3c:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   17e40:	e8 8b a4 fe ff       	callq  22d0 <free@plt>
   17e45:	48 89 ef             	mov    %rbp,%rdi
   17e48:	5d                   	pop    %rbp
   17e49:	e9 82 a4 fe ff       	jmpq   22d0 <free@plt>
   17e4e:	66 90                	xchg   %ax,%ax

0000000000017e50 <epoch_free>:
   17e50:	f3 0f 1e fa          	endbr64 
   17e54:	8b 05 ea 81 00 00    	mov    0x81ea(%rip),%eax        # 20044 <mod_cb+0x4>
   17e5a:	85 c0                	test   %eax,%eax
   17e5c:	74 22                	je     17e80 <epoch_free+0x30>
   17e5e:	48 83 ec 18          	sub    $0x18,%rsp
   17e62:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   17e67:	e8 a4 50 ff ff       	callq  cf10 <stm_get_clock>
   17e6c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
   17e71:	48 89 c6             	mov    %rax,%rsi
   17e74:	48 83 c4 18          	add    $0x18,%rsp
   17e78:	e9 73 fb ff ff       	jmpq   179f0 <gc_free>
   17e7d:	0f 1f 00             	nopl   (%rax)
   17e80:	e9 4b a4 fe ff       	jmpq   22d0 <free@plt>
   17e85:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   17e8c:	00 00 00 00 

0000000000017e90 <mod_cb_on_thread_init>:
   17e90:	f3 0f 1e fa          	endbr64 
   17e94:	55                   	push   %rbp
   17e95:	bf 20 00 00 00       	mov    $0x20,%edi
   17e9a:	e8 b1 a5 fe ff       	callq  2450 <malloc@plt>
   17e9f:	48 85 c0             	test   %rax,%rax
   17ea2:	74 4c                	je     17ef0 <mod_cb_on_thread_init+0x60>
   17ea4:	c7 40 10 10 00 00 00 	movl   $0x10,0x10(%rax)
   17eab:	c7 00 10 00 00 00    	movl   $0x10,(%rax)
   17eb1:	bf 00 01 00 00       	mov    $0x100,%edi
   17eb6:	48 89 c5             	mov    %rax,%rbp
   17eb9:	e8 92 a5 fe ff       	callq  2450 <malloc@plt>
   17ebe:	48 85 c0             	test   %rax,%rax
   17ec1:	74 2d                	je     17ef0 <mod_cb_on_thread_init+0x60>
   17ec3:	48 89 45 08          	mov    %rax,0x8(%rbp)
   17ec7:	bf 00 01 00 00       	mov    $0x100,%edi
   17ecc:	e8 7f a5 fe ff       	callq  2450 <malloc@plt>
   17ed1:	48 85 c0             	test   %rax,%rax
   17ed4:	74 1a                	je     17ef0 <mod_cb_on_thread_init+0x60>
   17ed6:	48 89 45 18          	mov    %rax,0x18(%rbp)
   17eda:	8b 3d 60 81 00 00    	mov    0x8160(%rip),%edi        # 20040 <mod_cb>
   17ee0:	48 89 ee             	mov    %rbp,%rsi
   17ee3:	5d                   	pop    %rbp
   17ee4:	e9 f7 5e ff ff       	jmpq   dde0 <stm_set_specific>
   17ee9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   17ef0:	48 8d 3d 88 26 00 00 	lea    0x2688(%rip),%rdi        # 1a57f <__PRETTY_FUNCTION__.3713+0x717>
   17ef7:	e8 e4 a5 fe ff       	callq  24e0 <perror@plt>
   17efc:	bf 01 00 00 00       	mov    $0x1,%edi
   17f01:	e8 0a a6 fe ff       	callq  2510 <exit@plt>
   17f06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17f0d:	00 00 00 

0000000000017f10 <stm_on_abort>:
   17f10:	f3 0f 1e fa          	endbr64 
   17f14:	41 54                	push   %r12
   17f16:	49 89 fc             	mov    %rdi,%r12
   17f19:	8b 3d 21 81 00 00    	mov    0x8121(%rip),%edi        # 20040 <mod_cb>
   17f1f:	55                   	push   %rbp
   17f20:	48 89 f5             	mov    %rsi,%rbp
   17f23:	53                   	push   %rbx
   17f24:	e8 f7 5e ff ff       	callq  de20 <stm_get_specific>
   17f29:	0f b7 50 12          	movzwl 0x12(%rax),%edx
   17f2d:	48 89 c3             	mov    %rax,%rbx
   17f30:	0f b7 40 10          	movzwl 0x10(%rax),%eax
   17f34:	66 39 c2             	cmp    %ax,%dx
   17f37:	73 2f                	jae    17f68 <stm_on_abort+0x58>
   17f39:	48 8b 43 18          	mov    0x18(%rbx),%rax
   17f3d:	48 c1 e2 04          	shl    $0x4,%rdx
   17f41:	4c 89 24 10          	mov    %r12,(%rax,%rdx,1)
   17f45:	0f b7 43 12          	movzwl 0x12(%rbx),%eax
   17f49:	48 c1 e0 04          	shl    $0x4,%rax
   17f4d:	48 03 43 18          	add    0x18(%rbx),%rax
   17f51:	48 89 68 08          	mov    %rbp,0x8(%rax)
   17f55:	b8 01 00 00 00       	mov    $0x1,%eax
   17f5a:	66 ff 43 12          	incw   0x12(%rbx)
   17f5e:	5b                   	pop    %rbx
   17f5f:	5d                   	pop    %rbp
   17f60:	41 5c                	pop    %r12
   17f62:	c3                   	retq   
   17f63:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   17f68:	01 c0                	add    %eax,%eax
   17f6a:	66 89 43 10          	mov    %ax,0x10(%rbx)
   17f6e:	0f b7 c0             	movzwl %ax,%eax
   17f71:	48 c1 e0 04          	shl    $0x4,%rax
   17f75:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   17f79:	48 89 c6             	mov    %rax,%rsi
   17f7c:	e8 ff a4 fe ff       	callq  2480 <realloc@plt>
   17f81:	48 85 c0             	test   %rax,%rax
   17f84:	74 0a                	je     17f90 <stm_on_abort+0x80>
   17f86:	48 89 43 18          	mov    %rax,0x18(%rbx)
   17f8a:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
   17f8e:	eb ad                	jmp    17f3d <stm_on_abort+0x2d>
   17f90:	48 8d 3d f5 1e 00 00 	lea    0x1ef5(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
   17f97:	e8 44 a5 fe ff       	callq  24e0 <perror@plt>
   17f9c:	bf 01 00 00 00       	mov    $0x1,%edi
   17fa1:	e8 6a a5 fe ff       	callq  2510 <exit@plt>
   17fa6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   17fad:	00 00 00 

0000000000017fb0 <stm_on_commit>:
   17fb0:	f3 0f 1e fa          	endbr64 
   17fb4:	41 54                	push   %r12
   17fb6:	49 89 fc             	mov    %rdi,%r12
   17fb9:	8b 3d 81 80 00 00    	mov    0x8081(%rip),%edi        # 20040 <mod_cb>
   17fbf:	55                   	push   %rbp
   17fc0:	48 89 f5             	mov    %rsi,%rbp
   17fc3:	53                   	push   %rbx
   17fc4:	e8 57 5e ff ff       	callq  de20 <stm_get_specific>
   17fc9:	0f b7 50 02          	movzwl 0x2(%rax),%edx
   17fcd:	48 89 c3             	mov    %rax,%rbx
   17fd0:	0f b7 00             	movzwl (%rax),%eax
   17fd3:	66 39 c2             	cmp    %ax,%dx
   17fd6:	73 30                	jae    18008 <stm_on_commit+0x58>
   17fd8:	48 8b 43 08          	mov    0x8(%rbx),%rax
   17fdc:	48 c1 e2 04          	shl    $0x4,%rdx
   17fe0:	4c 89 24 10          	mov    %r12,(%rax,%rdx,1)
   17fe4:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
   17fe8:	48 c1 e0 04          	shl    $0x4,%rax
   17fec:	48 03 43 08          	add    0x8(%rbx),%rax
   17ff0:	48 89 68 08          	mov    %rbp,0x8(%rax)
   17ff4:	b8 01 00 00 00       	mov    $0x1,%eax
   17ff9:	66 ff 43 02          	incw   0x2(%rbx)
   17ffd:	5b                   	pop    %rbx
   17ffe:	5d                   	pop    %rbp
   17fff:	41 5c                	pop    %r12
   18001:	c3                   	retq   
   18002:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18008:	01 c0                	add    %eax,%eax
   1800a:	66 89 03             	mov    %ax,(%rbx)
   1800d:	0f b7 c0             	movzwl %ax,%eax
   18010:	48 c1 e0 04          	shl    $0x4,%rax
   18014:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   18018:	48 89 c6             	mov    %rax,%rsi
   1801b:	e8 60 a4 fe ff       	callq  2480 <realloc@plt>
   18020:	48 85 c0             	test   %rax,%rax
   18023:	74 0a                	je     1802f <stm_on_commit+0x7f>
   18025:	48 89 43 08          	mov    %rax,0x8(%rbx)
   18029:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
   1802d:	eb ad                	jmp    17fdc <stm_on_commit+0x2c>
   1802f:	48 8d 3d 56 1e 00 00 	lea    0x1e56(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
   18036:	e8 a5 a4 fe ff       	callq  24e0 <perror@plt>
   1803b:	bf 01 00 00 00       	mov    $0x1,%edi
   18040:	e8 cb a4 fe ff       	callq  2510 <exit@plt>
   18045:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1804c:	00 00 00 00 

0000000000018050 <stm_malloc>:
   18050:	f3 0f 1e fa          	endbr64 
   18054:	41 54                	push   %r12
   18056:	55                   	push   %rbp
   18057:	48 89 fd             	mov    %rdi,%rbp
   1805a:	53                   	push   %rbx
   1805b:	e8 40 61 ff ff       	callq  e1a0 <stm_current_tx>
   18060:	8b 3d da 7f 00 00    	mov    0x7fda(%rip),%edi        # 20040 <mod_cb>
   18066:	e8 b5 5d ff ff       	callq  de20 <stm_get_specific>
   1806b:	48 8d 7d 07          	lea    0x7(%rbp),%rdi
   1806f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   18073:	48 89 c3             	mov    %rax,%rbx
   18076:	e8 d5 a3 fe ff       	callq  2450 <malloc@plt>
   1807b:	48 85 c0             	test   %rax,%rax
   1807e:	74 40                	je     180c0 <stm_malloc+0x70>
   18080:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
   18084:	0f b7 4b 10          	movzwl 0x10(%rbx),%ecx
   18088:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   1808c:	49 89 c4             	mov    %rax,%r12
   1808f:	66 39 ca             	cmp    %cx,%dx
   18092:	73 4c                	jae    180e0 <stm_malloc+0x90>
   18094:	48 8b 05 35 7f 00 00 	mov    0x7f35(%rip),%rax        # 1ffd0 <free@GLIBC_2.2.5>
   1809b:	48 c1 e2 04          	shl    $0x4,%rdx
   1809f:	48 89 04 17          	mov    %rax,(%rdi,%rdx,1)
   180a3:	0f b7 43 12          	movzwl 0x12(%rbx),%eax
   180a7:	48 c1 e0 04          	shl    $0x4,%rax
   180ab:	48 03 43 18          	add    0x18(%rbx),%rax
   180af:	4c 89 60 08          	mov    %r12,0x8(%rax)
   180b3:	4c 89 e0             	mov    %r12,%rax
   180b6:	66 ff 43 12          	incw   0x12(%rbx)
   180ba:	5b                   	pop    %rbx
   180bb:	5d                   	pop    %rbp
   180bc:	41 5c                	pop    %r12
   180be:	c3                   	retq   
   180bf:	90                   	nop
   180c0:	48 8d 3d b8 24 00 00 	lea    0x24b8(%rip),%rdi        # 1a57f <__PRETTY_FUNCTION__.3713+0x717>
   180c7:	e8 14 a4 fe ff       	callq  24e0 <perror@plt>
   180cc:	bf 01 00 00 00       	mov    $0x1,%edi
   180d1:	e8 3a a4 fe ff       	callq  2510 <exit@plt>
   180d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   180dd:	00 00 00 
   180e0:	01 c9                	add    %ecx,%ecx
   180e2:	66 89 4b 10          	mov    %cx,0x10(%rbx)
   180e6:	0f b7 c9             	movzwl %cx,%ecx
   180e9:	48 89 ce             	mov    %rcx,%rsi
   180ec:	48 c1 e6 04          	shl    $0x4,%rsi
   180f0:	e8 8b a3 fe ff       	callq  2480 <realloc@plt>
   180f5:	48 89 c7             	mov    %rax,%rdi
   180f8:	48 85 c0             	test   %rax,%rax
   180fb:	74 0a                	je     18107 <stm_malloc+0xb7>
   180fd:	48 89 43 18          	mov    %rax,0x18(%rbx)
   18101:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
   18105:	eb 8d                	jmp    18094 <stm_malloc+0x44>
   18107:	48 8d 3d 7e 1d 00 00 	lea    0x1d7e(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
   1810e:	e8 cd a3 fe ff       	callq  24e0 <perror@plt>
   18113:	bf 01 00 00 00       	mov    $0x1,%edi
   18118:	e8 f3 a3 fe ff       	callq  2510 <exit@plt>
   1811d:	0f 1f 00             	nopl   (%rax)

0000000000018120 <stm_malloc_tx>:
   18120:	f3 0f 1e fa          	endbr64 
   18124:	41 54                	push   %r12
   18126:	8b 3d 14 7f 00 00    	mov    0x7f14(%rip),%edi        # 20040 <mod_cb>
   1812c:	55                   	push   %rbp
   1812d:	48 89 f5             	mov    %rsi,%rbp
   18130:	53                   	push   %rbx
   18131:	e8 ea 5c ff ff       	callq  de20 <stm_get_specific>
   18136:	48 8d 7d 07          	lea    0x7(%rbp),%rdi
   1813a:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   1813e:	48 89 c3             	mov    %rax,%rbx
   18141:	e8 0a a3 fe ff       	callq  2450 <malloc@plt>
   18146:	48 85 c0             	test   %rax,%rax
   18149:	74 45                	je     18190 <stm_malloc_tx+0x70>
   1814b:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
   1814f:	0f b7 4b 10          	movzwl 0x10(%rbx),%ecx
   18153:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   18157:	49 89 c4             	mov    %rax,%r12
   1815a:	66 39 ca             	cmp    %cx,%dx
   1815d:	73 51                	jae    181b0 <stm_malloc_tx+0x90>
   1815f:	48 8b 05 6a 7e 00 00 	mov    0x7e6a(%rip),%rax        # 1ffd0 <free@GLIBC_2.2.5>
   18166:	48 c1 e2 04          	shl    $0x4,%rdx
   1816a:	48 89 04 17          	mov    %rax,(%rdi,%rdx,1)
   1816e:	0f b7 43 12          	movzwl 0x12(%rbx),%eax
   18172:	48 c1 e0 04          	shl    $0x4,%rax
   18176:	48 03 43 18          	add    0x18(%rbx),%rax
   1817a:	4c 89 60 08          	mov    %r12,0x8(%rax)
   1817e:	4c 89 e0             	mov    %r12,%rax
   18181:	66 ff 43 12          	incw   0x12(%rbx)
   18185:	5b                   	pop    %rbx
   18186:	5d                   	pop    %rbp
   18187:	41 5c                	pop    %r12
   18189:	c3                   	retq   
   1818a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   18190:	48 8d 3d e8 23 00 00 	lea    0x23e8(%rip),%rdi        # 1a57f <__PRETTY_FUNCTION__.3713+0x717>
   18197:	e8 44 a3 fe ff       	callq  24e0 <perror@plt>
   1819c:	bf 01 00 00 00       	mov    $0x1,%edi
   181a1:	e8 6a a3 fe ff       	callq  2510 <exit@plt>
   181a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   181ad:	00 00 00 
   181b0:	01 c9                	add    %ecx,%ecx
   181b2:	66 89 4b 10          	mov    %cx,0x10(%rbx)
   181b6:	0f b7 c9             	movzwl %cx,%ecx
   181b9:	48 c1 e1 04          	shl    $0x4,%rcx
   181bd:	48 89 ce             	mov    %rcx,%rsi
   181c0:	e8 bb a2 fe ff       	callq  2480 <realloc@plt>
   181c5:	48 89 c7             	mov    %rax,%rdi
   181c8:	48 85 c0             	test   %rax,%rax
   181cb:	74 0a                	je     181d7 <stm_malloc_tx+0xb7>
   181cd:	48 89 43 18          	mov    %rax,0x18(%rbx)
   181d1:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
   181d5:	eb 88                	jmp    1815f <stm_malloc_tx+0x3f>
   181d7:	48 8d 3d ae 1c 00 00 	lea    0x1cae(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
   181de:	e8 fd a2 fe ff       	callq  24e0 <perror@plt>
   181e3:	bf 01 00 00 00       	mov    $0x1,%edi
   181e8:	e8 23 a3 fe ff       	callq  2510 <exit@plt>
   181ed:	0f 1f 00             	nopl   (%rax)

00000000000181f0 <stm_calloc>:
   181f0:	f3 0f 1e fa          	endbr64 
   181f4:	41 54                	push   %r12
   181f6:	49 89 fc             	mov    %rdi,%r12
   181f9:	55                   	push   %rbp
   181fa:	48 89 f5             	mov    %rsi,%rbp
   181fd:	53                   	push   %rbx
   181fe:	e8 9d 5f ff ff       	callq  e1a0 <stm_current_tx>
   18203:	8b 3d 37 7e 00 00    	mov    0x7e37(%rip),%edi        # 20040 <mod_cb>
   18209:	e8 12 5c ff ff       	callq  de20 <stm_get_specific>
   1820e:	48 8d 75 07          	lea    0x7(%rbp),%rsi
   18212:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   18216:	4c 89 e7             	mov    %r12,%rdi
   18219:	48 89 c3             	mov    %rax,%rbx
   1821c:	e8 cf a1 fe ff       	callq  23f0 <calloc@plt>
   18221:	48 85 c0             	test   %rax,%rax
   18224:	74 42                	je     18268 <stm_calloc+0x78>
   18226:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
   1822a:	0f b7 4b 10          	movzwl 0x10(%rbx),%ecx
   1822e:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   18232:	49 89 c4             	mov    %rax,%r12
   18235:	66 39 ca             	cmp    %cx,%dx
   18238:	73 46                	jae    18280 <stm_calloc+0x90>
   1823a:	48 8b 05 8f 7d 00 00 	mov    0x7d8f(%rip),%rax        # 1ffd0 <free@GLIBC_2.2.5>
   18241:	48 c1 e2 04          	shl    $0x4,%rdx
   18245:	48 89 04 17          	mov    %rax,(%rdi,%rdx,1)
   18249:	0f b7 43 12          	movzwl 0x12(%rbx),%eax
   1824d:	48 c1 e0 04          	shl    $0x4,%rax
   18251:	48 03 43 18          	add    0x18(%rbx),%rax
   18255:	4c 89 60 08          	mov    %r12,0x8(%rax)
   18259:	4c 89 e0             	mov    %r12,%rax
   1825c:	66 ff 43 12          	incw   0x12(%rbx)
   18260:	5b                   	pop    %rbx
   18261:	5d                   	pop    %rbp
   18262:	41 5c                	pop    %r12
   18264:	c3                   	retq   
   18265:	0f 1f 00             	nopl   (%rax)
   18268:	48 8d 3d 09 24 00 00 	lea    0x2409(%rip),%rdi        # 1a678 <__PRETTY_FUNCTION__.3713+0x810>
   1826f:	e8 6c a2 fe ff       	callq  24e0 <perror@plt>
   18274:	bf 01 00 00 00       	mov    $0x1,%edi
   18279:	e8 92 a2 fe ff       	callq  2510 <exit@plt>
   1827e:	66 90                	xchg   %ax,%ax
   18280:	01 c9                	add    %ecx,%ecx
   18282:	66 89 4b 10          	mov    %cx,0x10(%rbx)
   18286:	0f b7 c9             	movzwl %cx,%ecx
   18289:	48 c1 e1 04          	shl    $0x4,%rcx
   1828d:	48 89 ce             	mov    %rcx,%rsi
   18290:	e8 eb a1 fe ff       	callq  2480 <realloc@plt>
   18295:	48 89 c7             	mov    %rax,%rdi
   18298:	48 85 c0             	test   %rax,%rax
   1829b:	74 0a                	je     182a7 <stm_calloc+0xb7>
   1829d:	48 89 43 18          	mov    %rax,0x18(%rbx)
   182a1:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
   182a5:	eb 93                	jmp    1823a <stm_calloc+0x4a>
   182a7:	48 8d 3d de 1b 00 00 	lea    0x1bde(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
   182ae:	e8 2d a2 fe ff       	callq  24e0 <perror@plt>
   182b3:	bf 01 00 00 00       	mov    $0x1,%edi
   182b8:	e8 53 a2 fe ff       	callq  2510 <exit@plt>
   182bd:	0f 1f 00             	nopl   (%rax)

00000000000182c0 <stm_calloc_tx>:
   182c0:	f3 0f 1e fa          	endbr64 
   182c4:	41 54                	push   %r12
   182c6:	8b 3d 74 7d 00 00    	mov    0x7d74(%rip),%edi        # 20040 <mod_cb>
   182cc:	49 89 f4             	mov    %rsi,%r12
   182cf:	55                   	push   %rbp
   182d0:	48 89 d5             	mov    %rdx,%rbp
   182d3:	53                   	push   %rbx
   182d4:	e8 47 5b ff ff       	callq  de20 <stm_get_specific>
   182d9:	48 8d 75 07          	lea    0x7(%rbp),%rsi
   182dd:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
   182e1:	4c 89 e7             	mov    %r12,%rdi
   182e4:	48 89 c3             	mov    %rax,%rbx
   182e7:	e8 04 a1 fe ff       	callq  23f0 <calloc@plt>
   182ec:	48 85 c0             	test   %rax,%rax
   182ef:	74 3f                	je     18330 <stm_calloc_tx+0x70>
   182f1:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
   182f5:	0f b7 4b 10          	movzwl 0x10(%rbx),%ecx
   182f9:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
   182fd:	49 89 c4             	mov    %rax,%r12
   18300:	66 39 ca             	cmp    %cx,%dx
   18303:	73 4b                	jae    18350 <stm_calloc_tx+0x90>
   18305:	48 8b 05 c4 7c 00 00 	mov    0x7cc4(%rip),%rax        # 1ffd0 <free@GLIBC_2.2.5>
   1830c:	48 c1 e2 04          	shl    $0x4,%rdx
   18310:	48 89 04 17          	mov    %rax,(%rdi,%rdx,1)
   18314:	0f b7 43 12          	movzwl 0x12(%rbx),%eax
   18318:	48 c1 e0 04          	shl    $0x4,%rax
   1831c:	48 03 43 18          	add    0x18(%rbx),%rax
   18320:	4c 89 60 08          	mov    %r12,0x8(%rax)
   18324:	4c 89 e0             	mov    %r12,%rax
   18327:	66 ff 43 12          	incw   0x12(%rbx)
   1832b:	5b                   	pop    %rbx
   1832c:	5d                   	pop    %rbp
   1832d:	41 5c                	pop    %r12
   1832f:	c3                   	retq   
   18330:	48 8d 3d 41 23 00 00 	lea    0x2341(%rip),%rdi        # 1a678 <__PRETTY_FUNCTION__.3713+0x810>
   18337:	e8 a4 a1 fe ff       	callq  24e0 <perror@plt>
   1833c:	bf 01 00 00 00       	mov    $0x1,%edi
   18341:	e8 ca a1 fe ff       	callq  2510 <exit@plt>
   18346:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   1834d:	00 00 00 
   18350:	01 c9                	add    %ecx,%ecx
   18352:	66 89 4b 10          	mov    %cx,0x10(%rbx)
   18356:	0f b7 c9             	movzwl %cx,%ecx
   18359:	48 c1 e1 04          	shl    $0x4,%rcx
   1835d:	48 89 ce             	mov    %rcx,%rsi
   18360:	e8 1b a1 fe ff       	callq  2480 <realloc@plt>
   18365:	48 89 c7             	mov    %rax,%rdi
   18368:	48 85 c0             	test   %rax,%rax
   1836b:	74 0a                	je     18377 <stm_calloc_tx+0xb7>
   1836d:	48 89 43 18          	mov    %rax,0x18(%rbx)
   18371:	0f b7 53 12          	movzwl 0x12(%rbx),%edx
   18375:	eb 8e                	jmp    18305 <stm_calloc_tx+0x45>
   18377:	48 8d 3d 0e 1b 00 00 	lea    0x1b0e(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
   1837e:	e8 5d a1 fe ff       	callq  24e0 <perror@plt>
   18383:	bf 01 00 00 00       	mov    $0x1,%edi
   18388:	e8 83 a1 fe ff       	callq  2510 <exit@plt>
   1838d:	0f 1f 00             	nopl   (%rax)

0000000000018390 <stm_free2>:
   18390:	f3 0f 1e fa          	endbr64 
   18394:	41 56                	push   %r14
   18396:	49 89 d6             	mov    %rdx,%r14
   18399:	41 55                	push   %r13
   1839b:	41 54                	push   %r12
   1839d:	55                   	push   %rbp
   1839e:	48 89 fd             	mov    %rdi,%rbp
   183a1:	53                   	push   %rbx
   183a2:	48 89 f3             	mov    %rsi,%rbx
   183a5:	e8 f6 5d ff ff       	callq  e1a0 <stm_current_tx>
   183aa:	8b 3d 90 7c 00 00    	mov    0x7c90(%rip),%edi        # 20040 <mod_cb>
   183b0:	49 89 c4             	mov    %rax,%r12
   183b3:	e8 68 5a ff ff       	callq  de20 <stm_get_specific>
   183b8:	49 89 c5             	mov    %rax,%r13
   183bb:	4d 85 f6             	test   %r14,%r14
   183be:	74 38                	je     183f8 <stm_free2+0x68>
   183c0:	48 83 c3 07          	add    $0x7,%rbx
   183c4:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
   183c8:	49 83 c6 07          	add    $0x7,%r14
   183cc:	48 01 eb             	add    %rbp,%rbx
   183cf:	49 c1 ee 03          	shr    $0x3,%r14
   183d3:	74 23                	je     183f8 <stm_free2+0x68>
   183d5:	4e 8d 34 f3          	lea    (%rbx,%r14,8),%r14
   183d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   183e0:	48 89 de             	mov    %rbx,%rsi
   183e3:	31 c9                	xor    %ecx,%ecx
   183e5:	48 83 c3 08          	add    $0x8,%rbx
   183e9:	31 d2                	xor    %edx,%edx
   183eb:	4c 89 e7             	mov    %r12,%rdi
   183ee:	e8 6d 77 ff ff       	callq  fb60 <stm_store2_tx>
   183f3:	4c 39 f3             	cmp    %r14,%rbx
   183f6:	75 e8                	jne    183e0 <stm_free2+0x50>
   183f8:	41 0f b7 55 02       	movzwl 0x2(%r13),%edx
   183fd:	41 0f b7 4d 00       	movzwl 0x0(%r13),%ecx
   18402:	49 8b 7d 08          	mov    0x8(%r13),%rdi
   18406:	66 39 ca             	cmp    %cx,%dx
   18409:	73 35                	jae    18440 <stm_free2+0xb0>
   1840b:	48 8d 05 3e fa ff ff 	lea    -0x5c2(%rip),%rax        # 17e50 <epoch_free>
   18412:	48 c1 e2 04          	shl    $0x4,%rdx
   18416:	48 89 04 17          	mov    %rax,(%rdi,%rdx,1)
   1841a:	41 0f b7 45 02       	movzwl 0x2(%r13),%eax
   1841f:	48 c1 e0 04          	shl    $0x4,%rax
   18423:	49 03 45 08          	add    0x8(%r13),%rax
   18427:	48 89 68 08          	mov    %rbp,0x8(%rax)
   1842b:	66 41 ff 45 02       	incw   0x2(%r13)
   18430:	5b                   	pop    %rbx
   18431:	5d                   	pop    %rbp
   18432:	41 5c                	pop    %r12
   18434:	41 5d                	pop    %r13
   18436:	41 5e                	pop    %r14
   18438:	c3                   	retq   
   18439:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18440:	01 c9                	add    %ecx,%ecx
   18442:	66 41 89 4d 00       	mov    %cx,0x0(%r13)
   18447:	0f b7 c9             	movzwl %cx,%ecx
   1844a:	48 c1 e1 04          	shl    $0x4,%rcx
   1844e:	48 89 ce             	mov    %rcx,%rsi
   18451:	e8 2a a0 fe ff       	callq  2480 <realloc@plt>
   18456:	48 89 c7             	mov    %rax,%rdi
   18459:	48 85 c0             	test   %rax,%rax
   1845c:	74 0b                	je     18469 <stm_free2+0xd9>
   1845e:	49 89 45 08          	mov    %rax,0x8(%r13)
   18462:	41 0f b7 55 02       	movzwl 0x2(%r13),%edx
   18467:	eb a2                	jmp    1840b <stm_free2+0x7b>
   18469:	48 8d 3d 1c 1a 00 00 	lea    0x1a1c(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
   18470:	e8 6b a0 fe ff       	callq  24e0 <perror@plt>
   18475:	bf 01 00 00 00       	mov    $0x1,%edi
   1847a:	e8 91 a0 fe ff       	callq  2510 <exit@plt>
   1847f:	90                   	nop

0000000000018480 <stm_free2_tx>:
   18480:	f3 0f 1e fa          	endbr64 
   18484:	41 56                	push   %r14
   18486:	49 89 ce             	mov    %rcx,%r14
   18489:	41 55                	push   %r13
   1848b:	41 54                	push   %r12
   1848d:	49 89 fc             	mov    %rdi,%r12
   18490:	8b 3d aa 7b 00 00    	mov    0x7baa(%rip),%edi        # 20040 <mod_cb>
   18496:	55                   	push   %rbp
   18497:	48 89 f5             	mov    %rsi,%rbp
   1849a:	53                   	push   %rbx
   1849b:	48 89 d3             	mov    %rdx,%rbx
   1849e:	e8 7d 59 ff ff       	callq  de20 <stm_get_specific>
   184a3:	49 89 c5             	mov    %rax,%r13
   184a6:	4d 85 f6             	test   %r14,%r14
   184a9:	74 35                	je     184e0 <stm_free2_tx+0x60>
   184ab:	48 83 c3 07          	add    $0x7,%rbx
   184af:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
   184b3:	49 83 c6 07          	add    $0x7,%r14
   184b7:	48 01 eb             	add    %rbp,%rbx
   184ba:	49 c1 ee 03          	shr    $0x3,%r14
   184be:	74 20                	je     184e0 <stm_free2_tx+0x60>
   184c0:	4e 8d 34 f3          	lea    (%rbx,%r14,8),%r14
   184c4:	0f 1f 40 00          	nopl   0x0(%rax)
   184c8:	48 89 de             	mov    %rbx,%rsi
   184cb:	31 c9                	xor    %ecx,%ecx
   184cd:	48 83 c3 08          	add    $0x8,%rbx
   184d1:	31 d2                	xor    %edx,%edx
   184d3:	4c 89 e7             	mov    %r12,%rdi
   184d6:	e8 85 76 ff ff       	callq  fb60 <stm_store2_tx>
   184db:	4c 39 f3             	cmp    %r14,%rbx
   184de:	75 e8                	jne    184c8 <stm_free2_tx+0x48>
   184e0:	41 0f b7 55 02       	movzwl 0x2(%r13),%edx
   184e5:	41 0f b7 4d 00       	movzwl 0x0(%r13),%ecx
   184ea:	49 8b 7d 08          	mov    0x8(%r13),%rdi
   184ee:	66 39 ca             	cmp    %cx,%dx
   184f1:	73 35                	jae    18528 <stm_free2_tx+0xa8>
   184f3:	48 8d 05 56 f9 ff ff 	lea    -0x6aa(%rip),%rax        # 17e50 <epoch_free>
   184fa:	48 c1 e2 04          	shl    $0x4,%rdx
   184fe:	48 89 04 17          	mov    %rax,(%rdi,%rdx,1)
   18502:	41 0f b7 45 02       	movzwl 0x2(%r13),%eax
   18507:	48 c1 e0 04          	shl    $0x4,%rax
   1850b:	49 03 45 08          	add    0x8(%r13),%rax
   1850f:	48 89 68 08          	mov    %rbp,0x8(%rax)
   18513:	66 41 ff 45 02       	incw   0x2(%r13)
   18518:	5b                   	pop    %rbx
   18519:	5d                   	pop    %rbp
   1851a:	41 5c                	pop    %r12
   1851c:	41 5d                	pop    %r13
   1851e:	41 5e                	pop    %r14
   18520:	c3                   	retq   
   18521:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18528:	01 c9                	add    %ecx,%ecx
   1852a:	66 41 89 4d 00       	mov    %cx,0x0(%r13)
   1852f:	0f b7 c9             	movzwl %cx,%ecx
   18532:	48 89 ce             	mov    %rcx,%rsi
   18535:	48 c1 e6 04          	shl    $0x4,%rsi
   18539:	e8 42 9f fe ff       	callq  2480 <realloc@plt>
   1853e:	48 89 c7             	mov    %rax,%rdi
   18541:	48 85 c0             	test   %rax,%rax
   18544:	74 0b                	je     18551 <stm_free2_tx+0xd1>
   18546:	49 89 45 08          	mov    %rax,0x8(%r13)
   1854a:	41 0f b7 55 02       	movzwl 0x2(%r13),%edx
   1854f:	eb a2                	jmp    184f3 <stm_free2_tx+0x73>
   18551:	48 8d 3d 34 19 00 00 	lea    0x1934(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
   18558:	e8 83 9f fe ff       	callq  24e0 <perror@plt>
   1855d:	bf 01 00 00 00       	mov    $0x1,%edi
   18562:	e8 a9 9f fe ff       	callq  2510 <exit@plt>
   18567:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1856e:	00 00 

0000000000018570 <stm_free>:
   18570:	f3 0f 1e fa          	endbr64 
   18574:	41 56                	push   %r14
   18576:	41 55                	push   %r13
   18578:	41 54                	push   %r12
   1857a:	49 89 fc             	mov    %rdi,%r12
   1857d:	55                   	push   %rbp
   1857e:	48 89 f5             	mov    %rsi,%rbp
   18581:	53                   	push   %rbx
   18582:	e8 19 5c ff ff       	callq  e1a0 <stm_current_tx>
   18587:	8b 3d b3 7a 00 00    	mov    0x7ab3(%rip),%edi        # 20040 <mod_cb>
   1858d:	49 89 c5             	mov    %rax,%r13
   18590:	e8 8b 58 ff ff       	callq  de20 <stm_get_specific>
   18595:	48 89 c3             	mov    %rax,%rbx
   18598:	48 85 ed             	test   %rbp,%rbp
   1859b:	74 2b                	je     185c8 <stm_free+0x58>
   1859d:	48 83 c5 07          	add    $0x7,%rbp
   185a1:	48 c1 ed 03          	shr    $0x3,%rbp
   185a5:	74 21                	je     185c8 <stm_free+0x58>
   185a7:	4d 8d 34 ec          	lea    (%r12,%rbp,8),%r14
   185ab:	4c 89 e5             	mov    %r12,%rbp
   185ae:	66 90                	xchg   %ax,%ax
   185b0:	48 89 ee             	mov    %rbp,%rsi
   185b3:	31 c9                	xor    %ecx,%ecx
   185b5:	48 83 c5 08          	add    $0x8,%rbp
   185b9:	31 d2                	xor    %edx,%edx
   185bb:	4c 89 ef             	mov    %r13,%rdi
   185be:	e8 9d 75 ff ff       	callq  fb60 <stm_store2_tx>
   185c3:	4c 39 f5             	cmp    %r14,%rbp
   185c6:	75 e8                	jne    185b0 <stm_free+0x40>
   185c8:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
   185cc:	0f b7 0b             	movzwl (%rbx),%ecx
   185cf:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   185d3:	66 39 ca             	cmp    %cx,%dx
   185d6:	73 30                	jae    18608 <stm_free+0x98>
   185d8:	48 8d 05 71 f8 ff ff 	lea    -0x78f(%rip),%rax        # 17e50 <epoch_free>
   185df:	48 c1 e2 04          	shl    $0x4,%rdx
   185e3:	48 89 04 17          	mov    %rax,(%rdi,%rdx,1)
   185e7:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
   185eb:	48 c1 e0 04          	shl    $0x4,%rax
   185ef:	48 03 43 08          	add    0x8(%rbx),%rax
   185f3:	4c 89 60 08          	mov    %r12,0x8(%rax)
   185f7:	66 ff 43 02          	incw   0x2(%rbx)
   185fb:	5b                   	pop    %rbx
   185fc:	5d                   	pop    %rbp
   185fd:	41 5c                	pop    %r12
   185ff:	41 5d                	pop    %r13
   18601:	41 5e                	pop    %r14
   18603:	c3                   	retq   
   18604:	0f 1f 40 00          	nopl   0x0(%rax)
   18608:	01 c9                	add    %ecx,%ecx
   1860a:	66 89 0b             	mov    %cx,(%rbx)
   1860d:	0f b7 c9             	movzwl %cx,%ecx
   18610:	48 c1 e1 04          	shl    $0x4,%rcx
   18614:	48 89 ce             	mov    %rcx,%rsi
   18617:	e8 64 9e fe ff       	callq  2480 <realloc@plt>
   1861c:	48 89 c7             	mov    %rax,%rdi
   1861f:	48 85 c0             	test   %rax,%rax
   18622:	74 0a                	je     1862e <stm_free+0xbe>
   18624:	48 89 43 08          	mov    %rax,0x8(%rbx)
   18628:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
   1862c:	eb aa                	jmp    185d8 <stm_free+0x68>
   1862e:	48 8d 3d 57 18 00 00 	lea    0x1857(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
   18635:	e8 a6 9e fe ff       	callq  24e0 <perror@plt>
   1863a:	bf 01 00 00 00       	mov    $0x1,%edi
   1863f:	e8 cc 9e fe ff       	callq  2510 <exit@plt>
   18644:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1864b:	00 00 00 00 
   1864f:	90                   	nop

0000000000018650 <stm_free_tx>:
   18650:	f3 0f 1e fa          	endbr64 
   18654:	41 56                	push   %r14
   18656:	41 55                	push   %r13
   18658:	49 89 fd             	mov    %rdi,%r13
   1865b:	8b 3d df 79 00 00    	mov    0x79df(%rip),%edi        # 20040 <mod_cb>
   18661:	41 54                	push   %r12
   18663:	49 89 f4             	mov    %rsi,%r12
   18666:	55                   	push   %rbp
   18667:	48 89 d5             	mov    %rdx,%rbp
   1866a:	53                   	push   %rbx
   1866b:	e8 b0 57 ff ff       	callq  de20 <stm_get_specific>
   18670:	48 89 c3             	mov    %rax,%rbx
   18673:	48 85 ed             	test   %rbp,%rbp
   18676:	74 30                	je     186a8 <stm_free_tx+0x58>
   18678:	48 83 c5 07          	add    $0x7,%rbp
   1867c:	48 c1 ed 03          	shr    $0x3,%rbp
   18680:	74 26                	je     186a8 <stm_free_tx+0x58>
   18682:	4d 8d 34 ec          	lea    (%r12,%rbp,8),%r14
   18686:	4c 89 e5             	mov    %r12,%rbp
   18689:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18690:	48 89 ee             	mov    %rbp,%rsi
   18693:	31 c9                	xor    %ecx,%ecx
   18695:	48 83 c5 08          	add    $0x8,%rbp
   18699:	31 d2                	xor    %edx,%edx
   1869b:	4c 89 ef             	mov    %r13,%rdi
   1869e:	e8 bd 74 ff ff       	callq  fb60 <stm_store2_tx>
   186a3:	4c 39 f5             	cmp    %r14,%rbp
   186a6:	75 e8                	jne    18690 <stm_free_tx+0x40>
   186a8:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
   186ac:	0f b7 0b             	movzwl (%rbx),%ecx
   186af:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
   186b3:	66 39 ca             	cmp    %cx,%dx
   186b6:	73 30                	jae    186e8 <stm_free_tx+0x98>
   186b8:	48 8d 05 91 f7 ff ff 	lea    -0x86f(%rip),%rax        # 17e50 <epoch_free>
   186bf:	48 c1 e2 04          	shl    $0x4,%rdx
   186c3:	48 89 04 17          	mov    %rax,(%rdi,%rdx,1)
   186c7:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
   186cb:	48 c1 e0 04          	shl    $0x4,%rax
   186cf:	48 03 43 08          	add    0x8(%rbx),%rax
   186d3:	4c 89 60 08          	mov    %r12,0x8(%rax)
   186d7:	66 ff 43 02          	incw   0x2(%rbx)
   186db:	5b                   	pop    %rbx
   186dc:	5d                   	pop    %rbp
   186dd:	41 5c                	pop    %r12
   186df:	41 5d                	pop    %r13
   186e1:	41 5e                	pop    %r14
   186e3:	c3                   	retq   
   186e4:	0f 1f 40 00          	nopl   0x0(%rax)
   186e8:	01 c9                	add    %ecx,%ecx
   186ea:	66 89 0b             	mov    %cx,(%rbx)
   186ed:	0f b7 c9             	movzwl %cx,%ecx
   186f0:	48 c1 e1 04          	shl    $0x4,%rcx
   186f4:	48 89 ce             	mov    %rcx,%rsi
   186f7:	e8 84 9d fe ff       	callq  2480 <realloc@plt>
   186fc:	48 89 c7             	mov    %rax,%rdi
   186ff:	48 85 c0             	test   %rax,%rax
   18702:	74 0a                	je     1870e <stm_free_tx+0xbe>
   18704:	48 89 43 08          	mov    %rax,0x8(%rbx)
   18708:	0f b7 53 02          	movzwl 0x2(%rbx),%edx
   1870c:	eb aa                	jmp    186b8 <stm_free_tx+0x68>
   1870e:	48 8d 3d 77 17 00 00 	lea    0x1777(%rip),%rdi        # 19e8c <__PRETTY_FUNCTION__.3713+0x24>
   18715:	e8 c6 9d fe ff       	callq  24e0 <perror@plt>
   1871a:	bf 01 00 00 00       	mov    $0x1,%edi
   1871f:	e8 ec 9d fe ff       	callq  2510 <exit@plt>
   18724:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   1872b:	00 00 00 00 
   1872f:	90                   	nop

0000000000018730 <mod_cb_init>:
   18730:	f3 0f 1e fa          	endbr64 
   18734:	8b 35 06 79 00 00    	mov    0x7906(%rip),%esi        # 20040 <mod_cb>
   1873a:	85 f6                	test   %esi,%esi
   1873c:	78 02                	js     18740 <mod_cb_init+0x10>
   1873e:	c3                   	retq   
   1873f:	90                   	nop
   18740:	48 83 ec 10          	sub    $0x10,%rsp
   18744:	6a 00                	pushq  $0x0
   18746:	31 c9                	xor    %ecx,%ecx
   18748:	31 d2                	xor    %edx,%edx
   1874a:	4c 8d 0d 2f f6 ff ff 	lea    -0x9d1(%rip),%r9        # 17d80 <mod_cb_on_abort>
   18751:	4c 8d 05 78 f6 ff ff 	lea    -0x988(%rip),%r8        # 17dd0 <mod_cb_on_commit>
   18758:	48 8d 35 c1 f6 ff ff 	lea    -0x93f(%rip),%rsi        # 17e20 <mod_cb_on_thread_exit>
   1875f:	48 8d 3d 2a f7 ff ff 	lea    -0x8d6(%rip),%rdi        # 17e90 <mod_cb_on_thread_init>
   18766:	e8 f5 56 ff ff       	callq  de60 <stm_register>
   1876b:	5a                   	pop    %rdx
   1876c:	59                   	pop    %rcx
   1876d:	85 c0                	test   %eax,%eax
   1876f:	74 14                	je     18785 <mod_cb_init+0x55>
   18771:	e8 1a 56 ff ff       	callq  dd90 <stm_create_specific>
   18776:	89 05 c4 78 00 00    	mov    %eax,0x78c4(%rip)        # 20040 <mod_cb>
   1877c:	85 c0                	test   %eax,%eax
   1877e:	78 2c                	js     187ac <mod_cb_init+0x7c>
   18780:	48 83 c4 08          	add    $0x8,%rsp
   18784:	c3                   	retq   
   18785:	48 8b 0d 74 79 00 00 	mov    0x7974(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
   1878c:	48 8d 3d ec 1e 00 00 	lea    0x1eec(%rip),%rdi        # 1a67f <__PRETTY_FUNCTION__.3713+0x817>
   18793:	ba 1a 00 00 00       	mov    $0x1a,%edx
   18798:	be 01 00 00 00       	mov    $0x1,%esi
   1879d:	e8 7e 9d fe ff       	callq  2520 <fwrite@plt>
   187a2:	bf 01 00 00 00       	mov    $0x1,%edi
   187a7:	e8 64 9d fe ff       	callq  2510 <exit@plt>
   187ac:	48 8b 0d 4d 79 00 00 	mov    0x794d(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
   187b3:	48 8d 3d e0 1e 00 00 	lea    0x1ee0(%rip),%rdi        # 1a69a <__PRETTY_FUNCTION__.3713+0x832>
   187ba:	ba 1b 00 00 00       	mov    $0x1b,%edx
   187bf:	be 01 00 00 00       	mov    $0x1,%esi
   187c4:	e8 57 9d fe ff       	callq  2520 <fwrite@plt>
   187c9:	bf 01 00 00 00       	mov    $0x1,%edi
   187ce:	e8 3d 9d fe ff       	callq  2510 <exit@plt>
   187d3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   187da:	00 00 00 00 
   187de:	66 90                	xchg   %ax,%ax

00000000000187e0 <mod_mem_init>:
   187e0:	f3 0f 1e fa          	endbr64 
   187e4:	8b 35 56 78 00 00    	mov    0x7856(%rip),%esi        # 20040 <mod_cb>
   187ea:	53                   	push   %rbx
   187eb:	89 fb                	mov    %edi,%ebx
   187ed:	85 f6                	test   %esi,%esi
   187ef:	78 0f                	js     18800 <mod_mem_init+0x20>
   187f1:	89 1d 4d 78 00 00    	mov    %ebx,0x784d(%rip)        # 20044 <mod_cb+0x4>
   187f7:	5b                   	pop    %rbx
   187f8:	c3                   	retq   
   187f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18800:	48 83 ec 08          	sub    $0x8,%rsp
   18804:	6a 00                	pushq  $0x0
   18806:	31 c9                	xor    %ecx,%ecx
   18808:	31 d2                	xor    %edx,%edx
   1880a:	4c 8d 0d 6f f5 ff ff 	lea    -0xa91(%rip),%r9        # 17d80 <mod_cb_on_abort>
   18811:	4c 8d 05 b8 f5 ff ff 	lea    -0xa48(%rip),%r8        # 17dd0 <mod_cb_on_commit>
   18818:	48 8d 35 01 f6 ff ff 	lea    -0x9ff(%rip),%rsi        # 17e20 <mod_cb_on_thread_exit>
   1881f:	48 8d 3d 6a f6 ff ff 	lea    -0x996(%rip),%rdi        # 17e90 <mod_cb_on_thread_init>
   18826:	e8 35 56 ff ff       	callq  de60 <stm_register>
   1882b:	5a                   	pop    %rdx
   1882c:	59                   	pop    %rcx
   1882d:	85 c0                	test   %eax,%eax
   1882f:	74 36                	je     18867 <mod_mem_init+0x87>
   18831:	e8 5a 55 ff ff       	callq  dd90 <stm_create_specific>
   18836:	89 05 04 78 00 00    	mov    %eax,0x7804(%rip)        # 20040 <mod_cb>
   1883c:	85 c0                	test   %eax,%eax
   1883e:	79 b1                	jns    187f1 <mod_mem_init+0x11>
   18840:	48 8b 0d b9 78 00 00 	mov    0x78b9(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
   18847:	48 8d 3d 4c 1e 00 00 	lea    0x1e4c(%rip),%rdi        # 1a69a <__PRETTY_FUNCTION__.3713+0x832>
   1884e:	ba 1b 00 00 00       	mov    $0x1b,%edx
   18853:	be 01 00 00 00       	mov    $0x1,%esi
   18858:	e8 c3 9c fe ff       	callq  2520 <fwrite@plt>
   1885d:	bf 01 00 00 00       	mov    $0x1,%edi
   18862:	e8 a9 9c fe ff       	callq  2510 <exit@plt>
   18867:	48 8b 0d 92 78 00 00 	mov    0x7892(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
   1886e:	48 8d 3d 0a 1e 00 00 	lea    0x1e0a(%rip),%rdi        # 1a67f <__PRETTY_FUNCTION__.3713+0x817>
   18875:	ba 1a 00 00 00       	mov    $0x1a,%edx
   1887a:	be 01 00 00 00       	mov    $0x1,%esi
   1887f:	e8 9c 9c fe ff       	callq  2520 <fwrite@plt>
   18884:	bf 01 00 00 00       	mov    $0x1,%edi
   18889:	e8 82 9c fe ff       	callq  2510 <exit@plt>
   1888e:	66 90                	xchg   %ax,%ax

0000000000018890 <mod_stats_on_abort>:
   18890:	f3 0f 1e fa          	endbr64 
   18894:	48 83 ec 08          	sub    $0x8,%rsp
   18898:	8b 3d 06 7f 80 00    	mov    0x807f06(%rip),%edi        # 8207a4 <mod_stats_key>
   1889e:	e8 7d 55 ff ff       	callq  de20 <stm_get_specific>
   188a3:	48 ff 40 08          	incq   0x8(%rax)
   188a7:	48 83 c4 08          	add    $0x8,%rsp
   188ab:	c3                   	retq   
   188ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000188b0 <mod_stats_on_commit>:
   188b0:	f3 0f 1e fa          	endbr64 
   188b4:	48 83 ec 08          	sub    $0x8,%rsp
   188b8:	8b 3d e6 7e 80 00    	mov    0x807ee6(%rip),%edi        # 8207a4 <mod_stats_key>
   188be:	e8 5d 55 ff ff       	callq  de20 <stm_get_specific>
   188c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
   188c7:	48 ff 00             	incq   (%rax)
   188ca:	48 01 50 20          	add    %rdx,0x20(%rax)
   188ce:	48 ff 40 28          	incq   0x28(%rax)
   188d2:	48 3b 50 10          	cmp    0x10(%rax),%rdx
   188d6:	73 04                	jae    188dc <mod_stats_on_commit+0x2c>
   188d8:	48 89 50 10          	mov    %rdx,0x10(%rax)
   188dc:	48 3b 50 18          	cmp    0x18(%rax),%rdx
   188e0:	76 04                	jbe    188e6 <mod_stats_on_commit+0x36>
   188e2:	48 89 50 18          	mov    %rdx,0x18(%rax)
   188e6:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   188ed:	00 
   188ee:	48 83 c4 08          	add    $0x8,%rsp
   188f2:	c3                   	retq   
   188f3:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   188fa:	00 00 00 00 
   188fe:	66 90                	xchg   %ax,%ax

0000000000018900 <mod_stats_on_thread_exit>:
   18900:	f3 0f 1e fa          	endbr64 
   18904:	48 83 ec 08          	sub    $0x8,%rsp
   18908:	8b 3d 96 7e 80 00    	mov    0x807e96(%rip),%edi        # 8207a4 <mod_stats_key>
   1890e:	e8 0d 55 ff ff       	callq  de20 <stm_get_specific>
   18913:	48 89 c7             	mov    %rax,%rdi
   18916:	48 8b 00             	mov    (%rax),%rax
   18919:	f0 48 0f c1 05 5e 77 	lock xadd %rax,0x775e(%rip)        # 20080 <mod_stats_global>
   18920:	00 00 
   18922:	48 8b 47 28          	mov    0x28(%rdi),%rax
   18926:	f0 48 0f c1 05 79 77 	lock xadd %rax,0x7779(%rip)        # 200a8 <mod_stats_global+0x28>
   1892d:	00 00 
   1892f:	48 8b 47 20          	mov    0x20(%rdi),%rax
   18933:	f0 48 0f c1 05 64 77 	lock xadd %rax,0x7764(%rip)        # 200a0 <mod_stats_global+0x20>
   1893a:	00 00 
   1893c:	48 8b 05 55 77 00 00 	mov    0x7755(%rip),%rax        # 20098 <mod_stats_global+0x18>
   18943:	48 8b 57 18          	mov    0x18(%rdi),%rdx
   18947:	48 39 c2             	cmp    %rax,%rdx
   1894a:	76 0b                	jbe    18957 <mod_stats_on_thread_exit+0x57>
   1894c:	f0 48 0f b1 15 43 77 	lock cmpxchg %rdx,0x7743(%rip)        # 20098 <mod_stats_global+0x18>
   18953:	00 00 
   18955:	75 e5                	jne    1893c <mod_stats_on_thread_exit+0x3c>
   18957:	48 8b 05 32 77 00 00 	mov    0x7732(%rip),%rax        # 20090 <mod_stats_global+0x10>
   1895e:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   18962:	48 39 c2             	cmp    %rax,%rdx
   18965:	73 0b                	jae    18972 <mod_stats_on_thread_exit+0x72>
   18967:	f0 48 0f b1 15 20 77 	lock cmpxchg %rdx,0x7720(%rip)        # 20090 <mod_stats_global+0x10>
   1896e:	00 00 
   18970:	75 e5                	jne    18957 <mod_stats_on_thread_exit+0x57>
   18972:	48 83 c4 08          	add    $0x8,%rsp
   18976:	e9 55 99 fe ff       	jmpq   22d0 <free@plt>
   1897b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000018980 <mod_stats_on_thread_init>:
   18980:	f3 0f 1e fa          	endbr64 
   18984:	48 83 ec 08          	sub    $0x8,%rsp
   18988:	bf 30 00 00 00       	mov    $0x30,%edi
   1898d:	e8 be 9a fe ff       	callq  2450 <malloc@plt>
   18992:	48 85 c0             	test   %rax,%rax
   18995:	74 49                	je     189e0 <mod_stats_on_thread_init+0x60>
   18997:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1899e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   189a5:	00 
   189a6:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   189ad:	00 
   189ae:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   189b5:	00 
   189b6:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
   189bd:	ff 
   189be:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   189c5:	00 
   189c6:	8b 3d d8 7d 80 00    	mov    0x807dd8(%rip),%edi        # 8207a4 <mod_stats_key>
   189cc:	48 89 c6             	mov    %rax,%rsi
   189cf:	48 83 c4 08          	add    $0x8,%rsp
   189d3:	e9 08 54 ff ff       	jmpq   dde0 <stm_set_specific>
   189d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   189df:	00 
   189e0:	48 8d 3d 98 1b 00 00 	lea    0x1b98(%rip),%rdi        # 1a57f <__PRETTY_FUNCTION__.3713+0x717>
   189e7:	e8 f4 9a fe ff       	callq  24e0 <perror@plt>
   189ec:	bf 01 00 00 00       	mov    $0x1,%edi
   189f1:	e8 1a 9b fe ff       	callq  2510 <exit@plt>
   189f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
   189fd:	00 00 00 

0000000000018a00 <stm_get_global_stats>:
   18a00:	f3 0f 1e fa          	endbr64 
   18a04:	8b 15 96 7d 80 00    	mov    0x807d96(%rip),%edx        # 8207a0 <mod_stats_initialized>
   18a0a:	85 d2                	test   %edx,%edx
   18a0c:	0f 84 8e 00 00 00    	je     18aa0 <stm_get_global_stats+0xa0>
   18a12:	49 89 f0             	mov    %rsi,%r8
   18a15:	b9 12 00 00 00       	mov    $0x12,%ecx
   18a1a:	48 8d 35 69 07 00 00 	lea    0x769(%rip),%rsi        # 1918a <__PRETTY_FUNCTION__.4726+0x11a>
   18a21:	48 89 f8             	mov    %rdi,%rax
   18a24:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   18a26:	0f 97 c2             	seta   %dl
   18a29:	80 da 00             	sbb    $0x0,%dl
   18a2c:	84 d2                	test   %dl,%dl
   18a2e:	74 50                	je     18a80 <stm_get_global_stats+0x80>
   18a30:	b9 11 00 00 00       	mov    $0x11,%ecx
   18a35:	48 8d 35 73 07 00 00 	lea    0x773(%rip),%rsi        # 191af <__PRETTY_FUNCTION__.4726+0x13f>
   18a3c:	48 89 c7             	mov    %rax,%rdi
   18a3f:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   18a41:	0f 97 c2             	seta   %dl
   18a44:	80 da 00             	sbb    $0x0,%dl
   18a47:	84 d2                	test   %dl,%dl
   18a49:	74 25                	je     18a70 <stm_get_global_stats+0x70>
   18a4b:	48 89 c7             	mov    %rax,%rdi
   18a4e:	b9 13 00 00 00       	mov    $0x13,%ecx
   18a53:	48 8d 35 79 07 00 00 	lea    0x779(%rip),%rsi        # 191d3 <__PRETTY_FUNCTION__.4726+0x163>
   18a5a:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   18a5c:	0f 97 c2             	seta   %dl
   18a5f:	80 da 00             	sbb    $0x0,%dl
   18a62:	31 c0                	xor    %eax,%eax
   18a64:	84 d2                	test   %dl,%dl
   18a66:	74 28                	je     18a90 <stm_get_global_stats+0x90>
   18a68:	c3                   	retq   
   18a69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18a70:	48 8b 05 29 76 00 00 	mov    0x7629(%rip),%rax        # 200a0 <mod_stats_global+0x20>
   18a77:	49 89 00             	mov    %rax,(%r8)
   18a7a:	b8 01 00 00 00       	mov    $0x1,%eax
   18a7f:	c3                   	retq   
   18a80:	48 8b 05 f9 75 00 00 	mov    0x75f9(%rip),%rax        # 20080 <mod_stats_global>
   18a87:	49 89 00             	mov    %rax,(%r8)
   18a8a:	b8 01 00 00 00       	mov    $0x1,%eax
   18a8f:	c3                   	retq   
   18a90:	48 8b 05 01 76 00 00 	mov    0x7601(%rip),%rax        # 20098 <mod_stats_global+0x18>
   18a97:	49 89 00             	mov    %rax,(%r8)
   18a9a:	b8 01 00 00 00       	mov    $0x1,%eax
   18a9f:	c3                   	retq   
   18aa0:	50                   	push   %rax
   18aa1:	48 8d 3d 40 1c 00 00 	lea    0x1c40(%rip),%rdi        # 1a6e8 <__PRETTY_FUNCTION__.3713+0x880>
   18aa8:	ba 21 00 00 00       	mov    $0x21,%edx
   18aad:	48 8b 0d 4c 76 00 00 	mov    0x764c(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
   18ab4:	be 01 00 00 00       	mov    $0x1,%esi
   18ab9:	e8 62 9a fe ff       	callq  2520 <fwrite@plt>
   18abe:	bf 01 00 00 00       	mov    $0x1,%edi
   18ac3:	e8 48 9a fe ff       	callq  2510 <exit@plt>
   18ac8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   18acf:	00 

0000000000018ad0 <stm_get_local_stats>:
   18ad0:	f3 0f 1e fa          	endbr64 
   18ad4:	55                   	push   %rbp
   18ad5:	53                   	push   %rbx
   18ad6:	48 83 ec 08          	sub    $0x8,%rsp
   18ada:	8b 05 c0 7c 80 00    	mov    0x807cc0(%rip),%eax        # 8207a0 <mod_stats_initialized>
   18ae0:	85 c0                	test   %eax,%eax
   18ae2:	0f 84 2f 01 00 00    	je     18c17 <stm_get_local_stats+0x147>
   18ae8:	48 89 fb             	mov    %rdi,%rbx
   18aeb:	8b 3d b3 7c 80 00    	mov    0x807cb3(%rip),%edi        # 8207a4 <mod_stats_key>
   18af1:	48 89 f5             	mov    %rsi,%rbp
   18af4:	e8 27 53 ff ff       	callq  de20 <stm_get_specific>
   18af9:	b9 0b 00 00 00       	mov    $0xb,%ecx
   18afe:	48 8d 35 8c 06 00 00 	lea    0x68c(%rip),%rsi        # 19191 <__PRETTY_FUNCTION__.4726+0x121>
   18b05:	48 89 df             	mov    %rbx,%rdi
   18b08:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   18b0a:	0f 97 c2             	seta   %dl
   18b0d:	80 da 00             	sbb    $0x0,%dl
   18b10:	84 d2                	test   %dl,%dl
   18b12:	0f 84 a8 00 00 00    	je     18bc0 <stm_get_local_stats+0xf0>
   18b18:	b9 0a 00 00 00       	mov    $0xa,%ecx
   18b1d:	48 8d 35 92 06 00 00 	lea    0x692(%rip),%rsi        # 191b6 <__PRETTY_FUNCTION__.4726+0x146>
   18b24:	48 89 df             	mov    %rbx,%rdi
   18b27:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   18b29:	0f 97 c2             	seta   %dl
   18b2c:	80 da 00             	sbb    $0x0,%dl
   18b2f:	84 d2                	test   %dl,%dl
   18b31:	74 6d                	je     18ba0 <stm_get_local_stats+0xd0>
   18b33:	b9 0f 00 00 00       	mov    $0xf,%ecx
   18b38:	48 8d 35 77 1b 00 00 	lea    0x1b77(%rip),%rsi        # 1a6b6 <__PRETTY_FUNCTION__.3713+0x84e>
   18b3f:	48 89 df             	mov    %rbx,%rdi
   18b42:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   18b44:	0f 97 c2             	seta   %dl
   18b47:	80 da 00             	sbb    $0x0,%dl
   18b4a:	84 d2                	test   %dl,%dl
   18b4c:	0f 84 9e 00 00 00    	je     18bf0 <stm_get_local_stats+0x120>
   18b52:	b9 0f 00 00 00       	mov    $0xf,%ecx
   18b57:	48 8d 35 67 1b 00 00 	lea    0x1b67(%rip),%rsi        # 1a6c5 <__PRETTY_FUNCTION__.3713+0x85d>
   18b5e:	48 89 df             	mov    %rbx,%rdi
   18b61:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   18b63:	0f 97 c2             	seta   %dl
   18b66:	80 da 00             	sbb    $0x0,%dl
   18b69:	84 d2                	test   %dl,%dl
   18b6b:	74 73                	je     18be0 <stm_get_local_stats+0x110>
   18b6d:	b9 0f 00 00 00       	mov    $0xf,%ecx
   18b72:	48 8d 35 5b 1b 00 00 	lea    0x1b5b(%rip),%rsi        # 1a6d4 <__PRETTY_FUNCTION__.3713+0x86c>
   18b79:	48 89 df             	mov    %rbx,%rdi
   18b7c:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
   18b7e:	0f 97 c2             	seta   %dl
   18b81:	80 da 00             	sbb    $0x0,%dl
   18b84:	45 31 c0             	xor    %r8d,%r8d
   18b87:	84 d2                	test   %dl,%dl
   18b89:	75 23                	jne    18bae <stm_get_local_stats+0xde>
   18b8b:	48 8b 40 18          	mov    0x18(%rax),%rax
   18b8f:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18b95:	48 89 45 00          	mov    %rax,0x0(%rbp)
   18b99:	eb 13                	jmp    18bae <stm_get_local_stats+0xde>
   18b9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   18ba0:	48 8b 40 20          	mov    0x20(%rax),%rax
   18ba4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18baa:	48 89 45 00          	mov    %rax,0x0(%rbp)
   18bae:	48 83 c4 08          	add    $0x8,%rsp
   18bb2:	5b                   	pop    %rbx
   18bb3:	44 89 c0             	mov    %r8d,%eax
   18bb6:	5d                   	pop    %rbp
   18bb7:	c3                   	retq   
   18bb8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   18bbf:	00 
   18bc0:	48 8b 00             	mov    (%rax),%rax
   18bc3:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18bc9:	48 89 45 00          	mov    %rax,0x0(%rbp)
   18bcd:	48 83 c4 08          	add    $0x8,%rsp
   18bd1:	44 89 c0             	mov    %r8d,%eax
   18bd4:	5b                   	pop    %rbx
   18bd5:	5d                   	pop    %rbp
   18bd6:	c3                   	retq   
   18bd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   18bde:	00 00 
   18be0:	48 8b 40 10          	mov    0x10(%rax),%rax
   18be4:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18bea:	48 89 45 00          	mov    %rax,0x0(%rbp)
   18bee:	eb be                	jmp    18bae <stm_get_local_stats+0xde>
   18bf0:	62 f1 ff 08 7b 40 04 	vcvtusi2sdq 0x20(%rax),%xmm0,%xmm0
   18bf7:	62 f1 f7 08 7b 48 05 	vcvtusi2sdq 0x28(%rax),%xmm1,%xmm1
   18bfe:	41 b8 01 00 00 00    	mov    $0x1,%r8d
   18c04:	44 89 c0             	mov    %r8d,%eax
   18c07:	c5 fb 5e c1          	vdivsd %xmm1,%xmm0,%xmm0
   18c0b:	c5 fb 11 45 00       	vmovsd %xmm0,0x0(%rbp)
   18c10:	48 83 c4 08          	add    $0x8,%rsp
   18c14:	5b                   	pop    %rbx
   18c15:	5d                   	pop    %rbp
   18c16:	c3                   	retq   
   18c17:	48 8b 0d e2 74 00 00 	mov    0x74e2(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
   18c1e:	48 8d 3d c3 1a 00 00 	lea    0x1ac3(%rip),%rdi        # 1a6e8 <__PRETTY_FUNCTION__.3713+0x880>
   18c25:	ba 21 00 00 00       	mov    $0x21,%edx
   18c2a:	be 01 00 00 00       	mov    $0x1,%esi
   18c2f:	e8 ec 98 fe ff       	callq  2520 <fwrite@plt>
   18c34:	bf 01 00 00 00       	mov    $0x1,%edi
   18c39:	e8 d2 98 fe ff       	callq  2510 <exit@plt>
   18c3e:	66 90                	xchg   %ax,%ax

0000000000018c40 <mod_stats_init>:
   18c40:	f3 0f 1e fa          	endbr64 
   18c44:	8b 35 56 7b 80 00    	mov    0x807b56(%rip),%esi        # 8207a0 <mod_stats_initialized>
   18c4a:	85 f6                	test   %esi,%esi
   18c4c:	74 02                	je     18c50 <mod_stats_init+0x10>
   18c4e:	c3                   	retq   
   18c4f:	90                   	nop
   18c50:	48 83 ec 10          	sub    $0x10,%rsp
   18c54:	6a 00                	pushq  $0x0
   18c56:	31 c9                	xor    %ecx,%ecx
   18c58:	31 d2                	xor    %edx,%edx
   18c5a:	4c 8d 0d 2f fc ff ff 	lea    -0x3d1(%rip),%r9        # 18890 <mod_stats_on_abort>
   18c61:	4c 8d 05 48 fc ff ff 	lea    -0x3b8(%rip),%r8        # 188b0 <mod_stats_on_commit>
   18c68:	48 8d 35 91 fc ff ff 	lea    -0x36f(%rip),%rsi        # 18900 <mod_stats_on_thread_exit>
   18c6f:	48 8d 3d 0a fd ff ff 	lea    -0x2f6(%rip),%rdi        # 18980 <mod_stats_on_thread_init>
   18c76:	e8 e5 51 ff ff       	callq  de60 <stm_register>
   18c7b:	5a                   	pop    %rdx
   18c7c:	59                   	pop    %rcx
   18c7d:	85 c0                	test   %eax,%eax
   18c7f:	74 1e                	je     18c9f <mod_stats_init+0x5f>
   18c81:	e8 0a 51 ff ff       	callq  dd90 <stm_create_specific>
   18c86:	89 05 18 7b 80 00    	mov    %eax,0x807b18(%rip)        # 8207a4 <mod_stats_key>
   18c8c:	85 c0                	test   %eax,%eax
   18c8e:	78 36                	js     18cc6 <mod_stats_init+0x86>
   18c90:	c7 05 06 7b 80 00 01 	movl   $0x1,0x807b06(%rip)        # 8207a0 <mod_stats_initialized>
   18c97:	00 00 00 
   18c9a:	48 83 c4 08          	add    $0x8,%rsp
   18c9e:	c3                   	retq   
   18c9f:	48 8b 0d 5a 74 00 00 	mov    0x745a(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
   18ca6:	48 8d 3d d2 19 00 00 	lea    0x19d2(%rip),%rdi        # 1a67f <__PRETTY_FUNCTION__.3713+0x817>
   18cad:	ba 1a 00 00 00       	mov    $0x1a,%edx
   18cb2:	be 01 00 00 00       	mov    $0x1,%esi
   18cb7:	e8 64 98 fe ff       	callq  2520 <fwrite@plt>
   18cbc:	bf 01 00 00 00       	mov    $0x1,%edi
   18cc1:	e8 4a 98 fe ff       	callq  2510 <exit@plt>
   18cc6:	48 8b 0d 33 74 00 00 	mov    0x7433(%rip),%rcx        # 20100 <stderr@@GLIBC_2.2.5>
   18ccd:	48 8d 3d c6 19 00 00 	lea    0x19c6(%rip),%rdi        # 1a69a <__PRETTY_FUNCTION__.3713+0x832>
   18cd4:	ba 1b 00 00 00       	mov    $0x1b,%edx
   18cd9:	be 01 00 00 00       	mov    $0x1,%esi
   18cde:	e8 3d 98 fe ff       	callq  2520 <fwrite@plt>
   18ce3:	bf 01 00 00 00       	mov    $0x1,%edi
   18ce8:	e8 23 98 fe ff       	callq  2510 <exit@plt>
   18ced:	0f 1f 00             	nopl   (%rax)

0000000000018cf0 <__libc_csu_init>:
   18cf0:	f3 0f 1e fa          	endbr64 
   18cf4:	41 57                	push   %r15
   18cf6:	4c 8d 3d 4b 6f 00 00 	lea    0x6f4b(%rip),%r15        # 1fc48 <__frame_dummy_init_array_entry>
   18cfd:	41 56                	push   %r14
   18cff:	49 89 d6             	mov    %rdx,%r14
   18d02:	41 55                	push   %r13
   18d04:	49 89 f5             	mov    %rsi,%r13
   18d07:	41 54                	push   %r12
   18d09:	41 89 fc             	mov    %edi,%r12d
   18d0c:	55                   	push   %rbp
   18d0d:	48 8d 2d 3c 6f 00 00 	lea    0x6f3c(%rip),%rbp        # 1fc50 <__do_global_dtors_aux_fini_array_entry>
   18d14:	53                   	push   %rbx
   18d15:	4c 29 fd             	sub    %r15,%rbp
   18d18:	48 83 ec 08          	sub    $0x8,%rsp
   18d1c:	e8 df 92 fe ff       	callq  2000 <_init>
   18d21:	48 c1 fd 03          	sar    $0x3,%rbp
   18d25:	74 1f                	je     18d46 <__libc_csu_init+0x56>
   18d27:	31 db                	xor    %ebx,%ebx
   18d29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   18d30:	4c 89 f2             	mov    %r14,%rdx
   18d33:	4c 89 ee             	mov    %r13,%rsi
   18d36:	44 89 e7             	mov    %r12d,%edi
   18d39:	41 ff 14 df          	callq  *(%r15,%rbx,8)
   18d3d:	48 83 c3 01          	add    $0x1,%rbx
   18d41:	48 39 dd             	cmp    %rbx,%rbp
   18d44:	75 ea                	jne    18d30 <__libc_csu_init+0x40>
   18d46:	48 83 c4 08          	add    $0x8,%rsp
   18d4a:	5b                   	pop    %rbx
   18d4b:	5d                   	pop    %rbp
   18d4c:	41 5c                	pop    %r12
   18d4e:	41 5d                	pop    %r13
   18d50:	41 5e                	pop    %r14
   18d52:	41 5f                	pop    %r15
   18d54:	c3                   	retq   
   18d55:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
   18d5c:	00 00 00 00 

0000000000018d60 <__libc_csu_fini>:
   18d60:	f3 0f 1e fa          	endbr64 
   18d64:	c3                   	retq   

Disassembly of section .fini:

0000000000018d68 <_fini>:
   18d68:	f3 0f 1e fa          	endbr64 
   18d6c:	48 83 ec 08          	sub    $0x8,%rsp
   18d70:	48 83 c4 08          	add    $0x8,%rsp
   18d74:	c3                   	retq   
